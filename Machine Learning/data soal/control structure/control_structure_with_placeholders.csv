Instruction,Input,Output,materi,question_id,Template
Create a Python program to check if an integer is divisible by 5,Integer : 10,"def is_divisible_by_5(number):
    if (number % 5 == 0):
        return True
    else:
        return False
    
number = 10
is_divisible_by_5(number)",Control Structure,3,"def is_divisible_by_5(number):
    ___
        return True
    ___
        return False
    
number = 10
is_divisible_by_5(number)"
Write a python program to check if two sequences are identical.,"[1,2,3], [1,2,3]","def check_seq(seq1, seq2):
    if len (seq1) != len (seq2): 
        return False
    else: 
        for i in range(len (seq1)):
            if seq1[i] != seq2[i]:
                return False
    return True",Control Structure,32,"def check_seq(seq1, seq2):
    if len (seq1) != len (seq2): 
        return False
    ___ 
        for i in range(len (seq1)):
            if seq1[i] != seq2[i]:
                return False
    return True"
Write a Python program to take user input and check if it is a palindrome or not.,racecar,"def isPalindrome(inp):
 inp = inp.lower()
 return inp == inp[::-1]

user_input = input('Enter string: ')
if isPalindrome(user_input):
 print('It\'s a palindrome')
else:
 print('It\'s not a palindrome')",Control Structure,47,"def isPalindrome(inp):
 inp = inp.lower()
 return inp == inp[::-1]

user_input = input('Enter string: ')
if isPalindrome(user_input):
 print('It\'s a palindrome')
___
 print('It\'s not a palindrome')"
Write a Python script that uses recursion to calculate the Fibonacci sequence for a given number of terms.,6,"def Fibonacci(n): 
   if n<0: 
      print(""Incorrect input"") 
   elif n==1: 
      return 0
   elif n==2: 
      return 1
   else: 
      return Fibonacci(n-1)+Fibonacci(n-2) 
 
# Driver Program 
n = 6
print(Fibonacci(n))",Control Structure,63,"def Fibonacci(n): 
   if n<0: 
      print(""Incorrect input"") 
   elif n==1: 
      return 0
   elif n==2: 
      return 1
   ___ 
      return Fibonacci(n-1)+Fibonacci(n-2) 
 
# Driver Program 
n = 6
print(Fibonacci(n))"
Create an API wrapper in Python for the following API,"""https://example.com/api/users/list""","import requests 

# API wrapper for the given API 
def api_wrapper(url): 
    # get the API response 
    response = requests.get(url) 

    # check the response status 
    if(response.status_code == 200): 
        # return json data 
        return response.json()
    else: 
        return None",Control Structure,77,"import requests 

# API wrapper for the given API 
def api_wrapper(url): 
    # get the API response 
    response = requests.get(url) 

    # check the response status 
    if(response.status_code == 200): 
        # return json data 
        return response.json()
    ___ 
        return None"
Design a function in Python to determine if a given number is prime.,37,"def is_prime(n):
    if n <= 1: 
        return False
    if n == 2: 
        return True
    if n > 2 and n % 2 == 0: 
        return False

    sqrt_n = int(n**0.5)
    for i in range(3, sqrt_n+1, 2):
        if n % i == 0:
            return False
    return True

if is_prime(37):
    print('37 is a prime number!')",Control Structure,94,"def is_prime(n):
    if n <= 1: 
        return False
    ___ 
        return True
    ___ 
        return False

    sqrt_n = int(n**0.5)
    for i in range(3, sqrt_n+1, 2):
        ___
            return False
    return True

if is_prime(37):
    print('37 is a prime number!')"
"Create a Python program that reads an integer from the console and prints ""true"" if the number is even, and ""false"" if the number is odd.",3,"num = int(input())
if num % 2 == 0:
    print(""true"")
else:
    print(""false"")",Control Structure,141,"num = int(input())
___
    print(""true"")
___
    print(""false"")"
Design a Python program for verifying the two strings are rotations of each other?,"s1 = ""Hello World""
s2 = ""World Hello""","def check_rotation(str1, str2): 
	if len(str1) != len(str2): 
		return False
	temp = str1 + str1
	return (str2 in temp) 

s1 = ""Hello World""
s2 = ""World Hello""
if check_rotation(s1, s2): 
	print('These strings are rotations of each other'); 
else: 
	print('These strings are not rotations of each other')",Control Structure,164,"def check_rotation(str1, str2): 
	if len(str1) != len(str2): 
		return False
	temp = str1 + str1
	return (str2 in temp) 

s1 = ""Hello World""
s2 = ""World Hello""
if check_rotation(s1, s2): 
	print('These strings are rotations of each other'); 
___ 
	print('These strings are not rotations of each other')"
Create a method in Python that takes two arguments and returns a specified error message if one of the two conditions is not met.,"error_message = ""The input must be a number!""","def check_input(arg1, arg2):
   if type(arg1) is not int or type(arg2) is not int:
      return ""The input must be a number!""
   else:
      return ""The input is valid!""",Control Structure,182,"def check_input(arg1, arg2):
   ___
      return ""The input must be a number!""
   ___
      return ""The input is valid!"""
Create a program in Python to check for duplicate words in a given sentence.,"sentence = ""I am going to the store to buy food""","sentence = ""I am going to the store to buy food""

words = sentence.split(' ')

#Table to keep track of duplicates
table = []

for word in words:
 if word in table:
 print(""Duplicate word found: ""+word)
 else:
 table.append(word)",Control Structure,186,"sentence = ""I am going to the store to buy food""

words = sentence.split(' ')

#Table to keep track of duplicates
table = []

for word in words:
 if word in table:
 print(""Duplicate word found: ""+word)
 ___
 table.append(word)"
Generate the following sequence using a while loop in Python.,"0, 1, 2, 4, 7, 11, ...","a, b = 0, 1
while b < 100:
    print(a)
    a, b = b, a + b",Control Structure,221,"a, b = 0, 1
___
    print(a)
    a, b = b, a + b"
Edit the Python program below to add an if condition to determine if an input number is odd or even.,"def odd_or_even(number):
    # your code here","def odd_or_even(number):
    # your code here
    if number % 2 == 0:
        return ""even""
    else:
        return ""odd""",Control Structure,250,"def odd_or_even(number):
    # your code here
    ___
        return ""even""
    ___
        return ""odd"""
Create a python program that detects if a number is even or odd.,7,"def is_even_odd(num):
    if num % 2 == 0:
        return ""Even""
    else:
        return ""Odd""

result = is_even_odd(7)
print(result)",Control Structure,269,"def is_even_odd(num):
    ___
        return ""Even""
    ___
        return ""Odd""

result = is_even_odd(7)
print(result)"
Design a program to find the nth term of the Fibonacci sequence for a given number n.,n = 10,"# Python 3 program to find the nth
# Fibonacci number
def Fibonacci(n):
    if n<0:
        print(""Incorrect input"")
    # First Fibonacci number is 0
    elif n==1:
        return 0
    # Second Fibonacci number is 1
    elif n==2:
        return 1
    else:
        return Fibonacci(n-1)+Fibonacci(n-2)
 
# Driver Program
print(Fibonacci(10))

# Output
34",Control Structure,310,"# Python 3 program to find the nth
# Fibonacci number
def Fibonacci(n):
    if n<0:
        print(""Incorrect input"")
    # First Fibonacci number is 0
    elif n==1:
        return 0
    # Second Fibonacci number is 1
    elif n==2:
        return 1
    ___
        return Fibonacci(n-1)+Fibonacci(n-2)
 
# Driver Program
print(Fibonacci(10))

# Output
34"
"Create a Python program to grade a multiple choice test with 4 options for each question, and each correct answer is worth 3 points.","Example question:
What color is the sky?
A. Red B. White C. Yellow D. Blue

Correct Answer: D","def grade_test(questions):
    score = 0
    for question in questions:
        if question['answer'] == question['correct_answer']:
            score += 3
    return score",Control Structure,366,"def grade_test(questions):
    score = 0
    for question in questions:
        ___
            score += 3
    return score"
Develop a Python program to detect if an entered number is even or odd.,The entered number is 344,"even_or_odd = int(input(""Please enter a number: ""))
if even_or_odd % 2 == 0:
  print(""The number is Even."")
else:
  print(""The number is Odd."")",Control Structure,429,"even_or_odd = int(input(""Please enter a number: ""))
___
  print(""The number is Even."")
___
  print(""The number is Odd."")"
Modify the following code in Python to only repeat a segment of the code while a certain user input is given.,"while True:
	print(""Hello World"")","# Get user input
input = input('Enter ""repeat"" to repeat the code: ')

# Execute the code while user input is ""repeat"" 
while input == 'repeat':
	print(""Hello World"")
	input = input('Enter ""repeat"" to repeat the code: ')",Control Structure,443,"# Get user input
input = input('Enter ""repeat"" to repeat the code: ')

# Execute the code while user input is ""repeat"" 
___
	print(""Hello World"")
	input = input('Enter ""repeat"" to repeat the code: ')"
Write a Python script to search a given dictionary for a given word.,"dictionary = {""hello"": ""Str","def search_word(word, dictionary):
    if word in dictionary.keys():
        return dictionary[word]
    else:
        return None

dictionary = {'hello': 'string', 'goodbye': 'bye'}

word = 'hello'

result = search_word(word, dictionary)

if result:
    print('Word found in dictionary: ' + result)

else:
    print('Word not found in dictionary.')",Control Structure,451,"def search_word(word, dictionary):
    if word in dictionary.keys():
        return dictionary[word]
    ___
        return None

dictionary = {'hello': 'string', 'goodbye': 'bye'}

word = 'hello'

result = search_word(word, dictionary)

if result:
    print('Word found in dictionary: ' + result)

___
    print('Word not found in dictionary.')"
Modify this Python code to add an exception for invalid input.,"def calculate(a, b):
    if b > 0:
        c = a / b
        return c","def calculate(a, b):
    if b == 0:
        raise ZeroDivisionError
    elif b > 0:
        c = a / b
        return c
    else:
        raise ValueError",Control Structure,498,"def calculate(a, b):
    ___
        raise ZeroDivisionError
    elif b > 0:
        c = a / b
        return c
    ___
        raise ValueError"
Write an algorithm in Python to check if a number is a palindrome.,number = 121,"def is_palindrome(number): 
num = number  
   
# initializing a reverse number  
reverse = 0
  
# Reverse the given number 
while(number > 0): 
   remainder = number % 10
   # Create reverse 
   reverse = (reverse * 10) + remainder 
   number = number // 10 
 
# check if original and reverse numbers are same
if (num == reverse): 
  return True
else: 
  return False",Control Structure,589,"def is_palindrome(number): 
num = number  
   
# initializing a reverse number  
reverse = 0
  
# Reverse the given number 
while(number > 0): 
   remainder = number % 10
   # Create reverse 
   reverse = (reverse * 10) + remainder 
   number = number // 10 
 
# check if original and reverse numbers are same
___ 
  return True
___ 
  return False"
Develop Python code to check if a given number is plaindrome.,1454,"def is_plaindrome(num):
    original_num = num
    reversed_num = 0
    while num > 0:
        remainder = num % 10
        reversed_num = (reversed_num * 10) + remainder
        num //= 10
    return reversed_num == original_num

num = 1454
if is_plaindrome(num):
    print(num, ""is a plaindrome"")
else:
    print(num, ""is not a plaindrome"")",Control Structure,591,"def is_plaindrome(num):
    original_num = num
    reversed_num = 0
    ___
        remainder = num % 10
        reversed_num = (reversed_num * 10) + remainder
        num //= 10
    return reversed_num == original_num

num = 1454
if is_plaindrome(num):
    print(num, ""is a plaindrome"")
___
    print(num, ""is not a plaindrome"")"
Test if a given number is a Prime or not using Python.,number = 32,"if number<=1: 
  print(""Number is not a prime number."") 
for i in range(2,int(number**0.5)+1):
  if(number % i == 0):
    print(""Number is not a prime number."")
    break
else: 
  print(""Number is a prime number."")",Control Structure,596,"if number<=1: 
  print(""Number is not a prime number."") 
for i in range(2,int(number**0.5)+1):
  if(number % i == 0):
    print(""Number is not a prime number."")
    ___
___ 
  print(""Number is a prime number."")"
Write a Python program to calculate the average monthly temperature of a given city for the last 10 years.,"City: Los Angeles, California
10 year average temperature from 2010 to 2020","import csv

def avg_month_temp(city):
 result = 0
 counter = 0
 temperatures = csv.reader(open('weatherdata.csv'))
 for row in temperatures:
 if row[1] == city:
 result += float(row[2])
 counter += 1
 return result/counter",Control Structure,623,"import csv

def avg_month_temp(city):
 result = 0
 counter = 0
 temperatures = csv.reader(open('weatherdata.csv'))
 for row in temperatures:
 ___
 result += float(row[2])
 counter += 1
 return result/counter"
Create a Python procedure to determine if two numbers are divisible.,14 and 7,"def divisible(x, y):
    if x % y == 0:
        return True
    else:
        return False",Control Structure,634,"def divisible(x, y):
    ___
        return True
    ___
        return False"
Create a for loop in Python that prints the output of a multiplication table for numbers from 1 to 10.,-,"for i in range(1, 11):
  for j in range(1, 11):
    print(i * j, end='\t')
  print()",Control Structure,644,"___
  ___
    print(i * j, end='\t')
  print()"
Develop a Python script for checking for palindromes.,<none>,"def is_palindrome(word):
  rev_word = word[::-1]
  if word == rev_word:
    return True
  return False",Control Structure,647,"def is_palindrome(word):
  rev_word = word[::-1]
  ___
    return True
  return False"
Design an algorithm to check if a given number is prime in Python.,n = 19,"def is_prime(n):
    """"""Check if a given number is prime.""""""
    # Corner case
    if n <= 1:
        return False

    # Check for divisibility
    for i in range(2, n):
        if n % i == 0:
            return False
    # Return true if it is not divisible by any number
    return True

# Output
print(is_prime(n))",Control Structure,760,"def is_prime(n):
    """"""Check if a given number is prime.""""""
    # Corner case
    if n <= 1:
        return False

    # Check for divisibility
    for i in range(2, n):
        ___
            return False
    # Return true if it is not divisible by any number
    return True

# Output
print(is_prime(n))"
Design a function to tell if a number is even or odd using Python.,x = 5,"def isEven(x):
    if x % 2 == 0:
        return True
    else:
        return False

x = 5

if isEven(x):
    print(""It is even"")
else:
    print(""It is odd"")",Control Structure,778,"def isEven(x):
    ___
        return True
    ___
        return False

x = 5

if isEven(x):
    print(""It is even"")
___
    print(""It is odd"")"
Suggest a completion for the following Python code to check if a given number is an Armstrong number.,def is_armstrong_number(num):,"def is_armstrong_number(num):
  order = len(str(num))
  sum = 0
  temp = num
  while temp > 0:
    digit = temp % 10
    sum += digit ** order
    temp //= 10
  if num == sum:
    return True  
  else:
    return False",Control Structure,804,"def is_armstrong_number(num):
  order = len(str(num))
  sum = 0
  temp = num
  ___
    digit = temp % 10
    sum += digit ** order
    temp //= 10
  ___
    return True  
  ___
    return False"
Write a conditional statement in Python that checks if two lists have the same items.,"list1 = [9,8,7]
list2 = [7,8,9]","list1 = [9,8,7]
list2 = [7,8,9]

if list1 == list2:
    print(""The lists have the same items."")
else:
    print(""The lists do not have the same items."")",Control Structure,818,"list1 = [9,8,7]
list2 = [7,8,9]

___
    print(""The lists have the same items."")
___
    print(""The lists do not have the same items."")"
Construct a Python program that will search for a given word in a web page and return the number of occurrences.,"word=""Python""
url=""www.example.com""","import requests

url = ""www.example.com""
word = ""Python""

html_content = requests.get(url).text

words = html_content.split()

occurrences = 0

for w in words:
    if w == word:
        occurrences += 1

print(""Found %d occurrences of '%s'"" % (occurrences, word))",Control Structure,844,"import requests

url = ""www.example.com""
word = ""Python""

html_content = requests.get(url).text

words = html_content.split()

occurrences = 0

for w in words:
    ___
        occurrences += 1

print(""Found %d occurrences of '%s'"" % (occurrences, word))"
"Convert the following Algorithm into Python code.

Input: two numbers

Algorithm:
1. Check if the two numbers are equal.
2. If true, return 0.
3. Else check the which is higher.
4. Return 1 if the first number is higher than the second one.
5. Return -1 otherwise.","num1 : 5
num2 : 10","def compare_numbers(num1, num2):
 if num1 == num2:
  return 0
 elif num1 > num2:
  return 1
 else:
  return -1

num1 = 5
num2 = 10
result = compare_numbers(num1, num2)

print(result)",Control Structure,891,"def compare_numbers(num1, num2):
 ___
  return 0
 elif num1 > num2:
  return 1
 ___
  return -1

num1 = 5
num2 = 10
result = compare_numbers(num1, num2)

print(result)"
Create a Python function that takes in two strings and returns True if they are anagrams (they contain the same letters).,"string1 = ""pizza""
string2 = ""appaiz""","def isAnagram(string1, string2):
 s1 = sorted(string1.lower())
 s2 = sorted(string2.lower())

 if s1 == s2:
 return True
 else:
 return False

string1 = ""pizza"";
string2 = ""appaiz"";

isAnagram(string1, string2); // True",Control Structure,906,"def isAnagram(string1, string2):
 s1 = sorted(string1.lower())
 s2 = sorted(string2.lower())

 ___
 return True
 ___
 return False

string1 = ""pizza"";
string2 = ""appaiz"";

isAnagram(string1, string2); // True"
Create a Python program to check if a given date is valid or not.,"The date to be checked is ""2019/02/29"".","from datetime import datetime
 
date_string = '2019/02/29'
try:
 date = datetime.strptime(date_string, '%Y/%m/%d')
 
 if date.year % 4 == 0 and date.month == 2 and date.day == 29:
 print('Valid Date')
 else:
 print('Invalid Date')
except ValueError:
 print('Invalid Date')",Control Structure,1009,"from datetime import datetime
 
date_string = '2019/02/29'
___
 date = datetime.strptime(date_string, '%Y/%m/%d')
 
 ___
 print('Valid Date')
 ___
 print('Invalid Date')
___
 print('Invalid Date')"
"Write a code for sorting the words within a sentence, alphabetically.",Python is a great language,"""""""
Write a code for sorting the words within a sentence, alphabetically.
""""""

def sort_words_alphabetically(sentence):
    words = sentence.split()
    words.sort()
    return ' '.join(words)

if __name__ == '__main__':
    sentence = 'Python is a great language'
    print(sort_words_alphabetically(sentence))",Control Structure,1140,"""""""
Write a code for sorting the words within a sentence, alphabetically.
""""""

def sort_words_alphabetically(sentence):
    words = sentence.split()
    words.sort()
    return ' '.join(words)

___
    sentence = 'Python is a great language'
    print(sort_words_alphabetically(sentence))"
Trace the recursive Fibonacci algorithm in Python and test its execution time for different values of n.,num = 10,"import time 

def fib(n): 
 if n<0: 
  print(""Incorrect input"") 
 elif n==1: 
  return 0
 elif n==2: 
  return 1
 else: 
  return fib(n-1)+fib(n-2) 

start = time.time() 

num = 10 
print(fib(num))

print(""Time taken:"", time.time()-start)",Control Structure,1157,"import time 

def fib(n): 
 if n<0: 
  print(""Incorrect input"") 
 elif n==1: 
  return 0
 elif n==2: 
  return 1
 ___ 
  return fib(n-1)+fib(n-2) 

start = time.time() 

num = 10 
print(fib(num))

print(""Time taken:"", time.time()-start)"
Can you develop a program using Python to check if number is prime?,13,"def is_prime(n):
    if (n <= 1): 
        return False
    elif (n <= 3): 
        return True
    elif (n % 2 == 0 or n % 3 == 0): 
        return False 

    i = 5
    while(i * i <= n): 
        if (n % i == 0 or n % (i + 2) == 0): 
            return False
        i = i + 6
  
    return True

print(is_prime(13))",Control Structure,1187,"def is_prime(n):
    if (n <= 1): 
        return False
    elif (n <= 3): 
        return True
    ___ 
        return False 

    i = 5
    while(i * i <= n): 
        ___ 
            return False
        i = i + 6
  
    return True

print(is_prime(13))"
"Write a Python program to calculate the sum of two given integers, but only if both of them are even.","num1 = 6
num2 = 8","def sum_of_two_ints(a,b): 
    if (a % 2 == 0 and b % 2 == 0): 
        return a+b 
    else: 
        return ""Wrong input""

print(sum_of_two_ints(num1,num2))",Control Structure,1270,"def sum_of_two_ints(a,b): 
    ___ 
        return a+b 
    ___ 
        return ""Wrong input""

print(sum_of_two_ints(num1,num2))"
Write a Python program to compare two unordered lists to see if they are equal.,"list1 = [3, 4, 5]
list2 = [4, 5, 3]","def compare_lists(list1, list2):
    if len(list1) != len(list2):
        return False
    if sorted(list1) == sorted(list2):
        return True
    return False",Control Structure,1309,"def compare_lists(list1, list2):
    if len(list1) != len(list2):
        return False
    ___
        return True
    return False"
Write a python program for binary search,"[2, 5, 7, 9, 11, 15]","def binarySearch(arr, target):
    left = 0
    right = len(arr) - 1

    while left <= right:
        mid = (left + right) // 2

        if arr[mid] == target:
            return mid
        elif arr[mid] > target:
            right = mid - 1
        else:
            left = mid + 1
    return -1",Control Structure,1322,"def binarySearch(arr, target):
    left = 0
    right = len(arr) - 1

    ___
        mid = (left + right) // 2

        ___
            return mid
        elif arr[mid] > target:
            right = mid - 1
        ___
            left = mid + 1
    return -1"
Create a Python code to display the multiplication table for a number between,Number: 4,"for i in range(1, 11):
    print(""4 x"", i, ""="", 4*i)",Control Structure,1324,"___
    print(""4 x"", i, ""="", 4*i)"
Create a Python program to check if a triangle is valid or not with the given values for its three sides.,"a = 2
b = 2
c = 3","def is_valid_triangle(a, b, c): 
  
    # triangle should have 3 sides 
    if a + b <= c or a + c <= b or b + c <= a: 
        return False
  
    # sum of any two side should always be greater than third side 
    if a + b > c and a + c > b and b + c > a: 
        return True
    return False

is_valid_triangle(2, 2, 3)",Control Structure,1341,"def is_valid_triangle(a, b, c): 
  
    # triangle should have 3 sides 
    ___ 
        return False
  
    # sum of any two side should always be greater than third side 
    ___ 
        return True
    return False

is_valid_triangle(2, 2, 3)"
Write a Python function for calculating factorials.,4,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)

number = 4
result = factorial(number)
print(result)",Control Structure,1353,"def factorial(n):
    ___
        return 1
    ___
        return n * factorial(n-1)

number = 4
result = factorial(number)
print(result)"
Design a Python program for implementing a stack with the following methods.,"pop(), push(x), and is_empty().","class Stack:
    def __init__(self):
        self.items = []

    def push(self, x): 
        self.items.append(x) 

    def pop(self): 
        if not self.is_empty():
            return self.items.pop()
        else:
            return None
        
    def is_empty(self): 
        return len(self.items) == 0",Control Structure,1397,"class Stack:
    def __init__(self):
        self.items = []

    def push(self, x): 
        self.items.append(x) 

    def pop(self): 
        if not self.is_empty():
            return self.items.pop()
        ___
            return None
        
    def is_empty(self): 
        return len(self.items) == 0"
Compose a python program that can search a text document for a given word.,"text_file=""text.txt""
query_word=""apple""","def search_for_word(text_file, query_word):
    words = []

    with open(text_file, ""r"") as file:
        for line in file:
            words.extend(line.split())

    if query_word in words:
        return True
    else:
        return False",Control Structure,1401,"def search_for_word(text_file, query_word):
    words = []

    with open(text_file, ""r"") as file:
        for line in file:
            words.extend(line.split())

    if query_word in words:
        return True
    ___
        return False"
Create a script in Python for classifying the sentiment of a text. The script should be able to handle input of various lengths and should return a sentiment score (on a scale from -1 to +1) for the text.,positive,"import nltk

def sentiment_analysis(text):
 tokens = nltk.word_tokenize(text)
 score = 0
 for token in tokens:
 tag = nltk.pos_tag(token)[0]
 if tag[1] == 'positive':
 score += 1
 else:
 score -= 1
 return score / len(tokens)",Control Structure,1552,"import nltk

def sentiment_analysis(text):
 tokens = nltk.word_tokenize(text)
 score = 0
 for token in tokens:
 tag = nltk.pos_tag(token)[0]
 ___
 score += 1
 ___
 score -= 1
 return score / len(tokens)"
Develop a Python program to check if a given number is a power of two.,Number = 16,"def is_power_of_two(x):
  while x % 2 == 0 and x > 1:
    x = x / 2
  return x == 1

num = 16

print(is_power_of_two(num))",Control Structure,1580,"def is_power_of_two(x):
  ___
    x = x / 2
  return x == 1

num = 16

print(is_power_of_two(num))"
Build a Python class to identify if a provided number is prime or composite.,10,"class PrimeNumber:
    def __init__(self, num):
        self.num = num

    def is_prime(self):
        for i in range(2, self.num):
            if(self.num % i == 0):
                return False
        return True

num = 10
obj = PrimeNumber(num)

if obj.is_prime():
    print(""Number is Prime"")
else:
    print(""Number is Composite"")",Control Structure,1638,"class PrimeNumber:
    def __init__(self, num):
        self.num = num

    def is_prime(self):
        for i in range(2, self.num):
            if(self.num % i == 0):
                return False
        return True

num = 10
obj = PrimeNumber(num)

if obj.is_prime():
    print(""Number is Prime"")
___
    print(""Number is Composite"")"
Write a python program to check if a given number is prime or not.,27,"def is_prime(num):
    for i in range(2, num):
        if (num % i) == 0:
            return False
    return True

number = 27

if is_prime(number):
    print(str(number) + ' is a prime number.')
else:
    print(str(number) + ' is not a prime number.')",Control Structure,1698,"def is_prime(num):
    for i in range(2, num):
        ___
            return False
    return True

number = 27

if is_prime(number):
    print(str(number) + ' is a prime number.')
___
    print(str(number) + ' is not a prime number.')"
Create a module in Python for validating a phone number.,"phone number = ""+1-800-867-5309""","import re

phone_number = ""+1-800-867-5309""

phone_pattern = re.compile(r'^\+[1-9]\d{1,2}\-\d{3}\-\d{3}\-\d{4}$')

def validate_phone_number(phone_number):
    return phone_pattern.search(phone_number)

valid = validate_phone_number(phone_number)
if valid:
    print(""Valid Phone number"")
else:
    print(""Invalid Phone number"")",Control Structure,1721,"import re

phone_number = ""+1-800-867-5309""

phone_pattern = re.compile(r'^\+[1-9]\d{1,2}\-\d{3}\-\d{3}\-\d{4}$')

def validate_phone_number(phone_number):
    return phone_pattern.search(phone_number)

valid = validate_phone_number(phone_number)
if valid:
    print(""Valid Phone number"")
___
    print(""Invalid Phone number"")"
Edit the following Python program such that it prints out the multiplication table for the given number n.,n = 5,"n = 5

# printing the multiplication table
for i in range(1, 11): 
    print(n, 'x', i, '=', n * i)",Control Structure,1726,"n = 5

# printing the multiplication table
___ 
    print(n, 'x', i, '=', n * i)"
Edit the given Python program to optimize its code for better performance,"#Function to calculate the sum of the natural numbers 
def sumOfNaturals(n): 
  
    sum = 0
    for i in range(1, n+1): 
        sum += i 
  
    return sum","#Function to calculate the sum of the natural numbers 
def sumOfNaturals(n): 
  
    #using Gauss formula
    if n % 2 == 0: 
        sum = (n//2)*(n+1) 
    else: 
        sum = (n//2)*(n+1) + (n+1)//2
  
    return sum",Control Structure,1738,"#Function to calculate the sum of the natural numbers 
def sumOfNaturals(n): 
  
    #using Gauss formula
    ___ 
        sum = (n//2)*(n+1) 
    ___ 
        sum = (n//2)*(n+1) + (n+1)//2
  
    return sum"
"Analyze the input provided and generate a function in Python that returns ""Invalid input"" if the input is not a valid integer number, or returns the number of digits in the input number otherwise.",212,"def count_digits(inp):
    if not isinstance(inp, int):
        return ""Invalid input""
    else:
        return len(str(inp))",Control Structure,1777,"def count_digits(inp):
    if not isinstance(inp, int):
        return ""Invalid input""
    ___
        return len(str(inp))"
Create a function in Python that determines if a given number is an Armstrong number or not.,371,"def isArmstrongNumber(number):
  num_str = str(number)
  result = 0
  power = len(num_str)

  for c in num_str:
    result += int(c) ** power

  if result == number:
    return True
  else:
    return False

if isArmstrongNumber(371):
  print('It is an Armstrong number.')
else:
  print('It is not an Armstrong number.')",Control Structure,1791,"def isArmstrongNumber(number):
  num_str = str(number)
  result = 0
  power = len(num_str)

  for c in num_str:
    result += int(c) ** power

  ___
    return True
  ___
    return False

if isArmstrongNumber(371):
  print('It is an Armstrong number.')
___
  print('It is not an Armstrong number.')"
Write an expression in python to check if a given number is prime,number = 15,"def is_prime(number):
    if number>1:
        for i in range(2,number):
            if number%i==0:
                return False
    else:
        return False
    return True
print(is_prime(number))",Control Structure,1826,"def is_prime(number):
    if number>1:
        for i in range(2,number):
            if number%i==0:
                return False
    ___
        return False
    return True
print(is_prime(number))"
Convert the following for loop into a recursive function in Python.,"for i in range(5):
    print(i)","def printRange(start, end):
    if start == end:
        return
    print(start)
    printRange(start+1, end)

printRange(0, 5)",Control Structure,1869,"def printRange(start, end):
    ___
        return
    print(start)
    printRange(start+1, end)

printRange(0, 5)"
Design a positive feedback loop for the following python program.,"for i in range(10):
    print(""hello"")","for i in range(10):
    print(""hello"")
    i += 1
    if i == 10:
        print(""You've got it!"")",Control Structure,1892,"for i in range(10):
    print(""hello"")
    i += 1
    ___
        print(""You've got it!"")"
Write a Python program to search for a given element in multiple lists,"my_list1 = [2, 3, 4, 5]
my_list2 = [7, 9, 5]
elem = 5","def search_elem(my_list1, my_list2, elem):
    for list in [my_list1, my_list2]:
        found = False
        for val in list:
            if val == elem:
                found = True
                break
        if found:
            return True
    return False

found = search_elem(my_list1, my_list2, elem)
print(found)",Control Structure,1914,"def search_elem(my_list1, my_list2, elem):
    for list in [my_list1, my_list2]:
        found = False
        for val in list:
            ___
                found = True
                ___
        if found:
            return True
    return False

found = search_elem(my_list1, my_list2, elem)
print(found)"
Create a python program for identifying if a given number is prime or not.,Use number 10 as an example.,"def is_prime(num): 
    if num < 2: 
        return False
  
    for i in range(2, num): 
        if num % i == 0: 
            return False
  
    return True
  
# Example 
number = 10
  
if is_prime(number): 
    print(number, ""is a prime number"") 
else: 
    print(number, ""is not a prime number"")",Control Structure,1922,"def is_prime(num): 
    if num < 2: 
        return False
  
    for i in range(2, num): 
        ___ 
            return False
  
    return True
  
# Example 
number = 10
  
if is_prime(number): 
    print(number, ""is a prime number"") 
___ 
    print(number, ""is not a prime number"")"
Implement a Python program to check if a number is divisible by another number.,"7, 2","def is_divisible(n, m):
    if (n % m == 0):
        return True
    else:
        return False
    
print(is_divisible(7, 2))  # Outputs False",Control Structure,1958,"def is_divisible(n, m):
    ___
        return True
    ___
        return False
    
print(is_divisible(7, 2))  # Outputs False"
Create a method in Python that returns the result for the factorial of a given number.,5,"def factorial(n): 
    if n == 0:
        return 1
    else:
        return n*factorial(n-1) 

x = 5
result = factorial(x) 
print(result) 

# Output: 
120",Control Structure,2135,"def factorial(n): 
    ___
        return 1
    ___
        return n*factorial(n-1) 

x = 5
result = factorial(x) 
print(result) 

# Output: 
120"
Write a Python script to detect if two strings contain the same characters. Output should be true or false.,"s1 = ""abc""
s2 = ""bca""","def is_permutation(s1, s2):
    s1_list = list(s1)
    s2_list = list(s2)
    s1_list.sort()
    s2_list.sort()
    if s1_list == s2_list:
        return True
    else:
        return False

print(is_permutation(""abc"", ""bca"")) # True",Control Structure,2327,"def is_permutation(s1, s2):
    s1_list = list(s1)
    s2_list = list(s2)
    s1_list.sort()
    s2_list.sort()
    ___
        return True
    ___
        return False

print(is_permutation(""abc"", ""bca"")) # True"
Generate a Python algorithm to check if a given word is a palindrome.,madam,"def isPalindrome(word): 
    left, right = 0, len(word) - 1
    while right >= left: 
        if not word[left] == word[right]: 
            return False
        left += 1
        right -= 1
    return True",Control Structure,2330,"def isPalindrome(word): 
    left, right = 0, len(word) - 1
    ___ 
        ___ 
            return False
        left += 1
        right -= 1
    return True"
Translate a Java loop into a while loop in Python.,"for (int i=1; i<=10; i++)
    System.out.println(""Hello World"");","i = 1
while i <= 10:
    print(""Hello World"")
    i += 1",Control Structure,2357,"i = 1
___
    print(""Hello World"")
    i += 1"
"Implement a Python function called “check_prime” which takes an integer as an argument and returns True if the number is prime, and False otherwise.",check_prime(125),"def check_prime(n):
 if n == 1:
 return False

 for i in range(2, int(n ** 0.5) + 1):
 if n % i == 0:
 return False

 return True",Control Structure,2363,"def check_prime(n):
 ___
 return False

 for i in range(2, int(n ** 0.5) + 1):
 ___
 return False

 return True"
Write a Python program to do a brute force search for a pair of elements which sum to a given target value.,"[1, 3, 4, 5, 6, 7], 8","# brute force search algorithm
def brute_force_search(arr, target):
	for i in range(len(arr)):
		for j in range(len(arr)):
			if arr[i] + arr[j] == target:
				return arr[i], arr[j]
	return None

# test the algorithm
target = 8
lst = [1, 3, 4, 5, 6, 7]
print(brute_force_search(lst, target))

Output:
pair = (3, 5)",Control Structure,2383,"# brute force search algorithm
def brute_force_search(arr, target):
	for i in range(len(arr)):
		for j in range(len(arr)):
			___
				return arr[i], arr[j]
	return None

# test the algorithm
target = 8
lst = [1, 3, 4, 5, 6, 7]
print(brute_force_search(lst, target))

Output:
pair = (3, 5)"
Create a Python code to check if a single integer is a prime number,int number = 11,"def is_prime(number):
    if number <= 1:
        return False

    for i in range(2, number):
        if number % i == 0:
            return False
    return True",Control Structure,2390,"def is_prime(number):
    if number <= 1:
        return False

    for i in range(2, number):
        ___
            return False
    return True"
Create a program in Python to check for palindrome numbers.,121,"def palindrome(num):
    num = str(num)
    if num == num[::-1]:
        print(num + "" is a palindrome number"")
    else: 
        print(num + "" is not a palindrome number"")

palindrome(121)
// Output: 121 is a palindrome number",Control Structure,2391,"def palindrome(num):
    num = str(num)
    ___
        print(num + "" is a palindrome number"")
    ___ 
        print(num + "" is not a palindrome number"")

palindrome(121)
// Output: 121 is a palindrome number"
Debug the following Python code and make it functional (read the instructions for the code).,"def factorial(n):
 if n == 0:
    return 1
 else:
 return n * factorial(n - 1)
factorial(5)","def factorial(n):
 if n == 0:
    return 1
 else:
 return n * factorial(n - 1)

# call the method
print(factorial(5))",Control Structure,2423,"def factorial(n):
 ___
    return 1
 ___
 return n * factorial(n - 1)

# call the method
print(factorial(5))"
Create a method to verify if the following number is prime in Python:,7,"def is_prime(n):
    if (n <= 1):
        return False
    for i in range(2, n):
        if (n % i == 0):
            return False
    return True

n = 7

if is_prime(n):
    print(""The number {} is prime."".format(n))
else:
    print(""The number {} is not prime."".format(n))",Control Structure,2431,"def is_prime(n):
    if (n <= 1):
        return False
    for i in range(2, n):
        ___
            return False
    return True

n = 7

if is_prime(n):
    print(""The number {} is prime."".format(n))
___
    print(""The number {} is not prime."".format(n))"
Optimize the following Python code for best runtime.,"def is_prime(n):
    for i in range(2, n):
        if (n % i) == 0:
            return False
    return True","def is_prime(n):
    if n == 1:
        return False
    if n in (2, 3):
        return True
    if not (n & 1) and n > 2:
        return False
    for i in range(3, int(n**0.5)+1, 2):
        if n % i == 0:
            return False
    return True",Control Structure,2444,"def is_prime(n):
    ___
        return False
    if n in (2, 3):
        return True
    ___
        return False
    for i in range(3, int(n**0.5)+1, 2):
        ___
            return False
    return True"
Generate an algorithm in Python to check if a given number of years is a leap year.,year = 1999,"def is_leap_year(year):
    if year % 400 == 0:
        return True
    if year % 100 == 0:
        return False
    if year % 4 == 0:
        return True
    return False

year = 1999
if is_leap_year(year):
    print(""This is a leap year."")
else:
    print(""This is not a leap year."")",Control Structure,2463,"def is_leap_year(year):
    ___
        return True
    ___
        return False
    ___
        return True
    return False

year = 1999
if is_leap_year(year):
    print(""This is a leap year."")
___
    print(""This is not a leap year."")"
Produce a Python program to compute the Fibonacci number for a given integer.,8,"def getFibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return getFibonacci(n-1)+getFibonacci(n-2) 

number = 8
fibonacci_number = getFibonacci(number)
print(fibonacci_number)",Control Structure,2512,"def getFibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    ___ 
        return getFibonacci(n-1)+getFibonacci(n-2) 

number = 8
fibonacci_number = getFibonacci(number)
print(fibonacci_number)"
Optimize a Python program to check for prime numbers,"def isPrime(n):
  for i in range(2, n):
    if n % i == 0:
      return False
  return True

num = 23
if isPrime(num):
  print(""Number is prime"")
else:
  print(""Number is not prime"")","def isPrime(n):
 if n <= 1:
 return False
 for i in range(2, int(n ** 0.5) + 1):
 if n % i == 0:
 return False
 return True

num = 23
if isPrime(num):
 print(""Number is prime"")
else:
 print(""Number is not prime"")",Control Structure,2514,"def isPrime(n):
 if n <= 1:
 return False
 for i in range(2, int(n ** 0.5) + 1):
 ___
 return False
 return True

num = 23
if isPrime(num):
 print(""Number is prime"")
___
 print(""Number is not prime"")"
Create a Python program for implementing a linear search algorithm.,"[4, 6, 5, 2, 9]","def linearSearch(arr, key): 
 for idx, num in enumerate(arr):
 if num == key:
 return idx
 
 return -1",Control Structure,2522,"def linearSearch(arr, key): 
 for idx, num in enumerate(arr):
 ___
 return idx
 
 return -1"
Create a Python program to check if the given number is divisible by 3 or not.,12,"def is_divisible_by_3(n):
  return (n % 3 == 0)

n = 12
if is_divisible_by_3(n):
  print(str(n) + ' is divisible by 3.')
else:
  print(str(n) + ' is not divisible by 3.')",Control Structure,2523,"def is_divisible_by_3(n):
  return (n % 3 == 0)

n = 12
if is_divisible_by_3(n):
  print(str(n) + ' is divisible by 3.')
___
  print(str(n) + ' is not divisible by 3.')"
"Design a Python program for comparing two strings and printing ""Equal"" if the strings are equal, or ""Not Equal"" if the strings are not equal.","string1 = ""hello""
string2 = ""world""","if string1 == string2:
    print(""Equal"")
else:
    print(""Not Equal"")",Control Structure,2531,"___
    print(""Equal"")
___
    print(""Not Equal"")"
Create a search algorithm in Python that takes two inputs 'word' and 'text' and returns true if the word is present in the text.,"word = ""code""
text = ""Today I wrote some code in Python""","def search(word, text):
    words = text.split()
    for w in words:
        if w == word:
            return True
    return False",Control Structure,2630,"def search(word, text):
    words = text.split()
    for w in words:
        ___
            return True
    return False"
Create an algorithm in Python to search for a given item in a dictionary.,"Dictionary = {'name': 'john', 'age': 22, 'city': 'New York'}, item = 'John'","def search(dict, item): 
    for key, value in dict.items(): 
        if item == value: 
            return True 
    return False

dict = {'name': 'john', 'age': 22, 'city': 'New York'}
item = 'John'
print(search(dict, item))",Control Structure,2664,"def search(dict, item): 
    for key, value in dict.items(): 
        ___ 
            return True 
    return False

dict = {'name': 'john', 'age': 22, 'city': 'New York'}
item = 'John'
print(search(dict, item))"
Create a module in Python to scrape the web for a particular website.,https://www.example.com/,"import requests
from bs4 import BeautifulSoup

def scrape_website(url):
    response = requests.get(url)
    html = response.text
 
    soup = BeautifulSoup(html, 'html.parser')
    return soup

if __name__ == '__main__':
    url = 'https://www.example.com/'
    soup = scrape_website(url)
    print(soup)",Control Structure,2686,"import requests
from bs4 import BeautifulSoup

def scrape_website(url):
    response = requests.get(url)
    html = response.text
 
    soup = BeautifulSoup(html, 'html.parser')
    return soup

___
    url = 'https://www.example.com/'
    soup = scrape_website(url)
    print(soup)"
Create a Python code to check if two DNA sequences are equal.,"ATTCTCA, ATTCCTA","def equal(dna1, dna2):
    if (dna1 ==dna2):
        return True
    else:
        return False
dna1 = 'ATTCTCA'
dna2 = 'ATTCCTA'

print(equal(dna1,dna2))",Control Structure,2783,"def equal(dna1, dna2):
    if (dna1 ==dna2):
        return True
    ___
        return False
dna1 = 'ATTCTCA'
dna2 = 'ATTCCTA'

print(equal(dna1,dna2))"
Create a function in Python that checks if a given number is a prime.,15,"def isPrime(n):
    if n < 2:
        return False
    for i in range(2, int(sqrt(n))+1):
        if n % i == 0:
            return False
    return True",Control Structure,2796,"def isPrime(n):
    if n < 2:
        return False
    for i in range(2, int(sqrt(n))+1):
        ___
            return False
    return True"
"Write a Python function that creates a JSON response with fields for score and data. The data field should contain a message that varies depending on the score value. If the score is 0, the message should state ""Try again"". If the score is 1, the message should state ""Well done"".",score = 0,"def create_response(score):
 if score == 0:
  message = ""Try again""  
 elif score == 1:
  message = ""Well done""
 else:
  message = """"
 
 return {""score"": score, ""message"": message}",Control Structure,2801,"def create_response(score):
 ___
  message = ""Try again""  
 el___
  message = ""Well done""
 ___
  message = """"
 
 return {""score"": score, ""message"": message}"
"Modify the Python function so that it prints ""Success!"" if the input parameter is greater than 10, or prints ""Failed!"" if it is less than or equal to 10.",7,"def check_num(num):
    if num > 10:
        print(""Success!"")
    else:
        print(""Failed!"")

check_num(7)",Control Structure,2878,"def check_num(num):
    if num > 10:
        print(""Success!"")
    ___
        print(""Failed!"")

check_num(7)"
Write a Python program that takes two given strings and checks if the first is a substring of the second one.,"string_1 = 'cat'
string_2 = 'the cats meow'","def is_substring(string_1, string_2):
    
    if string_1 in string_2:
        return True
    else:
        return False",Control Structure,2900,"def is_substring(string_1, string_2):
    
    if string_1 in string_2:
        return True
    ___
        return False"
Write a Python function to generate a multiplication table for a given number.,Number: 9,"def generate_table(num):
    # print the table heading
    print(""MULTIPLICATION TABLE FOR {}"".format(num))
    # generate the table
    for i in range(1, 11):
        print(""{} x {} = {}"".format(num, i, num*i))

# generate table for 9
generate_table(9)",Control Structure,2962,"def generate_table(num):
    # print the table heading
    print(""MULTIPLICATION TABLE FOR {}"".format(num))
    # generate the table
    ___
        print(""{} x {} = {}"".format(num, i, num*i))

# generate table for 9
generate_table(9)"
Generate a python program to check the sum of two numbers and determine if they are equal or not.,Compare a = 4 and b = 6,"def compare_sum(a, b):
  if a + b == 10:
    return True
  else:
    return False",Control Structure,2995,"def compare_sum(a, b):
  ___
    return True
  ___
    return False"
Write a Python code to check if a given number is divisible by both 5 and 7,50,"def is_divisible_by_5_and_7(num):
    if (num % 5 == 0 and num % 7 == 0):
        return True
    else:
        return False

print(is_divisible_by_5_and_7(50))",Control Structure,3027,"def is_divisible_by_5_and_7(num):
    ___
        return True
    ___
        return False

print(is_divisible_by_5_and_7(50))"
Generate a program in Python that will check if a given number is a palindrome.,123321,"def is_palindrome(n):
 n = str(n)
 
 return n == n[::-1]
 
num = 123321
if is_palindrome(num):
 print(f""{num} is a palindrome"")
else:
 print(f""{num} is not a palindrome"")",Control Structure,3121,"def is_palindrome(n):
 n = str(n)
 
 return n == n[::-1]
 
num = 123321
if is_palindrome(num):
 print(f""{num} is a palindrome"")
___
 print(f""{num} is not a palindrome"")"
Write an algorithm in Python to determine if a number is an Armstrong number or not.,The number is 370.,"def armstrong_number(num):
  digits = [int(x) for x in str(num)]
  n_digits = len(digits)
  sum_of_cubes = 0
  for digit in digits:
    sum_of_cubes += digit ** n_digits
  if sum_of_cubes == num:
    return True
  else:
    return False

armstrong_number(370)",Control Structure,3228,"def armstrong_number(num):
  digits = [int(x) for x in str(num)]
  n_digits = len(digits)
  sum_of_cubes = 0
  for digit in digits:
    sum_of_cubes += digit ** n_digits
  ___
    return True
  ___
    return False

armstrong_number(370)"
Edit the following Python code to add exception handling for user input.,"name = input('What is your name? ')
print('Hello, ' + name)","try:
  name = input('What is your name? ')
  print('Hello, ' + name)
except:
  print('There was an error parsing your name.')",Control Structure,3240,"___
  name = input('What is your name? ')
  print('Hello, ' + name)
except:
  print('There was an error parsing your name.')"
Develop a Python script for creating a dictionary with all the occurrences of the words in a sentence.,John and Mary went to the school,"sentence = ""John and Mary went to the school""
words = sentence.split()
word_dict = {}

for word in words:
    if word in word_dict:
        word_dict[word] += 1
    else:
        word_dict[word] = 1

print(word_dict)",Control Structure,3248,"sentence = ""John and Mary went to the school""
words = sentence.split()
word_dict = {}

for word in words:
    if word in word_dict:
        word_dict[word] += 1
    ___
        word_dict[word] = 1

print(word_dict)"
Create a python program to find if a number is a prime number,15,"def is_prime(num):
    for i in range(2, num):
        if not num % i:
            return False
    return True

num = 15 
if is_prime(num):
    print(""The number is prime"")
else:
    print(""The number is not prime"")",Control Structure,3313,"def is_prime(num):
    for i in range(2, num):
        if not num % i:
            return False
    return True

num = 15 
if is_prime(num):
    print(""The number is prime"")
___
    print(""The number is not prime"")"
Generate a python script to calculate the total public holiday hours for a given state.,"state = ""Illinois""","state = ""Illinois""

def calculate_public_holiday_hours(state):
    # code to calculate public holiday hours for a given state
    if state == ""Illinois"":
        return 8
    # code for other states

hours = calculate_public_holiday_hours(state)
print(""Public holiday hours:"", hours)",Control Structure,3340,"state = ""Illinois""

def calculate_public_holiday_hours(state):
    # code to calculate public holiday hours for a given state
    ___
        return 8
    # code for other states

hours = calculate_public_holiday_hours(state)
print(""Public holiday hours:"", hours)"
Generate a python code to calculate the factorial for a given number.,num = 5,"def factorial(number):
    if number == 0:
        return 1
    else:
        return number * factorial(number -1)

factorial(num)",Control Structure,3363,"def factorial(number):
    ___
        return 1
    ___
        return number * factorial(number -1)

factorial(num)"
Write a Python program to determine if one number is a multiple of another.,"num1: 32
num2: 8","def is_multiple(num1, num2):
   if (num1 % num2 == 0):
       print(f'{num1} is a multiple of {num2}')
   else:
       print(f'{num1} is not a multiple of {num2}')

is_multiple(32, 8)

Output:
32 is a multiple of 8",Control Structure,3366,"def is_multiple(num1, num2):
   ___
       print(f'{num1} is a multiple of {num2}')
   ___
       print(f'{num1} is not a multiple of {num2}')

is_multiple(32, 8)

Output:
32 is a multiple of 8"
Create a Python script to calculate the Fibonacci sequence for a given integer n.,7,"# Fibonacci sequence
def Fibonacci(n):
 a = 0
 b = 1
 if n < 0:
 print(""Incorrect input"")
 elif n == 0:
 return a
 elif n == 1:
 return b
 else:
 for i in range(2,n):
 c = a + b
 a = b
 b = c
 return b

# Driver Program
print(Fibonacci(7)) 
# Output: 13",Control Structure,3437,"# Fibonacci sequence
def Fibonacci(n):
 a = 0
 b = 1
 if n < 0:
 print(""Incorrect input"")
 el___
 return a
 el___
 return b
 ___
 for i in range(2,n):
 c = a + b
 a = b
 b = c
 return b

# Driver Program
print(Fibonacci(7)) 
# Output: 13"
Create a scoring system for a trivia game in Python. The system should take two inputs - the correct answer and user response - and return a single score value.,"correct_answer = '5'
user_response = 'five'","def score_trivia(correct, user):
    correct = correct.lower()
    user = user.lower()

    max_score = 10
    score = 0

    if correct == user:
        score = max_score
    elif user in correct or correct in user:
        score = max_score * 0.8

    return score",Control Structure,3452,"def score_trivia(correct, user):
    correct = correct.lower()
    user = user.lower()

    max_score = 10
    score = 0

    ___
        score = max_score
    ___
        score = max_score * 0.8

    return score"
Optimize a code snippet in Python for maximum performance.,"import time
 
def sleep_for_the_ night():
 time.sleep(5)
 
while True:
 sleep_for_the_ night()","import time

def sleep_for_the_night():
 while True:
  start_time = time.time()
  time.sleep(5)
  end_time = time.time()
  elapsed_time = end_time - start_time
  if elapsed_time < 5:
   time.sleep(5-elapsed_time)

while True:
 sleep_for_the_night()",Control Structure,3471,"import time

def sleep_for_the_night():
 ___
  start_time = time.time()
  time.sleep(5)
  end_time = time.time()
  elapsed_time = end_time - start_time
  if elapsed_time < 5:
   time.sleep(5-elapsed_time)

___
 sleep_for_the_night()"
"Given two strings A and B, construct a Python program to determine if B is a substring of A.","A = ""I am here"" 
B = ""here""","def is_substring(A, B): 
    if B in A: 
        return True 
    else: 
        return False",Control Structure,3498,"def is_substring(A, B): 
    if B in A: 
        return True 
    ___ 
        return False"
Optimize a Python function for maximum performance.,"def reverse_string(s): 
    return s[::-1]","def reverse_string(s): 
    start = 0 
    end = len(s) 
    string="""" 

    while end > 0: 
        string += s[end-1] 
        end -= 1

    return string",Control Structure,3542,"def reverse_string(s): 
    start = 0 
    end = len(s) 
    string="""" 

    ___ 
        string += s[end-1] 
        end -= 1

    return string"
Write a Python program that checks if a given number is prime.,7,"def is_prime(n):
    if n == 2 or n == 3:
        return True
    if n < 2 or n%2 == 0:
        return False
    if n < 9:
        return True
    if n%3 == 0:
        return False

    r = int(n**0.5)
    f = 5
    while f <= r:
        if n%f == 0:
            return False
        if n % (f+2) == 0:
            return False
        f += 6
    return True

num = 7
print(""Is"", num, ""prime?: "", is_prime(num))",Control Structure,3595,"def is_prime(n):
    ___
        return True
    ___
        return False
    if n < 9:
        return True
    ___
        return False

    r = int(n**0.5)
    f = 5
    ___
        ___
            return False
        ___
            return False
        f += 6
    return True

num = 7
print(""Is"", num, ""prime?: "", is_prime(num))"
Improve the following Python code to check if a number is in the range of 1 to 10 (inclusive).,"def check_number(num):
if num >= 1 and num <= 10:
   return True","def check_number(num):
  if (num > 0 and num < 11):
    return True
  else:
    return False",Control Structure,3664,"def check_number(num):
  ___
    return True
  ___
    return False"
Develop a program in Python for finding the factorial of a given number.,7,"def factorial(n):
    if n < 0:
        return None
    elif n == 0:
        return 1
    else:
        result = 1
        for i in range(1, n + 1):
            result *= i
        return result

num = 7
print('factorial of {} is {}'.format(num, factorial(num)))",Control Structure,3665,"def factorial(n):
    if n < 0:
        return None
    el___
        return 1
    ___
        result = 1
        for i in range(1, n + 1):
            result *= i
        return result

num = 7
print('factorial of {} is {}'.format(num, factorial(num)))"
Create a python program for the following purpose:,"Create a program that takes a positive integer N and an array A of length N, and outputs the total number of unique pairs of elements in A which sum up to an even number.","def count_even_pairs(N, A):
    n = 0
    for i in range(N):
        for j in range(i+1,N):
            if (A[i] + A[j]) % 2 == 0:
                n += 1
    return n",Control Structure,3678,"def count_even_pairs(N, A):
    n = 0
    for i in range(N):
        for j in range(i+1,N):
            ___
                n += 1
    return n"
Optimize a code snippet in Python. The code snippet is a function for computing the factorial of a number.,"def factorial(n):
 if n < 1:
  return 1
 else:
  return n*factorial(n-1)","def factorial(n):
    if n == 0:
        return 1
    else:
        result = 1
        for i in range(1, n+1):
            result *= i
        return result",Control Structure,3683,"def factorial(n):
    ___
        return 1
    ___
        result = 1
        for i in range(1, n+1):
            result *= i
        return result"
Create a Python program to detect if a number is a prime number.,No input.,"def is_prime(x):
    if x < 2:
        return False
    
    for i in range(2, x):
        if x % i == 0:
            return False
    return True",Control Structure,3745,"def is_prime(x):
    if x < 2:
        return False
    
    for i in range(2, x):
        ___
            return False
    return True"
Create a program in Python that takes two lists and checks for common elements between them.,"list1 = [1,2,3,4]
list2 = [3,4,5,6]","list1 = [1,2,3,4]
list2 = [3,4,5,6] 

def check_common(list1, list2): 
    result = False
    for x in list1: 
        for y in list2: 
            if x == y: 
                result = True
                return result  
    return result 
  
print(check_common(list1, list2))",Control Structure,3752,"list1 = [1,2,3,4]
list2 = [3,4,5,6] 

def check_common(list1, list2): 
    result = False
    for x in list1: 
        for y in list2: 
            ___ 
                result = True
                return result  
    return result 
  
print(check_common(list1, list2))"
Create a Python algorithm to check if a given word exists in a dictionary.,"dictionary: {""hello"": ""greeting"", ""car"": ""vehicle""}
word: ""hello""","# Function to test if a word exists in a dictionary 
def wordExists(dictionary, word):
    for key, value in dictionary.items():
        if key == word:
            return True
    
    return False

# Main function
dictionary = {""hello"": ""greeting"", ""car"": ""vehicle""}
word = ""hello""
print(wordExists(dictionary, word))",Control Structure,3763,"# Function to test if a word exists in a dictionary 
def wordExists(dictionary, word):
    for key, value in dictionary.items():
        ___
            return True
    
    return False

# Main function
dictionary = {""hello"": ""greeting"", ""car"": ""vehicle""}
word = ""hello""
print(wordExists(dictionary, word))"
Create a script in Python that checks a provided URL for a specific keyword within its content and outputs either a pass or fail result.,"URL: http://www.example.com
Keyword: success","import requests

url = 'http://www.example.com'
keyword = 'success'

r = requests.get(url)
if keyword in r.text:
 print('Pass')
else:
 print('Fail')",Control Structure,3809,"import requests

url = 'http://www.example.com'
keyword = 'success'

r = requests.get(url)
if keyword in r.text:
 print('Pass')
___
 print('Fail')"
"Given two strings s and t, write a Python program to check if t is a substring of s.","s = ""abcabc""
t = ""abc""","def is_substring(s, t):
    if t in s:
        return True
    else:
        return False",Control Structure,3811,"def is_substring(s, t):
    if t in s:
        return True
    ___
        return False"
"Create a function in Python which takes in a number n and returns ""Fizz"" if the number is divisible by 3, ""Buzz"" if the number is divisible by 5, and ""FizzBuzz"" if the number is divisible by both 3 and 5.",Number: 15,"def fizzbuzz(n):
 if n % 3 == 0 and n % 5 == 0:
  return 'FizzBuzz'
 elif n % 3 == 0:
  return 'Fizz'
 elif n % 5 == 0:
  return 'Buzz'
 else:
  return n",Control Structure,3822,"def fizzbuzz(n):
 ___
  return 'FizzBuzz'
 el___
  return 'Fizz'
 el___
  return 'Buzz'
 ___
  return n"
Write a Python statement to check if a given number is within a given range,"Number: 3, Range: 0-10","if 0 <= 3 <= 10:
 print('Number is within the range')
else:
 print('Number is not within the range')",Control Structure,3975,"if 0 <= 3 <= 10:
 print('Number is within the range')
___
 print('Number is not within the range')"
Write a Python program that takes an integer as input and check if the number is prime or not.,45,"def is_prime(n):
    if n < 2: 
        return False

    for i in range(2, int(n**0.5) + 1):  
        if n % i == 0: 
            return False

    return True",Control Structure,4041,"def is_prime(n):
    if n < 2: 
        return False

    for i in range(2, int(n**0.5) + 1):  
        ___ 
            return False

    return True"
Write a Python program to check if a given number is divisible by 3 and 5 or not.,10,"def check_divisible_3and5(num):
    if (num % 3 == 0 and num % 5 == 0):
        return True
    else:
        return False

# test given number
num = 10
if check_divisible_3and5(num):
    print(""%d is divisible by 3 and 5"" %num)
else:
    print(""%d is not divisible by 3 and 5"" %num)",Control Structure,4062,"def check_divisible_3and5(num):
    ___
        return True
    ___
        return False

# test given number
num = 10
if check_divisible_3and5(num):
    print(""%d is divisible by 3 and 5"" %num)
___
    print(""%d is not divisible by 3 and 5"" %num)"
"Write a python function to compare two strings and return 1 if the strings are anagrams, 0 if not.","""bob"", ""bob""","def is_anagram(string1, string2):
    string1 = sorted(string1.replace("" "", """").lower())
    string2 = sorted(string2.replace("" "", """").lower())
    
    if string1 == string2:
        return 1
    else:
        return 0",Control Structure,4067,"def is_anagram(string1, string2):
    string1 = sorted(string1.replace("" "", """").lower())
    string2 = sorted(string2.replace("" "", """").lower())
    
    ___
        return 1
    ___
        return 0"
Write a Python program to check if two strings are a rotation of each other.,"Strings:”geeksforgeeks”, “forgeeksgeeks”","if len(string1) == len(string2) and string1 in string2*2:
    print(""The strings are a rotation of each other"")
else:
    print(""The strings are not a rotation of each other"")",Control Structure,4116,"___
    print(""The strings are a rotation of each other"")
___
    print(""The strings are not a rotation of each other"")"
Analyze a given Python code and write a function that checks if a given number is prime.,def primeCheck(num):,"def primeCheck(num):
 if num > 1:
 for i in range(2, num):
  if (num % i) == 0:
   return False
 else:
  return False
 return True",Control Structure,4120,"def primeCheck(num):
 if num > 1:
 for i in range(2, num):
  ___
   return False
 ___
  return False
 return True"
"Develop an API in Python that takes in two strings and returns true if they are anagrams, and false otherwise.","listen, silent","# anagram checker

def check_anagrams(str1, str2):
    if sorted(str1) == sorted(str2):
        return True 
    else: 
        return False 
  
# Driver code 
str1 = ""listen""
str2 = ""silent""

if(check_anagrams(str1, str2)): 
    print(""The strings are anagrams."")  
else: 
    print(""The strings aren't anagrams."")",Control Structure,4168,"# anagram checker

def check_anagrams(str1, str2):
    ___
        return True 
    ___ 
        return False 
  
# Driver code 
str1 = ""listen""
str2 = ""silent""

if(check_anagrams(str1, str2)): 
    print(""The strings are anagrams."")  
___ 
    print(""The strings aren't anagrams."")"
Write a Python code to check if the given number is prime.,Number = 23,"def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, n//2 + 1):
        if n % i == 0:
            return False
    return True

if is_prime(23):
    print('The given number is prime')
else:
    print('The given number is not prime')",Control Structure,4183,"def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, n//2 + 1):
        ___
            return False
    return True

if is_prime(23):
    print('The given number is prime')
___
    print('The given number is not prime')"
Write a Python program for finding the maximum of 3 numbers.,"4, 7, 6","def max_of_three(a, b, c):
  if (a > b) and (a > c):
    greatest = a
  elif (b > a) and (b > c):
    greatest = b
  else:
    greatest = c
  return greatest

print(""Max is: "", max_of_three(4, 7, 6))",Control Structure,4190,"def max_of_three(a, b, c):
  ___
    greatest = a
  ___
    greatest = b
  ___
    greatest = c
  return greatest

print(""Max is: "", max_of_three(4, 7, 6))"
Can you write a Python function to determine if a supplied number is prime?,num=20,"def is_prime(num):
    """"""Check if the given number is prime.

    Args:
        num (int): A number to check

    Returns:
        bool: True if num is prime, False otherwise.
    """"""

    if num < 2: 
        return False

    for i in range(2, num):
        if (num % i) == 0:
            return False
    return True

num = 20
result = is_prime(num)
print(f""Is {num} prime? {result}"")",Control Structure,4198,"def is_prime(num):
    """"""Check if the given number is prime.

    Args:
        num (int): A number to check

    Returns:
        bool: True if num is prime, False otherwise.
    """"""

    if num < 2: 
        return False

    for i in range(2, num):
        ___
            return False
    return True

num = 20
result = is_prime(num)
print(f""Is {num} prime? {result}"")"
Create a Python Flask application for solving a linear equation. The application should have an endpoint that receives an equation as input and returns the solution as output.,3x + 2 = 5,"from flask import Flask, request
from sympy import *

app = Flask(name)
x = Symbol('x')

@app.route('/solve', methods=['POST'])
def solve():
 equation = request.json['equation']
 solution = solve(equation, x)
 return {'solution': str(solution[0])}

if name == 'main':
 app.run(debug=True)",Control Structure,4199,"from flask import Flask, request
from sympy import *

app = Flask(name)
x = Symbol('x')

@app.route('/solve', methods=['POST'])
def solve():
 equation = request.json['equation']
 solution = solve(equation, x)
 return {'solution': str(solution[0])}

___
 app.run(debug=True)"
Generate an automated unit test in Python for the following function,"def add(a, b):
    return a + b","import unittest

class TestAddition(unittest.TestCase):

    def test_addition(self):
        self.assertEqual(add(1, 1), 2)
        self.assertEqual(add(2, 5), 7)
        self.assertEqual(add(3, 3), 6)
        self.assertEqual(add(-8, 6), -2)
        self.assertEqual(add(-3, -3), -6)

if __name__ == '__main__':
    unittest.main()",Control Structure,4213,"import unittest

class TestAddition(unittest.TestCase):

    def test_addition(self):
        self.assertEqual(add(1, 1), 2)
        self.assertEqual(add(2, 5), 7)
        self.assertEqual(add(3, 3), 6)
        self.assertEqual(add(-8, 6), -2)
        self.assertEqual(add(-3, -3), -6)

___
    unittest.main()"
Generate a Python implementation for these pseudocode.,"Repeat Steps 1 and 2 until no unscanned barcodes remain. 
  1. Scan a barcode.
  2. Print the name of its product.","def print_product_names():
    unscanned_barcodes = [barcodes] #list of unscanned barcodes

    while len(unscanned_barcodes) > 0:
        barcode = unscanned_barcodes.pop(0)
        product_name = scan_barcode(barcode) #function that returns product name
        print(product_name)",Control Structure,4259,"def print_product_names():
    unscanned_barcodes = [barcodes] #list of unscanned barcodes

    ___
        barcode = unscanned_barcodes.pop(0)
        product_name = scan_barcode(barcode) #function that returns product name
        print(product_name)"
Write a Python program to modify a given dataset for a specific task.,"Dataset:
{
    ""name"": ""John"", 
    ""age"": 20, 
    ""height"": 180
}

Task:
Filter the person's records if they are over the age of 18.","def modify_data(dataset, task):
modified_data = []
 if task == ""filter age >18"":
 for d in dataset:
 if d['age'] > 18:
 modified_data.append(d)
 return modified_data",Control Structure,4285,"def modify_data(dataset, task):
modified_data = []
 ___
 for d in dataset:
 if d['age'] > 18:
 modified_data.append(d)
 return modified_data"
Create a function that takes two strings as its inputs and returns true if one of the two strings is a substring of the other.,"""python"", ""java""","def is_substring(string1, string2):
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i] == string2[j]:
                return True
    return False

result = is_substring(""python"", ""java"")
print(result)",Control Structure,4310,"def is_substring(string1, string2):
    for i in range(len(string1)):
        for j in range(len(string2)):
            ___
                return True
    return False

result = is_substring(""python"", ""java"")
print(result)"
Design a function in Python to test if the given number is a prime or not.,N = 13,"def is_prime(n):
 if n <= 1:
 return False

 for i in range(2, n):
 if n % i == 0:
 return False

 return True

is_prime(13) # True",Control Structure,4351,"def is_prime(n):
 if n <= 1:
 return False

 for i in range(2, n):
 ___
 return False

 return True

is_prime(13) # True"
"Given two strings, write a Python program to check if one is an anagram of other.",listen and silent,"def isAnagram(str1, str2):
    str1_sorted = sorted(str1)
    str2_sorted = sorted(str2)
    # Compare sorted strings
    if str1_sorted == str2_sorted:
        return True
    else:
        return False

str1 = ""listen""
str2 = ""silent""

print(isAnagram(str1, str2))",Control Structure,4373,"def isAnagram(str1, str2):
    str1_sorted = sorted(str1)
    str2_sorted = sorted(str2)
    # Compare sorted strings
    ___
        return True
    ___
        return False

str1 = ""listen""
str2 = ""silent""

print(isAnagram(str1, str2))"
Edit the code to make it in a Python program to check if a number is divisible by 5 and 11.,"def isDivisible(num): 
    if num % 5 == 0: 
        print(""Number is divisible by 5"") 
    if num % 11 == 0:
        print(""Number is divisible by 11"")","def isDivisible(num): 
    if num % 5 == 0 and num % 11 == 0:
        print(""Number is divisible by 5 and 11"") 
    else:
        print(""Number is not divisible by 5 and 11"")",Control Structure,4395,"def isDivisible(num): 
    ___
        print(""Number is divisible by 5 and 11"") 
    ___
        print(""Number is not divisible by 5 and 11"")"
Create a Python program for finding all combinations of numbers that equal a given target number.,target = 10,"def find_combos(target):
 combos = []
 
 for i in range(int(target/2)+1):
 # increments of two to avoid duplicate results
 for j in range(i, int(target/2)+1, 2):
 if i+j == target:
 combos.append((i,j))
 
 return combos

combos = find_combos(10)
print(combos)",Control Structure,4435,"def find_combos(target):
 combos = []
 
 for i in range(int(target/2)+1):
 # increments of two to avoid duplicate results
 for j in range(i, int(target/2)+1, 2):
 ___
 combos.append((i,j))
 
 return combos

combos = find_combos(10)
print(combos)"
How would you design a Python program that checks if a number is divisible by three?,45,"def is_divisible(n):
    if n % 3 == 0:
        return True
    else:
        return False

num = 45
check_divisible = is_divisible(num)

if check_divisible:
    print(""Number is divisible by three."")
else:
    print(""Number is not divisible by three."")",Control Structure,4482,"def is_divisible(n):
    ___
        return True
    ___
        return False

num = 45
check_divisible = is_divisible(num)

if check_divisible:
    print(""Number is divisible by three."")
___
    print(""Number is not divisible by three."")"
Optimize a Python function for computing Fibonacci numbers.,"def fib(n):
    if n == 0 or n == 1:
        return n
    else:
        return fib(n-1) + fib(n-2)","def fibonacci(n): 
    if n <= 1: 
        return n 
    else:
        fibonacci_num=[0,1] #creating a fibonacci list
        i=2
        while i<=n:
            fibonacci_num.append(fibonacci_num[i-1]+fibonacci_num[i-2])
            i+=1
        return fibonacci_num[n]",Control Structure,4522,"def fibonacci(n): 
    if n <= 1: 
        return n 
    ___
        fibonacci_num=[0,1] #creating a fibonacci list
        i=2
        ___
            fibonacci_num.append(fibonacci_num[i-1]+fibonacci_num[i-2])
            i+=1
        return fibonacci_num[n]"
Write an algorithm for linear search in Python.,"List: [1, 3, 8, 10, 15, 20, 25]
Number to search: 15","def linear_search(list, n):
  i = 0
  while i < len(list):
    if list[i] == n:
      return i
    i = i+1
  return -1

list = [1, 3, 8, 10, 15, 20, 25]
n = 15
index = linear_search(list, n)
print(""Number found at index:"", index)",Control Structure,4565,"def linear_search(list, n):
  i = 0
  ___
    ___
      return i
    i = i+1
  return -1

list = [1, 3, 8, 10, 15, 20, 25]
n = 15
index = linear_search(list, n)
print(""Number found at index:"", index)"
Create a Python program to check if a number is an Armstrong number.,number = 153,"def isArmstrong(number): 
	
	num = number 
	length = len(str(number)) 
	sum_of_the_power_of_digits = 0 

	while num > 0:
		rem = num % 10 
		sum_of_the_power_of_digits = sum_of_the_power_of_digits +  np.power(rem, length)
		num //= 10
		
	if (sum_of_the_power_of_digits == number) : 
		return True 
	else : 
		return False",Control Structure,4698,"def isArmstrong(number): 
	
	num = number 
	length = len(str(number)) 
	sum_of_the_power_of_digits = 0 

	___
		rem = num % 10 
		sum_of_the_power_of_digits = sum_of_the_power_of_digits +  np.power(rem, length)
		num //= 10
		
	___ 
		return True 
	___ 
		return False"
Design an algorithm in Python to check if an integer is even or odd.,n = 5,"def check_number(n):
    if n%2==0:
        return ""Even""
    else:
        return ""Odd""

check_number(5) 
# Output: Odd",Control Structure,4752,"def check_number(n):
    if n%2==0:
        return ""Even""
    ___
        return ""Odd""

check_number(5) 
# Output: Odd"
Generate a python code for an algorithmic solution for the following problem:,"Given a list A and a number X, determine whether or not there exist two elements in A whose sum is exactly X.","def is_sum_possible(A, X): 
    n = len(A) 
    # create an empty hash set
    s = set() 
  
    for i in range(n): 
        temp = X - A[i]  
        if temp >= 0 and temp in s: 
            return True 
        s.add(A[i])  
  
    return False",Control Structure,4848,"def is_sum_possible(A, X): 
    n = len(A) 
    # create an empty hash set
    s = set() 
  
    for i in range(n): 
        temp = X - A[i]  
        ___ 
            return True 
        s.add(A[i])  
  
    return False"
Build a Python generator that yields the next power of 2 for a given number.,4,"def nextPowerOf2Generator(n): 
    power = 1
    while True: 
        pow_val = power * 2
        yield pow_val 
        power = pow_val 
  
n = 4

for i in nextPowerOf2Generator(n):
    if i > n:
        print(i)
        break",Control Structure,4902,"def nextPowerOf2Generator(n): 
    power = 1
    ___ 
        pow_val = power * 2
        yield pow_val 
        power = pow_val 
  
n = 4

for i in nextPowerOf2Generator(n):
    if i > n:
        print(i)
        ___"
Generate a Python program that takes an input of a number and checks if it is prime.,7,"def is_prime(num):
    if num == 2:
        return True
    elif num < 2 or not all(num % i for i in range(2, num)):
        return False
    return True

num = 7
result = is_prime(num)
print(result)",Control Structure,4916,"def is_prime(num):
    ___
        return True
    ___
        return False
    return True

num = 7
result = is_prime(num)
print(result)"
Create a block of code for a Python program to generate a multiplication table for a given number.,num = 6,"# Create a multiplication table for a given number
num = 6

# Loop to generate the table
for i in range(1, 11):
  print(f'{num} x {i} = {num * i}')",Control Structure,5041,"# Create a multiplication table for a given number
num = 6

# Loop to generate the table
___
  print(f'{num} x {i} = {num * i}')"
Create a web application in Python that displays a directory structure tree for a given path.,/home/myUser/myFolder,"import os

def make_tree(path): 
 files = os.listdir(path) 
 for f in files: 
     full_path = os.path.join(path, f) 
     if os.path.isdir(full_path): 
         print(f) 
         make_tree(full_path) 
     else: 
         print("" -"" + f) 
  
path = '/home/myUser/myFolder' 
make_tree(path)",Control Structure,5047,"import os

def make_tree(path): 
 files = os.listdir(path) 
 for f in files: 
     full_path = os.path.join(path, f) 
     if os.path.isdir(full_path): 
         print(f) 
         make_tree(full_path) 
     ___ 
         print("" -"" + f) 
  
path = '/home/myUser/myFolder' 
make_tree(path)"
Write a Python code to determine if the user has enough money in the account for a given transaction.,"balance = 200
amount = 50","def enough_balance(balance, amount):
    if amount > balance:
        return False
    return True

if __name__ == '__main__':
    print(enough_balance(balance, amount))",Control Structure,5070,"def enough_balance(balance, amount):
    if amount > balance:
        return False
    return True

___
    print(enough_balance(balance, amount))"
"Use the inputs provided, write Python code to check if two integers are equal.","First Integer: 10
Second Integer: 10","if int(10) == int(10):
    print(""The two integers are equal"")
else:
    print(""The two integers are not equal"")",Control Structure,5097,"___
    print(""The two integers are equal"")
___
    print(""The two integers are not equal"")"
Generate a Python program that can verify if a given sentence is correct or misspelled.,"The sentence: ""This is my new computer""","import re

def spell_check(sentence):
  words = re.findall(r'\w+', sentence)
  for word in words:
    if not word.lower() in dict:
        return False
  return True

sentence = ""This is my new computer""
result = spell_check(sentence)
if result:
    print('Correct spelling')
else:
    print('Incorrect spelling')",Control Structure,5106,"import re

def spell_check(sentence):
  words = re.findall(r'\w+', sentence)
  for word in words:
    if not word.lower() in dict:
        return False
  return True

sentence = ""This is my new computer""
result = spell_check(sentence)
if result:
    print('Correct spelling')
___
    print('Incorrect spelling')"
"Given two strings s and t, create a new Python function to check if s is an anagram of t.","s = ""anagram""
t = ""nagaram""","def is_anagram(s, t):
 s_list = list(s)
 t_list = list(t)
 s_list.sort()
 t_list.sort()
 if s_list == t_list:
 return True
 else:
 return False",Control Structure,5231,"def is_anagram(s, t):
 s_list = list(s)
 t_list = list(t)
 s_list.sort()
 t_list.sort()
 ___
 return True
 ___
 return False"
Create a Python script that takes a number and prints the multiplication table for that number.,Number: 4,"num = 4 # Take input
  
# To take input from the user 
# num = int(input(""Display multiplication table of? "")) 
  
# Iterate 10 times from i = 1 to 10 
for i in range(1, 11): 
   print(num, 'x', i, '=', num*i)",Control Structure,5255,"num = 4 # Take input
  
# To take input from the user 
# num = int(input(""Display multiplication table of? "")) 
  
# Iterate 10 times from i = 1 to 10 
___ 
   print(num, 'x', i, '=', num*i)"
Write a Python program that uses a while loop to calculate a Fibonacci sequence up to the given upper limit.,Upper limit: 10,"upper_limit = 10

fibonacci_sequence = [0, 1]

a = 0
b = 1

while b <= upper_limit:
 c = a + b
 a = b
 b = c
 fibonacci_sequence.append(b)

print(fibonacci_sequence) # Output: [0, 1, 1, 2, 3, 5, 8, 13]",Control Structure,5280,"upper_limit = 10

fibonacci_sequence = [0, 1]

a = 0
b = 1

___
 c = a + b
 a = b
 b = c
 fibonacci_sequence.append(b)

print(fibonacci_sequence) # Output: [0, 1, 1, 2, 3, 5, 8, 13]"
Write a Python program to check if a number is prime by eliminating the multiples of all numbers from 2 to the square root of the number.,n = 99,"import math

def is_prime(n):
    for i in range(2, int(math.sqrt(n))+1):
        if n % i == 0:
            return False
    return True

print(is_prime(n))",Control Structure,5384,"import math

def is_prime(n):
    for i in range(2, int(math.sqrt(n))+1):
        ___
            return False
    return True

print(is_prime(n))"
Optimize this while loop in the given Python code.,"i = 0
while i < 5:
    i += 1
    print(i)","i = 0
while i < 5:
    print(i)
    i += 1",Control Structure,5393,"i = 0
___
    print(i)
    i += 1"
Modify the following code in Python to check if a number is prime or not.,"def checkPrime(n):
    for i in range(2,n):
        if n%i==0:
            return False
    return True","def checkPrime(n):
    if n <= 1:
        return False

    for i in range(2,n):
        if n % i == 0:
            return False
    
    return True",Control Structure,5403,"def checkPrime(n):
    if n <= 1:
        return False

    for i in range(2,n):
        ___
            return False
    
    return True"
Create a Python function for computing the Factorial of a number.,6,"def factorial(n):
   if n == 0:
      return 1
   else:
      return n * factorial(n-1)

print(factorial(6))",Control Structure,5520,"def factorial(n):
   ___
      return 1
   ___
      return n * factorial(n-1)

print(factorial(6))"
Design an algorithm to check if a number is a perfect square in Python.,25,"import math 
  
def isPerfectSquare(n): 
    # Find floating point value of 
    # square root of x. 
    sqr = math.sqrt(n) 
   
    # If square root is an integer 
    return (sqr - math.floor(sqr) == 0) 
  
# Driver program 
x = 25
if(isPerfectSquare(x)): 
    print(x, ""is a perfect square"") 
else: 
    print(x, ""is not a perfect square"")",Control Structure,5553,"import math 
  
def isPerfectSquare(n): 
    # Find floating point value of 
    # square root of x. 
    sqr = math.sqrt(n) 
   
    # If square root is an integer 
    return (sqr - math.floor(sqr) == 0) 
  
# Driver program 
x = 25
if(isPerfectSquare(x)): 
    print(x, ""is a perfect square"") 
___ 
    print(x, ""is not a perfect square"")"
Develop an algorithm in Python for parsing a given text and counting the number of occurrences of a given word.,This is an example text.,"def parse_text(text, word):
  word_count = 0
  words = text.split()
  for w in words:
    if w == word:
      word_count += 1
  return word_count
  
text = 'This is an example text.'
word = 'example'
word_count = parse_text(text, word)
print('The word ""{}"" appears {} times in the text.'.format(word, word_count))",Control Structure,5620,"def parse_text(text, word):
  word_count = 0
  words = text.split()
  for w in words:
    ___
      word_count += 1
  return word_count
  
text = 'This is an example text.'
word = 'example'
word_count = parse_text(text, word)
print('The word ""{}"" appears {} times in the text.'.format(word, word_count))"
Implement a solutions for the Tower of Hanoi problem using Python.,int n = 4,"def hanoi(n, source, aux, dest):
 if n == 1:
  print('Move disk 1 from {0} to {1}'.format(source, dest))
 else:
  hanoi(n-1, source, dest, aux)
  print('Move disk {0} from {1} to {2}'.format(n, source, dest))
  hanoi(n-1, aux, source, dest)

# Driver program
n = 4
hanoi(n, 'a', 'b', 'c')",Control Structure,5742,"def hanoi(n, source, aux, dest):
 ___
  print('Move disk 1 from {0} to {1}'.format(source, dest))
 ___
  hanoi(n-1, source, dest, aux)
  print('Move disk {0} from {1} to {2}'.format(n, source, dest))
  hanoi(n-1, aux, source, dest)

# Driver program
n = 4
hanoi(n, 'a', 'b', 'c')"
Generate a program in Python for a simple chatbot. The program should accept a user input and output a response using the input provided.,Hello,"user_input = input(""User: "")

if user_input == ""Hello"":
 print(""Chatbot: Hi there!"")
else:
 print(""Chatbot: I'm not sure what you mean, please try again."")",Control Structure,5781,"user_input = input(""User: "")

___
 print(""Chatbot: Hi there!"")
___
 print(""Chatbot: I'm not sure what you mean, please try again."")"
Edit the following Python code to include a while loop:,"a = 0
b = 0","a = 0
b = 0

while a < 10:
    a += 1
    b = b + a

print(b)",Control Structure,5853,"a = 0
b = 0

___
    a += 1
    b = b + a

print(b)"
Generate a function in Python that displays the Fibonacci sequence for a given value.,n = 10,"def fibonacci(n):
 a, b = 0, 1
 result = []
 
 while a < n:
 result.append(a)
 a, b = b, a + b

 return result

print(fibonacci(n))",Control Structure,5941,"def fibonacci(n):
 a, b = 0, 1
 result = []
 
 ___
 result.append(a)
 a, b = b, a + b

 return result

print(fibonacci(n))"
Write a function in Python that takes in two strings and returns true if both strings have the same letter counts.,"'abc', 'cba'","def isPermutation(s1, s2):
 s1_dict = {}
 s2_dict = {}
 for c in s1:
  if c in s1_dict:
   s1_dict[c] += 1
  else:
   s1_dict[c] = 1
 for c in s2:
  if c in s2_dict:
   s2_dict[c] += 1
  else:
   s2_dict[c] = 1
 
 return s1_dict == s2_dict",Control Structure,5999,"def isPermutation(s1, s2):
 s1_dict = {}
 s2_dict = {}
 for c in s1:
  if c in s1_dict:
   s1_dict[c] += 1
  ___
   s1_dict[c] = 1
 for c in s2:
  if c in s2_dict:
   s2_dict[c] += 1
  ___
   s2_dict[c] = 1
 
 return s1_dict == s2_dict"
Create a Python script to check if a given word or phrase is a palindrome.,madam,"def is_palindrome(word):
    word_list = list(word)
    if word_list == word_list[::-1]:
        return True
    else:
        return False

result = is_palindrome('madam')
print(result)",Control Structure,6002,"def is_palindrome(word):
    word_list = list(word)
    ___
        return True
    ___
        return False

result = is_palindrome('madam')
print(result)"
Optimize a given code in Python for higher efficiency.,"def power(base, exponent):
    answer = 1
    for _ in range(exponent):
        answer *= base
    return answer","def power(base, exponent):
    answer = 1
    while exponent > 0:
        if exponent & 1:
            answer *= base
        base *= base
        exponent >>= 1
    return answer",Control Structure,6037,"def power(base, exponent):
    answer = 1
    ___
        if exponent & 1:
            answer *= base
        base *= base
        exponent >>= 1
    return answer"
Develop an algorithm in Python for generating the nth Fibonacci number.,N: 5,"def fibonacci(n):
 # base case
 if n == 1:
  return 0
 elif n == 2:
  return 1
 # recursive case
 else:
  return fibonacci(n-1) + fibonacci(n-2)

# testing
print(fibonacci(5)) # Output: 3",Control Structure,6049,"def fibonacci(n):
 # base case
 ___
  return 0
 el___
  return 1
 # recursive case
 ___
  return fibonacci(n-1) + fibonacci(n-2)

# testing
print(fibonacci(5)) # Output: 3"
A number is said to be abundant if its proper divisors sum to more than the number itself. Create a python program to identify if a given number is abundant or not.,21,"def is_abundant(num):
    divisor_sum = 0
    for i in range(1, int(num/2)+1):
        if num % i == 0:
            divisor_sum += i

    return divisor_sum > num

num = 21

if is_abundant(num):
    print(f""{num} is abundant"")
else:
    print(f""{num} is not abundant"")",Control Structure,6058,"def is_abundant(num):
    divisor_sum = 0
    for i in range(1, int(num/2)+1):
        ___
            divisor_sum += i

    return divisor_sum > num

num = 21

if is_abundant(num):
    print(f""{num} is abundant"")
___
    print(f""{num} is not abundant"")"
Create a python program for checking whether a number is a palindrome or not.,12321,"def is_palindrome(num):
  rev = 0
  tmp = num
  
  while tmp > 0:
    rev = rev * 10
    rev = rev + (tmp % 10)
    tmp = tmp // 10

  return num == rev
  
num = 12321
if (is_palindrome(num)):
  print(""Number is a palindrome"")
else:
  print(""Number is not a palindrome"")",Control Structure,6086,"def is_palindrome(num):
  rev = 0
  tmp = num
  
  ___
    rev = rev * 10
    rev = rev + (tmp % 10)
    tmp = tmp // 10

  return num == rev
  
num = 12321
if (is_palindrome(num)):
  print(""Number is a palindrome"")
___
  print(""Number is not a palindrome"")"
Optimize the Python code snippet (below) for performance efficiency.,"def process_data(data):
    processed_data = []
    for item in data:
        if item % 10 == 0:
            processed_data.append(item)
    return processed_data","def process_data(data):
    processed_data = []
    for item in data:
        if (item % 10) == 0:
            processed_data.append(item)
    return processed_data

def process_data_fast(data):
    return [item for item in data if item % 10 == 0]",Control Structure,6105,"def process_data(data):
    processed_data = []
    for item in data:
        ___
            processed_data.append(item)
    return processed_data

def process_data_fast(data):
    return [item for item in data if item % 10 == 0]"
Create a python program for searching for a word in a text document.,"The quick brown fox jumped over the lazy dog
search: fox","import re

text = 'The quick brown fox jumped over the lazy dog'
search = 'fox'

result = re.findall(search, text)

if result:
    print('Found!');
else:
    print('Not Found!')",Control Structure,6139,"import re

text = 'The quick brown fox jumped over the lazy dog'
search = 'fox'

result = re.findall(search, text)

if result:
    print('Found!');
___
    print('Not Found!')"
Write a function in Python to check if an integer is prime or not.,37,"def is_prime(number):
  if number < 2:
    return False
  else:
    for x in range(2, number):
      if number % x == 0:
        return False
    return True

n = 37
print (is_prime(n)) # Output: True",Control Structure,6165,"def is_prime(number):
  if number < 2:
    return False
  ___
    for x in range(2, number):
      ___
        return False
    return True

n = 37
print (is_prime(n)) # Output: True"
Create a Python program to calculate the grade for a student.,"Maths = 85
English = 70
Science = 90","Maths = 85
English = 70
Science = 90

# Calculate the average 
average = (Maths + English + Science) / 3

# Check the grade
if average >= 80:
    grade = 'A'
elif average >= 70:
    grade = 'B'
elif average >= 60:
    grade = 'C'
elif average >= 50:
    grade = 'D'
else:
    grade = 'F'

# Print the grade
print(grade)",Control Structure,6244,"Maths = 85
English = 70
Science = 90

# Calculate the average 
average = (Maths + English + Science) / 3

# Check the grade
if average >= 80:
    grade = 'A'
elif average >= 70:
    grade = 'B'
elif average >= 60:
    grade = 'C'
elif average >= 50:
    grade = 'D'
___
    grade = 'F'

# Print the grade
print(grade)"
Create a Python program that prints out a message if a given number is divisible by 7.,num = 49,"num = 49

if num % 7 == 0:
    print(""The number %d is divisible by 7!"" %num)",Control Structure,6263,"num = 49

___
    print(""The number %d is divisible by 7!"" %num)"
Develop an algorithm using Python that determines if a number is a prime number or not.,12,"def is_prime(n):
    if n <= 1: 
        return False
    for i in range(2, n): 
        if n % i == 0: 
            return False
    return True",Control Structure,6290,"def is_prime(n):
    if n <= 1: 
        return False
    for i in range(2, n): 
        ___ 
            return False
    return True"
Optimize the following Python code for runtime and memory performance.,"def factorial(n):
    if n == 1:
        return 1
    else:
        return n * factorial(n-1)","def factorial(n):
    if n == 0:
        return 1

    res = 1
    for i in range(2, n+1):
        res *= i
    return res",Control Structure,6309,"def factorial(n):
    ___
        return 1

    res = 1
    for i in range(2, n+1):
        res *= i
    return res"
Create a Python function to check if a given number is abundant or not. An abundant number is a number which is less than the sum of its proper divisors.,number = 24,"def is_abundant(number):
    sum = 0
    for i in range(1, number):
        if number % i == 0:
            sum += i
    return sum > number",Control Structure,6317,"def is_abundant(number):
    sum = 0
    for i in range(1, number):
        ___
            sum += i
    return sum > number"
Create a program in Python for finding the greatest common divisor of two numbers.,"Number1: 20
Number2: 45","def gcd(a, b):
    while b != 0:
        temp = a
        a = b
        b = temp % b
    return a

print(gcd(20,45))",Control Structure,6330,"def gcd(a, b):
    ___
        temp = a
        a = b
        b = temp % b
    return a

print(gcd(20,45))"
Design an algorithm in Python for linear search.,"[3, 1, 5, 8], 8","def linear_search(arr, target):    
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1",Control Structure,6349,"def linear_search(arr, target):    
    for i in range(len(arr)):
        ___
            return i
    return -1"
Write a Python program for a program that checks if two strings are palindromes.,"Input strings: “radar”, “dad”","def is_palindrome(str1, str2):
 # Reverse str1
 reverse_str1 = str1[::-1]

 # Check if str1 is the same as the reversed version of str2
 if reverse_str1 == str2:
 return True
 else:
 return False

# Sample input
str1 = 'radar'
str2 = 'dad'

# Check if the strings are palindromes
print(is_palindrome(str1, str2)) # Output: True",Control Structure,6379,"def is_palindrome(str1, str2):
 # Reverse str1
 reverse_str1 = str1[::-1]

 # Check if str1 is the same as the reversed version of str2
 ___
 return True
 ___
 return False

# Sample input
str1 = 'radar'
str2 = 'dad'

# Check if the strings are palindromes
print(is_palindrome(str1, str2)) # Output: True"
Create a function in Python to determine if a number is divisible by another number.,"6, 3","def isDivisible(num1, num2):
    # check if num1 is divisible by num2
    if (num1 % num2) == 0:
        return True
    else:
        return False

num1 = 6
num2 = 3

result = isDivisible(num1, num2)
print(result)",Control Structure,6521,"def isDivisible(num1, num2):
    # check if num1 is divisible by num2
    ___
        return True
    ___
        return False

num1 = 6
num2 = 3

result = isDivisible(num1, num2)
print(result)"
Modify the following Python code for calculating the factorial of a number.,"def factorial(n):
    fact = 1
    for i in range(1,n+1):
        fact = fact*i
    return fact","def factorial(n):
    if n == 0:
        return 1
    else:
        fact = 1
        for i in range(1,n+1):
            fact = fact*i
        return fact",Control Structure,6575,"def factorial(n):
    ___
        return 1
    ___
        fact = 1
        for i in range(1,n+1):
            fact = fact*i
        return fact"
Construct a function in Python to compare the two given dictionaries and return true if both of them contains the same elements.,"dict1 = {'A':1, 'B':2, 'C':3 }
dict2 = {'A':1, 'C':3, 'B':2 }","def compare_dicts(dict1, dict2):
  # Iterate through keys in both dictionaries and compare values
  for key, value in dict1.items():
    if key not in dict2 or dict2[key] != value:
      return False
 
  # If all elements matched
  return True",Control Structure,6603,"def compare_dicts(dict1, dict2):
  # Iterate through keys in both dictionaries and compare values
  for key, value in dict1.items():
    ___
      return False
 
  # If all elements matched
  return True"
Write a Python program to compare two dictionaries to check if they are equal.,"d1 = {'a':1, 'b':2, 'c':3}
d2 = {'a':1, 'b':2, 'c':4}","def compare_dicts(dict1, dict2):
    if dict1 == dict2:
        return True
    return False

result = compare_dicts(d1, d2)
print(result)",Control Structure,6683,"def compare_dicts(dict1, dict2):
    ___
        return True
    return False

result = compare_dicts(d1, d2)
print(result)"
You need to write a Python program for computing the factorial of a number.,5,"def factorial(num):
    if num == 0:
        return 1
    else:
        return num * factorial(num - 1)

print(factorial(5))",Control Structure,6701,"def factorial(num):
    ___
        return 1
    ___
        return num * factorial(num - 1)

print(factorial(5))"
write a python program for its purpose,Compute the factorial of a given number,"""""""
Compute the factorial of a given number
""""""

def factorial(n): 
	if n == 1: 
		return 1
	else: 
		return n * factorial(n-1) 

if __name__ == '__main__': 
	num = int(input()) 
	print(factorial(num))",Control Structure,6707,"""""""
Compute the factorial of a given number
""""""

def factorial(n): 
	___ 
		return 1
	___ 
		return n * factorial(n-1) 

___ 
	num = int(input()) 
	print(factorial(num))"
Compare two strings to check if they are anagrams or not in Python.,"“silent”, “listen”","def is_anagram(w1, w2):
    # Check if lengths are equal
    if len(w1) == len(w2):
        # Sort the strings
        s1 = sorted(w1)
        s2 = sorted(w2)
        # Check if sorted strings are equal
        if s1 == s2:
            return True
    return False

# Example
w1 = ""silent""
w2 = ""listen""

print(is_anagram(w1, w2)) #Output: True",Control Structure,6710,"def is_anagram(w1, w2):
    # Check if lengths are equal
    ___
        # Sort the strings
        s1 = sorted(w1)
        s2 = sorted(w2)
        # Check if sorted strings are equal
        ___
            return True
    return False

# Example
w1 = ""silent""
w2 = ""listen""

print(is_anagram(w1, w2)) #Output: True"
Code up a web scraper in Python for a particular website.,The website is https://www.example.com,"import requests
from bs4 import BeautifulSoup

url = 'https://www.example.com'
page = requests.get(url)

soup = BeautifulSoup(page.text, 'html.parser')

all_divs = soup.find_all('div')

for div in all_divs:
    try:
        print(div['class'])
    except:
        print(div.text)",Control Structure,6722,"import requests
from bs4 import BeautifulSoup

url = 'https://www.example.com'
page = requests.get(url)

soup = BeautifulSoup(page.text, 'html.parser')

all_divs = soup.find_all('div')

for div in all_divs:
    ___
        print(div['class'])
    except:
        print(div.text)"
Develop a Python script for calculating the Fibonacci numbers for a given input.,8,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 

# Driver Program 
  
print(Fibonacci(8))",Control Structure,6729,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    ___ 
        return Fibonacci(n-1)+Fibonacci(n-2) 

# Driver Program 
  
print(Fibonacci(8))"
"Create a Python program that takes in a positive integer, then uses a while loop to output the numbers counting down to 1.",6,"num = int(input(""Enter a positive integer: ""))

while num > 0:
    print(num)
    num -= 1

print(""Done!"")",Control Structure,6736,"num = int(input(""Enter a positive integer: ""))

___
    print(num)
    num -= 1

print(""Done!"")"
Develop a Python Program to determine if two given strings are an anagram or not.,"string1 = ""abcd""
string2 = ""cbad""","def is_anagram(string1, string2):
    # check if strings have equal length 
    if len(string1) != len(string2): 
        return False 
    sorted1 = sorted(string1); 
    sorted2 = sorted(string2); 
    # check if sorted strings are the same 
    if sorted1 == sorted2:
        return True 
    return False",Control Structure,6867,"def is_anagram(string1, string2):
    # check if strings have equal length 
    if len(string1) != len(string2): 
        return False 
    sorted1 = sorted(string1); 
    sorted2 = sorted(string2); 
    # check if sorted strings are the same 
    ___
        return True 
    return False"
Write a Python program to compare two integers and prints if one is greater then another.,"int1=1, int2=2","# compare two integers
int1=1
int2=2
if int1 > int2:
    print(""int1 is greater than int2"")
elif int2 > int1:
    print(""int2 is greater than int1"")
else:
    print(""int1 and int2 are equal"")",Control Structure,6873,"# compare two integers
int1=1
int2=2
if int1 > int2:
    print(""int1 is greater than int2"")
elif int2 > int1:
    print(""int2 is greater than int1"")
___
    print(""int1 and int2 are equal"")"
Create functions in Python for validating if a number is prime or not.,n = 12,"def is_prime(n):
    if n == 1:
        return False
    for i in range(2,int(n**(1/2))+1):
        if n%i == 0:
            return False
    return True

if is_prime(12):
    print(""Prime"")
else:
    print(""Not Prime"")",Control Structure,6922,"def is_prime(n):
    ___
        return False
    for i in range(2,int(n**(1/2))+1):
        ___
            return False
    return True

if is_prime(12):
    print(""Prime"")
___
    print(""Not Prime"")"
Create an algorithm in Python for the classification of numbers into even or odd.,3,"def classifyNumber(num): 
    if num % 2 == 0: 
        return ""even""
    else: 
        return ""odd"" 
  
print(classifyNumber(3))",Control Structure,6930,"def classifyNumber(num): 
    ___ 
        return ""even""
    ___ 
        return ""odd"" 
  
print(classifyNumber(3))"
Write a Python program to check if it contains the specified substring.,"my_string = ""Hello World""","my_string = ""Hello World""
if ""World"" in my_string:
    print(""Yes, the specified substring is found."")
else:
    print(""No, the substring is not found."")",Control Structure,6956,"my_string = ""Hello World""
if ""World"" in my_string:
    print(""Yes, the specified substring is found."")
___
    print(""No, the substring is not found."")"
Create a Python program to check if two strings are anagrams.,"leg, gel","def is_anagram(s1, s2): 
    # Convert both strings to lower case 
    s1 = s1.lower() 
    s2 = s2.lower() 

    # Sort both strings 
    s1 = sorted(s1) 
    s2 = sorted(s2) 

    if s1 == s2: 
        return True 
    else: 
        return False",Control Structure,6989,"def is_anagram(s1, s2): 
    # Convert both strings to lower case 
    s1 = s1.lower() 
    s2 = s2.lower() 

    # Sort both strings 
    s1 = sorted(s1) 
    s2 = sorted(s2) 

    ___ 
        return True 
    ___ 
        return False"
Create a Python program to calculate the sum of the digits for a number that is provided as input.,num = 1234,"# Function to find the sum of digits
def sum_digits(num):
 # Variable to store the sum of digits
 sum = 0
 
 while num > 0:
  digit = num % 10
  sum = sum + digit
  num = num // 10
 
 return sum
 
num = 1234
sum = sum_digits(num)
print(""Sum of digits of %d is %d"" % (num, sum))
# Output: Sum of digits of 1234 is 10",Control Structure,7008,"# Function to find the sum of digits
def sum_digits(num):
 # Variable to store the sum of digits
 sum = 0
 
 ___
  digit = num % 10
  sum = sum + digit
  num = num // 10
 
 return sum
 
num = 1234
sum = sum_digits(num)
print(""Sum of digits of %d is %d"" % (num, sum))
# Output: Sum of digits of 1234 is 10"
"Write a Python program to calculate the sum of two given integers, if the two values are equal then return the triple of their sum.","2, 2","def calculate_sum(a, b):
    if a == b:
        return (a + b) * 3
    else:
        return a + b
    
a = 2
b = 2
result = calculate_sum(a, b)
print(result)",Control Structure,7037,"def calculate_sum(a, b):
    ___
        return (a + b) * 3
    ___
        return a + b
    
a = 2
b = 2
result = calculate_sum(a, b)
print(result)"
Generate a Python program which determines if a given number is divisible by 7,28,"def is_divisible_by_7(num):
    if num % 7 == 0:
        return True
    else:
        return False

result = is_divisible_by_7(28)
print(result)",Control Structure,7059,"def is_divisible_by_7(num):
    ___
        return True
    ___
        return False

result = is_divisible_by_7(28)
print(result)"
"Using a while loop, write a Python program to reverse a given sentence.","""Hello there my friend""","# Initialize an empty string 
revString = """"

# Set 'idx' to point to the end of the string 
idx = len(sent) - 1
 
# Iterate in reverse through the string 
while idx >= 0:
    # Append each individual character to the result string
    revString += sent[idx]
    # Decrement the index
    idx -= 1

# Output the reversed result
print(revString)",Control Structure,7126,"# Initialize an empty string 
revString = """"

# Set 'idx' to point to the end of the string 
idx = len(sent) - 1
 
# Iterate in reverse through the string 
___
    # Append each individual character to the result string
    revString += sent[idx]
    # Decrement the index
    idx -= 1

# Output the reversed result
print(revString)"
Write a Python program to determine if a number provided by the user is prime or not.,17,"# Ask the user for a number
num = int(input('Enter a number: '))

# Set initial values
is_prime = True

# Check for prime
for i in range(2, num):
 if num % i == 0:
 is_prime = False
 break

# Output result
if is_prime:
 print(f'{num} is a prime number.')
else:
 print(f'{num} is not a prime number.')",Control Structure,7164,"# Ask the user for a number
num = int(input('Enter a number: '))

# Set initial values
is_prime = True

# Check for prime
for i in range(2, num):
 ___
 is_prime = False
 ___

# Output result
if is_prime:
 print(f'{num} is a prime number.')
___
 print(f'{num} is not a prime number.')"
Write a Python program to check if two strings are isomorphic.,"s1 = ""foo"", s2 = ""app""","def is_isomorphic(s1, s2):
    if len(s1) != len(s2):
        return False

    s1_dict = dict()
    for i, char in enumerate(s1):
        if char in s1_dict:
            if s1_dict[char] != s2[i]:
                return False
        else:
            s1_dict[char] = s2[i]

    return True",Control Structure,7184,"def is_isomorphic(s1, s2):
    if len(s1) != len(s2):
        return False

    s1_dict = dict()
    for i, char in enumerate(s1):
        if char in s1_dict:
            if s1_dict[char] != s2[i]:
                return False
        ___
            s1_dict[char] = s2[i]

    return True"
Implement a python program to check if a number is powerful. A powerful number is one who has a power of 2 as any of its prime divisors.,number = 18,"def is_power(number):
    flag = False
    if number > 2:
        for i in range(2, number // 2 + 1):
            while number % i == 0:
                if number % (i ** 2) == 0:
                    flag = True
                number = number / i
    
    return flag

print(is_power(18))",Control Structure,7185,"def is_power(number):
    flag = False
    if number > 2:
        for i in range(2, number // 2 + 1):
            ___
                ___
                    flag = True
                number = number / i
    
    return flag

print(is_power(18))"
Write a Python code for converting a given sentence into pig latin.,The quick brown fox,"def convert_string_to_pig_latin(sentence):
    words = sentence.split()
    pig_latin_words = []
    for word in words:
        if word[0] in 'aeiou':
            pig_word = word + 'way'
        else:
            pig_word = word[1:] + word[0] + 'ay'
        pig_latin_words.append(pig_word)
    return ' '.join(pig_latin_words)",Control Structure,7188,"def convert_string_to_pig_latin(sentence):
    words = sentence.split()
    pig_latin_words = []
    for word in words:
        if word[0] in 'aeiou':
            pig_word = word + 'way'
        ___
            pig_word = word[1:] + word[0] + 'ay'
        pig_latin_words.append(pig_word)
    return ' '.join(pig_latin_words)"
Build a program in Python for finding the largest prime number in a given range.,1-100,"def largest_prime(num):
    largest_prime = 0
    for n in range (num):
        if(isPrime(n)):
            largest_prime = n
    return largest_prime

def isPrime(n):
    if(n == 1):
        return False
    elif(n == 2):
        return True
    else:
        for x in range(2,n//2+1):
            if(n % x == 0):
                return False
        return True

print(largest_prime(100))",Control Structure,7214,"def largest_prime(num):
    largest_prime = 0
    for n in range (num):
        if(isPrime(n)):
            largest_prime = n
    return largest_prime

def isPrime(n):
    if(n == 1):
        return False
    elif(n == 2):
        return True
    ___
        for x in range(2,n//2+1):
            if(n % x == 0):
                return False
        return True

print(largest_prime(100))"
Develop an algorithm in Python for solving the Tower of Hanoi problem.,Towers with 3 discs,"def hanoi(discs, source, aux, dest):
    if discs == 1:
        print (""Move disc 1 from {} to {}"".format(source, dest))
        return

    hanoi(discs-1, source, dest, aux)
    print (""Move disc {} from {} to {}"".format(discs, source, dest))
    hanoi(discs-1, aux, source, dest)

hanoi(3,'A', 'B', 'C')",Control Structure,7234,"def hanoi(discs, source, aux, dest):
    ___
        print (""Move disc 1 from {} to {}"".format(source, dest))
        return

    hanoi(discs-1, source, dest, aux)
    print (""Move disc {} from {} to {}"".format(discs, source, dest))
    hanoi(discs-1, aux, source, dest)

hanoi(3,'A', 'B', 'C')"
Create a python program to calculate Fibonacci sequence for a given number.,n = 8,"def fibonacci(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibonacci(n-1) + fibonacci(n-2)

if __name__ == '__main__':
    n = 8
    print(fibonacci(n))",Control Structure,7237,"def fibonacci(n):
    ___
        return 0
    el___
        return 1
    ___
        return fibonacci(n-1) + fibonacci(n-2)

___
    n = 8
    print(fibonacci(n))"
Develop a program in Python for converting a base 10 number to binary.,17,"def decimalToBinary(n):
    binary = 0
    power = 1
    
    while (n != 0):
        last_bit = n % 2
        binary = binary + last_bit * power
        n = n // 2
        power = power * 10
 
    return binary

n = 17
print('Binary Representation of', n, 'is', decimalToBinary(n))",Control Structure,7348,"def decimalToBinary(n):
    binary = 0
    power = 1
    
    ___
        last_bit = n % 2
        binary = binary + last_bit * power
        n = n // 2
        power = power * 10
 
    return binary

n = 17
print('Binary Representation of', n, 'is', decimalToBinary(n))"
Create a Python program to mark a character as asterisk (*) if it's the same as the previous one?,"test_string = ""SSSSSSSSSShellllllllllllooooooooo""","def mark_asterisk(input):
    res = """"
    temp = input[0]
    for char in input:
        if char == temp:
            res += '*'
        else:
            res += char
            temp = char
    return res",Control Structure,7354,"def mark_asterisk(input):
    res = """"
    temp = input[0]
    for char in input:
        ___
            res += '*'
        ___
            res += char
            temp = char
    return res"
Create a Python script to break the given sentence into words.,"sentence = ""This is an example sentence.""","def break_sentence(sentence):  
    return sentence.split("" "")",Control Structure,7402,"def ____sentence(sentence):  
    return sentence.split("" "")"
Generate a python program to determine if two objects are mutually exclusive or not.,"Input objects are ([1,2,3], [4,5,6]).","def mutually_exclusive(object1, object2):
    if len(object1.intersection(object2)) > 0:
        return False
    else:
        return True
    
object1 = set([1, 2, 3])
object2 = set([4, 5, 6])

result = mutually_exclusive(object1, object2)
print(result) # Outputs True as objects don't share elements.",Control Structure,7404,"def mutually_exclusive(object1, object2):
    if len(object1.intersection(object2)) > 0:
        return False
    ___
        return True
    
object1 = set([1, 2, 3])
object2 = set([4, 5, 6])

result = mutually_exclusive(object1, object2)
print(result) # Outputs True as objects don't share elements."
Design a Python function to check if two given strings are anagrams or not.,"""abc"", ""cab""","def check_anagram(str1, str2):
 
    if sorted(str1) == sorted(str2):
        return True
    else:
        return False",Control Structure,7405,"def check_anagram(str1, str2):
 
    ___
        return True
    ___
        return False"
Compose a function in Python to check if a given number is a power of two.,10,"def is_power_two(num):
    if num == 0:
        return False
    
    while num != 1:
        if num % 2 != 0:
            return False
        num = num // 2
    return True",Control Structure,7438,"def is_power_two(num):
    ___
        return False
    
    ___
        if num % 2 != 0:
            return False
        num = num // 2
    return True"
Create a Python script to detect if a number is prime.,10,"def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, n):
        if n % i == 0:
            return False
    return True

if __name__ == ""__main__"":
    n = 10
    if is_prime(n):
        print(""{} is a prime number"".format(n))
    else:
        print(""{} is not a prime number"".format(n))",Control Structure,7511,"def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, n):
        ___
            return False
    return True

___
    n = 10
    if is_prime(n):
        print(""{} is a prime number"".format(n))
    ___
        print(""{} is not a prime number"".format(n))"
Construct an algorithm for factoring a large number in Python.,Number = 600851475143,"def get_factor(n):
    factors = []
   
    for i in range(2, n + 1):
        if n % i == 0:
            factors.append(i)
            n //= i
    return factors

number = 600851475143
print(get_factor(number))",Control Structure,7525,"def get_factor(n):
    factors = []
   
    for i in range(2, n + 1):
        ___
            factors.append(i)
            n //= i
    return factors

number = 600851475143
print(get_factor(number))"
Design an algorithm in Python for finding and printing all prime numbers between 1 and a given number.,100,"def find_all_primes(n): 
  for num in range(2,n + 1):
    for i in range(2,num):
      if (num % i) == 0:
        break 
    else:
      print(num)

find_all_primes(100)",Control Structure,7556,"def find_all_primes(n): 
  for num in range(2,n + 1):
    for i in range(2,num):
      ___
        ___
    ___
      print(num)

find_all_primes(100)"
