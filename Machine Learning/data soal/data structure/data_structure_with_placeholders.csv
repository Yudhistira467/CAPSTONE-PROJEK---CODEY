Instruction,Input,Output,materi,question_id,Template
Create a function in Python which takes a list of numbers and returns the sum of squares of those numbers.,"[3, 4, 5]","def sum_squares(nums):
    result = 0
    for num in nums:
        result += num*num
    
    return result

nums = [3, 4, 5]

result = sum_squares(nums)
print(result)",Data Structure,0,"def sum_squares___:
    result = 0
    for num in nums:
        result += num*num
    
    return result

nums = ___

result = sum_squares___
print___"
Design a function in Python that sorts a list of strings in alphabetical order.,"['red', 'green', 'orange']","def sort_list_alphabetically(input_list): 
    output_list = sorted(input_list) 
    return output_list 
  
input_list = ['red', 'green', 'orange']
sorted_list = sort_list_alphabetically(input_list) 
print(""Sorted List in Alphabetical Order:"", sorted_list)",Data Structure,1,"def sort_list_alphabetically___: 
    output_list = sorted___ 
    return output_list 
  
input_list = ['red', 'green', 'orange']
sorted_list = sort_list_alphabetically___ 
print___"
Create a Python algorithm to calculate the target sums of all elements in a given list with a given value,"subtrahend: 10
list: [4, 3, 8, 6, 5]","def target_sum(subtrahend, lst):
    target_sums = []
    for num in lst:
        target_sums.append(subtrahend - num)
    return target_sums",Data Structure,4,"def target_sum___:
    target_sums = []
    for num in lst:
        target_sums___subtrahend - num)
    return target_sums"
Create a Python program to sort a list of tuples according to the third element in the tuple.,"[(21, ""ABC"", 33), (9, ""XYZ"", 88), (67, ""MNO"", 37)]","def sort_tuple_list(tuple_list):
    sorted_tuple_list = sorted(tuple_list, key=lambda x: x[2])
    print(sorted_tuple_list)

tuple_list = [(21, ""ABC"", 33), (9, ""XYZ"", 88), (67, ""MNO"", 37)]
sort_tuple_list(tuple_list)",Data Structure,7,"def sort_tuple_list___:
    sorted_tuple_list = sorted___
    print___

tuple_list = [___, ___, ___]
sort_tuple_list___"
Please generate a Python script that calculates the mean of a given array of numbers.,"[4, 9, 3, 5]","def calculateMean(array):
    # sum up all elements in the array
    mean = 0
    for i in range(len(array)):
        mean += array[i]
    # calculate the mean by dividing the sum by number of elements
    mean /= len(array)
    return mean

array = [4, 9, 3, 5]
mean = calculateMean(array)
print(mean)",Data Structure,8,"def calculateMean___:
    # sum up all elements in the array
    mean = 0
    for i in range___):
        mean += array[i]
    # calculate the mean by dividing the sum by number of elements
    mean /= len___
    return mean

array = ___
mean = calculateMean___
print___"
Create an algorithm in Python to find the first index of an item in an array.,"arr = [1,3,7,9,0,4]
num = 7","def findIndex(arr, num):
    for index in range(len(arr)):
        if arr[index] == num:
            return index
    return -1

arr = [1,3,7,9,0,4]
num = 7
index = findIndex(arr, num)
print('Index of %d is %d' % (num, index)) # Index of 7 is 2",Data Structure,13,"def findIndex___:
    for index in range___):
        if arr[index] == num:
            return index
    return -1

arr = ___
num = 7
index = findIndex___
print___) # Index of 7 is 2"
Suggest a way to randomize the order of the following list using Python.,"array = [1, 2, 3, 4, 5, 6]","import random
array = [1, 2, 3, 4, 5, 6]
random.shuffle(array)  # shuffle list in-place using a random permutation",Data Structure,15,"import random
array = ___
random.shuffle___  # shuffle list in-place using a random permutation"
Generate a correct Python program to take two lists as input and combine them into a 3rd list.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","def combine_lists(list1, list2):
    output = list1 + list2
    return output

combined_list = combine_lists(list1, list2)
print(combined_list)",Data Structure,16,"def combine_lists___:
    output = list1 + list2
    return output

combined_list = combine_lists___
print___"
Create a python function that can receive a list of integers and return a list of tuples with consecutive numbers.,"[1, 2, 3, 7, 8, 9, 10]","def get_consecutive(arr):
    result = []
    i = 0
    while i < len(arr):
        s = i
        while (i + 1 < len(arr)) and (arr[i + 1] == arr[i] + 1):
            i += 1
        result.append((arr[s], arr[i]))
        i += 1
    return result

# Test 
arr = [1, 2, 3, 7, 8, 9, 10]
print(get_consecutive(arr))
# Output [(1, 3), (7, 10)]",Data Structure,17,"def get_consecutive___:
    result = []
    i = 0
    while i < len___:
        s = i
        while ___) and ___:
            i += 1
        result___(arr[s], arr[i]))
        i += 1
    return result

# Test 
arr = ___
print___)
# Output [___, ___]"
Write a Python program to remove an item from a list whose index is specified.,"list = ['Apple', 'Orange', 'Banana', 'Mango']","def removeSpecifiedIndex(list, index): 
  # using list comprehension 
  new_list = [list[i] for i in range(len(list)) if i != index]  

  return new_list 

list = ['Apple', 'Orange', 'Banana', 'Mango']  
index = 2

print(removeSpecifiedIndex(list, index))",Data Structure,19,"def removeSpecifiedIndex___: 
  # using list comprehension 
  new_list = [list[i] for i in range___) if i != index]  

  return new_list 

list = ['Apple', 'Orange', 'Banana', 'Mango']  
index = 2

print___)"
Construct a Python program that calculates the sum of all the items in a given list.,"[1, 4, 2, 5, 9]","def sumoflist(list): 
  sum = 0
  for i in range(0, len(list)): 
    sum = sum + list[i] 
  
  return sum

list1 = [1, 4, 2, 5, 9] 
print(sumoflist(list1))",Data Structure,27,"def sumoflist___: 
  sum = 0
  for i in range___): 
    sum = sum + list[i] 
  
  return sum

list1 = ___ 
print___)"
Write a function in Python that takes an array of integers and its size as parameters and returns the maximum value in the array.,"arr = [1, 6, 8, 4, 9, 6, 10]
n = len(arr)","def findMax(arr, n):
 # Initializing max with first element of array
 max = arr[0]

 # Starting loop from second element
 for i in range(1, n):
 # Comparing max with remaining elements of array
 if arr[i] > max:
 max = arr[i]

 # Returning maximum
 return max",Data Structure,28,"def findMax___:
 # Initializing max with first element of array
 max = arr___

 # Starting loop from second element
 for i in range___:
 # Comparing max with remaining elements of array
 if arr[i] > max:
 max = arr[i]

 # Returning maximum
 return max"
Create a program in Python to convert an array of integers to an array of binary numbers.,"[2,4,7]","def int_to_bin(arr):
   binary = []
   for num in arr:
       binary.append(bin(num))
   return binary

arr = [2,4,7]
bin_arr = int_to_bin(arr)
print(bin_arr)",Data Structure,29,"def int_to_bin___:
   binary = []
   for num in arr:
       binary___bin(num))
   return binary

arr = ___
bin_arr = int_to_bin___
print___"
Generate a function in Python to filter a given list and keep only the numeric items in the list.,"input_list = [4, 2, 1, 15.6, 'p', 'y', 5.8]","def filter_numeric(input_list): 
    
    num_list = [] 
  
    for item in input_list:
        if type(item) == int or type(item) == float: 
            num_list.append(item) 
   
    return num_list 
  
input_list = [4, 2, 1, 15.6, 'p', 'y', 5.8] 
print(filter_numeric(input_list)) 
#Output: [4, 2, 1, 15.6, 5.8]",Data Structure,30,"def filter_numeric___: 
    
    num_list = [] 
  
    for item in input_list:
        if type___ == int or type___ == float: 
            num_list___item) 
   
    return num_list 
  
input_list = [4, 2, 1, 15.6, 'p', 'y', 5.8] 
print___) 
#Output: [4, 2, 1, 15.6, 5.8]"
Create an algorithm to determine if two strings have the same character set in Python.,"Strings: ""paris"" and ""sapir""","def same_charset(str1, str2):
	
	str1 = sorted(str1) 
	str2 = sorted(str2)
 
	if(str1 == str2):
		return True
	else:
		return False",Data Structure,31,"def same_charset___:
	
	str1 = sorted___ 
	str2 = sorted___
 
	if___:
		return True
	else:
		return False"
Design a Python script to nested loop iterate the following list of lists.,"arr = [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]","for outer in arr:
   for inner in outer:
       print(inner)",Data Structure,33,"for outer in arr:
   for inner in outer:
       print___"
Write a function in Python that computes the average of all numbers in a given list.,"numbers = [4, 8, 6, 2, 10]","def compute_average(numbers):
  total = 0
  for num in numbers:
    total += num
  return total / len(numbers)

average = compute_average(numbers)
print(average)  # Outputs 6",Data Structure,36,"def compute_average___:
  total = 0
  for num in numbers:
    total += num
  return total / len___

average = compute_average___
print___  # Outputs 6"
Create a Python program to multiply all of the values in a given list,"[2, 3, 4]","def multiply_list(lst):
    result = 1
    for i in lst:
        result *= i
    return result",Data Structure,38,"def multiply_list___:
    result = 1
    for i in lst:
        result *= i
    return result"
Write a python program to reverses a list while preserving the order of the elements,"lst = [1,2,3,4,5]","lst.reverse()
print(lst)  #output: [5,4,3,2,1]",Data Structure,43,"lst.reverse()
print___  #output: [5,4,3,2,1]"
Create an algorithm using Python to find the largest number in a list.,"[8, 5, 10, 3]","def find_largest_number(numbers):
    # Finds the largest number from the given list
    largest = 0
    for num in numbers:
        if num > largest:
            largest = num
    return largest
 
numbers = [8, 5, 10, 3]
largest = find_largest_number(numbers)
print(largest)",Data Structure,44,"def find_largest_number___:
    # Finds the largest number from the given list
    largest = 0
    for num in numbers:
        if num > largest:
            largest = num
    return largest
 
numbers = ___
largest = find_largest_number___
print___"
Create a program in Python to sort a given unsorted list.,"[5, 4, 1, 8, 9, 2]","def sortList(lst): 
    lst.sort() 
    return lst
  
ar_list = [5, 4, 1, 8, 9, 2]
result = sortList(ar_list) 
  
print(result)",Data Structure,48,"def sortList___: 
    lst.sort() 
    return lst
  
ar_list = ___
result = sortList___ 
  
print___"
Calculate the average grade of a student given a list of their grades in Python.,"grades = [90, 85, 80, 75, 70]","def calculate_average_grade(grades): 
 total = 0
 for grade in grades: 
 total += grade 
 avg_grade = total / len(grades) 
 return avg_grade 

grades = [90, 85, 80, 75, 70] 
avg_grade = calculate_average_grade(grades) 
print('Average Grade: ', avg_grade) # Output: Average Grade: 80.0",Data Structure,49,"def calculate_average_grade___: 
 total = 0
 for grade in grades: 
 total += grade 
 avg_grade = total / len___ 
 return avg_grade 

grades = ___ 
avg_grade = calculate_average_grade___ 
print___ # Output: Average Grade: 80.0"
Design a sorting algorithm in Python that will sort a given array of numbers in ascending order.,"[5, 9, 4, 2, 6]","def sort(nums):
    for i in range(len(nums)):
        min_ind = i
        for j in range(i+1, len(nums)):
            if nums[j] < nums[min_ind]:
                min_ind = j
        nums[i], nums[min_ind] = nums[min_ind], nums[i]
    return nums",Data Structure,53,"def sort___:
    for i in range___):
        min_ind = i
        for j in range___):
            if nums[j] < nums[min_ind]:
                min_ind = j
        nums[i], nums[min_ind] = nums[min_ind], nums[i]
    return nums"
Generate a Python program to copy all elements of one list into another list.,"source = [0, 1, 2]","source = [0, 1, 2]
 
dest = []
 
for item in source:
    dest.append(item)
    
print(dest)",Data Structure,62,"source = ___
 
dest = []
 
for item in source:
    dest___item)
    
print___"
Create a Python program that takes in a list and returns a new list. The program should subtract 10 from every element in the list.,"list = [1,2,3,4,5]","def subtractFromList(list): 
 return [x - 10 for x in list]",Data Structure,66,"def subtractFromList___: 
 return [x - 10 for x in list]"
Create a python code that takes in a sentence and returns a list containing the length of each word.,"sentence = ""Hello I am a sentence""",sentence_lengths = [len(word) for word in sentence.split()],Data Structure,67,sentence_lengths = [len___ for word in sentence.split()]
Write a Python program to implement Linear Search for an array of numbers,"arr = [2, 3, 5, 7, 11]
n = 11","def LinearSearch(arr, n):
 for i in range(len(arr)):
 if arr[i] == n:
 return i
 return -1

index = LinearSearch(arr, n)
print(index)",Data Structure,68,"def LinearSearch___:
 for i in range___):
 if arr[i] == n:
 return i
 return -1

index = LinearSearch___
print___"
Create a function in Python that takes two parameters: a list of numbers and a number called ‘n’ and returns the last n numbers in the list.,"myList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
n = 3","def last_n_numbers(myList, n):
  return myList[-n:]
  
res = last_n_numbers(myList, n)
print(res) 

# Output
[8, 9, 10]",Data Structure,70,"def last_n_numbers___:
  return myList[-n:]
  
res = last_n_numbers___
print___ 

# Output
___"
Create a function that computes an array of odd numbers within a given range,an integer n,"# Python3 program to find odd numbers in a range  

def odd_numbers(n): 
    odd_numbers = [] 
      
    # looping through each number 
    for i in range(1, n + 1): 
        if i % 2 != 0: 
            odd_numbers.append(i) 
    return odd_numbers",Data Structure,74,"# Python3 program to find odd numbers in a range  

def odd_numbers___: 
    odd_numbers = [] 
      
    # looping through each number 
    for i in range___: 
        if i % 2 != 0: 
            odd_numbers___i) 
    return odd_numbers"
Implement a search algorithm in Python to look for the value in the list.,"list_tmp = [1, 23, 42, 5, 7, 34, 89]
value = 42","def search(list_tmp, value): 
    for index, item in enumerate(list_tmp): 
        if item == value: 
            return index 

    return -1",Data Structure,75,"def search___: 
    for index, item in enumerate___: 
        if item == value: 
            return index 

    return -1"
Write a Python program to create a function that receives a list of strings and returns a new list with the strings sorted according to their length.,"[""Python"", ""is"", ""a"", ""programming"", ""language""]","def sort_list_by_length(list_of_strings):
    return sorted(list_of_strings, key=len) 

list_of_strings = [""Python"", ""is"", ""a"", ""programming"", ""language""]
sorted_list = sort_list_by_length(list_of_strings) 

print(sorted_list)",Data Structure,82,"def sort_list_by_length___:
    return sorted___ 

list_of_strings = [""Python"", ""is"", ""a"", ""programming"", ""language""]
sorted_list = sort_list_by_length___ 

print___"
Create a Python program to find the intersection of two given array. The intersected elements should be the elements present in both the arrays.,"Array 1: [3, 5, 2, 8, 1], Array 2: [5, 8, 9, 7]","def intersection(array_1, array_2): 
    result = [] 
    for num in array_1: 
        if num in array_2: 
            result.append(num) 
    return result",Data Structure,86,"def intersection___: 
    result = [] 
    for num in array_1: 
        if num in array_2: 
            result___num) 
    return result"
Generate a Python function that takes an array of elements and finds the frequency of each element,"[1,4,1,4,4,4,9,7]","def count_frequency(l):
    frequencies = {}
    for i in l:
        if i in frequencies:
            frequencies[i] += 1
        else:
            frequencies[i] = 1
    return frequencies

l = [1,4,1,4,4,4,9,7]
print(count_frequency(l))",Data Structure,87,"def count_frequency___:
    frequencies = {}
    for i in l:
        if i in frequencies:
            frequencies[i] += 1
        else:
            frequencies[i] = 1
    return frequencies

l = ___
print___)"
Design a function in Python for filtering out unique elements in a list.,"list = [1, 2, 2, 3, 3, 4]","def filter_list(list): 
  filtered_list = [] 

  for i in list: 
    if i not in filtered_list: 
      filtered_list.append(i) 
  
  return filtered_list",Data Structure,89,"def filter_list___: 
  filtered_list = [] 

  for i in list: 
    if i not in filtered_list: 
      filtered_list___i) 
  
  return filtered_list"
Write a function in Python for sorting a list of objects by an attribute 'name'.,"list_of_objects = [{""name"": ""John"", ""age"": 35}, {""name"": ""Liz"", ""age"": 25}, {""name"": ""Max"", ""age"": 28}]","def sort_by_name(lst): 
    return sorted(lst, key=lambda item: item[""name""])",Data Structure,91,"def sort_by_name___: 
    return sorted___"
Create a Python function that sorts a list of strings alphabetically,"[‘apple’,’orange’,’pear’]","def sort_strings(list_of_strings):
    sorted_list = sorted(list_of_strings, key=lambda str: str.lower())
    return sorted_list

result = sort_strings(['apple', 'orange', 'pear'])
print(result)",Data Structure,92,"def sort_strings___:
    sorted_list = sorted___)
    return sorted_list

result = sort_strings___
print___"
Write code in Python to calculate the mean for a given list of numbers.,"[4, 17, 12, 78, 43, 13, 94, 77]","import numpy as np 

# given list of numbers 
list = [4, 17, 12, 78, 43, 13, 94, 77] 

# calculating mean 
mean = np.mean(list) 

# printing mean 
print(""Mean:"", mean)",Data Structure,95,"import numpy as np 

# given list of numbers 
list = ___ 

# calculating mean 
mean = np.mean___ 

# printing mean 
print___"
Create a Python function that takes a positive integer as input and returns a list of its prime factors.,The number 12.,"def prime_factors(number):
 prime_factors = []
 i = 2
 while number > 1:
  if number % i == 0:
   prime_factors.append(i)
   number //= i
  else:
   i += 1
 return prime_factors

print(prime_factors(12))
# [2, 2, 3]",Data Structure,97,"def prime_factors___:
 prime_factors = []
 i = 2
 while number > 1:
  if number % i == 0:
   prime_factors___i)
   number //= i
  else:
   i += 1
 return prime_factors

print___)
# ___"
"Write a Python program to keep track of an array of prices, and output the maximum and minimum price in the array.","[20, 40, 60, 5]","prices = [20, 40, 60, 5]

max_price = max(prices)
min_price = min(prices)

print('Max price is: ' + str(max_price))
print('Min price is: ' + str(min_price))",Data Structure,98,"prices = ___

max_price = max___
min_price = min___

print___)
print___)"
"Given a Python list, create a new list of all items in the first list that are not in the second list.","first_list = [1, 2, 3, 4, 5]
second_list = [3, 4]","first_list = [1, 2, 3, 4, 5]
second_list = [3, 4]

new_list = []

for item in first_list:
    if item not in second_list:
        new_list.append(item)
        
print(new_list) # [1, 2, 5]",Data Structure,100,"first_list = ___
second_list = ___

new_list = []

for item in first_list:
    if item not in second_list:
        new_list___item)
        
print___ # [1, 2, 5]"
"Given a list of numbers, write a Python program to calculate the median.","[3, 4, 5, 9, 12, 15]","def median(nums):
    nums.sort()
    n = len(nums)
    if n % 2 == 0:
        return (nums[n//2] + nums[(n//2) - 1]) / 2
    return nums[n//2]

nums = [3, 4, 5, 9, 12, 15]
print(median(nums))",Data Structure,102,"def median___:
    nums.sort()
    n = len___
    if n % 2 == 0:
        return ___ - 1]) / 2
    return nums[n//2]

nums = ___
print___)"
Write a Python program for computing the sum of a given array of integers.,"[1, 2, 3, 4, 5]","def compute_sum(int_arry):
    sum = 0
    # loop through each element in the array
    for i in int_arry:
        sum += i
    return sum

# example testing code
int_arry = [1, 2, 3, 4, 5]
total_sum = compute_sum(int_arry)

print(""Sum of array elements is"", total_sum)",Data Structure,111,"def compute_sum___:
    sum = 0
    # loop through each element in the array
    for i in int_arry:
        sum += i
    return sum

# example testing code
int_arry = ___
total_sum = compute_sum___

print___"
Write a Python program to take a list of words and create a dictionary with the words as keys and the frequency of each word as the values.,"words = ['a', 'b', 'a', 'c', 'b', 'a', 'd']","words_dict = {}
for word in words:
    if word in words_dict:
        words_dict[word] += 1
    else:
        words_dict[word] = 1

print(words_dict)

# Output
# {'a': 3, 'b': 2, 'c': 1, 'd': 1}",Data Structure,113,"words_dict = {}
for word in words:
    if word in words_dict:
        words_dict[word] += 1
    else:
        words_dict[word] = 1

print___

# Output
# ___"
"In Python, write a script to sort the list items in descending order.","list_items = [3, 7, 5, 8, 10]","list_items = [3, 7, 5, 8, 10]

list_items.sort(reverse=True)

print(list_items) # Output: [10, 8, 7, 5, 3]",Data Structure,116,"list_items = ___

list_items.sort___

print___ # Output: [10, 8, 7, 5, 3]"
Write a Python program to sort a list of dictionaries by a key in each dictionary.,"my_list = [{'name': 'Tom', 'age': 25}, {'name': 'John', 'age': 21}, {'name': 'Adam', 'age': 26}]","def sort_list_of_dicts_by_key(my_list, key):
    return sorted(my_list, key=lambda k: k[key])",Data Structure,120,"def sort_list_of_dicts_by_key___:
    return sorted___"
"Create a Python script that takes a sentence as an input, separates all the words into a list and prints them in alphabetical order.",This is an example sentence,"input_sentence = ""This is an example sentence""
words = input_sentence.split()
words.sort()

print(words) # ['an', 'example', 'is', 'sentence', 'This']",Data Structure,121,"input_sentence = ""This is an example sentence""
words = input_sentence.split()
words.sort()

print___ # ['an', 'example', 'is', 'sentence', 'This']"
"Generate a function in Python which takes an array as an argument and returns an array of length two, with the first element being the maximum value and the second element being the minimum value of the array.","[1, 5, 7, 3, 9]","def minmax(array):
  max_val = max(array)
  min_val = min(array)
  return [max_val, min_val]",Data Structure,122,"def minmax___:
  max_val = max___
  min_val = min___
  return [max_val, min_val]"
Write a python script that takes a list of numbers from 1 to 8  and prints its cubic values.,"[1, 2, 3, 4, 5, 6, 7, 8]","list_numbers = [1, 2, 3, 4, 5, 6, 7, 8]

for num in list_numbers:
    print(num**3)",Data Structure,129,"list_numbers = ___

for num in list_numbers:
    print___"
Generate a Python program using a list comprehension that takes a 2D list of integers and computes the sum of integers at each row.,"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]","total_row_sum = [sum(row) for row in [[1, 2, 3], [4, 5, 6], [7, 8, 9]]]

print(total_row_sum)",Data Structure,131,"total_row_sum = [sum___ for row in [[1, 2, 3], [4, 5, 6], [7, 8, 9]]]

print___"
Create a Python program to copy elements of one array into another array.,"Array 1=[1,2,3,4]","array_1 = [1,2,3,4] 
array_2 = [] 
  
# Copying all the elements 
for i in range(0, len(array_1)): 
    array_2.append(array_1[i]) 
     
print (""Elements Copied from the Array1 to Array2 are : "" + str(array_2))",Data Structure,136,"array_1 = ___ 
array_2 = [] 
  
# Copying all the elements 
for i in range___): 
    array_2___array_1[i]) 
     
print ___)"
Generate Python code to get the maximum element in a list.,"List of integers [7, 2, 3, 6, 5]","list = [7, 2, 3, 6, 5]
print(""Max element is:"", max(list))",Data Structure,152,"list = ___
print___)"
Create a Python program that will take a list of numbers and identify if any of the numbers are multiples of three.,"numbers = [2, 7, 8, 15, 24]","for number in numbers:
 if number % 3 == 0:
  print(f'{number} is a multiple of 3')
 else:
  print(f'{number} is not a multiple of 3')

# Output:
# 2 is not a multiple of 3
# 7 is not a multiple of 3
# 8 is not a multiple of 3
# 15 is a multiple of 3
# 24 is a multiple of 3",Data Structure,153,"for number in numbers:
 if number % 3 == 0:
  print(f'___ is a multiple of 3')
 else:
  print(f'___ is not a multiple of 3')

# Output:
# 2 is not a multiple of 3
# 7 is not a multiple of 3
# 8 is not a multiple of 3
# 15 is a multiple of 3
# 24 is a multiple of 3"
Generate a list of fibonacci numbers using iterative function in Python.,n=10,"def generate_fibonacci_numbers(n):
    # Initialize variables
    a = 0
    b = 1

    # Iterate and calculate fibonacci numbers
    fib_list = [a]
    for i in range(1, n):
        c = a + b
        fib_list.append(c)
        a = b
        b = c
    return fib_list
    
if __name__ == '__main__':
    print(generate_fibonacci_numbers(10))",Data Structure,154,"def generate_fibonacci_numbers___:
    # Initialize variables
    a = 0
    b = 1

    # Iterate and calculate fibonacci numbers
    fib_list = [a]
    for i in range___:
        c = a + b
        fib_list___c)
        a = b
        b = c
    return fib_list
    
if __name__ == '__main__':
    print___)"
Convert a given list into a list of tuples using Python.,"list = [1, 2, 3, 4, 5]","def listToTuple(list):
 tupleList = []
 for element in list:
  tupleList.append((element,))
 return tupleList

print(listToTuple(list))",Data Structure,156,"def listToTuple___:
 tupleList = []
 for element in list:
  tupleList___(element,))
 return tupleList

print___)"
"Using the given input, write a Python program that prints the maximum number from the list.","[1, 5, 8, 3, 10]","mylist = [1, 5, 8, 3, 10]

print(max(mylist))",Data Structure,167,"mylist = ___

print___)"
Write a Python program to edit a list given some criteria.,"list = [5, 6, 2, 8, 11]
criteria = lambda x: x % 2 == 0","def edit_list(list, criteria):
    return [x for x in list if criteria(x) == True]",Data Structure,169,"def edit_list___:
    return [x for x in list if criteria___ == True]"
Develop a Python script to search for a specific element in a given list.,"arr = [2, 3, 4, 5, 6, 7]
x = 5","def search_element(arr, x):
    for i in range(len(arr)):
        if arr[i] == x:
            return i 

    return -1",Data Structure,170,"def search_element___:
    for i in range___):
        if arr[i] == x:
            return i 

    return -1"
Generate a python code to sum the elements in the given array.,"arr = [1, 2, 3, 4, 5]","def sum_array(arr):
    total = 0
    for num in arr:
        total += num
    return total

sum_array(arr)",Data Structure,173,"def sum_array___:
    total = 0
    for num in arr:
        total += num
    return total

sum_array___"
Generate a list of output values by multiplying the input values from two array in Python.,"[1, 2, 3] and [4, 5, 6]","array1 = [1, 2, 3]
array2 = [4, 5, 6]

output = [val1 * val2 for val1, val2 in zip(array1, array2)] 
print(output)

# Output 
[4, 10, 18]",Data Structure,175,"array1 = ___
array2 = ___

output = [val1 * val2 for val1, val2 in zip___] 
print___

# Output 
___"
Write a Python program to generate a random name from a set of given names.,"['John', 'Andy', 'Alex', 'Paul', 'Pippa']","import random

names = [""John"", ""Andy"", ""Alex"", ""Paul"", ""Pippa""]

def getRandomName(names):
    randomIndex = random.randint(0, len(names)-1) 
    return names[randomIndex]

if __name__ == '__main__':
    print(getRandomName(names))",Data Structure,176,"import random

names = [""John"", ""Andy"", ""Alex"", ""Paul"", ""Pippa""]

def getRandomName___:
    randomIndex = random.randint___-1) 
    return names[randomIndex]

if __name__ == '__main__':
    print___)"
Write a Python program to remove a specified item from an array.,"arr = [1,2,3,4]","def remove_item(arr, item):
    return [i for i in arr if i != item]

arr = [1,2,3,4]
new_arr = remove_item(arr, 3)
print(new_arr)",Data Structure,181,"def remove_item___:
    return [i for i in arr if i != item]

arr = ___
new_arr = remove_item___
print___"
Hack a Python program to apply a filter to a list of numbers and output the numbers greater than 5.,"List of numbers: [1, 5, 6, 3, 8]","numbers = [1, 5, 6, 3, 8]

filtered_numbers = []

for number in numbers:
  if number > 5:
    filtered_numbers.append(number)

print(filtered_numbers) # output: [6, 8]",Data Structure,184,"numbers = ___

filtered_numbers = []

for number in numbers:
  if number > 5:
    filtered_numbers___number)

print___ # output: [6, 8]"
Write a function in Python which takes a list of numbers as input and outputs a list with each element multiplied by two.,"[3, 5, 8, 9]","def list_multiplication(nums):
    output_list = []
    for i in range(len(nums)):
        output_list.append(nums[i] * 2)
    return output_list",Data Structure,191,"def list_multiplication___:
    output_list = []
    for i in range___):
        output_list___nums[i] * 2)
    return output_list"
Create a function in Python that shuffles the order of the items in a list.,"[1,2,3,4,5]","import random 
  
def shuffle_list(arr): 
      
    # Shuffle given list 
    random.shuffle(arr) 
    return arr 
  
# Driver function 
arr = [1,2,3,4,5]

print(""Initial list: \n"",arr)
print(""\nFinal list: \n"",shuffle_list(arr))",Data Structure,192,"import random 
  
def shuffle_list___: 
      
    # Shuffle given list 
    random.shuffle___ 
    return arr 
  
# Driver function 
arr = ___

print___
print___)"
Write a python program to find the sum of squares of all numbers in a set,"Set: {1, 2, 3}","def sum_squares(s):
    total = 0
    for x in s:
        total += x * x
    return total",Data Structure,196,"def sum_squares___:
    total = 0
    for x in s:
        total += x * x
    return total"
Design a Python program to implement a search engine that searches for a specific keyword in a given set of text documents.,"[text documents, keyword]","def search_engine(documents, keyword):
    # Create an index of the documents
    index = create_index(documents)
    # Search the index for the keyword
    search_result = search(index, keyword)
    # Return the search result
    return search_result",Data Structure,198,"def search_engine___:
    # Create an index of the documents
    index = create_index___
    # Search the index for the keyword
    search_result = search___
    # Return the search result
    return search_result"
Suggest a completion for the following Python code to sort a given list of dictionaries by a given key.,"my_list = [{'name': 'Bob', 'age': 20}, {'name': 'Alice', 'age': 10}]","def sort_dicts(my_list, key):
    return sorted(my_list, key=lambda x: x[key])

# Main
if __name__ == ""__main__"":
    my_list = [{'name': 'Bob', 'age': 20}, {'name': 'Alice', 'age': 10}]
    key = 'age'
    print(sort_dicts(my_list, key))  # [{'name': 'Alice', 'age': 10}, {'name': 'Bob', 'age': 20}]",Data Structure,204,"def sort_dicts___:
    return sorted___

# Main
if __name__ == ""__main__"":
    my_list = [___, ___]
    key = 'age'
    print(sort_dicts(my_list, key))  # [___, ___]"
Create a python program that takes a list of numbers and returns the sum of all the numbers in the list.,"[1, 2, 3, 4, 5]","def sum_list(list_of_numbers):
  total = 0
  for num in list_of_numbers:
    total += num
  return total
  
# Main
nums = [1, 2, 3, 4, 5]
total_sum = sum_list(nums)

print('Sum of list elements: ', total_sum)",Data Structure,205,"def sum_list___:
  total = 0
  for num in list_of_numbers:
    total += num
  return total
  
# Main
nums = ___
total_sum = sum_list___

print___"
Write a python program that takes a list of numbers and converts them to strings.,"[1, 2, 3, 4]","new_list = []
for i in range(0, len(list)):
    new_list.append(str(list[i]))",Data Structure,207,"new_list = []
for i in range___):
    new_list___str(list[i]))"
Can you provide a Python script to find the most frequent element in an array?,"[1, 1, 2, 3, 2, 4, 4]","from collections import Counter

def most_frequent(arr):
    cnt = Counter(arr)
    return cnt.most_common(1)[0][0]

arr = [1, 1, 2, 3, 2, 4, 4]
most_frequent_elem = most_frequent(arr)
print(most_frequent_elem)",Data Structure,210,"from collections import Counter

def most_frequent___:
    cnt = Counter___
    return cnt.most_common___[0][0]

arr = ___
most_frequent_elem = most_frequent___
print___"
"Create a python function to take a list of numbers as an argument, and return the sum of the odd numbers in the list","[2, 3, 4, 5, 6, 7]","def odd_numbers(numbers):
    result = 0 
    for num in numbers: 
        if num % 2 != 0:
            result += num
    return result",Data Structure,212,"def odd_numbers___:
    result = 0 
    for num in numbers: 
        if num % 2 != 0:
            result += num
    return result"
Develop a Python program to calculate the mean of a given array.,"60, 54, 77, 78, 37, 35","def mean(arr):
    total = 0
    for num in arr:
        total += num
    return total/len(arr)

arr = [60, 54, 77, 78, 37, 35]
print(""Mean: "", mean(arr))",Data Structure,213,"def mean___:
    total = 0
    for num in arr:
        total += num
    return total/len___

arr = ___
print___)"
Write a Python program to find all palindromic words in a given list.,"words = [""word"", ""racecar"", ""level"", ""pop"", ""mom"", ""nursesrun""]","def palindrome_words(words): 
    """"""This function takes in a list of words and returns a list of palindromic words""""""

    palindrome_words = []

    for word in words:
        if word == word[::-1]:
            palindrome_words.append(word)

    return palindrome_words",Data Structure,214,"def palindrome_words___: 
    """"""This function takes in a list of words and returns a list of palindromic words""""""

    palindrome_words = []

    for word in words:
        if word == word[::-1]:
            palindrome_words___word)

    return palindrome_words"
Create a Python program to find all the strings in a list of strings that start with a given character.,"[""apple"", ""banana"", ""kiwi"", ""melon""], ""a""","def get_strings_with_prefix(strings, letter):
    result = []

    for string in strings:
        if string.startswith(letter):
            result.append(string)
    return result

data = [""apple"", ""banana"", ""kiwi"", ""melon""]

result = get_strings_with_prefix(data, ""a"")
print(result)",Data Structure,216,"def get_strings_with_prefix___:
    result = []

    for string in strings:
        if string.startswith___:
            result___string)
    return result

data = [""apple"", ""banana"", ""kiwi"", ""melon""]

result = get_strings_with_prefix___
print___"
Generate a Python function that takes in a list of numbers and returns the greatest common divisor (GCD) of the list elements.,"[25, 15, 20]","def find_GCD(input_list): 
 gcd = input_list[0] 
 for num in input_list[1:]: 
 gcd = find_GCD(gcd, num) 
 return gcd

def find_GCD(a, b):
 while(b != 0): 
 a, b = b, a%b 
 return a",Data Structure,217,"def find_GCD___: 
 gcd = input_list___ 
 for num in input_list[1:]: 
 gcd = find_GCD___ 
 return gcd

def find_GCD___:
 while___: 
 a, b = b, a%b 
 return a"
Write a Python program using a for loop to sum up the even numbers in a given list.,"number_list = [2, 3, 5, 7, 11, 13, 17]","total = 0
for number in number_list:
 if number % 2 == 0:
 total += number
print(total) # prints 2 + 6 = 8",Data Structure,222,"total = 0
for number in number_list:
 if number % 2 == 0:
 total += number
print___ # prints 2 + 6 = 8"
Write a Python program to check if an item exists in a list using a given condition.,"list = [1, 2, 3, 4]
condition = lambda x: x % 2 == 0","def check_item(lst, condition): 
	for item in lst:
 		if condition(item): 
 			return True 
	return False

result = check_item([1, 2, 3, 4], lambda x : x % 2 == 0) 
print(result)",Data Structure,227,"def check_item___: 
	for item in lst:
 		if condition___: 
 			return True 
	return False

result = check_item___ 
print___"
Generate a python program to filter a given array of numbers and remove all numbers greater than 5.,"[3, 4, 6, 1, 8, 9]","def filter_greater_than_5(arr):
    new_arr = []
    for x in arr:
        if x <= 5:
            new_arr.append(x)
    return new_arr

arr = [3, 4, 6, 1, 8, 9]
print(filter_greater_than_5(arr))",Data Structure,229,"def filter_greater_than_5___:
    new_arr = []
    for x in arr:
        if x <= 5:
            new_arr___x)
    return new_arr

arr = ___
print___)"
Compose a Python code snippet to check if the input list contains even numbers.,"[2, 3, 4, 5, 6]","def isEvenNumberPresent(list):
    for item in list:
        if item % 2 == 0:
            return True
    return False

print(isEvenNumberPresent([2, 3, 4, 5, 6]))",Data Structure,230,"def isEvenNumberPresent___:
    for item in list:
        if item % 2 == 0:
            return True
    return False

print___)"
Develop an efficient sorting technique in Python to arrange the following list of strings.,"L1= [""This"", ""is"", ""a"", ""list"", ""of"", ""strings""]","def sort_list(L1):
    L1.sort()
    return L1",Data Structure,233,"def sort_list___:
    L1.sort()
    return L1"
Write a Python program to convert a list of lists into a dictionary.,"list = [[1, 'a', 'A'], [2, 'b', 'B'], [3, 'c', 'C'], [4, 'd', 'D']]",dictionary = dict(list),Data Structure,234,dictionary = dict___
Write a Python script to identify the prime numbers in a list of integers.,"list of integers: [2, 4, 7, 11, 13]","def is_prime(num): 
    if num > 1: 
       for i in range(2,num): 
           if (num % i) == 0: 
               return False 
       else: 
           return True
    else: 
       return False

numbers = [2, 4, 7, 11, 13]   
for num in numbers: 
    if is_prime(num): 
        print(num)",Data Structure,235,"def is_prime___: 
    if num > 1: 
       for i in range___: 
           if ___ == 0: 
               return False 
       else: 
           return True
    else: 
       return False

numbers = ___   
for num in numbers: 
    if is_prime___: 
        print___"
Write a Python code snippet which sorts a list by the values of the 2nd element of each tuple in the list.,"[(1, 2), (3, 1), (2, 3)]","unsorted_list = [(1, 2), (3, 1), (2, 3)]

def take_second(el):
     return el[1]

# sorting list 
# the second elements of tuples 
sorted_list = sorted(unsorted_list, key = take_second) 

# printing sorted list 
print(sorted_list)",Data Structure,238,"unsorted_list = [___, ___, ___]

def take_second___:
     return el___

# sorting list 
# the second elements of tuples 
sorted_list = sorted___ 

# printing sorted list 
print___"
Write Python code to create a JSON object from a given list.,"data = [1, 2, 3, 4, 5]","import json

data = [1, 2, 3, 4, 5]

data_json = json.dumps(data)

print(data_json)",Data Structure,246,"import json

data = ___

data_json = json.dumps___

print___"
Create a python script to visualize the distribution of values in a numpy array,"numpy array [1, 2, 3, 4, 5, 6]","import matplotlib.pyplot as plt
import numpy as np
 
arr = np.array([1,2,3,4,5,6])
 
plt.hist(arr)
plt.title(""Distribution of values in the given array"")
plt.show()",Data Structure,247,"import matplotlib.pyplot as plt
import numpy as np
 
arr = np.array___
 
plt.hist___
plt.title___
plt.show()"
Write a Python program to read a list of integers from the user and find the smallest number.,"[12, 11, 7, 15]","list_of_numbers = input(""Please enter a list of numbers: "").split()
list_of_numbers = [int(x) for x in list_of_numbers] 

min_number = min(list_of_numbers)
print(""The smallest number is:"", min_number)",Data Structure,254,"list_of_numbers = input___.split()
list_of_numbers = [int___ for x in list_of_numbers] 

min_number = min___
print___"
"Write a Python program to store a list of books in a dictionary. Each book should include title, author, and number of pages.","['The Hobbit', 'J.R.R. Tolkien', 295], ['The Catcher in the Rye', 'J.D. Salinger', 223]","book_list = [
  {'title': 'The Hobbit', 'author': 'J.R.R. Tolkien', 'pages': 295},
  {'title': 'The Catcher in the Rye', 'author': 'J.D. Salinger', 'pages': 223},
]",Data Structure,259,"book_list = [
  ___,
  ___,
]"
Create a Python script to compute the average of a list of elements,"[1,4,7,3]","def average(l):
    total = 0
    for element in l:
        total += element
    return total / len(l)

l = [1,4,7,3]

print(average(l))",Data Structure,260,"def average___:
    total = 0
    for element in l:
        total += element
    return total / len___

l = ___

print___)"
Coding a classifier in Python to classify a given data set into four categories,Data set of 20 records with 4 numerical features,"import numpy as np
from sklearn.svm import SVC

# X represents the 20 records with 4 numerical features
X = np.array([[], [], [], ..., []])
# y represents the 4 categories 
y = np.array([1, 2, 3, 4])

# Create a svm classifier with linear kernel
classifier = SVC(kernel='linear', random_state=0)

# Fit the data
classifier.fit(X, y)",Data Structure,261,"import numpy as np
from sklearn.svm import SVC

# X represents the 20 records with 4 numerical features
X = np.array___
# y represents the 4 categories 
y = np.array___

# Create a svm classifier with linear kernel
classifier = SVC___

# Fit the data
classifier.fit___"
Optimize the given Python code to use list comprehension.,"my_list = []
for value in range(10):
 my_list.append(value * 2)",my_list = [value * 2 for value in range(10)],Data Structure,262,my_list = [value * 2 for value in range___]
Build a command line application in Python to flatten an array of elements.,"arr = [1, [], [2, [[3], [4, 2]], 5, [[[[[[[[[[]]]]]]]]]]]","def flatten(arr):
    result = []
 
    for item in arr:
        if isinstance(item, list):
            result.extend(flatten(item))
        else:
            result.append(item)
 
    return result
 
flattenedArr = flatten(arr)
print(flattenedArr)",Data Structure,266,"def flatten___:
    result = []
 
    for item in arr:
        if isinstance___:
            result.extend___)
        else:
            result___item)
 
    return result
 
flattenedArr = flatten___
print___"
Write a Python program to implement the Bubble Sort algorithm and sort a given list of integers.,"list = [4, 9, 5, 2, 7, 1]","def bubble_sort(list):
    is_sorted = False
    while not is_sorted:
        is_sorted = True
        for i in range(len(list)-1):
            if (list[i] > list[i+1]):
                list[i], list[i+1] = list[i+1], list[i]
                is_sorted = False
    return list",Data Structure,271,"def bubble_sort___:
    is_sorted = False
    while not is_sorted:
        is_sorted = True
        for i in range___-1):
            if ___:
                list[i], list[i+1] = list[i+1], list[i]
                is_sorted = False
    return list"
Write a Python program to detect if an array contains any duplicate elements.,"[3, 5, 8, 1, 2, 3]","def check_duplicates(arr):
    seen = set()
    
    for element in arr:
        if element in seen:
            return True
        else:
            seen.add(element)
    return False

arr = [3, 5, 8, 1, 2, 3]
result = check_duplicates(arr)
print(result)",Data Structure,276,"def check_duplicates___:
    seen = set()
    
    for element in arr:
        if element in seen:
            return True
        else:
            seen.add___
    return False

arr = ___
result = check_duplicates___
print___"
Create a Python algorithm that takes in an array of integers and prints out a sum of its elements.,"[3, 4, 5, 6]","def sum_array(arr):
    s = 0
    for i in arr:
        s += i
    return s",Data Structure,282,"def sum_array___:
    s = 0
    for i in arr:
        s += i
    return s"
Write a Python program to create a dictionary of the elements in a list and their frequency count.,"list = [3, 2, 3, 4, 5]","def frequency_dict(list):
    counts = {}
    for i in list:
        if i not in counts:
            counts[i] = 1
        else:
            counts[i] += 1
    return counts

print(frequency_dict(list))",Data Structure,283,"def frequency_dict___:
    counts = {}
    for i in list:
        if i not in counts:
            counts[i] = 1
        else:
            counts[i] += 1
    return counts

print___)"
Create a python script that compares two sets of input data (lists of numbers) and outputs the intersection set.,"set1 = [1, 2, 3, 4, 5]
set2 = [3, 4, 5, 6, 7]","def find_intersection(set1, set2):
 intersect_set = []
 for num in set1:
 if num in set2:
 intersect_set.append(num)
 return intersect_set

set1 = [1, 2, 3, 4, 5]
set2 = [3, 4, 5, 6, 7]

intersect_set = find_intersection(set1, set2)
print(intersect_set) # Output -> [3, 4, 5]",Data Structure,288,"def find_intersection___:
 intersect_set = []
 for num in set1:
 if num in set2:
 intersect_set___num)
 return intersect_set

set1 = ___
set2 = ___

intersect_set = find_intersection___
print___ # Output -> [3, 4, 5]"
Write a python program to generate a Combinations of four numbers from a given list of N numbers,"numbers = [1, 4, 5, 6, 7]","def comb_four(nums): 
    result = [] 
    for i in range(len(nums)-3): 
        for j in range(i+1, len(nums)-2): 
            for k in range(j+1, len(nums)-1):
                for l in range(k+1, len(nums)): 
                    result.append([nums[i], nums[j], nums[k], nums[l]]) 
    return result",Data Structure,289,"def comb_four___: 
    result = [] 
    for i in range___-3): 
        for j in range___-2): 
            for k in range___-1):
                for l in range___): 
                    result___[nums[i], nums[j], nums[k], nums[l]]) 
    return result"
Design a function in Python to sort the given list of numbers in descending order.,"The given list of numbers is: [2, 4, 1, 6, 9, 8]","def descendingSort(nums):
    # sort list in reverse order
    nums.sort(reverse=True)
    return nums

print(descendingSort([2, 4, 1, 6, 9, 8]))",Data Structure,291,"def descendingSort___:
    # sort list in reverse order
    nums.sort___
    return nums

print___)"
Create a Python function to take two lists and return a list with the elements added together.,"list_a = [1, 4, 5]
list_b = [2, 3, 6]","def list_add(list_a, list_b):
  result = []

  for i in range(len(list_a)):
     result.append(list_a[i] + list_b[i])

  return result

result = list_add(list_a, list_b)
print(result)",Data Structure,293,"def list_add___:
  result = []

  for i in range___):
     result___list_a[i] + list_b[i])

  return result

result = list_add___
print___"
Produce a Python script to remove duplicate values from a list.,"[1, 2, 3, 2, 1]","def remove_duplicates(lst):
    unique_lst = []
    for i in lst:
        if i not in unique_lst:
            unique_lst.append(i)
    return unique_lst",Data Structure,294,"def remove_duplicates___:
    unique_lst = []
    for i in lst:
        if i not in unique_lst:
            unique_lst___i)
    return unique_lst"
Create a Python list comprehension to find the sum of even numbers from two given lists.,"[1, 2, 3, 4]
[9, 8, 7, 6]","even_nums_sum = [x + y for x in [1, 2, 3, 4] for y in [9, 8, 7, 6] if x % 2 == 0 and y % 2 == 0]
print(sum(even_nums_sum))",Data Structure,303,"even_nums_sum = [x + y for x in ___ for y in ___ if x % 2 == 0 and y % 2 == 0]
print___)"
Implement an algorithm in Python to remove duplicate elements from a given list.,"list = [1,4,4,4,5,5,5,6,7]","def removeDuplicates(list): 
    uniqueList = []  
    for item in list: 
        if item not in uniqueList: 
            uniqueList.append(item) 
    return uniqueList 

print(removeDuplicates([1,4,4,4,5,5,5,6,7]))",Data Structure,315,"def removeDuplicates___: 
    uniqueList = []  
    for item in list: 
        if item not in uniqueList: 
            uniqueList___item) 
    return uniqueList 

print___)"
Create a Python program to reverse a list without using the reverse() method.,"[1, 2, 3, 4, 5]","def reverse_list(lst):
    reversed_list = []
    for i in range(len(lst)-1,-1, -1):
      reversed_list.append(lst[i])
    return reversed_list

print(reverse_list([1, 2, 3, 4, 5]))",Data Structure,316,"def reverse_list___:
    reversed_list = []
    for i in range___-1,-1, -1):
      reversed_list___lst[i])
    return reversed_list

print___)"
Convert a list of numbers into strings using Python.,"[5, 10, 15]","# Create an empty list of strings
number_strings = []

# Loops through the list of numbers
for n in [5, 10, 15]:
    # Appends a string version of the number to the list
    number_strings.append(str(n))

print(number_strings)   # ['5', '10', '15']",Data Structure,320,"# Create an empty list of strings
number_strings = []

# Loops through the list of numbers
for n in ___:
    # Appends a string version of the number to the list
    number_strings___str(n))

print___   # ['5', '10', '15']"
Create an algorithm in Python that takes an array of integers and `finds the pair that equals the given target.,"[1, 4, 8, 10], 14","def find_pair(arr, target): 
    for i in range(0, len(arr)): 
        for j in range(i + 1, len(arr)): 
            if arr[i] + arr[j] == target: 
                return (arr[i], arr[j]) 

result = find_pair([1, 4, 8, 10], 14) 
print(result)",Data Structure,321,"def find_pair___: 
    for i in range___): 
        for j in range___): 
            if arr[i] + arr[j] == target: 
                return ___ 

result = find_pair___ 
print___"
Generate a program in Python to find the median of a list of numbers.,"[5, 8, 2, 7, 4]","def median(nums):
    nums.sort()
    length = len(nums)
 
    if length % 2 == 0:
        return (nums[length//2] + nums[(length//2)-1])/2.0
    else:
        return nums[length//2] 

list = [5, 8, 2, 7, 4]
med = median(list)
print('The median of the list is ' + str(med))",Data Structure,323,"def median___:
    nums.sort()
    length = len___
 
    if length % 2 == 0:
        return ___-1])/2.0
    else:
        return nums[length//2] 

list = ___
med = median___
print___)"
Implement a Python function to find the smallest element in an array,"[3, 5, 2, 1, 4]","def findSmallest(arr):
    smallest = arr[0]
    for i in arr:
        if i < smallest:
            smallest = i
    return smallest

findSmallest([3, 5, 2, 1, 4])
# Output: 1",Data Structure,327,"def findSmallest___:
    smallest = arr___
    for i in arr:
        if i < smallest:
            smallest = i
    return smallest

findSmallest___
# Output: 1"
Rewrite a given code snippet in Python using a list comprehension.,"my_list = []
for i in range(10):
 my_list.append(i ** 2)",my_list = [i ** 2 for i in range(10)],Data Structure,332,my_list = [i ** 2 for i in range___]
Create a python program that takes in a list of strings and returns a list of strings with all duplicates removed.,"[""a"", ""b"", ""c"", ""a"", ""b"", ""d""]","def remove_duplicates(lst):
    new_lst = []

    for item in lst:
        if item not in new_lst:
            new_lst.append(item)

    return new_lst

result = remove_duplicates([""a"", ""b"", ""c"", ""a"", ""b"", ""d""])
print(result)",Data Structure,333,"def remove_duplicates___:
    new_lst = []

    for item in lst:
        if item not in new_lst:
            new_lst___item)

    return new_lst

result = remove_duplicates___
print___"
"Create a program in Python that given a list of integer inputs, sorts them in descending order.","list = [4, 9, 2, 6, 5]","list = [4, 9, 2, 6, 5]

# sort list in descending order
list.sort(reverse=True)

print(list) # [9, 6, 5, 4, 2]",Data Structure,346,"list = ___

# sort list in descending order
list.sort___

print___ # [9, 6, 5, 4, 2]"
Build a Python script for searching a given element in an array.,"[3, 10, 7, 12], element to search: 7","def searchElement(arr, x): 
  
    for i in range (len(arr)): 
  
        if arr[i] == x: 
            return i 
  
    return -1

arr = [3, 10, 7, 12] 
x = 7
index = searchElement(arr, x) 
if index != -1: 
    print(""Element"", x, ""found at index"", index )
else: 
    print(""Element not found"")",Data Structure,347,"def searchElement___: 
  
    for i in range ___): 
  
        if arr[i] == x: 
            return i 
  
    return -1

arr = ___ 
x = 7
index = searchElement___ 
if index != -1: 
    print___
else: 
    print___"
Create a function in Python that takes in an array of integers and returns the odd numbers from that array.,"[1, 2, 3, 4, 5]","def get_odd_numbers(arr):
    # Create an empty list to store the odd numbers
    odd_numbers = []

    # Iterate through and check for odd numbers
    for num in arr:
        if num % 2 != 0:
            odd_numbers.append(num)
    
    return odd_numbers

arr = [1, 2, 3, 4, 5]

odd_numbers = get_odd_numbers(arr)

print('Odd numbers: ', odd_numbers)",Data Structure,355,"def get_odd_numbers___:
    # Create an empty list to store the odd numbers
    odd_numbers = []

    # Iterate through and check for odd numbers
    for num in arr:
        if num % 2 != 0:
            odd_numbers___num)
    
    return odd_numbers

arr = ___

odd_numbers = get_odd_numbers___

print___"
Create a program in Python to sort a list of tuples (words and their frequency) in descending order.,"[(""hello"", 10), (""world"", 15), (""foo"", 8)]","def sortTuples(tuples):
    tuples.sort(key=lambda x: x[1],reverse=True)
    return tuples",Data Structure,356,"def sortTuples___:
    tuples.sort___
    return tuples"
"Construct a Python function to filter out all the words from a list that contains the letter ""a"".","['dog', 'cat', 'ant', 'tree', 'apple']","def filter_words_with_a(words):
 return [word for word in words if ""a"" in word]",Data Structure,357,"def filter_words_with_a___:
 return [word for word in words if ""a"" in word]"
"Develop a function in Python that takes a list of integers, computes the cumulative sum, and prints the result.","[1, 2, 3, 4, 5]","def cumulative_sum(lst):
    sum = 0
    for i in lst:
        sum += i
        print(sum)

cumulative_sum([1, 2, 3, 4, 5])",Data Structure,360,"def cumulative_sum___:
    sum = 0
    for i in lst:
        sum += i
        print___

cumulative_sum___"
Write a Python program that will replace all the numbers greater than 5 in an array with 0.,"arr = [1, 4, 6, 7, 8, 9]","def replace_numbers(arr):
 for i, num in enumerate(arr):
  if num > 5:
   arr[i] = 0

replace_numbers(arr)
print(arr) # [1, 4, 0, 0, 0, 0]",Data Structure,364,"def replace_numbers___:
 for i, num in enumerate___:
  if num > 5:
   arr[i] = 0

replace_numbers___
print___ # [1, 4, 0, 0, 0, 0]"
"Write a python script to calculate the sum of an array of integers, ignoring any negative numbers.","array = [-4, 1, 6, 2, -9, 5]","def sum_without_negatives(arr):
    total = 0
    for n in arr:
        if n >= 0:
            total += n
    return total

array = [-4, 1, 6, 2, -9, 5]
print(sum_without_negatives(array))",Data Structure,369,"def sum_without_negatives___:
    total = 0
    for n in arr:
        if n >= 0:
            total += n
    return total

array = [-4, 1, 6, 2, -9, 5]
print___)"
Create a list comprehension expression for adding two lists in Python.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]",list3 = [list1[i] + list2[i] for i in range(len(list1))],Data Structure,371,list3 = [list1[i] + list2[i] for i in range___)]
Rewrite the code snippet below in Python so that it takes advantage of list comprehension.,"items = [1, 2, 3, 4, 5]
new_items = []
for item in items:
    new_items.append(item**2)","items = [1, 2, 3, 4, 5]
new_items = [item**2 for item in items]",Data Structure,372,"items = ___
new_items = [item**2 for item in items]"
Develop a Python algorithm to find the maximum element in a given array.,"[1, 4, 6, 7, 3]","def find_max_element(arr):
    maxElement = arr[0]
    for val in arr:
        if val > maxElement:
            maxElement = val
    return maxElement",Data Structure,374,"def find_max_element___:
    maxElement = arr___
    for val in arr:
        if val > maxElement:
            maxElement = val
    return maxElement"
"Input an array of numbers, and build a function in Python to replace all even numbers with 0.","[4, 10, 15, 20]","def replace_even(arr):
    for i in range(len(arr)):
        if arr[i] % 2 == 0:
            arr[i] = 0
    return arr

result = replace_even([4, 10, 15, 20])
print(result)",Data Structure,381,"def replace_even___:
    for i in range___):
        if arr[i] % 2 == 0:
            arr[i] = 0
    return arr

result = replace_even___
print___"
Create a Python program to identify the most frequently occurring item in a list.,"[3,4,3,4,3]","def most_frequent(list): 
  return max(set(list), key = list.count)
  
most_frequent([3,4,3,4,3])",Data Structure,383,"def most_frequent___: 
  return max___, key = list.count)
  
most_frequent___"
Create a Python script that takes an input of two numbers and returns the pair in a list.,"10, 20","def pair(num_1, num_2):
 return [num_1, num_2]

print(pair(10, 20))",Data Structure,385,"def pair___:
 return [num_1, num_2]

print___)"
Create a function to perform list sorting using Python.,"list = [4, 5, 2, 1, 3]","def sortList(list):
    list.sort()
    return list

sortedList = sortList([4, 5, 2, 1, 3])
print(sortedList)",Data Structure,386,"def sortList___:
    list.sort()
    return list

sortedList = sortList___
print___"
Write a Python program to filter out strings longer than 15 characters from a list of strings.,"strings = ['good', 'very good', 'excellent', 'awesome', 'extremely awesome']","new_list = []
for string in strings:
 if len(string) <= 15:
 new_list.append(string)

print(new_list)  # prints ['good', 'very good', 'excellent', 'awesome']",Data Structure,389,"new_list = []
for string in strings:
 if len___ <= 15:
 new_list___string)

print___  # prints ['good', 'very good', 'excellent', 'awesome']"
Write a python script to segregate a list of numbers into lists odd and even numbers.,"list_of_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]","odd_numbers = []
even_numbers = []

for number in list_of_numbers:
    if number % 2 == 0:
        even_numbers.append(number)
    else:
        odd_numbers.append(number)

print(""Odd numbers: "" + str(odd_numbers))
print(""Even numbers: "" + str(even_numbers))",Data Structure,390,"odd_numbers = []
even_numbers = []

for number in list_of_numbers:
    if number % 2 == 0:
        even_numbers___number)
    else:
        odd_numbers___number)

print___)
print___)"
Write a Python script that finds the minimum sum of an array of integers.,"arr = [13, -2, 7, -6, 5]","def min_sum_array(arr):
 minimum = arr[0]
 total = 0

 for i in range (0, len(arr)):
  element = arr[i]
  if element < minimum:
   minimum = element
   total += element
 
 return total

arr = [13, -2, 7, -6, 5]
min_sum = min_sum_array(arr)
print(min_sum) # Output: -11",Data Structure,393,"def min_sum_array___:
 minimum = arr___
 total = 0

 for i in range ___):
  element = arr[i]
  if element < minimum:
   minimum = element
   total += element
 
 return total

arr = [13, -2, 7, -6, 5]
min_sum = min_sum_array___
print___ # Output: -11"
Create a Python program to find the minimum number of steps required to make all array elements equal.,"arr = [2, 3, 6, 8]","def min_steps(arr):
    min_step = 0
    min_val = min(arr)
    for i in range(len(arr)):
        min_step += arr[i] - min_val 
    
    return min_step",Data Structure,395,"def min_steps___:
    min_step = 0
    min_val = min___
    for i in range___):
        min_step += arr[i] - min_val 
    
    return min_step"
Write a python code to replace all the occurences of an element in a list with a given number.,"[1,2,3,3], 3, 0","def replace_elem_in_list(data, elem, val):
  return [val if x==elem else x for x in data]

print(replace_elem_in_list([1,2,3,3], 3, 0))
# Output: [1, 2, 0, 0]",Data Structure,400,"def replace_elem_in_list___:
  return [val if x==elem else x for x in data]

print___)
# Output: ___"
Design a program in Python to filter a given array of integers and output only the even numbers.,"arr = [2, 7, 3, 4, 8, 9, 10]","def filterEvenNo(arr): 

  # return a list containing only even numbers
  return [num for num in arr if num % 2 == 0]",Data Structure,407,"def filterEvenNo___: 

  # return a list containing only even numbers
  return [num for num in arr if num % 2 == 0]"
Write a Python program to filter out the words of length greater than 5 from a given list of words,"['Hello', 'is', 'Python', 'Programming']","def filter_long_words(words):
  return [word for word in words if len(word) > 5]",Data Structure,409,"def filter_long_words___:
  return [word for word in words if len___ > 5]"
Construct a program to sort a given list in Python.,"list = [3, 7, 1, 4, 5]","def sort_list(list): 
    for i in range(len(list)-1): 
        for j in range(0, len(list)-i-1):
            if list[j] > list[j+1] : 
                list[j], list[j+1] = list[j+1], list[j]
list = [3, 7, 1, 4, 5]
sort_list(list)
print(list)",Data Structure,410,"def sort_list___: 
    for i in range___-1): 
        for j in range___-i-1):
            if list[j] > list[j+1] : 
                list[j], list[j+1] = list[j+1], list[j]
list = ___
sort_list___
print___"
Create a python program which takes in a given list and finds the 3 most frequent elements in the list.,"[3, 7, 5, 6, 2, 1, 5, 6, 3, 9]","from collections import Counter

def find_most_frequent(lst): 
    counter = Counter(lst) 
    topthree = counter.most_common(3)
    return topthree

find_most_frequent([3, 7, 5, 6, 2, 1, 5, 6, 3, 9])",Data Structure,411,"from collections import Counter

def find_most_frequent___: 
    counter = Counter___ 
    topthree = counter.most_common___
    return topthree

find_most_frequent___"
Modify a Python program to add a minimum value of 10 to each element in a list.,"list = [1, 2, 3, 4]","list = [x + 10 for x in [1, 2, 3, 4]]",Data Structure,413,list = [x + 10 for x in ___]
Develop a process in Python to classify a set of data points into two categories.,"[1, 2, 3, 4, 5, 6, 7]","def classifier(data_points):
 categories = []
 for data_point in data_points:
 if data_point % 2 == 0:
 categories.append('even')
 else:
 categories.append('odd')
 return categories",Data Structure,417,"def classifier___:
 categories = []
 for data_point in data_points:
 if data_point % 2 == 0:
 categories___'even')
 else:
 categories___'odd')
 return categories"
Modify the following Python code to remove the duplicate elements from the list,"L = [1, 2, 2, 3, 4, 4]","L = [1, 2, 2, 3, 4, 4] 

L = list(set(L)) 

print(L)",Data Structure,421,"L = ___ 

L = list___) 

print___"
Generate a CPython code for reversing a given list of numbers.,"[1,2,3,4]","def reverse_list(nums):
  return nums[::-1]",Data Structure,422,"def reverse_list___:
  return nums[::-1]"
Create a program in Python to sort a given list of words alphabetically,"words=[“Computer”, “Science”, “Engineering”, “Technology”]","def sort_words(words):
    words.sort()
    return words

words = [""Computer"", ""Science"", ""Engineering"", ""Technology""]
sorted_words = sort_words(words)
print(sorted_words) # Output: ['Computer', 'Engineering', 'Science', 'Technology']",Data Structure,423,"def sort_words___:
    words.sort()
    return words

words = [""Computer"", ""Science"", ""Engineering"", ""Technology""]
sorted_words = sort_words___
print___ # Output: ['Computer', 'Engineering', 'Science', 'Technology']"
Generate a list of prime numbers up to a given number using a Python program.,number = 50,"def prime_numbers (number):
    prime_list = []
    for num in range(2, number + 1):
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                prime_list.append(num)
    return prime_list

number = 50
print(prime_numbers(number))",Data Structure,425,"def prime_numbers ___:
    prime_list = []
    for num in range___:
        if num > 1:
            for i in range___:
                if ___ == 0:
                    break
            else:
                prime_list___num)
    return prime_list

number = 50
print___)"
Write a Python function to validate an a list of emails. The function should return a boolean indicating whether a given email address is valid.,"mail_list = [""example.user@gmail.com"", ""bad@example""]","def validate_mail_list(mail_list):
    for mail in mail_list:
        if not re.match(""[^@]+@[^@]+\.[^@]+"", mail):
            return False
    return True",Data Structure,434,"def validate_mail_list___:
    for mail in mail_list:
        if not re.match___:
            return False
    return True"
"Generate a Python script that takes in a list of numbers, rearranges them in ascending order, and prints out the result.","[3, 2, 5, 7, 1, 4]","def sort_list(nums): 
    # Sort list in ascending order
    nums.sort()
    
    # Print out the sorted list
    for num in nums: 
        print(num) 
  
# Test the function
nums = [3, 2, 5, 7, 1, 4]
sort_list(nums)",Data Structure,435,"def sort_list___: 
    # Sort list in ascending order
    nums.sort()
    
    # Print out the sorted list
    for num in nums: 
        print___ 
  
# Test the function
nums = ___
sort_list___"
Come up with an optimal algorithm in Python to sort an array of integers.,"[3, 8, 10, 1, 7, 4]","def sort_array(arr):
    # Bubble Sort Algorithm
    n = len(arr)
    
    for i in range(n-1):
        for j in range(n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    
    return arr

# Example Usage
input_array = [3,8,10,1,7,4]
print(sort_array(input_array)) # Output: [1, 3, 4, 7, 8, 10]",Data Structure,437,"def sort_array___:
    # Bubble Sort Algorithm
    n = len___
    
    for i in range___:
        for j in range___:
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    
    return arr

# Example Usage
input_array = ___
print___) # Output: [1, 3, 4, 7, 8, 10]"
Write a Python program to filter a list by a given criteria.,"list = [1,4,5,6,7,14,15] 
criteria = x > 5","def filter_list(mylist, criteria):
    result = []
    for item in mylist:
        if eval(criteria):
            result.append(item)
    return result
    
list = [1,4,5,6,7,14,15] 
criteria = ""x > 5""

filtered_list = filter_list(list, criteria)
print(filtered_list) # [6, 7, 14, 15]",Data Structure,444,"def filter_list___:
    result = []
    for item in mylist:
        if eval___:
            result___item)
    return result
    
list = ___ 
criteria = ""x > 5""

filtered_list = filter_list___
print___ # [6, 7, 14, 15]"
"Using the NumPy library in Python, calculate the mean of the following array.","array = [2, 4, 7, 8, 9]","import numpy as np

arr = np.array([2, 4, 7, 8, 9])

mean = np.mean(arr)

print(mean) # 6.2",Data Structure,452,"import numpy as np

arr = np.array___

mean = np.mean___

print___ # 6.2"
Can you write a Python script to sort a list of strings alphabetically?,"[""Hello"", ""Yes"", ""No"", ""World""]","strings = [""Hello"", ""Yes"", ""No"", ""World""]

strings.sort()

print(strings)",Data Structure,455,"strings = [""Hello"", ""Yes"", ""No"", ""World""]

strings.sort()

print___"
Create a Python script to whitelist a specific user from a list of users.,"user_list = [""user1"",""user2"",""user3"",""user4"",""user5""]
whitelist_user = ""user3""","def whitelist_user(user_list, whitelist_user):
    Whitelisted_users = []
    for user in user_list: 
        if user == whitelist_user:
            Whitelisted_users.append(user)
    
    return Whitelisted_users",Data Structure,459,"def whitelist_user___:
    Whitelisted_users = []
    for user in user_list: 
        if user == whitelist_user:
            Whitelisted_users___user)
    
    return Whitelisted_users"
Design a program in Python to delete an element from the give list.,"List: [1,2,3,4,5]
Element to delete: 3","def delete_element(arr, element): 
    new_arr = [i for i in arr if i!=element]
    return new_arr",Data Structure,473,"def delete_element___: 
    new_arr = [i for i in arr if i!=element]
    return new_arr"
Write a Python program to divide a list of numbers into two equal lists.,"[1,2,3,4,5,6,7,8,9,10]","list_a = [1,2,3,4,5]
list_b = [6,7,8,9,10]",Data Structure,492,"list_a = ___
list_b = ___"
"Create a Python function that takes two parameters, an array and a search query and returns the indices of the array where the element matches with the search query.","arr = [1, 2, 5, 3, 4]
searchQuery = 3","def searchIndex(arr, searchQuery): 
  indices = []
  for i in range(len(arr)): 
    if arr[i] == searchQuery: 
      indices.append(i) 
      
  return indices
  
arr = [1, 2, 5, 3, 4]
searchQuery = 3

result = searchIndex(arr, searchQuery)
print(result)",Data Structure,501,"def searchIndex___: 
  indices = []
  for i in range___): 
    if arr[i] == searchQuery: 
      indices___i) 
      
  return indices
  
arr = ___
searchQuery = 3

result = searchIndex___
print___"
Write a function in Python to generate a histogram from a list of values.,"data = [18, 11, 22, 20, 44, 19, 22, 11, 20]","import matplotlib.pyplot as plt

def generateHistogram(data):
    plt.hist(data, bins='auto')
    plt.title(""Histogram"")
    plt.xlabel('Values')
    plt.ylabel('Number of Occurrences')
    plt.show()

generateHistogram(data)",Data Structure,503,"import matplotlib.pyplot as plt

def generateHistogram___:
    plt.hist___
    plt.title___
    plt.xlabel___
    plt.ylabel___
    plt.show()

generateHistogram___"
Develop a python program that sorts a given list of words in lexicographic order.,"[apple, bike, dog, cat]","# Sort a list of words in lexicographic order
words = [""apple"", ""bike"", ""dog"", ""cat""]

# Sort the list
words.sort()

# Print the list
print(words)

# Output:
# ['apple', 'bike', 'cat', 'dog']",Data Structure,505,"# Sort a list of words in lexicographic order
words = [""apple"", ""bike"", ""dog"", ""cat""]

# Sort the list
words.sort()

# Print the list
print___

# Output:
# ['apple', 'bike', 'cat', 'dog']"
Create a program in Python to classify each item in a given list as either an even number or an odd number.,"[5,4,2,7]","def classify(lst):
    result = []
    for item in list:
        if item % 2 == 0:
            result.append(""even"")
        else:
            result.append(""odd"")
    return result",Data Structure,507,"def classify___:
    result = []
    for item in list:
        if item % 2 == 0:
            result___""even"")
        else:
            result___""odd"")
    return result"
Write a Python program to convert all units of temperature in a tuple from Celsius to Fahrenheit.,"temperature = (36.5, 37, 37.5, 37.8)","def celsius_to_fahrenheit(c): 
    return (c * 9/5) + 32

temp_in_Fahrenheit = tuple(map(celsius_to_fahrenheit, temperature)) 
  
print(temp_in_Fahrenheit) # Output: (97.7, 98.6, 99.5, 100.04)",Data Structure,509,"def celsius_to_fahrenheit___: 
    return ___ + 32

temp_in_Fahrenheit = tuple___) 
  
print___ # Output: ___"
Create an Python program that computes the median value of an array of numbers.,"arr = [1, 5, 2, 4, 3, 6]","def median(arr):
    arr.sort()
    if len(arr) % 2 != 0:
        return arr[int(len(arr)/2)]
    else:
        return (arr[int(len(arr)/2)] + arr[int(len(arr)/2)-1]) / 2

medianValue = median(arr)
print(medianValue)",Data Structure,515,"def median___:
    arr.sort()
    if len___ % 2 != 0:
        return arr[int___/2)]
    else:
        return ___/2)] + arr[int___/2)-1]) / 2

medianValue = median___
print___"
Construct a Python for loop to find the largest number in a list of given numbers.,"[3, 6, 8, 11, 12]","largest = 0
list = [3, 6, 8, 11, 12]

for i in list:
  if i > largest:
    largest = i

print(largest)",Data Structure,517,"largest = 0
list = ___

for i in list:
  if i > largest:
    largest = i

print___"
Generate a Python program that searches a large list of strings to find those matching a given pattern.,"list = [""123 abc"", ""456 def"", ""789 ghi"", ""123 jkl"", ""456 mno"", ""789 pqr""]
pattern = ""456*""","search_list = [""123 abc"", ""456 def"", ""789 ghi"", ""123 jkl"", ""456 mno"", ""789 pqr""]
pattern = ""456*""

matches = []
for item in search_list:
  if item.startswith(pattern):
    matches.append(item)

print(matches)",Data Structure,519,"search_list = [""123 abc"", ""456 def"", ""789 ghi"", ""123 jkl"", ""456 mno"", ""789 pqr""]
pattern = ""456*""

matches = []
for item in search_list:
  if item.startswith___:
    matches___item)

print___"
Construct a Python program that takes a list of words and prints the 3rd most common word in the list?,"words = ['Cat', 'Dog', 'Bird', 'Horse', 'Cow', 'Lion']","import collections
def third_most_common(words):
    count = collections.Counter(words).most_common()
    return count[2][0]
third_most_common(words) # returns 'Bird'",Data Structure,521,"import collections
def third_most_common___:
    count = collections.Counter___.most_common()
    return count______
third_most_common___ # returns 'Bird'"
Develop a Python function that can detect loops in a given linked list.,Linked List: head -> 1 -> 2 -> 3 -> 4 -> 5,"def detectLoop(head):
    slow_p = head 
    fast_p = head 
    while(slow_p and fast_p and fast_p.next): 
        slow_p = slow_p.next
        fast_p = fast_p.next.next
        if slow_p == fast_p:
            return True
    return False",Data Structure,523,"def detectLoop___:
    slow_p = head 
    fast_p = head 
    while___: 
        slow_p = slow_p.next
        fast_p = fast_p.next.next
        if slow_p == fast_p:
            return True
    return False"
Write a Python program to generate all unique combinations of two numbers from a list.,"nums = [1, 2, 3, 4]","def generate_combinations(nums): 
    result = [] 
    for x in range(0, len(nums)): 
        for y in range(x + 1, len(nums)): 
            result.append([nums[x], nums[y]]) 
    return result 

nums = [1, 2, 3, 4]

result = generate_combinations(nums)

for item in result:
    print(item)

# output
[1, 2]
[1, 3]
[1, 4]
[2, 3]
[2, 4]
[3, 4]",Data Structure,532,"def generate_combinations___: 
    result = [] 
    for x in range___): 
        for y in range___): 
            result___[nums[x], nums[y]]) 
    return result 

nums = ___

result = generate_combinations___

for item in result:
    print___

# output
___
___
___
___
___
___"
"Given a list of integers, write a Python program to filter out all numbers that are divisible by 5.","[11, 23, 7, 20, 44, 16, 9]","def filter_divisible_by_5(numbers):
    res = []
    for num in numbers:
        if num % 5 != 0:
            res.append(num)
    return res

filtered_numbers = filter_divisible_by_5([11, 23, 7, 20, 44, 16, 9])
print(filtered_numbers)",Data Structure,536,"def filter_divisible_by_5___:
    res = []
    for num in numbers:
        if num % 5 != 0:
            res___num)
    return res

filtered_numbers = filter_divisible_by_5___
print___"
How would you write a program in Python that takes as input an array of integers and prints the sum of its elements?,"[1, 5, 8, -3]","arr = [1,5,8,-3]

# Compute the sum
total = 0
for num in arr:
    total += num

# Print the sum
print(total)",Data Structure,537,"arr = [1,5,8,-3]

# Compute the sum
total = 0
for num in arr:
    total += num

# Print the sum
print___"
Develop a Python program that takes a list of numbers as an input and outputs the numbers in the list sorted in ascending order.,"[5, 3, 7, 2, 4, 9, 1]","def sortAscending(list): 
    list.sort() 
    return list
  
# Driver Code 
list = [5, 3, 7, 2, 4, 9, 1]  
print(sortAscending(list)) 

# Output: [1, 2, 3, 4, 5, 7, 9]",Data Structure,544,"def sortAscending___: 
    list.sort() 
    return list
  
# Driver Code 
list = ___  
print___) 

# Output: ___"
Create a function in Python that will take an array of integers and find the two numbers with the largest sum.,"[1, 3, 5, 7, 9]","def findMaxSum(input):
    num1 = -float('inf')
    num2 = -float('inf')
    for num in input:
        if num > num1:
            num2 = num1
            num1 = num
        elif num > num2:
            num2 = num
    return num1 + num2",Data Structure,546,"def findMaxSum___:
    num1 = -float___
    num2 = -float___
    for num in input:
        if num > num1:
            num2 = num1
            num1 = num
        elif num > num2:
            num2 = num
    return num1 + num2"
Create a machine learning model in Python that can classify a set of samples into two classes.,"Sample1: 0.8, 0.1, 0.3
Sample2: 1.0, 0.4, 0.7
Sample3: 0.4, 0.5, 0.9
Sample4: 0.2, 0.7, 0.8","import numpy as np
from sklearn.svm import SVC

X = np.array([[0.8, 0.1, 0.3],
            [1.0, 0.4, 0.7],
            [0.4, 0.5, 0.9],
            [0.2, 0.7, 0.8]])

y = np.array([0, 1, 0, 1])

model = SVC()
model.fit(X, y)",Data Structure,548,"import numpy as np
from sklearn.svm import SVC

X = np.array([[0.8, 0.1, 0.3],
            [1.0, 0.4, 0.7],
            [0.4, 0.5, 0.9],
            [0.2, 0.7, 0.8]])

y = np.array___

model = SVC()
model.fit___"
Create an algorithm in Python to calculate the mean of a given list.,"[1,2,3,4]","def calculate_mean(numbers):
    # Get the length of the list
    numbers_len = len(numbers)
    # Sum up all the elements in the list
    total = 0
    for num in numbers:
        total += num
    # Divide the total with the length of the list
    mean = total / numbers_len
    # Return the mean
    return mean

mean = calculate_mean([1,2,3,4])
print(mean)",Data Structure,554,"def calculate_mean___:
    # Get the length of the list
    numbers_len = len___
    # Sum up all the elements in the list
    total = 0
    for num in numbers:
        total += num
    # Divide the total with the length of the list
    mean = total / numbers_len
    # Return the mean
    return mean

mean = calculate_mean___
print___"
Create a Python program that outputs the sum of all the elements in a given array.,"[3, 5, 6]","def sum_of_array(arr):
    result = 0
    for x in arr:
        result += x
    return result

sum = sum_of_array([3, 5, 6])
print(sum)",Data Structure,558,"def sum_of_array___:
    result = 0
    for x in arr:
        result += x
    return result

sum = sum_of_array___
print___"
Construct a python function that takes a list of numbers and returns a list of the sum of the squares of the first n numbers.,"[1,2,3]","def sum_of_squares(numbers):
    squares_sum = []
    for i in range(len(numbers)):
        squares_sum.append(sum([num**2 for num in numbers[:i+1]]))
    return squares_sum",Data Structure,560,"def sum_of_squares___:
    squares_sum = []
    for i in range___):
        squares_sum___sum([num**2 for num in numbers[:i+1]]))
    return squares_sum"
Write a Python program that sorts a list of integers from smallest to largest.,"[2,7,3,9,0,4]","def sort_list(input_list):
    sorted_list = sorted(input_list)
    return sorted_list

input_list = [2,7,3,9,0,4]

output = sort_list(input_list)
print(output)",Data Structure,562,"def sort_list___:
    sorted_list = sorted___
    return sorted_list

input_list = ___

output = sort_list___
print___"
Generate a code in Python that sorts the given list of numbers,"lst = [3, 4, 15, 1, 0]","def sort_list(lst): 
    lst.sort() 
    return lst 
  
# Driver code 
lst = [3, 4, 15, 1, 0] 
sorted_list = sort_list(lst) 
  
print(""Sorted list:"", sorted_list)",Data Structure,564,"def sort_list___: 
    lst.sort() 
    return lst 
  
# Driver code 
lst = ___ 
sorted_list = sort_list___ 
  
print___"
"Given a list of integers as input, write a Python code snippet to find the largest number.","[9, 2, 6, 3, -5, 5, 7]","max_num = -float('inf')
for num in [9, 2, 6, 3, -5, 5, 7]:
    if num > max_num:
        max_num = num
print(max_num)",Data Structure,565,"max_num = -float___
for num in [9, 2, 6, 3, -5, 5, 7]:
    if num > max_num:
        max_num = num
print___"
Write a Python script that takes a list of strings as input and returns a new list with all the duplicates eliminated.,"[""Apple"", ""Pear"", ""Apple"", ""Banana"", ""Pear""]","def remove_duplicates(input_list):
    unique_list = []
    for item in input_list:
        if item not in unique_list:
            unique_list.append(item)
    
    return unique_list

my_list = [""Apple"", ""Pear"", ""Apple"", ""Banana"", ""Pear""]
print(remove_duplicates(my_list))",Data Structure,576,"def remove_duplicates___:
    unique_list = []
    for item in input_list:
        if item not in unique_list:
            unique_list___item)
    
    return unique_list

my_list = [""Apple"", ""Pear"", ""Apple"", ""Banana"", ""Pear""]
print___)"
Create a Python program to calculate the sum of the numbers in a given list up to a given position in the list.,"[1,3,5,4,7], Position = 3","def sum_list_position(list, position):
 sum = 0
 for i in range(position+1):
 sum += list[i]
 return sum
 
list = [1,3,5,4,7]
position = 3

print(sum_list_position(list,position)) # prints 9",Data Structure,579,"def sum_list_position___:
 sum = 0
 for i in range___:
 sum += list[i]
 return sum
 
list = ___
position = 3

print___) # prints 9"
Write a command line program in Python for sorting a list of integers with the quick sort algorithm.,"[9, 4, 7, 3, 2, 1, 8, 5, 6]","def quickSort(arr):
 if len(arr) <= 1:
 return arr

 pivot = arr[len(arr) // 2]
 left = [x for x in arr if x < pivot]
 middle = [x for x in arr if x == pivot]
 right = [x for x in arr if x > pivot]

 return quickSort(left) + middle + quickSort(right)

arr = [9, 4, 7, 3, 2, 1, 8, 5, 6]

print(quickSort(arr)) # prints [1, 2, 3, 4, 5, 6, 7, 8, 9]",Data Structure,581,"def quickSort___:
 if len___ <= 1:
 return arr

 pivot = arr[len___ // 2]
 left = [x for x in arr if x < pivot]
 middle = [x for x in arr if x == pivot]
 right = [x for x in arr if x > pivot]

 return quickSort___ + middle + quickSort___

arr = ___

print___) # prints [1, 2, 3, 4, 5, 6, 7, 8, 9]"
Generate a list of phone numbers in python given a start and end number.,"Start number: 12345
End number: 12354","phone_numbers = [str(i) for i in range(12345, 12355)]",Data Structure,582,phone_numbers = [str___ for i in range___]
Can you provide a Python code for linear search on a given list of numbers?,"[4,3,1,7,9,6]","def linearSearch(list, num):
    for i in range(len(list)):
        if list[i] == num:
            return i
    return -1

list = [4,3,1,7,9,6]
num = 9
print(linearSearch(list, num))",Data Structure,583,"def linearSearch___:
    for i in range___):
        if list[i] == num:
            return i
    return -1

list = ___
num = 9
print___)"
Create a Python program to determine the total sum of all elements of a list.,"[1, 2, 3, 4]","def calculate_sum_of_list(arr):
    total_sum = 0
    for item in arr:
        total_sum += item
    return total_sum

list1 = [1, 2, 3, 4]
sum_of_list = calculate_sum_of_list(list1)
print(sum_of_list)",Data Structure,584,"def calculate_sum_of_list___:
    total_sum = 0
    for item in arr:
        total_sum += item
    return total_sum

list1 = ___
sum_of_list = calculate_sum_of_list___
print___"
Implement a function in Python to flatten an array of arbitrarily nested arrays of integers into a flat array of integers,"[[1,2,[3]],4]","def flatten_array(my_array):
    flattened_array=[]
    for element in my_array:
        if type(element) == int:
            flattened_array.append(element)
        else:
            flattened_array+=flatten_array(element)
    return flattened_array

print(flatten_array([[1,2,[3]],4]))",Data Structure,585,"def flatten_array___:
    flattened_array=[]
    for element in my_array:
        if type___ == int:
            flattened_array___element)
        else:
            flattened_array+=flatten_array___
    return flattened_array

print___)"
Generate a function in Python that takes a list of values and returns a dictionary with the sums of adjacent values.,"[1,4,5,6,10]","def sum_adjacent(my_list):
  result = {}
  
  for i in range(len(my_list)-1):
    key = (my_list[i],my_list[i+1])
    result[key] = my_list[i]+my_list[i+1]
  
  return result
  
my_list = [1,4,5,6,10]

print(sum_adjacent(my_list))

# Output: {(1, 4): 5, (4, 5): 9, (5, 6): 11, (6, 10): 16}",Data Structure,590,"def sum_adjacent___:
  result = {}
  
  for i in range___-1):
    key = ___
    result[key] = my_list[i]+my_list[i+1]
  
  return result
  
my_list = ___

print___)

# Output: ___"
Write a Python program to convert an array of strings to an array of floats.,"arr = [""1.2"", ""2.3"", ""3.4"", ""4.5""]","def string_to_float(arr):
    return [float(x) for x in arr]",Data Structure,593,"def string_to_float___:
    return [float___ for x in arr]"
Write a Python web crawler that fetches all the URLs from a given website and stores them in a list.,https://www.example.com,"import requests
from bs4 import BeautifulSoup

url = ""https://www.example.com""
links = []

r = requests.get(url)
soup = BeautifulSoup(r.text, ""html.parser"")
for link in soup.find_all(""a""):
    links.append(link.get(""href""))

print(links)",Data Structure,597,"import requests
from bs4 import BeautifulSoup

url = ""https://www.example.com""
links = []

r = requests.get___
soup = BeautifulSoup___
for link in soup.find_all___:
    links___link.get(""href""))

print___"
Design a function in Python to pad a list to a given length by replicating the rightmost element.,"[2, 3, 5], 7","def pad_list_right(lst, pad_length):
    extra_length = pad_length - len(lst)
    lst.extend([lst[-1]] * extra_length)
    return lst

lst = [2, 3, 5]
padding_length = 7
result = pad_list_right(lst, padding_length)
print(result)",Data Structure,605,"def pad_list_right___:
    extra_length = pad_length - len___
    lst.extend___
    return lst

lst = ___
padding_length = 7
result = pad_list_right___
print___"
Create an algorithm in Python to sort an array of integers.,"The array to be sorted: [2, 1, 6, 5, 8]","def quicksort(array):
  if len(array) <= 1:
    return array
  
  pivot = array[len(array) // 2]
  left = [x for x in array if x < pivot]
  middle = [x for x in array if x == pivot]
  right = [x for x in array if x > pivot]
  return quicksort(left) + middle + quicksort(right)

# test
array = [2, 1, 6, 5, 8]
print(quicksort(array))",Data Structure,607,"def quicksort___:
  if len___ <= 1:
    return array
  
  pivot = array[len___ // 2]
  left = [x for x in array if x < pivot]
  middle = [x for x in array if x == pivot]
  right = [x for x in array if x > pivot]
  return quicksort___ + middle + quicksort___

# test
array = ___
print___)"
Write a Python program to specify the order of element when given an array and a number.,"arr=[1,2,3,4], k=3","def order_elements(arr, k):
    k_arr = []
    j_arr = []
    for i in arr:
        if i <= k:
            k_arr.append(i)
        else:
            j_arr.append(i)
    k_arr.extend(j_arr)
    return k_arr",Data Structure,611,"def order_elements___:
    k_arr = []
    j_arr = []
    for i in arr:
        if i <= k:
            k_arr___i)
        else:
            j_arr___i)
    k_arr.extend___
    return k_arr"
Write a Python function that takes in a list of elements and removes all the duplicate elements.,"[1, 2, 2, 3, 3, 3]","def remove_duplicates(nums):
  new_list = []
  for num in nums:
    if num not in new_list:
      new_list.append(num)
  return new_list
  
result = remove_duplicates([1, 2, 2, 3, 3, 3])
print(result)",Data Structure,614,"def remove_duplicates___:
  new_list = []
  for num in nums:
    if num not in new_list:
      new_list___num)
  return new_list
  
result = remove_duplicates___
print___"
Edit the given Python code to make it work for a list of dictionaries.,"list_data = [{'id': 1, 'name': 'Tom'}, {'id': 2, 'name': 'Bob'}]

for element in list_data:
  print(element)","list_data = [{'id': 1, 'name': 'Tom'}, {'id': 2, 'name': 'Bob'}]

for element in list_data:
  print(element['name'])",Data Structure,624,"list_data = [___, ___]

for element in list_data:
  print___"
Construct an algorithm in Python to find the top three numbers in a list.,"[10, 8, 3, 11, 7, 14, 13]","def top_three(lst): 
  sorted_lst = sorted(lst, reverse=True) 
  return sorted_lst[:3]

print(top_three([10, 8, 3, 11, 7, 14, 13]))",Data Structure,626,"def top_three___: 
  sorted_lst = sorted___ 
  return sorted_lst[:3]

print___)"
Create an algorithm in Python to find the average of numbers in a list.,"[3, 5, 7, 9, 11]","def find_average(lst):
    sum = 0
    for num in lst: 
        sum += num 
    # average calculation 
    avg = sum / len(lst)  
      
    return avg

average = find_average([3, 5, 7, 9, 11])
print(""The average of the numbers in the list is:"", average)",Data Structure,628,"def find_average___:
    sum = 0
    for num in lst: 
        sum += num 
    # average calculation 
    avg = sum / len___  
      
    return avg

average = find_average___
print___"
Create a function in Python that prints each element of a list one by one.,"list1 = [1,2,3,4,5]","def print_list(list1):
    for element in list1:
        print(element)

list1 = [1,2,3,4,5]

print_list(list1)",Data Structure,630,"def print_list___:
    for element in list1:
        print___

list1 = ___

print_list___"
Create a function in Python that takes a list of integers and returns the largest integer.,"[1, 5, 4, 9, 2]","def biggest_number(num_list):
  return max(num_list)

biggest = biggest_number([1, 5, 4, 9, 2])
print(biggest) # prints 9",Data Structure,631,"def biggest_number___:
  return max___

biggest = biggest_number___
print___ # prints 9"
Create a Python program that counts the occurrence of a specific character in a list,"['a', 'b', 'c', 'd', 'e', 'f', 'g'], 'f'","def count_char(my_list, char):
    count = 0
    for i in my_list:
        if i == char:
            count += 1
    return count",Data Structure,633,"def count_char___:
    count = 0
    for i in my_list:
        if i == char:
            count += 1
    return count"
"Using Python, write a program to find the most common element among a list of numbers","[4, 8, 9, 4, 6, 4, 8]","def most_frequent(list): 
    return max(set(list), key = list.count) 
  
list = [4, 8, 9, 4, 6, 4, 8]
print(most_frequent(list))",Data Structure,636,"def most_frequent___: 
    return max___, key = list.count) 
  
list = ___
print___)"
Create a Python function that takes two arrays as input and returns a new array containing the elements of both inputs.,"array1 = [1, 2, 3]
array2 = [4, 5, 6]","def merge_arrays(array1, array2):
    merged_array = array1 + array2
    return merged_array

array1 = [1, 2, 3]
array2 = [4, 5, 6]
merged_array = merge_arrays(array1, array2)
print(merged_array)",Data Structure,640,"def merge_arrays___:
    merged_array = array1 + array2
    return merged_array

array1 = ___
array2 = ___
merged_array = merge_arrays___
print___"
Create a Python program that looks through a list of colors and returns those colors that are dark.,"['Red', 'Orange', 'Green', 'Purple', 'Black', 'White']","def find_dark_colors(colors):
    dark_colors = []
    for color in colors:
        if color == 'Black' or color == 'Purple':
            dark_colors.append(color)
    return dark_colors

result = find_dark_colors(['Red', 'Orange', 'Green', 'Purple', 'Black', 'White'])
print(result)",Data Structure,645,"def find_dark_colors___:
    dark_colors = []
    for color in colors:
        if color == 'Black' or color == 'Purple':
            dark_colors___color)
    return dark_colors

result = find_dark_colors___
print___"
Create a method in Python that takes a list of numbers and returns its average.,"[7, 8, 10, 4, 11]","def avg(list): 
	sum = 0
	for item in list:
		sum += item 
	return sum / len(list) 

list1 = [7, 8, 10, 4, 11]
result = avg(list1) 
  
print(""Average of all items: "", result)",Data Structure,649,"def avg___: 
	sum = 0
	for item in list:
		sum += item 
	return sum / len___ 

list1 = ___
result = avg___ 
  
print___"
Generate a Python code to automatically add an item to the beginning of a given array.,"arr = [1,2,3,4,5]
new_item = 7","def add_item_to_beginning(arr, new_item):
    return [new_item] + arr",Data Structure,652,"def add_item_to_beginning___:
    return [new_item] + arr"
Write a Python program to randomly select a number of elements from a list without any repeat,"[1,2,3,4,5]","import random

def random_select(arr, k):
    new_arr = random.sample(arr,k)
    return new_arr",Data Structure,653,"import random

def random_select___:
    new_arr = random.sample___
    return new_arr"
Generate a list comprehensions in Python that takes a positive integer and creates a list with all its factors.,15,"factors = [list_element for list_element in range(1,15+1) if 15%list_element == 0]",Data Structure,654,factors = [list_element for list_element in range___ if 15%list_element == 0]
Sort the given list of numbers in ascending order using quick sort in Python.,"arr = [7, 4, 6, 5, 9, 4]","def quick_sort(arr):
    if len(arr) <= 1:
        return arr
 
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quick_sort(left) + middle + quick_sort(right)",Data Structure,656,"def quick_sort___:
    if len___ <= 1:
        return arr
 
    pivot = arr[len___ // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quick_sort___ + middle + quick_sort___"
Create a Python program to read a list of strings and display the same strings in a reverse order.,"[""Apple"", ""Banana"", ""Mango"", ""Orange""]","def reverse_strings(string_list):
 reversed_string_list = []
 for string in string_list:
 reversed_string_list.insert(0, string)
 return reversed_string_list

string_list = [""Apple"", ""Banana"", ""Mango"", ""Orange""]
print(reverse_strings(string_list))",Data Structure,661,"def reverse_strings___:
 reversed_string_list = []
 for string in string_list:
 reversed_string_list___0, string)
 return reversed_string_list

string_list = [""Apple"", ""Banana"", ""Mango"", ""Orange""]
print___)"
"Using Python, can you calculate the sum of all numbers in a list?","[1, 3, 5, 7, 9]","sum = 0
for num in [1, 3, 5, 7, 9]:
    sum += num

print(sum) # 25",Data Structure,669,"sum = 0
for num in ___:
    sum += num

print___ # 25"
Write a Python program to create a dictionary from two lists where the first list contains keys and the second list contains values.,"keys = ['a', 'b', 'c', 'd']
values = [1, 2, 3, 4]","def create_dictionary(keys, values):
  dictionary = dict(zip(keys, values))
  return dictionary

dictionary = create_dictionary(keys, values)
print(dictionary)",Data Structure,673,"def create_dictionary___:
  dictionary = dict___)
  return dictionary

dictionary = create_dictionary___
print___"
"Given an array of strings, build an algorithm in Python to determine the index of the element that contains the smallest number of characters.","[""Hello"", ""World"", ""Python"", ""is"", ""Fun""]","def min_length_index(arr):
  min = float('infinity')
  min_i = 0
  for i in range(len(arr)):
    if len(arr[i]) < min:
      min = len(arr[i])
      min_i = i
  return min_i

print(min_length_index([""Hello"", ""World"", ""Python"", ""is"", ""Fun""])) # 3",Data Structure,675,"def min_length_index___:
  min = float___
  min_i = 0
  for i in range___):
    if len___ < min:
      min = len___
      min_i = i
  return min_i

print___) # 3"
Write a Python function to sort a list of tuples according to the second element of each tuple.,"[(4, 3), (2, 5), (0, 1)]","def sort_by_tuple_second(tuple_list):
    tuple_list.sort(key=lambda x: x[1])
    return tuple_list",Data Structure,676,"def sort_by_tuple_second___:
    tuple_list.sort___
    return tuple_list"
Generate a Python program that takes a list of numbers and an integer threshold as inputs and returns the list elements that are greater than or equal to the threshold.,"[2, 8, 10, 13, 15], 10","def filter_numbers(nums, threshold):
 return [num for num in nums if num >= threshold]
 
 numbers = [2, 8, 10, 13, 15]
 threshold = 10
 
 print(filter_numbers(numbers, threshold))
# Output: [10, 13, 15]",Data Structure,678,"def filter_numbers___:
 return [num for num in nums if num >= threshold]
 
 numbers = ___
 threshold = 10
 
 print___)
# Output: ___"
Generate a function in Python that returns the cumulative sum of a list of numbers.,"[1, 2, 3, 4]","def cumulative_sum(nums):
 sums = []
 current_sum = 0
 
 for n in nums:
 current_sum += n
 sums.append(current_sum)
 
 return sums
 
print(cumulative_sum([1, 2, 3, 4]))    # [1, 3, 6, 10]",Data Structure,679,"def cumulative_sum___:
 sums = []
 current_sum = 0
 
 for n in nums:
 current_sum += n
 sums___current_sum)
 
 return sums
 
print___)    # [1, 3, 6, 10]"
Write a Python script to parse and extract a list of names from a provided sentence.,"""Joe, Mary, and Jake""","names = []

sentence = ""Joe, Mary, and Jake""

words = sentence.split()

for word in words:
 if word.endswith(','):
  names.append(word[:-1])
 elif word.startswith('and'):
  names.append(word[4:])
 else:
  names.append(word)
  
print(names) # Output: ['Joe', 'Mary', 'Jake']",Data Structure,680,"names = []

sentence = ""Joe, Mary, and Jake""

words = sentence.split()

for word in words:
 if word.endswith___:
  names___word[:-1])
 elif word.startswith___:
  names___word[4:])
 else:
  names___word)
  
print___ # Output: ['Joe', 'Mary', 'Jake']"
Write a Python program to count the number of even and odd numbers in a given list of integers.,"[1, 2, 3, 4, 5, 6]","def count_even_odd(numbers):
 even_count = 0
 odd_count = 0
 for num in numbers:
     if num % 2 == 0:
         even_count += 1
     else:
         odd_count += 1
 return even_count, odd_count",Data Structure,683,"def count_even_odd___:
 even_count = 0
 odd_count = 0
 for num in numbers:
     if num % 2 == 0:
         even_count += 1
     else:
         odd_count += 1
 return even_count, odd_count"
Create an algorithm in Python to find the number of pairwise disjoint subsets of a given set.,"{1, 2, 3, 4, 5}","def subsets(s):
    res = []
    for i in range(1 << len(s)):
        subset = [list(s)[x] for x in range(len(s)) if i & (1 << x)]
        if not any(set(subset).issubset(r) for r in res):
            res.append(subset)
    return res",Data Structure,684,"def subsets___:
    res = []
    for i in range___):
        subset = [list___[x] for x in range___) if i & ___]
        if not any___.issubset___ for r in res):
            res___subset)
    return res"
Create a Python function to return a list that its elements are in descending order based on input parameter.,"[7, 4, 3, 10, 2, 1]","def sort_descending(lst):
    return sorted(lst, reverse=True)
  
# Example 
list_sample = [7, 4, 3, 10, 2, 1]
result = sort_descending(list_sample)  
print(result) 
# Output: [10, 7, 4, 3, 2, 1]",Data Structure,686,"def sort_descending___:
    return sorted___
  
# Example 
list_sample = ___
result = sort_descending___  
print___ 
# Output: ___"
Write code in Python to generate all the possible permutations of a given list.,"list = [1,2,3]","import itertools

def permute(list):
    return list(itertools.permutations(list))",Data Structure,690,"import itertools

def permute___:
    return list___)"
Create a Python function to shuffle a list of numbers.,"[1, 2, 3, 4, 5]","import random

def shuffle_list(nums):
 random.shuffle(nums)
 return nums

shuffled_list = shuffle_list([1, 2, 3, 4, 5])
print(shuffled_list) #[3, 5, 2, 4, 1]",Data Structure,693,"import random

def shuffle_list___:
 random.shuffle___
 return nums

shuffled_list = shuffle_list___
print___ #[3, 5, 2, 4, 1]"
Create a Python lambda expression that prints out the square of each item in an input list.,"[1, 2, 3]","square = lambda nums: [x*x for x in nums]

squares = square([1,2,3])
print(squares)",Data Structure,695,"square = lambda nums: [x*x for x in nums]

squares = square___
print___"
"Create a Python function that takes in two parameters, a list of numbers and a number to be compared to the list. The function should return the number of elements in the list that are larger than the parameter number.","nums = [3,5,7,1,2]
num_to_compare = 3","def larger_than_num(nums, num_to_compare):
  count = 0
  for num in nums:
    if num > num_to_compare:
      count += 1
  
  return count

print(larger_than_num(nums, num_to_compare)) # 3",Data Structure,696,"def larger_than_num___:
  count = 0
  for num in nums:
    if num > num_to_compare:
      count += 1
  
  return count

print___) # 3"
Write a Python program to check if an item exists in a given list.,"mylist = [1,2,3,4,5]","def item_exists(mylist, element):
    if element in mylist:
        return True
    return False

result = item_exists([1,2,3,4,5], 3)
print(result)",Data Structure,697,"def item_exists___:
    if element in mylist:
        return True
    return False

result = item_exists___
print___"
Design a Python program to remove duplicates from a given array.,"[1, 3, 5, 1, 5, 9]","def remove_duplicates(arr): 
    final_list = [] 
    for num in arr: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list",Data Structure,698,"def remove_duplicates___: 
    final_list = [] 
    for num in arr: 
        if num not in final_list: 
            final_list___num) 
    return final_list"
Generate a Python program to add a prefix and suffix to each elements of a list.,"[apple, banana, cherry]","def add_prefix_suffix(lst, prefix, suffix): 
	return [prefix + i + suffix for i in lst]",Data Structure,699,"def add_prefix_suffix___: 
	return [prefix + i + suffix for i in lst]"
Create a function in Python that takes a list of integers as an argument and then returns the maximum integer.,"[3, 5, 12, 20, 6, 4]","def find_max(a):
  max = a[0]
  for i in a:
    if i > max:
      max = i
  return max

print(find_max([3, 5, 12, 20, 6, 4]))
# 20",Data Structure,703,"def find_max___:
  max = a___
  for i in a:
    if i > max:
      max = i
  return max

print___)
# 20"
"Create a python script that checks if all numbers in an array are greater than, equal to, or less than a given number.","[3, 5,7], 4","def checkNum(arr, num):
    response = []
    for element in arr: 
        if element > num: 
            response.append('greater than')
        elif element < num:
            response.append('less than')
        else:
            response.append('equal to')
    return response

nums = [3,5,7]
out = checkNum(nums, 4)
print(out)",Data Structure,705,"def checkNum___:
    response = []
    for element in arr: 
        if element > num: 
            response___'greater than')
        elif element < num:
            response___'less than')
        else:
            response___'equal to')
    return response

nums = ___
out = checkNum___
print___"
Complete the following Python function to sort a list of numbers in ascending order.,"[7, 1, 5, 4]","def sort_list(nums):
    for i in range(len(nums) - 1):
        for j in range(i + 1, len(nums)):
            if nums[i] > nums[j]:
                nums[i], nums[j] = nums[j], nums[i]
    return nums",Data Structure,708,"def sort_list___:
    for i in range___ - 1):
        for j in range___):
            if nums[i] > nums[j]:
                nums[i], nums[j] = nums[j], nums[i]
    return nums"
Create a Python program that takes in a list of numbers and outputs the sum of itself and all its previous numbers (including the number itself).,"[2, 3, 4, 5, 6]","def sum_of_all(nums):
    sum = 0
    for i in range(len(nums)):
        sum += sum(nums[:i+1])
    return sum

#Test
print(sum_of_all([2, 3, 4, 5, 6])) # Output: 20",Data Structure,712,"def sum_of_all___:
    sum = 0
    for i in range___):
        sum += sum___
    return sum

#Test
print___) # Output: 20"
Create a program to find the smallest number in a given list using a for loop in Python.,"Example list: [12, 4, 16, 15]","def find_smallest_number(lst):
  smallest = lst[0]
  for number in lst:
    if number < smallest:
      smallest = number
  return smallest

print(find_smallest_number([12, 4, 16, 15]))
# Output: 4",Data Structure,713,"def find_smallest_number___:
  smallest = lst___
  for number in lst:
    if number < smallest:
      smallest = number
  return smallest

print___)
# Output: 4"
Implement a search algorithm in Python that takes a list and a query as input and returns all matching elements.,"list = [1, 2, 3, 4, 5, 6]
query = 4","def search(list, query): 
    results = []
    for item in list:
        if item == query: 
            results.append(item) 
    return results

list = [1, 2, 3, 4, 5, 6]
query = 4

result = search(list, query)
print(result)",Data Structure,715,"def search___: 
    results = []
    for item in list:
        if item == query: 
            results___item) 
    return results

list = ___
query = 4

result = search___
print___"
Write a Python function that takes in a list of strings and returns a new list with all duplicates removed.,"[""apple"",""apple"",""banana"",""orange"",""pear"",""banana""]","def remove_duplicates(lst):
    new_list = []
    for x in lst:
        if x not in new_list:
            new_list.append(x)
    return new_list

print(remove_duplicates([""apple"",""apple"",""banana"",""orange"",""pear"",""banana""]))",Data Structure,721,"def remove_duplicates___:
    new_list = []
    for x in lst:
        if x not in new_list:
            new_list___x)
    return new_list

print___)"
Develop a Python script to calculate the average of all the numbers present in a list.,"list_num = [1, 5, 9, 10, 6]","def avg(list_num):
    sum = 0
    
    for num in list_num:
        sum += num
    
    return sum / len(list_num)

print(""Average is:"", avg(list_num))",Data Structure,723,"def avg___:
    sum = 0
    
    for num in list_num:
        sum += num
    
    return sum / len___

print___)"
Construct a code to sum all the numbers in a list in Python.,"[3, 4, 7, 1]","sum = 0
for num in [3, 4, 7, 1]:
  sum += num

print(sum) # Output is 15",Data Structure,727,"sum = 0
for num in ___:
  sum += num

print___ # Output is 15"
Create a Python script to sort the numbers in an array.,"[2, 4, 5, 1, 3]","def sort_array(array):
    array.sort()
    return array

result = sort_array([2, 4, 5, 1, 3])
print(result)",Data Structure,733,"def sort_array___:
    array.sort()
    return array

result = sort_array___
print___"
Write a Python program to generate a random array of integers of length N with values between 1 and M (inclusive).,#NAME?,"import random 

N = 10
M = 100

random_array = [random.randint(1, M) for _ in range(N)] 
print(random_array) 
# Output: [3, 82, 83, 32, 45, 44, 6, 67, 25, 29]",Data Structure,734,"import random 

N = 10
M = 100

random_array = [random.randint___ for _ in range___] 
print___ 
# Output: ___"
Write a python script that sorts a list of strings by length.,"['the', 'quick', 'brown', 'fox', 'jumped', 'over', 'the', 'lazy', 'dog']","def sort_strings_by_length(strings):
    # Sort strings by length in ascending order
    strings.sort(key=len)
    return strings",Data Structure,735,"def sort_strings_by_length___:
    # Sort strings by length in ascending order
    strings.sort___
    return strings"
Write a Python program to concatenate all the elements in a given list of strings.,"list_of_strings = [""a"", ""b"", ""c"", ""d"", ""e""]","def concatenate_strings(list_of_strings):
    result = """"
    for string in list_of_strings:
        result += string
    return result",Data Structure,739,"def concatenate_strings___:
    result = """"
    for string in list_of_strings:
        result += string
    return result"
Optimize the following Python code for calculating the sum of an array.,"arr = [1, 2, 3, 4, 5, 6]
total = 0
for el in arr:
 total += el","arr = [1, 2, 3, 4, 5, 6]
total = sum(arr) # use sum() to sum up all elements of the array in one line",Data Structure,743,"arr = ___
total = sum___ # use sum() to sum up all elements of the array in one line"
"Create a Python program that takes a list and an integer, and returns whether the list contains a sublist with the given sum.","List: [2, 3, 4]
Integer: 8","def has_sublist_with_sum(list, n):
    for i in range(len(list) - 1):
        sum = 0
        for j in range(i + 1, len(list)):
            sum += list[j]
            if sum == n:
                return True
    
    return False

list = [2, 3, 4]
n = 8

print(has_sublist_with_sum(list, n)) # prints True",Data Structure,744,"def has_sublist_with_sum___:
    for i in range___ - 1):
        sum = 0
        for j in range___):
            sum += list[j]
            if sum == n:
                return True
    
    return False

list = ___
n = 8

print___) # prints True"
Generate a Python program that collects contact information from a given list of numbers.,"[917, 732, 514, 614, 461, 201]","def collect_contact_information(numbers):
    
    results = []
    
    for number in numbers:
        contact_info = {}
        contact_info[""number""] = number
        
        # collect rest of contact info from number
        # e.g. enter into database and look up address, etc.
        
        results.append(contact_info)
        
    return results",Data Structure,753,"def collect_contact_information___:
    
    results = []
    
    for number in numbers:
        contact_info = {}
        contact_info[""number""] = number
        
        # collect rest of contact info from number
        # e.g. enter into database and look up address, etc.
        
        results___contact_info)
        
    return results"
Create an algorithm in Python to find the largest element in an unsorted list of numbers.,"[10, 5, 20, 8, 9, 12]","def find_large_element(lst):
  largest_number = lst[0]
  for i in range(1, len(lst)):
    if lst[i] > largest_number:
      largest_number = lst[i]
  return largest_number

my_list = [10, 5, 20, 8, 9, 12]
print(find_large_element(my_list)) # 20",Data Structure,754,"def find_large_element___:
  largest_number = lst___
  for i in range___):
    if lst[i] > largest_number:
      largest_number = lst[i]
  return largest_number

my_list = ___
print___) # 20"
Create a lists of objects using Python based on a provided list of identifiers.,"Identifiers: ['a', 'b', 'c']","objects = [
    {'name': 'a', 'value': None},
    {'name': 'b', 'value': None},
    {'name': 'c', 'value': None}
]",Data Structure,757,"objects = [
    ___,
    ___,
    ___
]"
Write a function in Python that takes a list of strings and returns all unique strings from the list.,"[""one"", ""two"", ""three"", ""two"", ""four"", ""five"", ""six""]","def find_unique_strings(strings):
 
    unique_strings = []
    for s in strings:
        if s not in unique_strings:
            unique_strings.append(s)
 
    return unique_strings",Data Structure,764,"def find_unique_strings___:
 
    unique_strings = []
    for s in strings:
        if s not in unique_strings:
            unique_strings___s)
 
    return unique_strings"
Generate Python code to perform a binary search on a given array.,"array = [1, 2, 3, 4, 5, 6, 7, 8, 9]","def binary_search(arr, item):
    start = 0
    end = len(arr)-1
    
    while start <= end:
        mid = (start + end) // 2
        guess = arr[mid]
        if guess == item:
            return mid
        else:
            if guess > item:
                end = end - 1
            else:
                start = start + 1
    return None",Data Structure,765,"def binary_search___:
    start = 0
    end = len___-1
    
    while start <= end:
        mid = ___ // 2
        guess = arr[mid]
        if guess == item:
            return mid
        else:
            if guess > item:
                end = end - 1
            else:
                start = start + 1
    return None"
Generate a Python program to filter a list of numbers and return the numbers that are divisible by 7.,"[14, 21, 28, 35, 42]","def filter_by_seven(nums):
    filtered_nums = [num for num in nums if num % 7 == 0]
    return filtered_nums

result = filter_by_seven([14, 21, 28, 35, 42])
print(result)",Data Structure,768,"def filter_by_seven___:
    filtered_nums = [num for num in nums if num % 7 == 0]
    return filtered_nums

result = filter_by_seven___
print___"
Write a Python program to sum all the items in a list.,"list = [1,2,3,4,5]","def sum_list_items(list):
    sum = 0
    for item in list:
        sum += item
    return sum

print(sum_list_items(list))",Data Structure,770,"def sum_list_items___:
    sum = 0
    for item in list:
        sum += item
    return sum

print___)"
Modify this Python code to insert the number 5 into a list at the 5th position.,"data = [1, 2, 3, 4]","data = [1, 2, 3, 4] 

# insert element '5' at 5th position 
data.insert(4, 5) 
print(""Modified list:"") 
print(data)",Data Structure,774,"data = ___ 

# insert element '5' at 5th position 
data___4, 5) 
print___ 
print___"
Write a Python script for finding the maximum and minimum value in a given list.,"[1,5,6,8,7]","list = [1,5,6,8,7]
min_val = min(list)
max_val = max(list)

print(""Minimum value in list is: %d""%min_val)
print(""Maximum value in list is: %d""%max_val)",Data Structure,776,"list = ___
min_val = min___
max_val = max___

print___
print___"
Create a Python script that takes two inputs from the user: a list of numbers and an integer. The script should loop over the input list and check if any two numbers in the list add up to the input integer.,"list = [3, 5, 10, 15]
integer = 17","list = [3, 5, 10, 15]
integer = 17

total = 0

for i in list:
 for j in list:
 total = i + j
 if total == integer:
 print(""Two numbers that add up to"", integer, ""are"", i, ""and"", j)
 break",Data Structure,779,"list = ___
integer = 17

total = 0

for i in list:
 for j in list:
 total = i + j
 if total == integer:
 print___
 break"
Write a Python function which takes an array as input and prints out all the even numbers in the array.,"[1, 4, 5, 8, 9, 11]","def print_even(nums):
  for num in nums:
    if num % 2 == 0:
      print(num)
      
print_even([1, 4, 5, 8, 9, 11])",Data Structure,781,"def print_even___:
  for num in nums:
    if num % 2 == 0:
      print___
      
print_even___"
Write a Python function that takes two lists as input and returns a new list containing the intersection of the two lists.,"[1, 2, 3, 4], [3, 4, 5, 6]","def intersection_of_lists(list1, list2):
    return [value for value in list1 if value in list2]

result = intersection_of_lists([1, 2, 3, 4], [3, 4, 5, 6])
print(result)
# [3, 4]",Data Structure,785,"def intersection_of_lists___:
    return [value for value in list1 if value in list2]

result = intersection_of_lists___
print___
# ___"
Create a Python program that takes a list of strings as parameters and returns a new list with the strings sorted in alphabetical order.,"[“Windows”, “MacOS”, “Unix”, “CentOS”, “RedHat”]","def sort_alphanumeric(items):
    return sorted(items, key=lambda item: item.lower())

def main():
    items = [“Windows”, “MacOS”, “Unix”, “CentOS”, “RedHat”]
    sorted_items = sort_alphanumeric(items)
    print(sorted_items)

if __name__ == “__main__”:
    main()",Data Structure,791,"def sort_alphanumeric___:
    return sorted___)

def main():
    items = [“Windows”, “MacOS”, “Unix”, “CentOS”, “RedHat”]
    sorted_items = sort_alphanumeric___
    print___

if __name__ == “__main__”:
    main()"
Implement a program in Python to find the average of an array of length n.,"Input: [2, 4, 6, 8, 10]","def findAverage(arr):
    # Initialize sum
    sum = 0
 
    # Iterate over the array to calculate sum
    for n in arr:
        sum += n
 
    # Calculate the average and return  
    return sum/len(arr)


# Driver code
arr = [2, 4, 6, 8, 10]
print(findAverage(arr))",Data Structure,792,"def findAverage___:
    # Initialize sum
    sum = 0
 
    # Iterate over the array to calculate sum
    for n in arr:
        sum += n
 
    # Calculate the average and return  
    return sum/len___


# Driver code
arr = ___
print___)"
Create an algorithm in Python to search an element from a given array of integers.,"arr = [3, 5, 6, 9, 11]","def searchElement(arr, element):
    for i in range(len(arr)):
        if arr[i] == element:
            return i
    return -1",Data Structure,795,"def searchElement___:
    for i in range___):
        if arr[i] == element:
            return i
    return -1"
Design a python script to convert a list of strings to a dictionary,"my_list = [""Apple"", ""Banana"", ""Cherry""]","my_list = [""Apple"", ""Banana"", ""Cherry""]

def list_to_dict(lst):
    dictionary = dict(zip(lst, range(len(lst))))
    return dictionary
    
dictionary = list_to_dict(my_list)
print(dictionary)",Data Structure,798,"my_list = [""Apple"", ""Banana"", ""Cherry""]

def list_to_dict___:
    dictionary = dict___)))
    return dictionary
    
dictionary = list_to_dict___
print___"
Create a python program to filter a list of numbers to include only the prime numbers,"[2, 3, 7, 11, 12, 15]","def isPrime(n): 
    for i in range(2,n): 
        if n % i == 0: 
            return False
    return True

numbers = [2, 3, 7, 11, 12, 15] 
primes = filter(isPrime, numbers)
print('Prime numbers are:') 
print(list(primes))",Data Structure,803,"def isPrime___: 
    for i in range___: 
        if n % i == 0: 
            return False
    return True

numbers = ___ 
primes = filter___
print___ 
print___)"
"Write a Python function that given a list of strings and an integer n, returns the strings that have a length greater than n.","['Cat', 'Dog', 'Rabbit', 'Elephant'], n = 5","def filter_strings(strings, n):
    return [s for s in strings if len(s) > n]",Data Structure,805,"def filter_strings___:
    return [s for s in strings if len___ > n]"
Write a Python script that sorts an array of strings in alphabetical order case insensitively.,"[""Apple"", ""Banana"", ""orange""]","def sort_array(arr): 
    arr.sort(key = lambda x: x.lower()) 
    return arr

# driver code 
arr = [""Apple"", ""Banana"", ""orange""] 
print(sort_array(arr)) 
# Output: ['Apple', 'Banana', 'orange']",Data Structure,808,"def sort_array___: 
    arr.sort___) 
    return arr

# driver code 
arr = [""Apple"", ""Banana"", ""orange""] 
print___) 
# Output: ['Apple', 'Banana', 'orange']"
Create an algorithm in Python 3 to find the largest number in a list.,"Input list: [1, 7, 3, 4, 9, 2]","def find_largest(list): 
    n = len(list) 
    max = list[0] 
    for i in range(1,n): 
        if list[i] > max: 
            max = list[i] 
    return max 

list = [1, 7, 3, 4, 9, 2]
largest_number = find_largest(list) 
print(""Largest number in the given list is:"", largest_number)",Data Structure,809,"def find_largest___: 
    n = len___ 
    max = list___ 
    for i in range___: 
        if list[i] > max: 
            max = list[i] 
    return max 

list = ___
largest_number = find_largest___ 
print___"
Generate a program in Python for summing up the elements of an array.,"[1, 4, 6]","def sumArrayElements(arr):
    total = 0
    for num in arr:
        total += num
    return total

arr = [1, 4, 6]
result = sumArrayElements(arr)
print(result)",Data Structure,812,"def sumArrayElements___:
    total = 0
    for num in arr:
        total += num
    return total

arr = ___
result = sumArrayElements___
print___"
Create a Python program to search a list for the maximum value.,"list = [1, 2, 3, 9, 8, 4]","def findMax(list): 
    max = list[0] 
    for i in range(1, len(list)): 
        if list[i] > max: 
            max = list[i] 
    return max

list = [1, 2, 3, 9, 8, 4] 
print(""The maximum element in the list is:"", findMax(list))",Data Structure,814,"def findMax___: 
    max = list___ 
    for i in range___): 
        if list[i] > max: 
            max = list[i] 
    return max

list = ___ 
print___)"
Write a Python function to create a new list filled with the divided result of a given list and a specific number.,"numbers = [2, 8, 10]
divisor = 2","def divide_list(numbers, divisor):
 return [i/divisor for i in numbers]",Data Structure,815,"def divide_list___:
 return [i/divisor for i in numbers]"
Write an algorithm in Python to sort a given list of strings in alphabetical order.,"[‘cat’, ‘dog’, ‘apple’, ‘zebra’]","def sort_string_list(strings):
  strings.sort()
  return strings

my_list = ['cat', 'dog', 'apple', 'zebra']
print(sort_string_list(my_list))",Data Structure,816,"def sort_string_list___:
  strings.sort()
  return strings

my_list = ['cat', 'dog', 'apple', 'zebra']
print___)"
Implement a sorting algorithm in Python that sorts a list of strings in descending order of length.,"arr = [""Apple"", ""Banana"", ""Cat"", ""Elephant""]","def sort_by_length(arr): 
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            if len(arr[i]) < len(arr[j]): 
                arr[i], arr[j] = arr[j], arr[i] 
    return arr
  
print(sort_by_length(arr))",Data Structure,819,"def sort_by_length___: 
    for i in range___):
        for j in range___):
            if len___ < len___: 
                arr[i], arr[j] = arr[j], arr[i] 
    return arr
  
print___)"
Write a Python program to compute the average of the numbers in the list.,"numbers = [1, 3, 5, 7, 9]","def compute_average(numbers):
sum = 0
for num in numbers:
 sum += num
return sum/len(numbers)

numbers = [1, 3, 5, 7, 9]
average = compute_average(numbers)
print(""Average is "" + str(average))",Data Structure,820,"def compute_average___:
sum = 0
for num in numbers:
 sum += num
return sum/len___

numbers = ___
average = compute_average___
print___)"
Design a function in Python to find an element in a given list.,"[3, 2, 4, 5, 6, 7], 4","def findElement(arr, element):
    for i in range(0, len(arr)):
        if arr[i] == element:
            return True
    return False",Data Structure,825,"def findElement___:
    for i in range___):
        if arr[i] == element:
            return True
    return False"
Create a Python function that takes a list and an integer as inputs and returns a new list with every item in the original list multiplied by the integer.,"list = [3, 2, 1]
integer = 5","def multiply_list(lst, i):
  return [j * i for j in lst]

result = multiply_list(list, integer)
print(result) # [15, 10, 5]",Data Structure,838,"def multiply_list___:
  return [j * i for j in lst]

result = multiply_list___
print___ # [15, 10, 5]"
Edit the following Python code to reverse the list.,"list1 = [1,2,3,4,5,6]","list1 = [1,2,3,4,5,6]

# Reversing the list
list1 = list1[::-1] # Output: [6, 5, 4, 3, 2, 1]",Data Structure,839,"list1 = ___

# Reversing the list
list1 = list1[::-1] # Output: ___"
Write a loop in Python to traverse a given list of numbers in reverse order,"[1, 2, 3, 4, 5]","for i in range(len(numbers)-1, -1, -1):
    print(numbers[i])",Data Structure,842,"for i in range___-1, -1, -1):
    print___"
Provide a python program that computes the maximum value from a given set of values,"values = [13, 33, 45, 3, 5, 17, 19, 21]","# Create a list for our values
values = [13, 33, 45, 3, 5, 17, 19, 21]

# Initialize maximum value
max_val = 0

# Iterate over the list
for val in values:
    # Compare with current maximum value
    if val > max_val:
        # Update maximum value
        max_val = val

# Print the maximum value
print(""Maximum value:"", max_val)",Data Structure,846,"# Create a list for our values
values = ___

# Initialize maximum value
max_val = 0

# Iterate over the list
for val in values:
    # Compare with current maximum value
    if val > max_val:
        # Update maximum value
        max_val = val

# Print the maximum value
print___"
Generate a code to calculate the mean absolute difference of items in a list in Python.,"my_list = [1, 2, 3, 4, 5]","def mean_absolute_difference(my_list):
    diff = 0
    for i in range(len(my_list) - 1):
        diff += abs(my_list[i] - my_list[i + 1])
    return diff / (len(my_list) - 1)

if __name__ == ""__main__"":
    print(mean_absolute_difference(my_list))",Data Structure,847,"def mean_absolute_difference___:
    diff = 0
    for i in range___ - 1):
        diff += abs___
    return diff / ___ - 1)

if __name__ == ""__main__"":
    print___)"
Generate an algorithm in Python to count the number of inversions in an array.,"[3, 5, 2, 1, 4]","def count_inversions(arr):
  inv_count = 0
  for i in range(len(arr)):
    for j in range(i + 1, len(arr)):
      if arr[i] > arr[j]:
        inv_count += 1
  return inv_count

arr = [3, 5, 2, 1, 4] 
print(count_inversions(arr))",Data Structure,849,"def count_inversions___:
  inv_count = 0
  for i in range___):
    for j in range___):
      if arr[i] > arr[j]:
        inv_count += 1
  return inv_count

arr = ___ 
print___)"
Generate a procedure in the form of a Python script to automate the process of downloading a list of websites.,"website_list: [""www.example.com"", ""www.google.com"", ""www.facebook.com""]","import requests

for website in website_list:
    response = requests.get(website)
    with open(website.split('.')[0]+'.html', 'wb') as file:
        file.write(response.content)",Data Structure,857,"import requests

for website in website_list:
    response = requests.get___
    with open___[0]+'.html', 'wb') as file:
        file.write___"
Generate a python program to normalize a list of values in the range 0 and 1,"[-1, 0, 1, 2]","def normalize_list(input_list):
    min_val = min(input_list)
    max_val = max(input_list)
    output_list = []
    for value in input_list:
        normalized_value = (value - min_val) / (max_val - min_val)
        output_list.append(normalized_value)
    return output_list",Data Structure,858,"def normalize_list___:
    min_val = min___
    max_val = max___
    output_list = []
    for value in input_list:
        normalized_value = ___ / ___
        output_list___normalized_value)
    return output_list"
Create a Python program to crop a list to a specific length,"list = [1, 2, 3, 4, 5, 6], length = 4","def crop_list(input_list, length):
    output_list = []
    for i in range(length):
        output_list.append(input_list[i])
    return output_list

my_list = [1, 2, 3, 4, 5, 6]
length = 4
result = crop_list(my_list, length)
print(result)",Data Structure,860,"def crop_list___:
    output_list = []
    for i in range___:
        output_list___input_list[i])
    return output_list

my_list = ___
length = 4
result = crop_list___
print___"
Create a function in Python that takes a list of strings and count all occurrences of a particular word in the list.,"[""how"", ""how"", ""are"", ""you"", ""how"", ""are"", ""you""], ""how""","def countOccurrences(words, target):
    count = 0
    for word in words:
        if word == target:
            count += 1
    
    return count

print(countOccurrences([""how"", ""how"", ""are"", ""you"", ""how"", ""are"", ""you""], ""how""))",Data Structure,864,"def countOccurrences___:
    count = 0
    for word in words:
        if word == target:
            count += 1
    
    return count

print___)"
Create an application in Python which will take an array of numbers and returns the median.,"[3, 4, 9, 6, 5]","def get_median(arr):
 arr.sort()
 n = len(arr)
 if n % 2 == 0:
 return (arr[n//2] + arr[n//2 - 1])/2
 else:
 return arr[n//2]

if name == ""main"":
 arr = [3, 4, 9, 6, 5]
 print(get_median(arr)) # Output -> 5.5",Data Structure,866,"def get_median___:
 arr.sort()
 n = len___
 if n % 2 == 0:
 return ___/2
 else:
 return arr[n//2]

if name == ""main"":
 arr = ___
 print___) # Output -> 5.5"
Compose a Python program for finding the median value of an unsorted array.,"[4, 5, 6, 7, 8, 1, 2]","def median(arr):
    # Sort the array
    arr.sort()

    # Calculate length
    n = len(arr)

    # Check if n is even
    if n % 2 == 0:
        median1 = arr[n // 2]
        median2 = arr[n // 2 - 1]
        median = (median1 + median2) / 2
    else:
        median = arr[n // 2]

    return median

arr = [4, 5, 6, 7, 8, 1, 2]
result = median(arr)
print(result) # 4.5",Data Structure,867,"def median___:
    # Sort the array
    arr.sort()

    # Calculate length
    n = len___

    # Check if n is even
    if n % 2 == 0:
        median1 = arr[n // 2]
        median2 = arr[n // 2 - 1]
        median = ___ / 2
    else:
        median = arr[n // 2]

    return median

arr = ___
result = median___
print___ # 4.5"
Create an algorithm in Python that takes a list and returns the sum of the list items.,"[1, 2, 3]","def listSum(lst):
    s = 0
    for i in range (len(lst)):
        s += lst[i]
    return s

print (listSum([1,2,3])) # 6",Data Structure,869,"def listSum___:
    s = 0
    for i in range ___):
        s += lst[i]
    return s

print ___) # 6"
Create an algorithm in Python that takes a list of numbers and returns a new list with only the even numbers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def get_even_numbers(nums_list):
  even_numbers = []
  for num in nums_list:
    if num % 2 == 0:
      even_numbers.append(num)
  return even_numbers

nums_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
even_numbers = get_even_numbers(nums_list)
print(even_number)",Data Structure,871,"def get_even_numbers___:
  even_numbers = []
  for num in nums_list:
    if num % 2 == 0:
      even_numbers___num)
  return even_numbers

nums_list = ___
even_numbers = get_even_numbers___
print___"
Create a Python function that takes a list and returns a list of the unique elements of that list.,"myList = [1, 2, 3, 4, 5, 1, 2]","def uniqueList(myList):
    uniqueList = []
    for el in myList:
        if el not in uniqueList:
            uniqueList.append(el)
    return uniqueList",Data Structure,878,"def uniqueList___:
    uniqueList = []
    for el in myList:
        if el not in uniqueList:
            uniqueList___el)
    return uniqueList"
Transform the following Python function into a list comprehension.,"numbers = [1, 2, 3, 4, 5]
result = []
for num in numbers:
    result.append(num * 2)","numbers = [1, 2, 3, 4, 5]
result = [num * 2 for num in numbers]",Data Structure,882,"numbers = ___
result = [num * 2 for num in numbers]"
Optimize a Python function to compute the maximum value in a list of integers.,"list = [1, 3, 2, 5, 6, 4]","def get_max(list): 
  
  # Initialize the maximum
  max_v = list[0]

  # Compute the maximum
  for i in range(1, len(list)):
    if list[i] > max_v:
      max_v = list[i]

  # Return the maximum
  return max_v",Data Structure,887,"def get_max___: 
  
  # Initialize the maximum
  max_v = list___

  # Compute the maximum
  for i in range___):
    if list[i] > max_v:
      max_v = list[i]

  # Return the maximum
  return max_v"
Generate a structured array from a given dictionary in Python.,"dictionary = {
  ""name"": ""John"",
  ""age"": 24,
  ""nationality"": ""American""
}","import numpy as np
data = np.array(list(dictionary.values()),
      dtype=[('name','U20'),('age','i4'),('nationality','U10')]
)",Data Structure,888,"import numpy as np
data = np.array___),
      dtype=[___,___,___]
)"
Write a Python function that takes a list of words and removes all words that are not equal to the given word.,"word = 'Hello'
words = ['Hi', 'there', 'Hello', 'Goodbye']","def remove_words(word, words):
    return [w for w in words if w == word]",Data Structure,892,"def remove_words___:
    return [w for w in words if w == word]"
Generate a Python script for sorting a list in ascending order.,"[3, 4, 8, 5, 10]","def sortList(list): 
    list.sort() 
    return list
    
unsorted_list = [3, 4, 8, 5, 10]
sorted_list = sortList(unsorted_list)

print(""Sorted list:"", sorted_list)",Data Structure,893,"def sortList___: 
    list.sort() 
    return list
    
unsorted_list = ___
sorted_list = sortList___

print___"
Create a for loop in python to search for a word in a given list.,"The list is ['cat', 'dog', 'bird', 'tiger']","def find_word(my_list, word):
    for i in my_list:
        if i == word:
            return True
    return False",Data Structure,898,"def find_word___:
    for i in my_list:
        if i == word:
            return True
    return False"
Create a python program to filter a list of items by a condition,"Given a list of numbers example: [1,2,3,4,5] filter for items thats greater than or equal to 3.","def filter_list(list_input):
    filtered_list = [i for i in list_input if i >= 3]
    return filtered_list

list_input = [1,2,3,4,5]
filtered_list = filter_list(list_input)
print(filtered_list) # [3, 4, 5]",Data Structure,899,"def filter_list___:
    filtered_list = [i for i in list_input if i >= 3]
    return filtered_list

list_input = ___
filtered_list = filter_list___
print___ # [3, 4, 5]"
Write a Python program to find the smallest number using the given array of numbers.,"[13, 45, 7, 23]","def smallest_number(arr):
    min_number = arr[0]
    for num in arr[1:]:
        if num < min_number:
            min_number = num
    return min_number",Data Structure,900,"def smallest_number___:
    min_number = arr___
    for num in arr[1:]:
        if num < min_number:
            min_number = num
    return min_number"
Write a Python program to check an array if it contains consecutive integers.,"[2, 3, 4, 5, 6]","def check_array_for_consecutive(arr):
    arr.sort()
    for i in range(len(arr)-1):
        if arr[i+1] - arr[i] != 1:
            return False
    return True

arr = [2, 3, 4, 5, 6]
print(check_array_for_consecutive(arr))",Data Structure,907,"def check_array_for_consecutive___:
    arr.sort()
    for i in range___-1):
        if arr[i+1] - arr[i] != 1:
            return False
    return True

arr = ___
print___)"
Create a function in Python that takes in a list and sorts it in ascending order.,"[3, 5, 1, 2, 9]","def sortList(list):
 list.sort()
 return list

print(sortList([3, 5, 1, 2, 9])) # Output: [1, 2, 3, 5, 9]",Data Structure,913,"def sortList___:
 list.sort()
 return list

print___) # Output: [1, 2, 3, 5, 9]"
Create a function in Python to produce a ``new_list`` which contains substring elements from the given ``list``,"list = [""apple"",""banana"",""orange"",""carrot""]","def produce_new_list(list):
    '''This function will return a new list containing substrings from the given list'''
    new_list = []

    for item in list:
        for i in range(0, len(item)):
            new_list.append(item[0:i+1])  

    return new_list",Data Structure,914,"def produce_new_list___:
    '''This function will return a new list containing substrings from the given list'''
    new_list = []

    for item in list:
        for i in range___):
            new_list___item[0:i+1])  

    return new_list"
Write an algorithm in Python to detect the monotonic increasing pattern in a given array.,"[2, 3, 4, 5, 6, 7, 8, 1]","def increasingPattern(arr):
	status = False
	check = arr[0]
	for i in range(1,len(arr)): 
		if check < arr[i]:
			check = arr[i]
			status = True
		else:
			status = False
			break
	return status


# Test case
arr = [2, 3, 4, 5, 6, 7, 8, 1]
print(increasingPattern(arr))  # Output: False",Data Structure,918,"def increasingPattern___:
	status = False
	check = arr___
	for i in range___): 
		if check < arr[i]:
			check = arr[i]
			status = True
		else:
			status = False
			break
	return status


# Test case
arr = ___
print___)  # Output: False"
Create a script in Python to classify a given array of integers into even and odd numbers.,"[1, 2, 3, 4, 5]","def classify(arr):
    even = []
    odd = []
    for x in arr:
        if x % 2 == 0:
            even.append(x)
        else:
            odd.append(x)
    return even, odd

even, odd = classify([1, 2, 3, 4, 5])
print(""Even numbers: "", even)
print(""Odd numbers: "", odd)",Data Structure,921,"def classify___:
    even = []
    odd = []
    for x in arr:
        if x % 2 == 0:
            even___x)
        else:
            odd___x)
    return even, odd

even, odd = classify___
print___
print___"
Create a Python script to calculate the median of an array of integers.,"[3, 1, 4, 5, 2]","def median(arr): 
 # Sort the array 
 arr.sort() 
 n = len(arr) 
  
 # If number of elements is odd, 
 # return the middle element 
 if n % 2 != 0: 
  return arr[n//2] 
  
 # If number of elements is even, 
 # return the average of the middle 
 # two elements 
 else:
  return (arr[n//2] + arr[(n//2)-1]) / 2

# Driver code 
arr = [3, 1, 4, 5, 2] 
print(median(arr))",Data Structure,926,"def median___: 
 # Sort the array 
 arr.sort() 
 n = len___ 
  
 # If number of elements is odd, 
 # return the middle element 
 if n % 2 != 0: 
  return arr[n//2] 
  
 # If number of elements is even, 
 # return the average of the middle 
 # two elements 
 else:
  return ___-1]) / 2

# Driver code 
arr = ___ 
print___)"
Write a Python program to classify a given list of numbers into three groups based on their range.,"[1, 2, 5, 9, 20]","def classify_list(list):
    result = {""low"": [], ""mid"": [], ""high"": []}
    for num in list:
        if num < 4:
            result[""low""].append(num)
        elif num < 10:
            result[""mid""].append(num)
        else:
            result[""high""].append(num)
    return result",Data Structure,927,"def classify_list___:
    result = ___
    for num in list:
        if num < 4:
            result[""low""]___num)
        elif num < 10:
            result[""mid""]___num)
        else:
            result[""high""]___num)
    return result"
Design a Python program to sort a list of dictionaries by a given field.,"[
	{
		""name"": ""A"",
		""age"": 25,
		""salary"": 100
	},
	{
		""name"": ""B"",
		""age"": 35,
		""salary"": 200
	},
	{
		""name"": ""C"",
		""age"": 15,
		""salary"": 50
	},
]","def sort_dicts_by_field(dict_list, field):
    sorted_list = sorted(dict_list, key=lambda k: k[field])
    return sorted_list",Data Structure,935,"def sort_dicts_by_field___:
    sorted_list = sorted___
    return sorted_list"
Create a Python script to merge all the elements in a given list of lists.,"[[1, 2, 3], [4, 5], [6]]","def merge_lists(l):
    result = []
    for sublist in l:
        for item in sublist:
            result.append(item)
    return result

print(merge_lists([[1, 2, 3], [4, 5], [6]]))",Data Structure,938,"def merge_lists___:
    result = []
    for sublist in l:
        for item in sublist:
            result___item)
    return result

print___)"
Generate a Python function that takes an integer array as input and returns the number of unique elements in the array.,"[1, 2, 3, 2, 1, 4, 7, 8, 9, 8]","def num_unique_elements(arr):
    unique_arr = set(arr)
    return len(unique_arr)

print(num_unique_elements([1, 2, 3, 2, 1, 4, 7, 8, 9, 8]))",Data Structure,939,"def num_unique_elements___:
    unique_arr = set___
    return len___

print___)"
Write a Python function to sum up elements in a given array.,"[1, 2, 3, 4, 5]","def sum_array(arr):
 result = 0
 for item in arr:
 result += item
 return result",Data Structure,940,"def sum_array___:
 result = 0
 for item in arr:
 result += item
 return result"
Create an algorithm for sorting a list of integers in descending order in Python.,"[6, 2, 12, 5]","def sortDescending(numbers):
    for i in range(len(numbers)): 
        for j in range(i):
            if numbers[j] < numbers[j+1]:
                temp = numbers[j] 
                numbers[j] = numbers[j+1] 
                numbers[j+1] = temp 
  
    return numbers

print(sortDescending([6,2,12,5]))",Data Structure,946,"def sortDescending___:
    for i in range___): 
        for j in range___:
            if numbers[j] < numbers[j+1]:
                temp = numbers[j] 
                numbers[j] = numbers[j+1] 
                numbers[j+1] = temp 
  
    return numbers

print___)"
Create a web scraper in Python to extract information from a website. The scraper should find all the links in the given webpage and store them in a list.,https://www.example.com,"import requests
from bs4 import BeautifulSoup

url = 'https://www.example.com'
response = requests.get(url)
html = response.content
soup = BeautifulSoup(html, 'html5lib')

links = []
for link in soup.find_all('a', href=True):
 links.append(link['href'])
 
print(links)",Data Structure,947,"import requests
from bs4 import BeautifulSoup

url = 'https://www.example.com'
response = requests.get___
html = response.content
soup = BeautifulSoup___

links = []
for link in soup.find_all___:
 links___link['href'])
 
print___"
Generate a python function to detect whether all elements in a given array are equal.,"arr = [1, 1, 1, 1]","def all_equal(arr):
    return len(set(arr)) == 1",Data Structure,951,"def all_equal___:
    return len___) == 1"
Create a function to sort a list of strings alphabetically in Python.,"[""zzz"",""ccc"",""aaa"",""rrr"",""bbb""]","def sort_strings(string_list): 
    return sorted(string_list)",Data Structure,954,"def sort_strings___: 
    return sorted___"
Write Python code to remove all duplicates from a given list,"[1,2,3,4,4,4,5]","def remove_duplicates(input_list):
    output_list = []
    for i in input_list:
        if i not in output_list:
            output_list.append(i)
    return output_list

result = remove_duplicates([1, 2, 3, 4, 4, 4, 5])
print(result)",Data Structure,961,"def remove_duplicates___:
    output_list = []
    for i in input_list:
        if i not in output_list:
            output_list___i)
    return output_list

result = remove_duplicates___
print___"
"Write a function in Python that takes a set of numbers and prints the sum, mean and standard deviation of the numbers.","[1, 2, 3, 4, 5]","def print_stats(numbers):
    sum = 0
    for i in numbers:
        sum = sum + i
    mean = sum / len(numbers) 

    ssd = 0
    for i in numbers:
        ssd = ssd + (i-mean)**2
    ssd = ssd / len(numbers)
    standard_dev = sqrt(ssd)
    
    print(""Sum = "", sum)
    print(""Mean = "", mean)
    print(""Standard Deviation = "", standard_dev)",Data Structure,963,"def print_stats___:
    sum = 0
    for i in numbers:
        sum = sum + i
    mean = sum / len___ 

    ssd = 0
    for i in numbers:
        ssd = ssd + ___**2
    ssd = ssd / len___
    standard_dev = sqrt___
    
    print___
    print___
    print___"
Write a Python script to iteratively apply a function to all the elements in a list.,"list = [1, 2, 3, 4]","""""""
Write a Python script to iteratively apply a function to all the elements in a list.
""""""

def applyFunc(list_data, func):
    result = []
    for item in list_data:
        result.append(func(item))
    return result

list_data = [1, 2, 3, 4]

def square(x):
    return x**2

squares = applyFunc(list_data, square)
print(squares)",Data Structure,965,"""""""
Write a Python script to iteratively apply a function to all the elements in a list.
""""""

def applyFunc___:
    result = []
    for item in list_data:
        result___func(item))
    return result

list_data = ___

def square___:
    return x**2

squares = applyFunc___
print___"
Generate a function in Python to create a list of the nth prime number.,n=3,"def get_nth_prime(n): 
    prime_nums = [2] 
    check_num = 3 
    while len(prime_nums) < n: 
        is_prime = True 
        for i in prime_nums: 
            if check_num % i == 0: 
                is_prime = False 
                break 
        if is_prime: 
            prime_nums.append(check_num) 
        check_num += 2 
    return prime_nums[-1]",Data Structure,968,"def get_nth_prime___: 
    prime_nums = ___ 
    check_num = 3 
    while len___ < n: 
        is_prime = True 
        for i in prime_nums: 
            if check_num % i == 0: 
                is_prime = False 
                break 
        if is_prime: 
            prime_nums___check_num) 
        check_num += 2 
    return prime_nums[-1]"
Construct a Python program to find a missing number in an array of n distinct numbers.,"[1, 3, 8, 5, 6]","def find_missing_num(arr):
    n = len(arr)+1
    sum_of_n = int(n*(n+1)/2)
    sum_of_arr = 0
    for i in arr:
        sum_of_arr += i
    return sum_of_n - sum_of_arr",Data Structure,969,"def find_missing_num___:
    n = len___+1
    sum_of_n = int___/2)
    sum_of_arr = 0
    for i in arr:
        sum_of_arr += i
    return sum_of_n - sum_of_arr"
Create a Python script to filter out elements in a list that are divisible by 3.,"[9, 8, 10, 27, 12, 15]","numbers = [9, 8, 10, 27, 12, 15]

def filter_div_by_3(numbers):
    return [num for num in numbers if num % 3 != 0]

filtered_numbers = filter_div_by_3(numbers)
print(filtered_numbers)",Data Structure,971,"numbers = ___

def filter_div_by_3___:
    return [num for num in numbers if num % 3 != 0]

filtered_numbers = filter_div_by_3___
print___"
Write a Python program which prints the index of the given value in a list.,"my_list = [2, 4, 6, 8]
value = 4","def find_index(my_list, value):
    for i in range(len(my_list)):
        if my_list[i] == value:
            return i",Data Structure,974,"def find_index___:
    for i in range___):
        if my_list[i] == value:
            return i"
Design and program a Python function to find the maximum number from an array of integers,"[10, 2, 4, 6, 8, 9]","def max_num(arr):
    max_num = arr[0]
    for i in arr:
        if i > max_num:
            max_num = i
    return max_num

if __name__ == '__main__':
    arr = [10, 2, 4, 6, 8, 9]
    print('The maximum number in array is', max_num(arr))",Data Structure,977,"def max_num___:
    max_num = arr___
    for i in arr:
        if i > max_num:
            max_num = i
    return max_num

if __name__ == '__main__':
    arr = ___
    print___)"
Modify the Python program to calculate the sum of an array so that it finds the largest number in the array.,"array = [1, 2, 3, 4, 5]","def array_sum(arr):
 largest = 0
 for num in arr:
 largest = max(largest, num)
 return largest

print(array_sum([1, 2, 3, 4, 5]))",Data Structure,978,"def array_sum___:
 largest = 0
 for num in arr:
 largest = max___
 return largest

print___)"
Edit the given Python code to sort a list of words by their length.,"lst = ['bar','bird','cat']","lst = sorted(lst, key=len)",Data Structure,979,lst = sorted___
Identify the best algorithm to find the maximum sum of a subarray in a given array and write a Python code snippet accordingly.,"arr = [-2, 1, -3, 4, -1, 2, 1, -5, 4]","def maxSubarraySum(arr): 
    max_so_far = 0
    max_ending_here = 0
  
    for i in range(0, len(arr)): 
        max_ending_here += arr[i] 
        if max_ending_here < 0: 
            max_ending_here = 0
        if (max_so_far < max_ending_here): 
            max_so_far = max_ending_here 
    return max_so_far",Data Structure,981,"def maxSubarraySum___: 
    max_so_far = 0
    max_ending_here = 0
  
    for i in range___): 
        max_ending_here += arr[i] 
        if max_ending_here < 0: 
            max_ending_here = 0
        if ___: 
            max_so_far = max_ending_here 
    return max_so_far"
Develop a Python script that receives two lists and returns a new list that contains a unique combination of all elements in the two lists.,"list1 = [1, 2, 3], list2 = [2, 3, 4]","def combine_lists(list1, list2):
 result = list1 + list2
 return list(set(result))

list1 = [1, 2, 3]
list2 = [2, 3, 4]

print(combine_lists(list1, list2)) # [1, 2, 3, 4]",Data Structure,982,"def combine_lists___:
 result = list1 + list2
 return list___)

list1 = ___
list2 = ___

print___) # [1, 2, 3, 4]"
Write a Python program to display the most commonly occurring item in a list.,"list_items = [1, 7, 3, 8, 2, 9, 3, 5, 5, 8, 7, 3]","from collections import Counter

list_items = [1, 7, 3, 8, 2, 9, 3, 5, 5, 8, 7, 3]

counter = Counter(list_items)
most_common_item = counter.most_common()[0][0]

print(f'The most commonly occuring item in the list is {most_common_item}.')",Data Structure,984,"from collections import Counter

list_items = ___

counter = Counter___
most_common_item = counter.most_common()______

print(f'The most commonly occuring item in the list is ___.')"
Design an algorithm in Python that reads an unordered array of integers and prints the integers in sorted order.,"[98, 45, 21, 99, 74, 44]","def sortArray(arr): 
    for i in range(len(arr)): 
        if (arr[i] > arr[i+1]):
            temp = arr[i] 
            arr[i] = arr[i+1] 
            arr[i+1] = temp 
    return arr

print(sortArray([98, 45, 21, 99, 74, 44])) # Output: [21, 44, 45, 74, 98, 99]",Data Structure,988,"def sortArray___: 
    for i in range___): 
        if ___:
            temp = arr[i] 
            arr[i] = arr[i+1] 
            arr[i+1] = temp 
    return arr

print___) # Output: [21, 44, 45, 74, 98, 99]"
Write a python program that sums up all the values from a list of dictionaries,"data = [{'key1':1, 'key2':2}, {'key1':2, 'key2':5}]","def sum_dictionaries(data):
  total = 0
  for dic in data:
    total += sum(dic.values())
  return total",Data Structure,989,"def sum_dictionaries___:
  total = 0
  for dic in data:
    total += sum___)
  return total"
Create a function in Python that takes a list of numbers and returns the sum of all of the squared elements in the list.,"[1, 2, 3, 4]","def sum_squares(nums): 
  total = 0
  for num in nums:
    total += num**2
  return total

print(sum_squares([1, 2, 3, 4])) 
# Output: 30",Data Structure,991,"def sum_squares___: 
  total = 0
  for num in nums:
    total += num**2
  return total

print___) 
# Output: 30"
Generate a Python program to convert an array from the cartesian to the polar coordinate system.,"[1, 2]","def cartesian_to_polar(arr):
    x = arr[0]
    y = arr[1]
 
    radius = (x**2 + y**2)**0.5
    theta = math.atan2(y,x)
 
    return [radius, theta]
    
arr = [1, 2]
result = cartesian_to_polar(arr)
print(result)",Data Structure,994,"def cartesian_to_polar___:
    x = arr___
    y = arr___
 
    radius = ___**0.5
    theta = math.atan2___
 
    return [radius, theta]
    
arr = ___
result = cartesian_to_polar___
print___"
Generate a Python program to check if any element of a given list is palindrome or not.,"list1 = [12, 121, 3]","list1 = [12, 121, 3]

# Iterate through the list
for element in list1:
    # Convert the element to a string
    element = str(element)
    
    # Check if the element is a palindrome
    if element == element[::-1]:
        print(element + "" is a palindrome"")
    else:
        print(element + "" is not a palindrome"")",Data Structure,996,"list1 = ___

# Iterate through the list
for element in list1:
    # Convert the element to a string
    element = str___
    
    # Check if the element is a palindrome
    if element == element[::-1]:
        print___
    else:
        print___"
Write Python code to create a new list from the given list based on a condition,"Given list : [1,2,3,4,5], condition: only include elements whose corresponding index is divisible by 2.","new_list = []
for i, v in enumerate(list):
    if (i+1) % 2 == 0: # +1 since your list is 0 indexed
        new_list.append(v)
print(new_list) # prints [2,4]",Data Structure,999,"new_list = []
for i, v in enumerate___:
    if ___ % 2 == 0: # +1 since your list is 0 indexed
        new_list___v)
print___ # prints [2,4]"
Optimise the Python program to reduce the time complexity for finding the maximum element in an array.,"[5, 10, 15, 20]","def findMax(arr):
    max = arr[0]
    curr_max = arr[0]
    for i in arr[1:]:
        curr_max = max = max if max > i else i 
    return curr_max

print(findMax([5, 10, 15, 20]))",Data Structure,1002,"def findMax___:
    max = arr___
    curr_max = arr___
    for i in arr[1:]:
        curr_max = max = max if max > i else i 
    return curr_max

print___)"
Write a Python program to sort a given list of dictionaries based on a given key.,"list = [{'name': 'Alice', 'age': 24}, {'name': 'Bob', 'age': 27}, {'name': 'David', 'age': 29}]","def sort_dictionaries(list, key):
 return sorted(list, key=lambda i: i[key])",Data Structure,1013,"def sort_dictionaries___:
 return sorted___"
Write a Python program that takes in a list and outputs the sum of the elements in the list.,"[1, 2, 3, 4, 5]","sum = 0
for x in [1,2,3,4,5]:
 sum += x
print(sum)",Data Structure,1017,"sum = 0
for x in ___:
 sum += x
print___"
Create a Python program to calculate the customer's total purchase amount from a list of items and amounts.,"The list of items and amounts:

item1: 10
item2: 20
item3: 30","items = [
 {'name': 'item1', 'amount': 10},
 {'name': 'item2', 'amount': 20},
 {'name': 'item3', 'amount': 30},
]

total = 0

for item in items:
 total += item['amount']

print(f""Total: {total}"") # Output: Total: 60",Data Structure,1021,"items = [
 ___,
 ___,
 ___,
]

total = 0

for item in items:
 total += item['amount']

print(f""Total: ___"") # Output: Total: 60"
Create a Python program to generate a random subsample of a given list of items.,"List: [1,2,3,4,5,6,7,8,9]
Sample Size: 4","import random

def random_sample(items, sample_size):
    sample = random.sample(items, sample_size)
    return sample

result = random_sample([1,2,3,4,5,6,7,8,9], 4)
print(result)",Data Structure,1024,"import random

def random_sample___:
    sample = random.sample___
    return sample

result = random_sample___
print___"
Sort a given list of strings into alphabetical order.,"my_list = [""Python"", ""JavaScript"", ""Java"", ""C++""]","def sort_alphabetically(my_list):
    return sorted(my_list)

print(sort_alphabetically(my_list)) # ['C++', 'Java', 'JavaScript', 'Python']",Data Structure,1025,"def sort_alphabetically___:
    return sorted___

print___) # ['C++', 'Java', 'JavaScript', 'Python']"
"Given a Python dictionary, convert it into a list of tuples.","test_dict = {‘A’: 1, ‘B’: 2, ‘C’: 3}",list(test_dict.items()),Data Structure,1027,list___)
Produce an algorithm in Python to determine the maximum difference between any two elements in an array.,"[2, 7, 9, 5, 1, 3, 5]","def max_diff(array):
    max_diff = -float('inf')
    for i in range(1, len(array)):
        for j in range(i):
            diff = array[i]-array[j]
            if diff > max_diff:
                max_diff = diff
    return max_diff",Data Structure,1028,"def max_diff___:
    max_diff = -float___
    for i in range___):
        for j in range___:
            diff = array[i]-array[j]
            if diff > max_diff:
                max_diff = diff
    return max_diff"
Design and implement a Bubble Sort algorithm for sorting an array of numbers in Python.,"[64, 34, 25, 12, 22, 11, 90]","def bubble_sort(l):
    for i in range(len(l)):
        for j in range(0, len(l)-i-1):
            if l[j] > l[j+1]:
                l[j], l[j+1] = l[j+1], l[j]

# Test code
l = [64, 34, 25, 12, 22, 11, 90]
bubble_sort(l)
print(l)",Data Structure,1036,"def bubble_sort___:
    for i in range___):
        for j in range___-i-1):
            if l[j] > l[j+1]:
                l[j], l[j+1] = l[j+1], l[j]

# Test code
l = ___
bubble_sort___
print___"
"Create a program in Python that takes a list of strings as input, sorts the strings in alphabetical order, and prints out the list in reverse alphabetical order.","Sample List: [""cat"",""bird"",""dog"",""zebra"",""ant""]","# create a list
sample_list = [""cat"", ""bird"", ""dog"", ""zebra"", ""ant""]
 
# sort the list
sample_list.sort()
 
# reverse the list
sample_list.reverse()
 
# print the reversed list
print(sample_list)
# ['zebra', 'dog', 'cat', 'bird', 'ant']",Data Structure,1037,"# create a list
sample_list = [""cat"", ""bird"", ""dog"", ""zebra"", ""ant""]
 
# sort the list
sample_list.sort()
 
# reverse the list
sample_list.reverse()
 
# print the reversed list
print___
# ['zebra', 'dog', 'cat', 'bird', 'ant']"
Can you build a program in Python to calculate the median of a given list of integers?,"[4, 9, 12, 8, 1]","def median(list): 
	list.sort() 
	length = len(list) 
	if length % 2 == 0: 
		return sum(list[int(length / 2) - 1:int(length / 2) + 1]) / 2
	else: 
		return list[int(length / 2)] 

median_of_list = median([4, 9, 12, 8, 1]) 
print(""Median of the list is: "" + str(median_of_list)) 
# Output: 8",Data Structure,1038,"def median___: 
	list.sort() 
	length = len___ 
	if length % 2 == 0: 
		return sum___ - 1:int___ + 1]) / 2
	else: 
		return list[int___] 

median_of_list = median___ 
print___) 
# Output: 8"
"Create a function that takes a Python list of numbers as input, and returns the list sorted by the sum of its digits.","[ 135, 590, 69, 127 ]","def sortBySumOfDigits(lst):
    return sorted(lst, key=lambda x: sum(map(int, str(x))))

lst = [ 135, 590, 69, 127]
sorted_list = sortBySumOfDigits(lst)
print(sorted_list)",Data Structure,1041,"def sortBySumOfDigits___:
    return sorted___)))

lst = ___
sorted_list = sortBySumOfDigits___
print___"
Create a function in Python for computing the average of elements in a given list.,"[15, 16, 5, 20, 6, 8]","def calculate_average(nums):
    total = 0
    for i in range(len(nums)):
        total += nums[i]
    return total / len(nums)",Data Structure,1043,"def calculate_average___:
    total = 0
    for i in range___):
        total += nums[i]
    return total / len___"
Generate a Python algorithm that takes an unsorted array and returns a sorted one.,"[5, 8, 1, 4, 9]","def sort_array(arr):
    sorted_arr = sorted(arr) 
    # use the built-in sorted() method 
    return sorted_arr

result = sort_array([5, 8, 1, 4, 9])
print(result)",Data Structure,1047,"def sort_array___:
    sorted_arr = sorted___ 
    # use the built-in sorted() method 
    return sorted_arr

result = sort_array___
print___"
"Given a list of numbers and a target number, write a Python program to find a pair of numbers from the given list that add up to the given target.","Input List: [1, 2, 3, 4, 4, 5, 6]
Target: 8","def find_pair(lst, target):
    for i in range(len(lst)):
        if (target - lst[i]) in lst[i+1:]:
            return [lst[i], target-lst[i]]

find_pair([1,2,3,4,4,5,6], 8)",Data Structure,1048,"def find_pair___:
    for i in range___):
        if ___ in lst[i+1:]:
            return [lst[i], target-lst[i]]

find_pair___"
Create a Python program to sort a list of tuples based on the second element in each tuple.,"[(1, 2), (4, 1), (9, 10), (13, -3)]","def sort_tuples(a):
    return sorted(a, key = lambda x: x[1])

a = [(1, 2), (4, 1), (9, 10), (13, -3)]
print(sort_tuples(a))

# Output: [(13, -3), (4, 1), (1, 2), (9, 10)]",Data Structure,1050,"def sort_tuples___:
    return sorted___

a = [___, ___, ___, ___]
print___)

# Output: [___, ___, ___, ___]"
Create a Python script to calculate the running sum of an array.,"[1, 2, 3, 4, 5]","# Create a function to compute running sum
def running_sum(lst):
    running_sum = 0
    running_lst = []
    for num in lst:
        running_sum += num
        running_lst.append(running_sum)
    return running_lst

# Test array
test = [1, 2, 3, 4, 5]

# Print the result
print(running_sum(test))",Data Structure,1055,"# Create a function to compute running sum
def running_sum___:
    running_sum = 0
    running_lst = []
    for num in lst:
        running_sum += num
        running_lst___running_sum)
    return running_lst

# Test array
test = ___

# Print the result
print___)"
Build a program to remove all duplicate words from a given list of strings,"[""Python"", ""Python"", ""programming"", ""language"", ""language""]","def remove_duplicates(lst):
    new_list = []
    for i in lst:
        if i not in new_list:
            new_list.append(i)
    return new_list

print(remove_duplicates([""Python"", ""Python"", ""programming"", ""language"", ""language""]))",Data Structure,1056,"def remove_duplicates___:
    new_list = []
    for i in lst:
        if i not in new_list:
            new_list___i)
    return new_list

print___)"
Generate a Python dictionary from two given lists. The dictionary should contain a list of keys and the corresponding value for each key should be the element from the second list.,"keys = [""apple"", ""orange"", ""pear""] 
values = [1, 2, 3]","my_dictionary = dict(zip(keys, values))",Data Structure,1057,my_dictionary = dict___)
Write a Python code that finds the sum of the two largest numbers in a given list.,"[1,2,3,4,5]","def find_largest_sum(list):
    largestNum = max(list)
    list.remove(largestNum)
    secondLargestNum = max(list)
    return largestNum+secondLargestNum

print(find_largest_sum([1,2,3,4,5])) # 9",Data Structure,1061,"def find_largest_sum___:
    largestNum = max___
    list___largestNum)
    secondLargestNum = max___
    return largestNum+secondLargestNum

print___) # 9"
Generate a Python program to delete an item from a given list.,"Item: 5 
List: [8, 4, 5, 9, 2]","def remove_item(item, list): 
    list.remove(item) 
    return list
  
list_org = [8, 4, 5, 9, 2]
  
result = remove_item(5, list_org)
print(result)",Data Structure,1073,"def remove_item___: 
    list___item) 
    return list
  
list_org = ___
  
result = remove_item___
print___"
Create a custom function in Python to change the values of a list.,"[2, 3, 1, 4]","def custom_function(input_list): 
  transformed_list = [] 

  for value in input_list: 
    transformed_value = value + 1 
    transformed_list.append(transformed_value) 
  
  return transformed_list 

input_list = [2, 3, 1, 4]
print(custom_function(input_list))",Data Structure,1078,"def custom_function___: 
  transformed_list = [] 

  for value in input_list: 
    transformed_value = value + 1 
    transformed_list___transformed_value) 
  
  return transformed_list 

input_list = ___
print___)"
Write a Python script to filter out the given list and create a new reduced list.,"[-1, -2, 5, 0, 6, 8, 4, 9]","original = [-1, -2, 5, 0, 6, 8, 4, 9]
filtered = [x for x in original if x > 0]
print(filtered)",Data Structure,1080,"original = [-1, -2, 5, 0, 6, 8, 4, 9]
filtered = [x for x in original if x > 0]
print___"
Create a function in Python to read specified properties from a list.,"props = ['name', 'age', 'gender']","def read_props(props):
    """"""
    Read listed properties from a list.
    
    Args:
        props (list): The list containing properties to be read.
    
    Returns:
        tuple: Returns a tuple with values of the specified properties.
    """"""
    data = list()
    for prop in props:
        data.append(input(""Enter {}: "".format(prop)))
    return tuple(data)",Data Structure,1084,"def read_props___:
    """"""
    Read listed properties from a list.
    
    Args:
        props ___: The list containing properties to be read.
    
    Returns:
        tuple: Returns a tuple with values of the specified properties.
    """"""
    data = list()
    for prop in props:
        data___input(""Enter {}: "".format(prop)))
    return tuple___"
Write a Python function to sort a list of tuples based on their third elements.,"list = [('a', 1, 3), ('e', 5, 8), ('b', 6, 9), ('d', 2, 4)]","def sort_by_third_element(list):
  return sorted(list, key=lambda x: x[2])

list = [('a', 1, 3), ('e', 5, 8), ('b', 6, 9), ('d', 2, 4)]

res = sort_by_third_element(list) 

# The result is
[('a', 1, 3), ('d', 2, 4), ('e', 5, 8), ('b', 6, 9)]",Data Structure,1085,"def sort_by_third_element___:
  return sorted___

list = [___, ___, ___, ___]

res = sort_by_third_element___ 

# The result is
[___, ___, ___, ___]"
Generate a python program to assign each row of a 2D array to a variable.,<No input>,"def assign_variables(matrix):
    # Create an empty list to contain all the row variables
    variables = []
    
    # Iterate over the matrix
    for row in matrix:
        # Assign each row to a variable
        rowVar = row
        # Add the row variable to the list
        variables.append(rowVar)
        
    # Return the list of row variables
    return variables",Data Structure,1086,"def assign_variables___:
    # Create an empty list to contain all the row variables
    variables = []
    
    # Iterate over the matrix
    for row in matrix:
        # Assign each row to a variable
        rowVar = row
        # Add the row variable to the list
        variables___rowVar)
        
    # Return the list of row variables
    return variables"
Write Python code to select values greater than 2 in a given list.,"[1, 2, 3, 4, 5]","list = [1, 2, 3, 4, 5]
 
result = [value for value in list if value > 2]
 
print(result)",Data Structure,1087,"list = ___
 
result = [value for value in list if value > 2]
 
print___"
Create a code snippet to sort a given array of strings in descending order based on their lengths in Python.,"arr = [""Python"", ""Javascript"", ""Ruby"", ""Java""]","arr.sort(key=lambda x: len(x), reverse=True)
print(arr)",Data Structure,1089,"arr.sort___, reverse=True)
print___"
Write a code to create a dictionary from given list of words.,"words = ['Python', 'is', 'an', 'interpreted', 'high-level', 'programming', 'language', 'for', 'general-purpose', 'programming']","word_dict = {'Python': 1, 'is': 2, 'an': 3, 'interpreted': 4, 'high-level': 5, 'programming': 6, 'language': 7, 'for': 8, 'general-purpose': 9, 'programming': 10 }",Data Structure,1093,word_dict = ___
Design a Python program to read numbers from a given array and determine if all numbers are divisible by 5.,"array = [10, 15, 20, 25, 30]","def checkDivisible(array):
  for num in array:
    if num % 5 != 0:
      return False
  return True

array = [10, 15, 20, 25, 30]

if checkDivisible(array):
  print('All numbers are divisible by 5')
else:
  print('Not all numbers are divisible by 5')",Data Structure,1095,"def checkDivisible___:
  for num in array:
    if num % 5 != 0:
      return False
  return True

array = ___

if checkDivisible___:
  print___
else:
  print___"
Generate a python code that returns all distinct values of a given list.,"my_list = [2,2,4,4,6,2]","def get_distinct_elements(list):
    distinct_list = []
    for item in list:
        if item not in distinct_list:
            distinct_list.append(item)
    return distinct_list

distinct_list = get_distinct_elements(my_list)",Data Structure,1098,"def get_distinct_elements___:
    distinct_list = []
    for item in list:
        if item not in distinct_list:
            distinct_list___item)
    return distinct_list

distinct_list = get_distinct_elements___"
Write a Python code to filter out the strings containing two or more words in a given list.,"string_list = [""Hello"", ""Hi"", ""two words"", ""text string"", ""more than two words!""]","def filter_words(string_list):
  result = []
  for string in string_list:
    if len(string.split()) < 2:
      result.append(string)
  return result

string_list = [""Hello"", ""Hi"", ""two words"", ""text string"", ""more than two words!""]
print(filter_words(string_list))

#Output
['Hello', 'Hi']",Data Structure,1100,"def filter_words___:
  result = []
  for string in string_list:
    if len___) < 2:
      result___string)
  return result

string_list = [""Hello"", ""Hi"", ""two words"", ""text string"", ""more than two words!""]
print___)

#Output
['Hello', 'Hi']"
Create a Python function that takes in two sets and returns a set containing the items that are in the first set but not in the second.,"set_A = {1, 2, 3, 4}, set_B = {2, 3, 5}","def diff(set_A, set_B):
  res= set_A.difference(set_B)
  return res

set_A={1, 2, 3, 4}
set_B={2, 3, 5}

result = diff(set_A, set_B)
print(result)",Data Structure,1101,"def diff___:
  res= set_A.difference___
  return res

set_A=___
set_B=___

result = diff___
print___"
Implement a sorting algorithm in Python that sorts a given array of numbers.,"array = [2, 7, 4, 1, 5, 3]","def sort_array(array):
    for i in range(len(array)): 
        min_idx = i 
        for j in range(i+1, len(array)): 
            if array[min_idx] > array[j]: 
                min_idx = j       
        array[i], array[min_idx] = array[min_idx], array[i]
    return array
result = sort_array(array)
print(result) // Output: [1, 2, 3, 4, 5, 7]",Data Structure,1103,"def sort_array___:
    for i in range___): 
        min_idx = i 
        for j in range___): 
            if array[min_idx] > array[j]: 
                min_idx = j       
        array[i], array[min_idx] = array[min_idx], array[i]
    return array
result = sort_array___
print___ // Output: [1, 2, 3, 4, 5, 7]"
Create a Python program to interpret a user command from a given set of instructions and execute it.,Taking a break,"command = input(""Please enter your command: "")
 
if command == ""Taking a break"":
 print(""Taking a five minute break"")
 # code to execute the taking a break command
else:
 print(""Invalid command"")",Data Structure,1105,"command = input___
 
if command == ""Taking a break"":
 print___
 # code to execute the taking a break command
else:
 print___"
Write a code to check how many consecutive elements are equal in a given Python list.,"[1, 2, 3, 4, 4, 4, 5]","def check_consecutive_equal(lst): 
    count = 1
    max_count = 0
    
    for i in range(1, len(lst)):
        if lst[i] == lst[i-1]: 
            count+=1
        else:
            if max_count < count:
                max_count = count
            count = 1
  
    return max(max_count, count)",Data Structure,1106,"def check_consecutive_equal___: 
    count = 1
    max_count = 0
    
    for i in range___):
        if lst[i] == lst[i-1]: 
            count+=1
        else:
            if max_count < count:
                max_count = count
            count = 1
  
    return max___"
Rewrite the given Python code to use list comprehension.,"numbers = [1, 2, 3, 4, 5]

new_numbers = []
for n in numbers:
    new_numbers.append(n * 2)","numbers = [1, 2, 3, 4, 5]

new_numbers = [n * 2 for n in numbers]",Data Structure,1110,"numbers = ___

new_numbers = [n * 2 for n in numbers]"
Generate a Python program that identifies all the words with more than five characters in a given list.,"words = [""red"", ""green"", ""blue"", ""yellow"", ""orange""]","def more_than_five_characters(words):
    result = []
    for word in words:
        if len(word) > 5:
            result.append(word)
    return result

words = [""red"", ""green"", ""blue"", ""yellow"", ""orange""]
print(more_than_five_characters(words))",Data Structure,1111,"def more_than_five_characters___:
    result = []
    for word in words:
        if len___ > 5:
            result___word)
    return result

words = [""red"", ""green"", ""blue"", ""yellow"", ""orange""]
print___)"
Construct a Python script to filter the elements of a given list which are divisible by 3.,"[1,2,3,4,5,6,7,8,9]","my_list = [1,2,3,4,5,6,7,8,9]

filtered_list = list(filter(lambda x: x % 3 == 0, my_list))
print(filtered_list)",Data Structure,1113,"my_list = ___

filtered_list = list___)
print___"
Write a Python program to find all possible subsets of a given set.,"s = {1,2,3}","def find_subsets(s):
    subsets = []

    for i in range(len(s)+1):
        for subset in itertools.combinations(s, i):
            subsets.append(subset)

    return subsets

s = {1,2,3}
result = find_subsets(s)
print(result)",Data Structure,1116,"def find_subsets___:
    subsets = []

    for i in range___+1):
        for subset in itertools.combinations___:
            subsets___subset)

    return subsets

s = ___
result = find_subsets___
print___"
Suggest a completion for the following Python code that finds the median of a list of numbers.,"def median(nums):
    nums.sort()","def median(nums):
    nums.sort()
    if len(nums) % 2 == 0:
        left = len(nums) // 2 - 1
        right = len(nums) // 2
        return (nums[left] + nums[right]) / 2
    else:
        middle = len(nums) // 2
        return nums[middle]",Data Structure,1124,"def median___:
    nums.sort()
    if len___ % 2 == 0:
        left = len___ // 2 - 1
        right = len___ // 2
        return ___ / 2
    else:
        middle = len___ // 2
        return nums[middle]"
Create an algorithm in Python to rotate an array of numbers by k elements.,"Array: [1,2,3,4,5], k=2","def rotate_array(arr, k):
 n = len(arr)
 
 for i in range(k):
  temp = arr[n-1]
  for i in range(n-1,0,-1):
   arr[i] = arr[i-1]
  arr[0] = temp
  
 return arr
 
print(rotate_array([1,2,3,4,5],2)) # prints [4,5,1,2,3]",Data Structure,1126,"def rotate_array___:
 n = len___
 
 for i in range___:
  temp = arr[n-1]
  for i in range___:
   arr[i] = arr[i-1]
  arr___ = temp
  
 return arr
 
print___) # prints [4,5,1,2,3]"
Design an algorithm in Python to replace an element in a given list of numbers at a given position with another number.,"list: [1, 2, 3, 4, 5],  element: 8,  position: 3","def replace_elem(lst, val, pos):
    lst[pos] = val
    return lst

list = [1, 2, 3, 4, 5]
element = 8
position = 3

result = replace_elem(list, element, position)
print('After replacing element: ', result)",Data Structure,1128,"def replace_elem___:
    lst[pos] = val
    return lst

list = ___
element = 8
position = 3

result = replace_elem___
print___"
Write a Python function to insert a list of elements into a given list according to the given index.,"list = [1, 2, 3] 
index = 1 
elements = [4,5]","def insert_list(list, index, elements): 
    return (list[0:index] + elements + list[index:])",Data Structure,1130,"def insert_list___: 
    return ___"
"Create a function in Python to normalize an array of integers to range [0,1].","[3, 4, 6, 8, 10]","def normalize(arr):
    minVal = min(arr)
    maxVal = max(arr)
    normalizedArr = [(x - minVal) / (maxVal - minVal) for x in arr]
    return normalizedArr

result = normalize([3, 4, 6, 8, 10])
print(result)  // [0.0, 0.2, 0.4, 0.6, 0.8]",Data Structure,1132,"def normalize___:
    minVal = min___
    maxVal = max___
    normalizedArr = [___ / ___ for x in arr]
    return normalizedArr

result = normalize___
print___  // [0.0, 0.2, 0.4, 0.6, 0.8]"
"Given a list of numbers, write a Python program to calculate the mean.","=[5,2,10,3,7]","def calculate_mean(nums):
    return sum(nums) / len(nums)

nums = [5,2,10,3,7]
mean = calculate_mean(nums)
print(mean)  # Output: 5.6",Data Structure,1134,"def calculate_mean___:
    return sum___ / len___

nums = ___
mean = calculate_mean___
print___  # Output: 5.6"
"Generate a Python function that takes a list as input, and returns the number of values in the list that are greater than the average of the values in the list.","input_list = [4, 8, 6, 3, 10]","def count_above_average(input_list): 
 average = sum(input_list)/len(input_list)
 count = 0
 for value in input_list: 
  if value > average:  
   count += 1
 return count",Data Structure,1136,"def count_above_average___: 
 average = sum___/len___
 count = 0
 for value in input_list: 
  if value > average:  
   count += 1
 return count"
Write a Python function that takes a list of words as input and capitalizes the first character of each element in the list.,"[""apple"", ""banana"", ""strawberry""]","def capitalize(words):
  return [word.capitalize() for word in words]

input_words = [""apple"", ""banana"", ""strawberry""]
capitalized_words = capitalize(input_words)
print(capitalized_words)",Data Structure,1139,"def capitalize___:
  return [word.capitalize() for word in words]

input_words = [""apple"", ""banana"", ""strawberry""]
capitalized_words = capitalize___
print___"
"Create a Python program that receives a list of numbers, and generates two new lists: one containing the even elements from the original list, and one containing the odd elements.","[1, 2, 3, 4, 5, 6]","def find_even_odd(nums):
  even_list = []
  odd_list = []
  for num in nums:
    if num % 2 == 0:
      even_list.append(num)
    else:
      odd_list.append(num)
  
  return even_list, odd_list
  
print(find_even_odd([1, 2, 3, 4, 5, 6]))",Data Structure,1143,"def find_even_odd___:
  even_list = []
  odd_list = []
  for num in nums:
    if num % 2 == 0:
      even_list___num)
    else:
      odd_list___num)
  
  return even_list, odd_list
  
print___)"
"Given an array of strings, you need to write a Python program to move the elements that contain a certain letter to the end of the array.","strings = [""abcd"", ""efgh"", ""ijkl"", ""mnop"", ""qrst""]
letter = ""m""","def move_letter(strings, letter):
 new_list = []
 for s in strings:
  if letter not in s:
   new_list.append(s)
  else:
   new_list.append(s)
 return new_list",Data Structure,1147,"def move_letter___:
 new_list = []
 for s in strings:
  if letter not in s:
   new_list___s)
  else:
   new_list___s)
 return new_list"
Write a Python program to generate a bar chart with labels using matplotlib from a given list of numbers.,"list = [1, 2, 3, 4, 5]","import matplotlib.pyplot as plt

list = [1, 2, 3, 4, 5]

plt.bar(range(len(list)), list)
plt.xlabel('Index')
plt.ylabel('Value')
plt.title('My Bar Chart')

plt.show()",Data Structure,1148,"import matplotlib.pyplot as plt

list = ___

plt.bar___), list)
plt.xlabel___
plt.ylabel___
plt.title___

plt.show()"
Create a REST API endpoint in Python with a GET route to query a database. The route should accept a 'name' as a query parameter and return a list of results from the query.,name= 'John',"@app.route('/api/search', methods=['GET'])
def search():
name = request.args.get('name')
query = _db.execute(""SELECT * FROM users WHERE name=?"", [name]).fetchall()
return jsonify(query)",Data Structure,1150,"@app.route___
def search():
name = request.args.get___
query = _db.execute___.fetchall()
return jsonify___"
Write a Python script that finds the most common element of a given list.,"list = [3, 5, 6, 3, 7, 8, 3, 4]","def find_most_frequent_element(list):
 count_map = {}
 max_element= list[0]
 max_count = 1
 for num in list:
  if num in count_map:
   count_map[num] += 1
  else:
   count_map[num] = 1
 for num in count_map:
  if count_map[num] > max_count:
   max_element = num
   max_count = count_map[num]
 return max_element",Data Structure,1152,"def find_most_frequent_element___:
 count_map = {}
 max_element= list___
 max_count = 1
 for num in list:
  if num in count_map:
   count_map[num] += 1
  else:
   count_map[num] = 1
 for num in count_map:
  if count_map[num] > max_count:
   max_element = num
   max_count = count_map[num]
 return max_element"
Create a Python function to sum all the middle elements of a given list.,"numbers = [5, 10, 15, 20]","def middle_sum(numbers):
    if len(numbers) == 0:
        return None
    
    if len(numbers) % 2 == 1:
        return numbers[len(numbers) // 2]
    else:
        return numbers[len(numbers) // 2 - 1] + numbers[len(numbers) // 2]",Data Structure,1154,"def middle_sum___:
    if len___ == 0:
        return None
    
    if len___ % 2 == 1:
        return numbers[len___ // 2]
    else:
        return numbers[len___ // 2 - 1] + numbers[len___ // 2]"
Generate a Python program that searches a list of given integers for a given target value and returns its index if found.,"list = [2, 3, 4, 5, 6], target = 4","def search(list, target):
  for i in range(len(list)):
    if list[i] == target:
      return i
  return -1

list = [2, 3, 4, 5, 6]
target = 4

index = search(list, target)
if index == -1:
  print(""The target was not found."")
else:
  print(""The target was found at index %d."" % index)",Data Structure,1155,"def search___:
  for i in range___):
    if list[i] == target:
      return i
  return -1

list = ___
target = 4

index = search___
if index == -1:
  print___
else:
  print___"
"Create a program in Python that takes a list of integers, and prints the sum of the even numbers and the sum of the odd numbers.","list=[2,4,5,7,1,3]","list=[2,4,5,7,1,3]

even_sum= 6
odd_sum= 15

def sum_even_odd(list):
    even_sum=0
    odd_sum=0
    
    for num in list:
        if num % 2 == 0:
            even_sum+=num
        else:
            odd_sum+=num 
    
    print(""even_sum="",even_sum)
    print(""odd_sum="",odd_sum)
    
sum_even_odd(list)",Data Structure,1156,"list=___

even_sum= 6
odd_sum= 15

def sum_even_odd___:
    even_sum=0
    odd_sum=0
    
    for num in list:
        if num % 2 == 0:
            even_sum+=num
        else:
            odd_sum+=num 
    
    print___
    print___
    
sum_even_odd___"
"Create a Python program which takes a list of words as input, and prints out the frequent words.","Words: [""python"", ""is"", ""a"", ""programming"", ""language""]","from collections import Counter

words = [""python"", ""is"", ""a"", ""programming"", ""language""]

word_count = Counter(words) 

for k,v in word_count.items(): 
    print(k,v) 

# To get the most frequent word 
most_freq_word = max(word_count, key=word_count.get) 

print(""Most frequent word is:"", most_freq_word)",Data Structure,1161,"from collections import Counter

words = [""python"", ""is"", ""a"", ""programming"", ""language""]

word_count = Counter___ 

for k,v in word_count.items(): 
    print___ 

# To get the most frequent word 
most_freq_word = max___ 

print___"
Create a Python method to get the index of the largest element in an array.,"[1,2,3,4,5]","def find_largest_index(arr):
    largest = float('-inf')
    largest_index = 0
    for i in range(len(arr)):
        num = arr[i]
        if num > largest:
            largest = num
            largest_index = i
    return largest_index 

print(find_largest_index([1,2,3,4,5])) # 4",Data Structure,1163,"def find_largest_index___:
    largest = float___
    largest_index = 0
    for i in range___):
        num = arr[i]
        if num > largest:
            largest = num
            largest_index = i
    return largest_index 

print___) # 4"
Create an algorithm in Python to sort an array of numbers.,"[9, 3, 5, 1, 6]","def sortArray(arr):
    for i in range(len(arr)):
        for j in range(i+1,len(arr)):
            if arr[i] > arr[j]:
                temp = arr[i]
                arr[i] = arr[j]
                arr[j] = temp
    return arr

arr = [9, 3, 5, 1, 6]
print(sortArray(arr))",Data Structure,1165,"def sortArray___:
    for i in range___):
        for j in range___):
            if arr[i] > arr[j]:
                temp = arr[i]
                arr[i] = arr[j]
                arr[j] = temp
    return arr

arr = ___
print___)"
Write a Python program to display the first and last colors from the following list.,"Colors: ['Red', 'Green', 'White', 'Black']","# List of colors
colors = ['Red', 'Green', 'White', 'Black']

# First color
print(colors[0])

# Last color
print(colors[-1])",Data Structure,1169,"# List of colors
colors = ['Red', 'Green', 'White', 'Black']

# First color
print___

# Last color
print___"
Create a python script that prints out a list of names in alphabetical order.,"Robert, Asher, Aster, Athena","list_of_names= [""Asher"", ""Aster"", ""Athena"", ""Robert""]
list_of_names.sort()

print(list_of_names)",Data Structure,1170,"list_of_names= [""Asher"", ""Aster"", ""Athena"", ""Robert""]
list_of_names.sort()

print___"
Construct a Python function to redesign a given list to meet a given sorting criteria.,"my_list = [31, 5, 42, 69, 20]","def sort_list(my_list):
    return sorted(my_list)",Data Structure,1173,"def sort_list___:
    return sorted___"
Write code to find the median of an array of integers using Python.,"[2, 4, 5, 7, 8, 9, 11]","def get_median(nums):
    nums.sort()
    if len(nums) % 2 == 0:
        return (nums[int(len(nums)/2)] + nums[int((len(nums)/2) - 1)] )/ 2
    else:
        return nums[int(len(nums) / 2)]

nums = [2, 4, 5, 7, 8, 9, 11]
median = get_median(nums)
print(""Median is: "",median)",Data Structure,1176,"def get_median___:
    nums.sort()
    if len___ % 2 == 0:
        return ___/2)] + nums[int___/2) - 1)] )/ 2
    else:
        return nums[int___ / 2)]

nums = ___
median = get_median___
print___"
Refactor the following Python code to make use of list comprehensions.,"result = []
for x in range(10):
  for y in range(10):
    result.append(x * y)",result = [x * y for x in range(10) for y in range(10)],Data Structure,1180,result = [x * y for x in range___ for y in range___]
"Create a function in Python that takes two lists of equal length, and returns the sum of the elements in the same index in each list.","[2, 3, 4], [2, 5, 6]","def sum_elements_in_lists(list1, list2):
    if len(list1) != len(list2):
        return None
    
    result = []
    for i in range(len(list1)):
        result.append(list1[i] + list2[i])
    
    return result

result = sum_elements_in_lists([2, 3, 4], [2, 5, 6])
print(result)",Data Structure,1186,"def sum_elements_in_lists___:
    if len___ != len___:
        return None
    
    result = []
    for i in range___):
        result___list1[i] + list2[i])
    
    return result

result = sum_elements_in_lists___
print___"
Write a Python function that takes an array of integers and finds the maximum difference between any two elements in the array,"[2, 3, 10, 6, 4, 8, 1]","def max_difference(arr):
  if len(arr) < 2:
    return 0
  curr_max = arr[1]-arr[0]
  min_elem = min(arr[0], arr[1])
  for i in range(2, len(arr)):
    curr_max = max(curr_max, arr[i] - min_elem)
    min_elem = min(min_elem, arr[i])
  return curr_max
  
print(max_difference([2, 3, 10, 6, 4, 8, 1]))",Data Structure,1188,"def max_difference___:
  if len___ < 2:
    return 0
  curr_max = arr___-arr___
  min_elem = min___
  for i in range___):
    curr_max = max___
    min_elem = min___
  return curr_max
  
print___)"
Write a Python program that reads in a list of numbers and sorts them in the ascending order.,"[2, 3, 4, 5, 1]","def sort_list(lst):
    lst.sort()
    return lst

result = sort_list([2, 3, 4, 5, 1])
print(result)",Data Structure,1192,"def sort_list___:
    lst.sort()
    return lst

result = sort_list___
print___"
Create a function in Python that takes a value and inserts it into an already sorted list.,"[1, 5, 8], 6","# Python 
def insertInSortedList(sorted_list, value):
    left = 0
    right = len(sorted_list) - 1

    while left <= right:
        mid = left + (right - left) // 2
        if value < sorted_list[mid]:
            right = mid - 1
        else:
            left = mid + 1

    sorted_list.insert(left, value)
    return sorted_list",Data Structure,1196,"# Python 
def insertInSortedList___:
    left = 0
    right = len___ - 1

    while left <= right:
        mid = left + ___ // 2
        if value < sorted_list[mid]:
            right = mid - 1
        else:
            left = mid + 1

    sorted_list___left, value)
    return sorted_list"
Create a Python program to filter a list of strings and return only the strings that contain a given substring.,"The list [""cat"", ""dog"", ""elephant"", ""rabbit"", ""duck""] and the substring ""ra"".","def filter_list(lst, sub):
 filtered = [s for s in lst if sub in s]
 return filtered

lst = [""cat"", ""dog"", ""elephant"", ""rabbit"", ""duck""]
sub = ""ra""

result = filter_list(lst, sub)
print(result)

# Output: ['rabbit']",Data Structure,1198,"def filter_list___:
 filtered = [s for s in lst if sub in s]
 return filtered

lst = [""cat"", ""dog"", ""elephant"", ""rabbit"", ""duck""]
sub = ""ra""

result = filter_list___
print___

# Output: ['rabbit']"
Create a program in Python for performing a linear search on a given list.,"[1, 2, 3, 4, 5, 6], 5","def linear_search(list, n): 
  
    for i in range(len(list)): 
  
        if list[i] == n: 
            return i 

list = [1, 2, 3, 4, 5, 6] 
n = 5

x = linear_search(list, n) 

if x == None: 
    print(""Element is not present in the list"") 
else: 
    print(""Element is present at index"", x)",Data Structure,1200,"def linear_search___: 
  
    for i in range___): 
  
        if list[i] == n: 
            return i 

list = ___ 
n = 5

x = linear_search___ 

if x == None: 
    print___ 
else: 
    print___"
Modify a given Python list by adding a certain value to each element.,"list = [1, 2, 3, 4, 5] 
value = 10","# Modifying the list by adding 'value' to each element
for i in range(len(list)):
    list[i] = list[i] + value

# Print the modified list
print(list)
# [11, 12, 13, 14, 15]",Data Structure,1205,"# Modifying the list by adding 'value' to each element
for i in range___):
    list[i] = list[i] + value

# Print the modified list
print___
# ___"
Create a Python function to generate a histogram given a set of data.,"[ 1, 2, 4, 5, 7, 10]","import matplotlib.pyplot as plt

def histogram (data): 
    plt.hist(data)
    plt.title(""Frequency Histogram"")
    plt.xlabel('Data')
    plt.ylabel('Frequency')
    plt.show()",Data Structure,1206,"import matplotlib.pyplot as plt

def histogram ___: 
    plt.hist___
    plt.title___
    plt.xlabel___
    plt.ylabel___
    plt.show()"
Write a Python script to find the longest word in an array.,"arr_of_words = ['cat', 'elephant', 'dog', 'bird']","def find_longest_word(arr):
 longest = ''
 for word in arr:
 if len(word) > len(longest):
 longest = word
 return longest

word = find_longest_word(arr_of_words)
print(word)  # Output: elephant",Data Structure,1210,"def find_longest_word___:
 longest = ''
 for word in arr:
 if len___ > len___:
 longest = word
 return longest

word = find_longest_word___
print___  # Output: elephant"
Write a Python program to split a list into two halves.,"[14, 8, 3, 7, 5]","def split_list(lst):
    half = len(lst) // 2
    return lst[:half], lst[half:]

left, right = split_list([14, 8, 3, 7, 5])
print (""Left list : "", left)
print (""Right list : "", right)",Data Structure,1214,"def split_list___:
    half = len___ // 2
    return lst[:half], lst[half:]

left, right = split_list___
print ___
print ___"
Suggest a completion for the following method to reverse an array in python,"arr = [1, 2, 3, 4, 5]
def reverse_array(arr):
    for","def reverse_array(arr):
    for i in range(len(arr)//2):
        arr[i], arr[len(arr)-i-1] = arr[len(arr)-i-1], arr[i]",Data Structure,1217,"def reverse_array___:
    for i in range___//2):
        arr[i], arr[len___-i-1] = arr[len___-i-1], arr[i]"
Create a Python function that takes a list of strings and returns a dictionary with the strings as keys and their frequencies as values.,"[""hello"", ""world"", ""hello"", ""goodbye"", ""world"", ""hello""]","def frequency(lst):
 result = {}
 for el in lst:
 if el in result:
 result[el] += 1
 else:
 result[el] = 1
 return result

print(frequency([""hello"", ""world"", ""hello"", ""goodbye"", ""world"", ""hello""]))
# Output: {'hello': 3, 'world': 2, 'goodbye': 1}",Data Structure,1219,"def frequency___:
 result = {}
 for el in lst:
 if el in result:
 result[el] += 1
 else:
 result[el] = 1
 return result

print___)
# Output: ___"
Write a python program to create a frequency table for the following list.,"[1, 8, 9, 11, 2, 10, 1, 5, 6, 8]","from collections import Counter

data = [1, 8, 9, 11, 2, 10, 1, 5, 6, 8]
counter = Counter(data)

# print the frequency table
print('Frequency Table:')
for item in counter.most_common():
    print(item)",Data Structure,1221,"from collections import Counter

data = ___
counter = Counter___

# print the frequency table
print___
for item in counter.most_common():
    print___"
Compute the sum of list integers using Python.,"Target list: [3, 5, 7, 9]","mylist = [3, 5, 7, 9]
total = 0

for item in mylist:
   total = total + item

print(""The sum of list items is:"", total)",Data Structure,1223,"mylist = ___
total = 0

for item in mylist:
   total = total + item

print___"
Write a python program to generate a new list of numbers based on existing list which increase sequence by 5,"[10, 20, 30, 40]","def generate_numbers(list):
    new_list = [] 
    for number in list:
        new_list.append(number + 5) 
    return new_list",Data Structure,1225,"def generate_numbers___:
    new_list = [] 
    for number in list:
        new_list___number + 5) 
    return new_list"
Construct a function in Python that sorts a list of tuples by the second element of the tuple in ascending order.,"tuples = [(6, 2), (5, 4), (7, 3), (2, 8), (1, 5)]","def sort_tuples(tuples):
    return sorted(tuples, key=lambda x: x[1])

print(sort_tuples(tuples))
# Output:  [(6, 2), (7, 3), (1, 5), (5, 4), (2, 8)]",Data Structure,1230,"def sort_tuples___:
    return sorted___

print___)
# Output:  [___, ___, ___, ___, ___]"
"Using Python, create a dictionary with the list of elements in ""a"" and as the value, the list of elements in ""b"".","a = [1, 2, 3, 4]
b = [5, 6, 7, 8]","dict_1 = {1: [5, 6, 7, 8], 2: [5, 6, 7, 8], 3: [5, 6, 7, 8], 4: [5, 6, 7, 8]}",Data Structure,1239,dict_1 = ___
Implement a bubble sort algorithm in Python to sort a list of numbers from lowest to highest.,"[5, 3, 1, 4, 7]","def bubble_sort(array):
    for i in range(len(array)):
        for j in range(i + 1, len(array)):
            if array[i] > array[j]:
                array[i], array[j] = array[j], array[i]
    return array

arr = [5, 3, 1, 4, 7]
sorted_arr = bubble_sort(arr)
print(sorted_arr)",Data Structure,1241,"def bubble_sort___:
    for i in range___):
        for j in range___):
            if array[i] > array[j]:
                array[i], array[j] = array[j], array[i]
    return array

arr = ___
sorted_arr = bubble_sort___
print___"
Write a Python function to find the sublist with the maximum sum in a given list.,"list_a = [-2, 3, 5, 4, -3, 7, -2]","def max_sum_sublist(list_a):
 start = 0
 end = 0
 max_sum = 0
 
 current_sum = 0
 for i in range(len(list_a)):
  current_sum += list_a[i]
  if current_sum < 0:
   current_sum = 0
   start = i + 1
  if current_sum > max_sum:
   max_sum = current_sum
   end = i
 
 return list_a[start:end+1]
 
max_sum_sublist(list_a)",Data Structure,1248,"def max_sum_sublist___:
 start = 0
 end = 0
 max_sum = 0
 
 current_sum = 0
 for i in range___):
  current_sum += list_a[i]
  if current_sum < 0:
   current_sum = 0
   start = i + 1
  if current_sum > max_sum:
   max_sum = current_sum
   end = i
 
 return list_a[start:end+1]
 
max_sum_sublist___"
Implement a function in Python that takes a list of strings and returns a new list of strings containing all words that start with an uppercase letter.,"list = [""Apple"", ""banana"", ""Pineapple"", ""Grapes""]","def upper_words(list):
    result = []
    for word in list:
        if word[0].isupper():
            result.append(word)
    return result",Data Structure,1253,"def upper_words___:
    result = []
    for word in list:
        if word___.isupper():
            result___word)
    return result"
"Edit the program in Python, so it prints out the sum of the list of numbers and the average","[10, 15, 20, 25]","arr = [10, 15, 20, 25]

totalSum = 0
for x in arr:
    totalSum += x

print(""Sum of the list: ""+str(totalSum)) 
print(""Average of the list: ""+str(totalSum/len(arr)))

Output:
Sum of the list: 70
Average of the list: 17.5",Data Structure,1254,"arr = ___

totalSum = 0
for x in arr:
    totalSum += x

print___) 
print___))

Output:
Sum of the list: 70
Average of the list: 17.5"
Create a program in Python to check if a given list is a subsequence of another given list,"[1,2,3,4], [1,2,5,6,7,3,4]","def is_subsequence(sub_list, main_list):
    i, j = 0, 0
    n1, n2 = len(sub_list), len(main_list)
    while i < n1 and j < n2:
        if sub_list[i] == main_list[j]:
            i += 1
        j += 1
    return i == n1",Data Structure,1257,"def is_subsequence___:
    i, j = 0, 0
    n1, n2 = len___, len___
    while i < n1 and j < n2:
        if sub_list[i] == main_list[j]:
            i += 1
        j += 1
    return i == n1"
Develop a python program to filter a provided array of strings and return only those strings that are longer than 3 characters.,"['Cat', 'Dog', 'Bird', 'Fish', 'Turtle']","def filter_long_words(words):
 filtered_words = []
 
 for word in words:
  if len(word) > 3:
   filtered_words.append(word)
   
 return filtered_words
 
words = ['Cat', 'Dog', 'Bird', 'Fish', 'Turtle']
long_words = filter_long_words(words)
 
print(long_words) # Output: ['Bird', 'Fish', 'Turtle']",Data Structure,1258,"def filter_long_words___:
 filtered_words = []
 
 for word in words:
  if len___ > 3:
   filtered_words___word)
   
 return filtered_words
 
words = ['Cat', 'Dog', 'Bird', 'Fish', 'Turtle']
long_words = filter_long_words___
 
print___ # Output: ['Bird', 'Fish', 'Turtle']"
Create a Python program to take two numbers as input and list their lowest common multiple?,"a = 15, b = 20","def LCM(x, y):
   if x > y:
       z = x
   else:
       z = y

   while(True):
       if((z % x == 0) and (z % y == 0)):
           lcm = z
           break
       z += 1

   return lcm

a = 15
b = 20
print(LCM(a, b))",Data Structure,1259,"def LCM___:
   if x > y:
       z = x
   else:
       z = y

   while___:
       if___ and ___):
           lcm = z
           break
       z += 1

   return lcm

a = 15
b = 20
print___)"
Write an algorithm in Python that takes an array of integers as input and checks if it is a palindrome.,"[1, 2, 3, 4, 3, 2, 1]","def is_palindrome(arr):
    mid = len(arr) // 2 
    for i in range(mid):
        if arr[i] != arr[-i - 1]:
            return False
    return True

result = is_palindrome([1, 2, 3, 4, 3, 2, 1])
print(result) # True",Data Structure,1261,"def is_palindrome___:
    mid = len___ // 2 
    for i in range___:
        if arr[i] != arr[-i - 1]:
            return False
    return True

result = is_palindrome___
print___ # True"
Write a Python program to apply a function to all the elements of a given list and return the mapped list.,"[1, 2, 3, 4, 5]","def applyFunc(lst, func):
    mapped_list = []
    for el in lst:
        mapped_list.append(func(el))
    return mapped_list

def square(x):
    return x*x

lst = [1, 2, 3, 4, 5]

print(applyFunc(lst, square))",Data Structure,1264,"def applyFunc___:
    mapped_list = []
    for el in lst:
        mapped_list___func(el))
    return mapped_list

def square___:
    return x*x

lst = ___

print___)"
"Use Python to optimize a function f(x, y) so that it attains its maximum for any given set of x and y.","f(x,y) = 3x^2 + 2xy + 5y^2","from scipy.optimize import fmin

def f(x, y):
 return 3*x**2 + 2*x*y + 5*y**2

x, y = fmin(f, 0, 0)

print(f'The maximum of f(x,y) is {f(x, y)} at (x, y) = ({x:0.5f}, {y:0.5f})')",Data Structure,1273,"from scipy.optimize import fmin

def f___:
 return 3*x**2 + 2*x*y + 5*y**2

x, y = fmin___

print(f'The maximum of f(x,y) is ___ at (x, y) = (___, ___)')"
Create a Python program that shuffles the elements of an array.,"arr = [""A"", ""B"", ""C"", ""D""]","import random

def shuffleArray(arr):
    n = len(arr)

    for i in range(n-1, 0, -1):
        j = random.randint(0, i)
        arr[i], arr[j] = arr[j], arr[i] 
    
    return arr

arr = [""A"", ""B"", ""C"", ""D""]
shuffleArray(arr)
print(arr)",Data Structure,1275,"import random

def shuffleArray___:
    n = len___

    for i in range___:
        j = random.randint___
        arr[i], arr[j] = arr[j], arr[i] 
    
    return arr

arr = [""A"", ""B"", ""C"", ""D""]
shuffleArray___
print___"
"Develop an algorithm in Python for given an array containing n distinct numbers taken from 0, 1, 2, …, n, find the one that is missing from the array.","Array : [2, 3, 1, 5, 4]","def missingNumber(arr): 
    n = len(arr) 
    total = (n + 1)*(n + 2)/2
    sum_of_arr = sum(arr) 
    return total - sum_of_arr 

arr = [2, 3, 1, 5, 4]
missing = missingNumber(arr) 
print(missing)",Data Structure,1276,"def missingNumber___: 
    n = len___ 
    total = ___*___/2
    sum_of_arr = sum___ 
    return total - sum_of_arr 

arr = ___
missing = missingNumber___ 
print___"
Design a Python method to find the largest number in an array of integers.,"[-10, 10, 1, -100]","def find_largest_number(nums):
    biggest = nums[0]
    for num in nums:
        if num > biggest:
            biggest = num
    return biggest

nums = [-10, 10, 1, -100]
print(find_largest_number(nums))",Data Structure,1277,"def find_largest_number___:
    biggest = nums___
    for num in nums:
        if num > biggest:
            biggest = num
    return biggest

nums = [-10, 10, 1, -100]
print___)"
Design a Python program which sorts a list of integers from lowest to highest.,"[5, 2, 4, 1, 3]","def sort_list(list):
     for i in range(0, len(list)): 
          for j in range(0, len(list) - 1 - i): 
               if list[j] > list[j + 1]: 
                    list[j], list[j + 1] = list[j + 1], list[j]
     return list

list = [5, 2, 4, 1, 3]

sorted_list = sort_list(list)

print(sorted_list)",Data Structure,1278,"def sort_list___:
     for i in range___): 
          for j in range___ - 1 - i): 
               if list[j] > list[j + 1]: 
                    list[j], list[j + 1] = list[j + 1], list[j]
     return list

list = ___

sorted_list = sort_list___

print___"
Write a Python code to detect the Odd or Even numbers in a given list.,"list = [1, 2, 3, 4, 5]","for num in list: 
    if num % 2 == 0: 
        print(num, ""is an even number"") 
    else: 
        print(num, ""is an odd number"")",Data Structure,1280,"for num in list: 
    if num % 2 == 0: 
        print___ 
    else: 
        print___"
Can you write a python program to identify the last index of a given element in a list?,"The list [2, 5, 9, 2, 4] and the element 2","# Define the list
list_ = [2, 5, 9, 2, 4]
  
# Find the last index of element 2
last_index = len(list_) - list_[::-1].index(2) - 1
  
# Print the result
print(last_index)",Data Structure,1282,"# Define the list
list_ = ___
  
# Find the last index of element 2
last_index = len___ - list_[::-1].index___ - 1
  
# Print the result
print___"
Construct a program in Python to filter a list of stocks by price,"stocks = [{‘ticker’:’AAPL’,‘price’: 233.5}, {‘ticker’:’MSFT’,‘price’: 115.8}, {‘ticker’:’GOOGL’, ‘price’: 1234.5}] , price_limit = 100","stocks = [{‘ticker’:’AAPL’,‘price’: 233.5}, {‘ticker’:’MSFT’,‘price’: 115.8}, {‘ticker’:’GOOGL’, ‘price’: 1234.5}]
price_limit = 100

filtered_stocks = [stock for stock in stocks if stock[""price""] > price_limit]

print(filtered_stocks)",Data Structure,1283,"stocks = [___, ___, ___]
price_limit = 100

filtered_stocks = [stock for stock in stocks if stock[""price""] > price_limit]

print___"
Generate a Python program to classify a given feature set into two classes,"features = [[9, 3], [7, 2], [4, 1], [0, 5]]
class_labels = ['good', 'bad']","def classify(features, class_labels):
    decision_boundary = 5 
    predictions = []
    for feature in features:
        if feature[0] > decision_boundary:
            predictions.append(class_labels[0])
        else:
            predictions.append(class_labels[1])
    return predictions",Data Structure,1284,"def classify___:
    decision_boundary = 5 
    predictions = []
    for feature in features:
        if feature___ > decision_boundary:
            predictions___class_labels[0])
        else:
            predictions___class_labels[1])
    return predictions"
Develop an algorithm to sort a list of numbers from low to high inPython.,"[5, 7, 1, 6, 10, 4, 2]","def sort_numbers(nums):
    for i in range(len(nums)):
        for j in range(i+1, len(nums)):
            if nums[i] > nums[j]:
                temp = nums[j]
                nums[j] = nums[i]
                nums[i] = temp
    return nums

print(sort_numbers([5, 7, 1, 6, 10, 4, 2]))",Data Structure,1287,"def sort_numbers___:
    for i in range___):
        for j in range___):
            if nums[i] > nums[j]:
                temp = nums[j]
                nums[j] = nums[i]
                nums[i] = temp
    return nums

print___)"
Design a Python script that prints out all the even numbers in a given list of numbers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","# given list of numbers
nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# empty list for even numbers
even_list = []

# iterate over the list
for num in nums:
    # check if number is even
    if num % 2 == 0:
        # append number to even list
        even_list.append(num)

# print even numbers
print(even_list)",Data Structure,1293,"# given list of numbers
nums = ___

# empty list for even numbers
even_list = []

# iterate over the list
for num in nums:
    # check if number is even
    if num % 2 == 0:
        # append number to even list
        even_list___num)

# print even numbers
print___"
Develop a Python code that takes in an array of integers and outputs the array sorted in descending order.,"[9, 2, 7, 1]","def sort_descending(arr):
    arr.sort(reverse=True)
    return arr

arr = [9, 2, 7, 1]
res = sort_descending(arr) 
print (str(res))",Data Structure,1294,"def sort_descending___:
    arr.sort___
    return arr

arr = ___
res = sort_descending___ 
print ___)"
Write a Python program to find the index of the first occurrence of the given element in the given list.,"inputlist = [1, 2, 5, 8, 10, 9]
element = 8","def find_element(inputlist, element):
    for i, num in enumerate(inputlist):
        if element == num:
            return i",Data Structure,1295,"def find_element___:
    for i, num in enumerate___:
        if element == num:
            return i"
"Generate a Python program to compute the sum of the numbers in an array, after mapping each element to its square.","myList = [2, 3, 4, 5, 6]","def sum_of_squares(myList):
    result = 0
    for num in myList:
        result += num**2
    return result

total = sum_of_squares(myList)
print(""Sum of Squares:"", total)",Data Structure,1296,"def sum_of_squares___:
    result = 0
    for num in myList:
        result += num**2
    return result

total = sum_of_squares___
print___"
Construct a python program to separate even and odd numbers from an array.,"[1, 2, 3, 4, 5, 6]","def separate_even_odd(arr):
    even = []
    odd = []
    for num in arr:
        if num % 2 == 0:
            even.append(num)
        else:
            odd.append(num)
    return even, odd
 
even, odd = separate_even_odd([1, 2, 3, 4, 5, 6])
print('Even numbers:', even)
print('Odd numbers:', odd)",Data Structure,1302,"def separate_even_odd___:
    even = []
    odd = []
    for num in arr:
        if num % 2 == 0:
            even___num)
        else:
            odd___num)
    return even, odd
 
even, odd = separate_even_odd___
print___
print___"
"Write a Python program to generate a list containing all the linear combinations of `x` and `y`, where `x` and `y` are given as input.","x = [1, 2, 3]
y = [4, 5, 6]","x = [1, 2, 3]
y = [4, 5, 6]

combinations = [[i, j] for i in x for j in y]
print(combinations)",Data Structure,1303,"x = ___
y = ___

combinations = [[i, j] for i in x for j in y]
print___"
Construct a program in Python to search for a given number in an array.,"array = [1, 2, 3, 4, 5]
number = 3","def search(array, x):
	for i in range(len(array)):
		if array[i] == x:
			return i
	return -1",Data Structure,1304,"def search___:
	for i in range___):
		if array[i] == x:
			return i
	return -1"
Implement a function in Python for finding the maximum element in an array.,"list = [18, 25, 1, 12, 37]","def find_max(list):
    max_element = list[0]
    for element in list:
        if element > max_element:
            max_element = element
    return max_element

max = find_max(list)
print(max)",Data Structure,1306,"def find_max___:
    max_element = list___
    for element in list:
        if element > max_element:
            max_element = element
    return max_element

max = find_max___
print___"
Create a Python script to sort the following list in ABC order,"list = [3, 6, 9, 1, 4, 8]","list = [3, 6, 9, 1, 4, 8]

list.sort()

print(list)",Data Structure,1308,"list = ___

list.sort()

print___"
Edit the following Python code so that it prints the sum of the list elements.,"list = [10, 20, 30, 40]","list = [10, 20, 30, 40]

sum = 0
for i in list:
 sum += i

print(""The sum is"", sum)",Data Structure,1312,"list = ___

sum = 0
for i in list:
 sum += i

print___"
Write a Python program to create a new list that contains all the elements of the given list multiplied by each other.,"nums = [1, 2, 3, 4]","def multiply(nums):
    result = []
    for i in range(len(nums)):
        for j in range(i+1, len(nums)):
            result.append(nums[i] * nums[j]) 
    return result",Data Structure,1314,"def multiply___:
    result = []
    for i in range___):
        for j in range___):
            result___nums[i] * nums[j]) 
    return result"
Write a Python program to find the number of occurrences of a given element in an array.,"list = [1, 2, 5, 4, 1, 5]","def countOccurrences(list, element):
    count = 0
    for i in range(len(list)):
        if list[i] == element:
            count += 1
    return count

if __name__ == '__main__':
    list = [1, 2, 5, 4, 1, 5]
    element = 5
    print(countOccurrences(list, element))",Data Structure,1317,"def countOccurrences___:
    count = 0
    for i in range___):
        if list[i] == element:
            count += 1
    return count

if __name__ == '__main__':
    list = ___
    element = 5
    print___)"
Use the following data and create a python program to find the minimum value in the list.,"nums = [7, 8, 5, 1, 9, 4]","# find the minimum value using the min function
min_value = min(nums)

# print the minimum value
print(""The minimum value is: "",min_value)",Data Structure,1318,"# find the minimum value using the min function
min_value = min___

# print the minimum value
print___"
Create a Python program to sort a list of numbers from lowest to highest.,"[3, 7, 2, 1, 19]","def sort_list(nums):
    for i in range(len(nums)):
        min_index = i
        
        for j in range(i+1, len(nums)):
            if nums[min_index] > nums[j]:
                min_index = j
        
        nums[i], nums[min_index] = nums[min_index], nums[i]
        
    return nums
    
print(sort_list([3, 7, 2, 1, 19]))

# Output: [1, 2, 3, 7, 19]",Data Structure,1320,"def sort_list___:
    for i in range___):
        min_index = i
        
        for j in range___):
            if nums[min_index] > nums[j]:
                min_index = j
        
        nums[i], nums[min_index] = nums[min_index], nums[i]
        
    return nums
    
print___)

# Output: ___"
Write a Python program that performs linear regression. The program should generate a prediction given an input and a list of parameters.,"Input: 5 
Parameters: [0.5, 1.2, 3.1]","import numpy as np
 
def predict(x, params):
 x = np.array(x)
 params = np.array(params)
 
 y = 0
 for i in range(params.shape[0]):
 y += params[i] * x ** i
 
 return y
 
x = 5
params = [0.5, 1.2, 3.1]
 
y = predict(x, params)
print(y) # Output: 35.4",Data Structure,1325,"import numpy as np
 
def predict___:
 x = np.array___
 params = np.array___
 
 y = 0
 for i in range___:
 y += params[i] * x ** i
 
 return y
 
x = 5
params = [0.5, 1.2, 3.1]
 
y = predict___
print___ # Output: 35.4"
"For an existing Python program, write a function to sort a given list of numbers in ascending order.","[4, 3, 2, 5, 1]","def sort_list(numbers): 
 numbers.sort()
 return numbers

print(sort_list([4, 3, 2, 5, 1]))",Data Structure,1331,"def sort_list___: 
 numbers.sort()
 return numbers

print___)"
Create an algorithm in Python to search a given list for a specific value.,"[1, 4, 6, 8, 10], 8","def search(lst, target):
 for i in range(len(lst)):
  if lst[i] == target:
   return i
 return -1

search([1, 4, 6, 8, 10], 8)  # Output: 3",Data Structure,1332,"def search___:
 for i in range___):
  if lst[i] == target:
   return i
 return -1

search___  # Output: 3"
Find the maximum value from a given list of numbers in Python.,"[12, 34, 23, 45, 13, 65, 66]","def find_max(nums):
    max = nums[0]
    for num in nums[1:]:
        if num > max: 
            max = num
    return max

print(find_max([12, 34, 23, 45, 13, 65, 66]))",Data Structure,1344,"def find_max___:
    max = nums___
    for num in nums[1:]:
        if num > max: 
            max = num
    return max

print___)"
Generate code in Python to remove a given element from a given list.,"List: [2, 3, 4, 5, 6]
Element to remove: 5","list = [2, 3, 4, 5, 6]

list.remove(5)",Data Structure,1346,"list = ___

list___5)"
Develop an algorithm in Python for inserting an element into a given sorted array.,"sortedArray = [1, 5, 9, 12, 15]
x = 7","def insertSort(sortedArray, x): 
    n = len(sortedArray) 
    sortedArray.append(x) 
    for i in range(n-1, -1, -1): 
        if sortedArray[i] > x: 
            sortedArray[i + 1] = sortedArray[i] 
            sortedArray[i] = x 
    return sortedArray

print(insertSort(sortedArray, x))",Data Structure,1350,"def insertSort___: 
    n = len___ 
    sortedArray___x) 
    for i in range___: 
        if sortedArray[i] > x: 
            sortedArray[i + 1] = sortedArray[i] 
            sortedArray[i] = x 
    return sortedArray

print___)"
"Write a function in Python that will take two inputs, an array of strings and a letter, and returns the number of elements in the array that contain the given letter.","['cat', 'dog', 'fish','apple']
letter: 'a'","def count_elements_with_letter(arr,letter):
   count = 0
   for a in arr:
      if letter in a:
         count += 1 
   
   return count 

count_elements_with_letter(['cat','dog','fish','apple'], 'a')
# output: 3",Data Structure,1352,"def count_elements_with_letter___:
   count = 0
   for a in arr:
      if letter in a:
         count += 1 
   
   return count 

count_elements_with_letter___
# output: 3"
"Given a set of numbers, construct a Python program to calculate the sum of all prime numbers in the set.","[2, 3, 9, 14]","def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True
 
def sum_primes(nums):
    prime_sum = 0
    for num in nums:
        if is_prime(num):
            prime_sum += num
    return prime_sum
 
nums = [2, 3, 9, 14]
 
result = sum_primes(nums)
print(result)",Data Structure,1356,"def is_prime___:
    if n <= 1:
        return False
    for i in range___ + 1):
        if n % i == 0:
            return False
    return True
 
def sum_primes___:
    prime_sum = 0
    for num in nums:
        if is_prime___:
            prime_sum += num
    return prime_sum
 
nums = ___
 
result = sum_primes___
print___"
Write a Python program to remove all elements of a given list except largest and smallest element.,"numbers = [3, 4, 6, 2, 8, 9, 1]","def get_min_max(numbers):
 max_num = max(numbers)
 min_num = min(numbers)
 new_list = []
 for i in numbers:
  if i == max_num or i == min_num:
   new_list.append(i)
 return new_list",Data Structure,1358,"def get_min_max___:
 max_num = max___
 min_num = min___
 new_list = []
 for i in numbers:
  if i == max_num or i == min_num:
   new_list___i)
 return new_list"
"Create a Python function which takes a list, and prints out the third item of the list.","mylist = [1, 2, 3, 4, 5]","def thirdElement(mylist):
    """""" Print out the third element of the list. """"""
    print(mylist[2])

thirdElement(mylist)",Data Structure,1363,"def thirdElement___:
    """""" Print out the third element of the list. """"""
    print___

thirdElement___"
Create a Python program to generate an array of all possible unique combinations of 3 elements from a given array.,"[1, 2, 3, 4]","def combinations(arr):
 sol = []
 
 for i in range(len(arr)):
 for j in range(len(arr)):
 for k in range(len(arr)):
 if i != j and j != k and k != i:
 sol.append([arr[i], arr[j], arr[k]])
 
 return sol

print(combinations([1, 2, 3, 4])) # Outputs [[1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]]",Data Structure,1369,"def combinations___:
 sol = []
 
 for i in range___):
 for j in range___):
 for k in range___):
 if i != j and j != k and k != i:
 sol___[arr[i], arr[j], arr[k]])
 
 return sol

print___) # Outputs [[1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]]"
Create a Python script to calculate the average age of a list of people.,"people = [
 { 'name': 'John', 'age': 25 },
 { 'name': 'Jane', 'age': 34 },
 { 'name': 'Dave', 'age': 19 },
 { 'name': 'Sarah', 'age': 21 },
 { 'name': 'Henry', 'age': 29 }
]","total = 0
for person in people:
 total += person['age']

average = total / len(people)

print(f'Average age is {average}') // 24.4",Data Structure,1370,"total = 0
for person in people:
 total += person['age']

average = total / len___

print(f'Average age is ___') // 24.4"
Create a program in Python to delete all duplicates from a given list.,"list = [1, 2, 3, 1, 3, 4]","def remove_duplicates(list):
    new_list = []
    for e in list:
        if e not in new_list:
            new_list.append(e)
    return new_list

list = [1, 2, 3, 1, 3, 4]
list = remove_duplicates(list)
print(list)",Data Structure,1376,"def remove_duplicates___:
    new_list = []
    for e in list:
        if e not in new_list:
            new_list___e)
    return new_list

list = ___
list = remove_duplicates___
print___"
"Given a list of integers, write a Python program to find the largest and second largest numbers in the list.","[10, 20, 5, 45, 25]","def find_largest_and_second_largest(nums):
    max1 = float('-inf')
    max2 = float('-inf')
    for n in nums:
        if n > max1:
            max2 = max1
            max1 = n
        elif n > max2 and n != max1:
            max2 = n
    return max1, max2",Data Structure,1379,"def find_largest_and_second_largest___:
    max1 = float___
    max2 = float___
    for n in nums:
        if n > max1:
            max2 = max1
            max1 = n
        elif n > max2 and n != max1:
            max2 = n
    return max1, max2"
Generate a Python program to append a given element to the end of the list.,"[2, 3, 4], 6","arr = [2, 3, 4] 
arr.append(6)
print(arr)",Data Structure,1383,"arr = ___ 
arr___6)
print___"
Construct a Python code to combine the elements of two given list and return a sorted union list.,"input_list_1: [4, 10, 2]
input_list_2: [10, 2, 15]","def union_list(list1, list2): 
    list3 = list1 + list2 
    list3.sort() 
    return list3 
    
union_list(input_list_1, input_list_2)",Data Structure,1384,"def union_list___: 
    list3 = list1 + list2 
    list3.sort() 
    return list3 
    
union_list___"
Design an algorithm in Python and write a function to reverse an array.,"[1,2,3,4]","def reverse_array(arr):
    start = 0
    end = len(arr) - 1
    while(start < end):
        arr[start], arr[end] = arr[end], arr[start]
        start += 1
        end -= 1
    return arr",Data Structure,1385,"def reverse_array___:
    start = 0
    end = len___ - 1
    while___:
        arr[start], arr[end] = arr[end], arr[start]
        start += 1
        end -= 1
    return arr"
Construct a Python program that takes a list of words and checks if the list is in alphabetical order.,"['cat', 'dog', 'hippo', 'horse']","def check_if_list_is_in_alphabetical_order(words_list):
    for i in range(len(words_list)-1):
        if words_list[i] > words_list[i+1]:
            return False
    return True
 
words_list = ['cat', 'dog', 'hippo', 'horse']
result = check_if_list_is_in_alphabetical_order(words_list)
print (result)",Data Structure,1387,"def check_if_list_is_in_alphabetical_order___:
    for i in range___-1):
        if words_list[i] > words_list[i+1]:
            return False
    return True
 
words_list = ['cat', 'dog', 'hippo', 'horse']
result = check_if_list_is_in_alphabetical_order___
print ___"
"Given a list of integers, write a Python program to detect whether or not the list contains an even number.","[1, 3, 5, 7, 9]","def check_even(numbers):
  for num in numbers:
    if num % 2 == 0:
      return True
  return False",Data Structure,1391,"def check_even___:
  for num in numbers:
    if num % 2 == 0:
      return True
  return False"
Write a function in Python that takes a list of integers as an input and returns a new list with every even number doubled and every odd number quadrupled.,"[2, 5, 6, 8]","def multiply_values(lst):
 return [x * 2 if x % 2 == 0 else x * 4 for x in lst]

# Example
lst = [2, 5, 6, 8]
print(multiply_values(lst))
# [4, 20, 12, 16]",Data Structure,1395,"def multiply_values___:
 return [x * 2 if x % 2 == 0 else x * 4 for x in lst]

# Example
lst = ___
print___)
# ___"
"Create a Python program that takes an array of strings and returns an array of all strings that start with the letter ""A"".","[""Apple"", ""Grape"", ""Banana"", ""Aeroplane""]","def filter_array_elements(arr): 
    result = [] 
    for string in arr: 
        if string[0] == 'A': 
            result.append(string) 
    return result

output = filter_array_elements([""Apple"", ""Grape"", ""Banana"", ""Aeroplane""])
print(output)",Data Structure,1398,"def filter_array_elements___: 
    result = [] 
    for string in arr: 
        if string___ == 'A': 
            result___string) 
    return result

output = filter_array_elements___
print___"
Generate a Python program to classify a given list of numbers using try and except block.,"list_of_numbers = [16, 5, 9, 21, 17]","def classify_numbers(list_of_numbers):
    for number in list_of_numbers:
        try:
            if number % 3 == 0:
                print('Number {} is divisible by 3'.format(number))
        except ZeroDivisionError:
            print('Number {} cannot be divided by 3: division by zero bug'.format(number))",Data Structure,1402,"def classify_numbers___:
    for number in list_of_numbers:
        try:
            if number % 3 == 0:
                print___)
        except ZeroDivisionError:
            print___)"
Generate python code to implement a linear search algorithm to find a particular value in an array.,"array = [5, 10, 15, 20]","def linear_search(array, value):
    length = len(array)
    
    for i in range(length):
        if array[i] == value:
            return i
            
    return -1

print(linear_search(array, 15))",Data Structure,1404,"def linear_search___:
    length = len___
    
    for i in range___:
        if array[i] == value:
            return i
            
    return -1

print___)"
Write a python program to sort a list of strings based on their lengths.,"['test', 'sample', 'hello', 'world']","list_of_strings = ['test', 'sample', 'hello', 'world']

list_of_strings.sort(key=len)

print(list_of_strings)",Data Structure,1405,"list_of_strings = ['test', 'sample', 'hello', 'world']

list_of_strings.sort___

print___"
"Create a Python program that computes the average of the numbers in the list [3, 5, 7, 9].","[3, 5, 7, 9]","def get_average(numbers):
 sum = 0
 for num in numbers:
  sum = sum + num
 return sum / len(numbers)
 
numbers = [3, 5, 7, 9]
average = get_average(numbers)
print(average) # Outputs 6.5",Data Structure,1406,"def get_average___:
 sum = 0
 for num in numbers:
  sum = sum + num
 return sum / len___
 
numbers = ___
average = get_average___
print___ # Outputs 6.5"
"Starting from given list of numbers, use Python to generate a new list of integers containing the square root of each number in original list.","[4, 9, 16, 25]","import math 
def get_sqrt_list(lst): 
    sqrt_list = [] 
    for el in lst: 
        sqrt_list.append(math.sqrt(el)) 
    return sqrt_list 
print(get_sqrt_list([4, 9, 16, 25]))",Data Structure,1409,"import math 
def get_sqrt_list___: 
    sqrt_list = [] 
    for el in lst: 
        sqrt_list___math.sqrt(el)) 
    return sqrt_list 
print___)"
"Create a Python program that takes a list of carbohydrates [glucose, fructose, galactose] and calculates the net energy charge.","[glucose, fructose, galactose]","net_energy_charge = 0

for carbohydrate in list_of_carbohydrates:
 if carbohydrate == 'glucose':
  net_energy_charge += -2.3
 elif carbohydrate == 'fructose':
  net_energy_charge += -2.5
 elif carbohydrate == 'galactose':
  net_energy_charge += -3

print(net_energy_charge)",Data Structure,1412,"net_energy_charge = 0

for carbohydrate in list_of_carbohydrates:
 if carbohydrate == 'glucose':
  net_energy_charge += -2.3
 elif carbohydrate == 'fructose':
  net_energy_charge += -2.5
 elif carbohydrate == 'galactose':
  net_energy_charge += -3

print___"
Construct a code that identifies the sum of elements of an array in Python.,"[4, 6, 8, 2]","def sum_elements(arr):
    summ = 0
    for i in arr: 
        summ += i
    return summ

summ = sum_elements([4, 6, 8, 2])
print(summ)",Data Structure,1414,"def sum_elements___:
    summ = 0
    for i in arr: 
        summ += i
    return summ

summ = sum_elements___
print___"
Implement a program in Python to get the sum of all even numbers in a list of integers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def sum_of_even_numbers(lst): 
  sum = 0
  for i in lst: 
    if i%2 == 0: 
      sum = sum + i 
  return sum 
  
print(sum_of_even_numbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",Data Structure,1415,"def sum_of_even_numbers___: 
  sum = 0
  for i in lst: 
    if i%2 == 0: 
      sum = sum + i 
  return sum 
  
print___)"
Write an algorithm in Python that calculates the maximum subarray of a given array.,"[-2,1,-3,4,-1,2,1,-5,4]","def max_subarray(arr):
 max_so_far = arr[0] 
 max_ending_here = arr[0] 
   
 for i in range(1, len(arr)): 
  max_ending_here = max(arr[i], max_ending_here + arr[i]) 
  max_so_far = max(max_so_far, max_ending_here)  
   
 return max_so_far",Data Structure,1417,"def max_subarray___:
 max_so_far = arr___ 
 max_ending_here = arr___ 
   
 for i in range___): 
  max_ending_here = max___ 
  max_so_far = max___  
   
 return max_so_far"
Develop a Python program to compact a given list of integers by removing its duplicate elements.,"[1, 1, 2, 2, 3, 4, 4, 5]","def compact_list(array):
    return list(set(array))",Data Structure,1421,"def compact_list___:
    return list___)"
Write a Python program to insert an item at a given position into a list,"lst = [""Red"", ""Orange"", ""Yellow""]
item = ""Black""
pos = 2","def insert_item(lst, item, pos):
    lst.insert(pos, item)
    return lst

lst = [""Red"", ""Orange"", ""Yellow""]
item = ""Black""
pos = 2

print(insert_item(lst, item, pos))",Data Structure,1422,"def insert_item___:
    lst___pos, item)
    return lst

lst = [""Red"", ""Orange"", ""Yellow""]
item = ""Black""
pos = 2

print___)"
Code a python class that accepts a list of names as input and prints them on a separate line.,"List:[""John"", ""James"", ""Jenny"", ""Frank""]","class Person: 
  def __init__(self, names): 
    self.names = names
    
  def print_names(self): 
    for name in self.names: 
      print(name) 
      
person = Person([""John"", ""James"", ""Jenny"", ""Frank""])
person.print_names()",Data Structure,1431,"class Person: 
  def __init_____: 
    self.names = names
    
  def print_names___: 
    for name in self.names: 
      print___ 
      
person = Person___
person.print_names()"
Write Python code to find the sum of products of respective array elements,"[1, 2, 3, 4]
[5, 10, 15, 20]","def sum_product_array(arr1, arr2):
    total = 0
    for i in range(len(arr1)):
        total += arr1[i] * arr2[i]
    return total",Data Structure,1435,"def sum_product_array___:
    total = 0
    for i in range___):
        total += arr1[i] * arr2[i]
    return total"
Write a python script that takes a list of strings as input and reverse the order of each sentence.,"sentences = [""Hello world!"", ""I am learning Python!"", ""How are you?""]","sentences = [""Hello world!"", ""I am learning Python!"", ""How are you?""]

reversed_sentences = [sentence[::-1] for sentence in sentences]
 
print(reversed_sentences)
# Output: [""!dlrow olleH"", ""!nohtyP gninrael m'I"", ""?uoy era woH""]",Data Structure,1436,"sentences = [""Hello world!"", ""I am learning Python!"", ""How are you?""]

reversed_sentences = [sentence[::-1] for sentence in sentences]
 
print___
# Output: [""!dlrow olleH"", ""!nohtyP gninrael m'I"", ""?uoy era woH""]"
Write a function in Python that takes a list of numbers as input and returns the product of all the numbers.,"[1, 2, 3, 4]","def product(lst):
    product = 1
    for num in lst:
        product *= num
    return product

print(product([1, 2, 3, 4]))",Data Structure,1440,"def product___:
    product = 1
    for num in lst:
        product *= num
    return product

print___)"
Take the list of people below and create a Python dictionary with the names as keys and the ages as values.,"John (20), Jane (40), Alex (18), Peter (45)","people_dict = {'John': 20, 'Jane': 40, 'Alex': 18, 'Peter': 45}",Data Structure,1442,people_dict = ___
Create a Python 3 program to sort a list of numbers in ascending order.,"[5, 7 ,1 ,3, 4]","def sort_list(lst):
  lst.sort()
  return lst

lst = [5, 7 ,1 ,3, 4]
sorted_list = sort_list(lst)
print(sorted_list)",Data Structure,1448,"def sort_list___:
  lst.sort()
  return lst

lst = ___
sorted_list = sort_list___
print___"
Create a python function that accepts two lists as arguments and returns true if the first list is contained within the second,"list_a = [1,2,3,4]
list_b = [1,2,3,4,5,6,7]","def is_contained(list_a, list_b):
    for x in list_b: 
        if x not in list_a: 
            return False 
  
    return True",Data Structure,1452,"def is_contained___:
    for x in list_b: 
        if x not in list_a: 
            return False 
  
    return True"
"Make a program in Python that takes a list of integers as input and prints the average, maximum, and minimum.","[1, 7, 4, 6]","def calculate_avg_max_min(list_of_int):
    avg = sum(list_of_int) / len(list_of_int)
    maximum = max(list_of_int)
    minimum = min(list_of_int)
    return avg, maximum, minimum

list_of_int = [1, 7, 4, 6]
avg, max_int, min_int = calculate_avg_max_min(list_of_int)
print(""Average ="", avg)
print(""Maximum ="", max_int)
print(""Minimum ="", min_int)",Data Structure,1453,"def calculate_avg_max_min___:
    avg = sum___ / len___
    maximum = max___
    minimum = min___
    return avg, maximum, minimum

list_of_int = ___
avg, max_int, min_int = calculate_avg_max_min___
print___
print___
print___"
Suggest a Python program to create a list filled with random numbers,"Length = 10
Lower bound = 0
Upper bound = 1000","import random

def create_random_number_list(length, lower_bound, upper_bound):
    output_list = []
    for i in range(length):
        output_list.append(random.randint(lower_bound, upper_bound))
    return output_list

length = 10
lower_bound = 0
upper_bound = 1000

result = create_random_number_list(length, lower_bound, upper_bound)
print(result)",Data Structure,1460,"import random

def create_random_number_list___:
    output_list = []
    for i in range___:
        output_list___random.randint(lower_bound, upper_bound))
    return output_list

length = 10
lower_bound = 0
upper_bound = 1000

result = create_random_number_list___
print___"
Generate a function in Python that takes an array of numbers and returns an array of the squares of the numbers.,"[1,2,3]","""""""
A function to return the squares of an array in Python 
""""""

def square_array(input_array): 
  squared_array = []
  for i in input_array: 
    squared_array.append(i*i)
  return squared_array",Data Structure,1461,"""""""
A function to return the squares of an array in Python 
""""""

def square_array___: 
  squared_array = []
  for i in input_array: 
    squared_array___i*i)
  return squared_array"
Generate a Python program that calculates standard deviation of a set of numbers.,"[20, 25, 30, 35, 40]","def std_dev(data_set):
    mean = sum(data_set) / len(data_set)
    total_sum = 0
    for i in data_set:
        total_sum += (i - mean) ** 2
    variance = total_sum / len(data_set)
    std_dev = variance ** (1/2)
    return std_dev

data_set = [20, 25, 30, 35, 40]
print(""Standard Deviation: "" + str(std_dev(data_set)))",Data Structure,1467,"def std_dev___:
    mean = sum___ / len___
    total_sum = 0
    for i in data_set:
        total_sum += ___ ** 2
    variance = total_sum / len___
    std_dev = variance ** ___
    return std_dev

data_set = ___
print___))"
"Given a list of numbers, write a Python program to find the frequency of each number in the list.","my_list = [1, 2, 3, 4, 1, 2, 3]","from collections import Counter

def find_frequency(list): 
    return Counter(list) 

my_list = [1, 2, 3, 4, 1, 2, 3]
freq = find_frequency(my_list)
print(freq)",Data Structure,1470,"from collections import Counter

def find_frequency___: 
    return Counter___ 

my_list = ___
freq = find_frequency___
print___"
Generate a Python program that takes a numerical list and finds the index of the largest value.,"[3, 5, 9, 10]","# list of numbers 
list = [3, 5, 9, 10] 

# maximum number 
MaxNum = max(list) 

# index of the maximum number 
index = list.index(MaxNum) 

print(""Maximum number is:"", MaxNum) 
print(""Index of maximum number is:"", index)",Data Structure,1473,"# list of numbers 
list = ___ 

# maximum number 
MaxNum = max___ 

# index of the maximum number 
index = list.index___ 

print___ 
print___"
Make a code in Python to find the mode of the given set of values.,"1, 2, 3, 2, 4, 2","def find_mode(list):
  max_count = 0
  mode = list[0]
  count = {}
  for item in list:
    if (item in count):
      count[item] += 1
    else:
      count[item] = 1
    if (count[item] > max_count):
      max_count = count[item]
      mode = item
  return mode",Data Structure,1474,"def find_mode___:
  max_count = 0
  mode = list___
  count = {}
  for item in list:
    if ___:
      count[item] += 1
    else:
      count[item] = 1
    if ___:
      max_count = count[item]
      mode = item
  return mode"
Create a Python function that takes in a list and prints a dictionary with the elements and the product of each element.,"list = [7, 8, 5]","def product_of_list(list):
    output = {}
    for element in list:
        output[element] = element * element
    return output

print(product_of_list([7, 8, 5]))",Data Structure,1475,"def product_of_list___:
    output = {}
    for element in list:
        output[element] = element * element
    return output

print___)"
Generate a Python program to filter a list of strings to only return words that have 7 or more characters.,"words = ['Apple', 'Banana', 'Cabbage', 'Cucumber']","words = ['Apple', 'Banana', 'Cabbage', 'Cucumber']

def filter_list(words):
  filtered_list = []

  for word in words:
    if len(word) >= 7:
      filtered_list.append(word)

  return filtered_list",Data Structure,1481,"words = ['Apple', 'Banana', 'Cabbage', 'Cucumber']

def filter_list___:
  filtered_list = []

  for word in words:
    if len___ >= 7:
      filtered_list___word)

  return filtered_list"
Create a Python class that will store a list of integers and calculate the sum of all the elements in the list.,"[2, 3, 5, 7]","class CalcListSum:
  def __init__(self, numbers):
    self.numbers = numbers

  def get_sum(self):
    sum = 0
    for num in self.numbers:
      sum += num
    return sum 

nums = [2, 3, 5, 7]
calc_sum = CalcListSum(nums)
sum_of_nums = calc_sum.get_sum()
print(sum_of_nums)",Data Structure,1485,"class CalcListSum:
  def __init_____:
    self.numbers = numbers

  def get_sum___:
    sum = 0
    for num in self.numbers:
      sum += num
    return sum 

nums = ___
calc_sum = CalcListSum___
sum_of_nums = calc_sum.get_sum()
print___"
"Suggest a completion for the following python code, such that it prints all the elements of a list.",def print_list_elements(lst):,"def print_list_elements(lst):
    for elem in lst:
        print(elem)",Data Structure,1497,"def print_list_elements___:
    for elem in lst:
        print___"
Generate a program in Python that implements the bubble sort algorithm to sort an unsorted array of integers.,"[5,3,2,4]","def bubble_sort(nums):
 for i in range(len(nums)-1):
 for j in range(i+1, len(nums)):
 if nums[i] > nums[j]:
 nums[i], nums[j] = nums[j], nums[i]

nums = [5,3,2,4]
bubble_sort(nums)
print(nums)

# Output
[2,3,4,5]",Data Structure,1504,"def bubble_sort___:
 for i in range___-1):
 for j in range___):
 if nums[i] > nums[j]:
 nums[i], nums[j] = nums[j], nums[i]

nums = ___
bubble_sort___
print___

# Output
___"
Create a python program that takes a sentence and returns a list of words in alphabetical order.,Sentence:  The quick brown fox jumped over the lazy dog.,"sentence = ""The quick brown fox jumped over the lazy dog.""

# Split sentence into words
words = sentence.split()

# Sort list of words alphabetically
words.sort()

# Print sorted list of words
print(words)

# Output: ['brown', 'dog.', 'fox', 'The', 'jumped', 'lazy', 'over', 'quick', 'the']",Data Structure,1509,"sentence = ""The quick brown fox jumped over the lazy dog.""

# Split sentence into words
words = sentence.split()

# Sort list of words alphabetically
words.sort()

# Print sorted list of words
print___

# Output: ['brown', 'dog.', 'fox', 'The', 'jumped', 'lazy', 'over', 'quick', 'the']"
Design an algorithm in Python that accepts a list of integers as an input and returns true if the list contains duplicates.,"arr = [1, 4, 9, 6, 2, 5, 9, 7]","def is_duplicate(arr):
    return len(arr) != len(set(arr))

is_duplicate(arr) # returns True",Data Structure,1513,"def is_duplicate___:
    return len___ != len___)

is_duplicate___ # returns True"
Write a function in Python to remove duplicate entries from a list.,"[1,2,2,3,3,4]","def removeDuplicates(input): 
    final_list = [] 
    for num in input: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list 

lst = [1,2,2,3,3,4]
print(removeDuplicates(lst))",Data Structure,1519,"def removeDuplicates___: 
    final_list = [] 
    for num in input: 
        if num not in final_list: 
            final_list___num) 
    return final_list 

lst = ___
print___)"
Create a Python program that multiplies a list of numbers together,"[3, 6, 5, 4]","def multiply_list(nums):
    product = 1
    for num in nums:
        product *= num
    return product

print(multiply_list([3, 6, 5, 4]))",Data Structure,1521,"def multiply_list___:
    product = 1
    for num in nums:
        product *= num
    return product

print___)"
"Formulate a script in Python that takes as input an array of integers, and returns the highest number in the array.","[1, 2, 5, 3, 7, 4]","def highest_number(arr):
    '''
    Function to get the highest number in an array of integers
    
    Parameters
    arr: list of integers
    
    Returns
    highest number in the array
    '''
    highest_num = arr[0]
    for num in arr:
        if num > highest_num:
            highest_num = num
    return highest_num",Data Structure,1526,"def highest_number___:
    '''
    Function to get the highest number in an array of integers
    
    Parameters
    arr: list of integers
    
    Returns
    highest number in the array
    '''
    highest_num = arr___
    for num in arr:
        if num > highest_num:
            highest_num = num
    return highest_num"
Is it possible to write a function in Python to convert a given list of lists into a CMOV instruction?,"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]","def listoflists_to_cmov(listoflists): 
    # Initialise CMOV array
    cmov = [0]*9
  
    # Fill CMOV array with given list of lists
    for i, list_ in enumerate(listoflists): 
        cmov[i*3:(i+1)*3] = list_

    # Return CMOV array 
    return cmov",Data Structure,1528,"def listoflists_to_cmov___: 
    # Initialise CMOV array
    cmov = ___*9
  
    # Fill CMOV array with given list of lists
    for i, list_ in enumerate___: 
        cmov[i*3:___*3] = list_

    # Return CMOV array 
    return cmov"
Build a Python program to find the maximum element in a list of numbers.,"[4, 9, 10, 11, 12]","def maxNum(numsList):
    maxNum = numsList[0]
    for num in numsList:
        if num > maxNum:
            maxNum = num
    return maxNum

numList = [4, 9, 10, 11, 12]
print(""The maximum number in the list is:"", maxNum(numList))",Data Structure,1534,"def maxNum___:
    maxNum = numsList___
    for num in numsList:
        if num > maxNum:
            maxNum = num
    return maxNum

numList = ___
print___)"
"Create a function in Python that takes two parameters: a list and a number. The function should return the list sorted in ascending order, based on the result of each element in the list multiplied by the input number.","[3, 1, 5, 4, 2],  5","def sortList(arr, num): 
    arr.sort(key = lambda x: x*num) 
    return arr 
  
arr = [3, 1, 5, 4, 2] 
num = 5
print(sortList(arr, num))",Data Structure,1535,"def sortList___: 
    arr.sort___ 
    return arr 
  
arr = ___ 
num = 5
print___)"
Perform an optimization algorithm in Python to find the maximum value of a function given a set of initial conditions.,"def f(x):
  return 3*x**2 + 2*x + 7

initial_conditions = [-3.2, -1.5, 2.4]","from scipy.optimize import minimize

def f(x):
  return 3*x**2 + 2*x + 7

initial_conditions = [-3.2, -1.5, 2.4]

result = minimize(f, initial_conditions, method='nelder-mead')
max_val = result.fun",Data Structure,1536,"from scipy.optimize import minimize

def f___:
  return 3*x**2 + 2*x + 7

initial_conditions = [-3.2, -1.5, 2.4]

result = minimize___
max_val = result.fun"
Can you write a function in Python to find the maximum number from a given list?,"List of Numbers: [9, 4, 2, 7, 5]","def find_max(lst):
  max_val = lst[0]
  for num in lst:
    if num > max_val:
      max_val = num
  return max_val

list_of_numbers = [9, 4, 2, 7, 5]
print(find_max(list_of_numbers))",Data Structure,1540,"def find_max___:
  max_val = lst___
  for num in lst:
    if num > max_val:
      max_val = num
  return max_val

list_of_numbers = ___
print___)"
Generate a Python script to assign grades to a set of test scores.,"[90, 80, 75, 70, 65]","def assignGrades(scores):
    grades = []
    for score in scores:
        if score >= 90:
            grades.append(""A"")
        elif score >= 80:
            grades.append(""B"")
        elif score >= 70:
            grades.append(""C"")
        elif score >= 65:
            grades.append(""D"")
        else:
            grades.append(""F"")
            
    return grades",Data Structure,1542,"def assignGrades___:
    grades = []
    for score in scores:
        if score >= 90:
            grades___""A"")
        elif score >= 80:
            grades___""B"")
        elif score >= 70:
            grades___""C"")
        elif score >= 65:
            grades___""D"")
        else:
            grades___""F"")
            
    return grades"
Modify the following Python funciton to return the second largest element in the list.,"x = [1, 2, 3, 4, 5]","def second_largest(x):
    x.sort()
    return x[-2]",Data Structure,1544,"def second_largest___:
    x.sort()
    return x[-2]"
Create a Python Code Snippet to retrieve the last two elements from a list.,"[1, 2, 3, 4, 5]","lastTwoElements = [1, 2, 3, 4, 5][-2:]

print(lastTwoElements)
#Output: [4, 5]",Data Structure,1550,"lastTwoElements = ___[-2:]

print___
#Output: ___"
Write a script in Python to generate a histogram of a given data set.,"data = [3, 5, 4, 6, 7, 8, 9, 3, 8, 5]","import matplotlib.pyplot as plt
plt.hist(data, 10)
plt.title(""Frequency Histogram"")
plt.xlabel(""Values"")
plt.ylabel(""Frequency"")
plt.show()",Data Structure,1553,"import matplotlib.pyplot as plt
plt.hist___
plt.title___
plt.xlabel___
plt.ylabel___
plt.show()"
Write a Python function to find the maximum and minimum number from a list of numbers.,"list = [1, 4, 5, 6, 7, 8]","def find_max_min(list):
  max_number = max(list)
  min_number = min(list)
  return max_number, min_number

max_number, min_number = find_max_min(list)
print(""Max number: "", max_number)
print(""Min number: "", min_number)",Data Structure,1556,"def find_max_min___:
  max_number = max___
  min_number = min___
  return max_number, min_number

max_number, min_number = find_max_min___
print___
print___"
Generate a random list of numbers in Python of size n and output their sum.,n = 10,"import random

n = 10
lst = [random.randrange(1, 101) for _ in range(n)]
sum_lst = sum(lst)

print(""Random list: "", lst)
print(""Sum of the list: "", sum_lst)",Data Structure,1560,"import random

n = 10
lst = [random.randrange___ for _ in range___]
sum_lst = sum___

print___
print___"
Write a Python function to find two numbers in an array with the largest sum.,"[3, 10, -3, -2, 5]","def max_sum(arr):
    max_val = float('-inf')
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            max_val = max(max_val, arr[i] + arr[j])
    return max_val

result = max_sum([3, 10, -3, -2, 5])
print(result)",Data Structure,1564,"def max_sum___:
    max_val = float___
    for i in range___):
        for j in range___):
            max_val = max___
    return max_val

result = max_sum___
print___"
Create a Python program which takes a list of numbers and adds them together.,"[1, 2, 3, 4, 5]","def sum_list(nums): 
	total = 0
	for num in nums: 
		total += num 
	return total 

nums = [1, 2, 3, 4, 5] 
print(sum_list(nums)) # 15",Data Structure,1567,"def sum_list___: 
	total = 0
	for num in nums: 
		total += num 
	return total 

nums = ___ 
print___) # 15"
Write a Python script to find the second largest number in a given list of numbers.,"arr = [4, 6, 10, -1, 3, 15]","def second_largest(arr):
  max_ = max(arr)
  new_arr = list(filter(lambda x: x != max_, arr))
  return max(new_arr)",Data Structure,1569,"def second_largest___:
  max_ = max___
  new_arr = list___)
  return max___"
Develop a Python function that takes a list of strings and returns a new list with the strings sorted in alphabetical order.,"['Elephant', 'Cat', 'Dog']","def sort_list(words):
    return sorted(words)

sorted_list = sort_list(['Elephant', 'Cat', 'Dog'])
print(sorted_list)",Data Structure,1571,"def sort_list___:
    return sorted___

sorted_list = sort_list___
print___"
Write a Python program to convert a list into a tuple.,"[3, 4, 5, 6]","list = [3, 4, 5, 6]
tuple = tuple(list)
print(""Tuple:"", tuple)",Data Structure,1573,"list = ___
tuple = tuple___
print___"
Create a program in Python that implements a sorting algorithm of your choice to sort a given array of integers in ascending order.,"A = [9, 4, 5, 1, 3]","def sort_array(A):
    if len(A) <= 1:
        return A

    pivot = A[0]
    left = [item for item in A if item < pivot]
    right = [item for item in A if item > pivot]

    return sort_array(left) + [pivot] + sort_array(right)",Data Structure,1575,"def sort_array___:
    if len___ <= 1:
        return A

    pivot = A___
    left = [item for item in A if item < pivot]
    right = [item for item in A if item > pivot]

    return sort_array___ + [pivot] + sort_array___"
Write a Python program which randomly selects 3 items from a list of 5 items and prints them to the console.,"list = [""apple"", ""banana"", ""orange"", ""strawberry"", ""grape""]","import random

list = [""apple"", ""banana"", ""orange"", ""strawberry"", ""grape""]
random.shuffle(list)

for item in list[:3]:
 print(item)",Data Structure,1577,"import random

list = [""apple"", ""banana"", ""orange"", ""strawberry"", ""grape""]
random.shuffle___

for item in list[:3]:
 print___"
Write a Python program to filter out the words containing in a list that are 6 characters long.,"words = ['banana', 'apple', 'jacket', 'house', 'turtle']",filtered_words = [ word for word in words if len(word) == 6 ],Data Structure,1582,filtered_words = [ word for word in words if len___ == 6 ]
Generate Python code to generate a histogram from a given data set.,"data = [1, 3, 5, 3, 2, 6, 8, 1, 2]","import matplotlib.pyplot as plt 

def generate_histogram(data):
    plt.hist(data)
    plt.xlabel(""Data"")
    plt.ylabel(""Frequency"")
    plt.title(""Histogram of Data"")
    plt.show()
    
generate_histogram(data)",Data Structure,1583,"import matplotlib.pyplot as plt 

def generate_histogram___:
    plt.hist___
    plt.xlabel___
    plt.ylabel___
    plt.title___
    plt.show()
    
generate_histogram___"
Develop a Python program to count the total characters from a given list of words.,"[""Apple"", ""Banana"", ""Orange""]","words = [""Apple"", ""Banana"", ""Orange""]
total_chars = 0

for word in words:
    total_chars += len(word)

print(total_chars) # Output: 15",Data Structure,1584,"words = [""Apple"", ""Banana"", ""Orange""]
total_chars = 0

for word in words:
    total_chars += len___

print___ # Output: 15"
Create a Python program that sorts a list of tuples by the second item.,"list_of_tuples = [('Apple', 2), ('Orange', 1), ('Banana', 3), ('Grape', 4)]","def sort_by_second_item(list_of_tuples):
  return sorted(list_of_tuples, key=lambda item: item[1])

sorted_list = sort_by_second_item(list_of_tuples)
print(sorted_list)

# Output: [('Orange', 1), ('Apple', 2), ('Banana', 3), ('Grape', 4)]",Data Structure,1587,"def sort_by_second_item___:
  return sorted___

sorted_list = sort_by_second_item___
print___

# Output: [___, ___, ___, ___]"
Write a Python program to generate a HTML table with a list of employees.,"Employee list: John, Kate, Mark","employee_list = [""John"", ""Kate"", ""Mark""]

html = ""<table>\n<tr>"";
for employee in employee_list:
  html += ""<td>""+employee+""</td>\n"";
html += ""</tr>\n</table>""

print(html)",Data Structure,1588,"employee_list = [""John"", ""Kate"", ""Mark""]

html = ""<table>\n<tr>"";
for employee in employee_list:
  html += ""<td>""+employee+""</td>\n"";
html += ""</tr>\n</table>""

print___"
Write a Python program to detect and remove the duplicates in a list.,"The list is [1, 20, 4, 6, 20, 4, 1, 6].","def remove_duplicates(lst): 
    return list(dict.fromkeys(lst)) 
  
lst = [1, 20, 4, 6, 20, 4, 1, 6] 
print(remove_duplicates(lst))",Data Structure,1590,"def remove_duplicates___: 
    return list___) 
  
lst = ___ 
print___)"
Provide a function in Python for squaring all elements of a given array.,"list = [1, 2, 3, 4]","def square_elements(arr):
    return [num**2 for num in arr]",Data Structure,1591,"def square_elements___:
    return [num**2 for num in arr]"
Develop a Python program that accepts a list of numbers and prints the 2nd largest and the 3rd smallest elements from the list.,"[3, 5, 2, 4, 9, 7]","def main():
 numbers = [3, 5, 2, 4, 9, 7]
 numbers.sort()
 
 print('The 2nd largest number is', numbers[-2])
 print('The 3rd smallest number is', numbers[2])
 
if __name__ == '__main__':
 main()",Data Structure,1593,"def main():
 numbers = ___
 numbers.sort()
 
 print___
 print___
 
if __name__ == '__main__':
 main()"
Generate a for loop to iterate over a list of numbers and write the output using python.,"[1, 2, 3, 4, 5]","for num in [1, 2, 3, 4, 5]:
    print(num)",Data Structure,1594,"for num in ___:
    print___"
Create a function in Python that takes in a list of integers and prints out the largest multiple of 3.,"List: [3, 15, 4, 6, 5]","def largestMultipleOf3(list): 
    list.sort() 
    running_sum = 0
    for i in range(len(list)): 
        running_sum += list[i] 

    if running_sum % 3 == 0:  
        return running_sum  

    return largestMultipleOf3(list[:-1]) 

list = [3, 15, 4, 6, 5] 
print(largestMultipleOf3(list)) // 15",Data Structure,1601,"def largestMultipleOf3___: 
    list.sort() 
    running_sum = 0
    for i in range___): 
        running_sum += list[i] 

    if running_sum % 3 == 0:  
        return running_sum  

    return largestMultipleOf3___ 

list = ___ 
print___) // 15"
Generate a Python program to classify a given set of data,"Given a dataset containing information about temperature and humidity, classify whether the day is raining or not","def classify_rain(temp, humidity):
    if temp < 70 and humidity > 0.7:
        return 'raining'
    else:
        return 'not raining'",Data Structure,1603,"def classify_rain___:
    if temp < 70 and humidity > 0.7:
        return 'raining'
    else:
        return 'not raining'"
Write a Python program to generate an SQL query from a given set of parameters.,"Table Name: users

Fields: id, name, age

Filter: age > 18","def generate_sql_query(table_name, fields, filter_clause):
 query = ""SELECT ""
 for i in range(len(fields)-1):
 query += fields[i] + "", ""
 query += fields[-1]
 query += "" FROM "" + table_name + "" WHERE "" + filter_clause
 return query",Data Structure,1608,"def generate_sql_query___:
 query = ""SELECT ""
 for i in range___-1):
 query += fields[i] + "", ""
 query += fields[-1]
 query += "" FROM "" + table_name + "" WHERE "" + filter_clause
 return query"
Write a Python program to reduce the given array into a single element.,"arr = [1, 2, 3, 4]","def reduce_arr(arr):
    result = 0
    for i in arr:
        result += i
    return result

reduce_arr(arr)",Data Structure,1615,"def reduce_arr___:
    result = 0
    for i in arr:
        result += i
    return result

reduce_arr___"
Create an algorithm in Python that computes the sum of an array,"[10, 20, 30, 40]","def array_sum(arr):
    sum = 0
    for num in arr:
        sum += num
    return sum

print(array_sum([10, 20, 30, 40]))

# Output: 100",Data Structure,1624,"def array_sum___:
    sum = 0
    for num in arr:
        sum += num
    return sum

print___)

# Output: 100"
Generate an optimized python program for splitting an array into two subarrays with equal sum.,"[1, 2, 3, 4, 5, 6]","def split_array_sum(arr):
  sum_arr = sum(arr)
  half_sum = sum_arr // 2
  current_sum = 0
  left_index = 0
  
  for index, value in enumerate(arr):
    current_sum += value
    if current_sum >= half_sum:
        left_index = index
        break
  
  left_arr = arr[:left_index+1]
  right_arr = arr[left_index+1:]
  return left_arr, right_arr",Data Structure,1628,"def split_array_sum___:
  sum_arr = sum___
  half_sum = sum_arr // 2
  current_sum = 0
  left_index = 0
  
  for index, value in enumerate___:
    current_sum += value
    if current_sum >= half_sum:
        left_index = index
        break
  
  left_arr = arr[:left_index+1]
  right_arr = arr[left_index+1:]
  return left_arr, right_arr"
Create a Python function to calculate the sum of the list elements.,"[1, 3, 4, 7, 9]","def list_sum(list_in):
 return sum(list_in)

# or
def list_sum(list_in):
 total_sum = 0
 
 for num in list_in:
 total_sum += num
 
 return total_sum",Data Structure,1629,"def list_sum___:
 return sum___

# or
def list_sum___:
 total_sum = 0
 
 for num in list_in:
 total_sum += num
 
 return total_sum"
Automate the task of checking if an array of numbers is in sorted order using a Python program.,"[2, 3, 6, 4, 8]","def is_sorted(nums):
    for i, num in enumerate(nums[:-1]):
        if num > nums[i + 1]:
            return False
    return True",Data Structure,1632,"def is_sorted___:
    for i, num in enumerate___:
        if num > nums[i + 1]:
            return False
    return True"
Write a Python program to calculate the mode of the given list of numbers.,"[2, 3, 4, 5, 2, 6, 1, 5]","def find_mode(numbers):
    most_freq = 0
    mode = None

    counts = {}
    for num in numbers:
        if num in counts:
            counts[num] += 1
        else:
            counts[num] = 1
    
    for num in counts:
        if counts[num] > most_freq:
            most_freq = counts[num]
            mode = num
    
    return mode",Data Structure,1634,"def find_mode___:
    most_freq = 0
    mode = None

    counts = {}
    for num in numbers:
        if num in counts:
            counts[num] += 1
        else:
            counts[num] = 1
    
    for num in counts:
        if counts[num] > most_freq:
            most_freq = counts[num]
            mode = num
    
    return mode"
Generate a valid python program to remove the duplicate elements from a given list.,"[2, 3, 4, 3, 2, 4]","def remove_duplicates(input_list):
    result = []
    for ele in input_list:
        if ele not in result:
            result.append(ele)
    return result",Data Structure,1637,"def remove_duplicates___:
    result = []
    for ele in input_list:
        if ele not in result:
            result___ele)
    return result"
Create a custom sorting algorithm in Python that sorts a list of integers from highest to lowest.,"int_list = [8, 5, 9, 3, 4, 6]","def custom_sort(int_list):
  for i in range(len(int_list)): 
    for j in range(i+1, len(int_list)): 
        if int_list[i] < int_list[j]: 
            int_list[i], int_list[j] = int_list[j], int_list[i] 
  return int_list

int_list = [8, 5, 9, 3, 4, 6]

sorted_list = custom_sort(int_list) 
print(""Sorted list: "", sorted_list)",Data Structure,1642,"def custom_sort___:
  for i in range___): 
    for j in range___): 
        if int_list[i] < int_list[j]: 
            int_list[i], int_list[j] = int_list[j], int_list[i] 
  return int_list

int_list = ___

sorted_list = custom_sort___ 
print___"
Create a Python dictionary from two given lists. The first list contains keys and the second list contains values.,"keys = [1, 2, 3, 4, 5]
values = [4, 5, 6, 7, 8]","dict_from_lists = dict(zip(keys, values))",Data Structure,1645,dict_from_lists = dict___)
"Write a Python program that takes a list of strings as input, sorts it alphabetically, and output the sorted list.","['apple', 'pear', 'banana', 'grape']","def sort_alphabetically(input_list):
 results = sorted(input_list)
 
 return results
 
input_list = ['apple', 'pear', 'banana', 'grape']

print(sort_alphabetically(input_list))
# Output: ['apple', 'banana', 'grape', 'pear']",Data Structure,1648,"def sort_alphabetically___:
 results = sorted___
 
 return results
 
input_list = ['apple', 'pear', 'banana', 'grape']

print___)
# Output: ['apple', 'banana', 'grape', 'pear']"
"Create a Python program to find the total distance of a set of given (x,y) coordinates.","coordinates = [(2, 4), (3, 5), (4, 3), (9, 7)]","def totalDistance(coordinates):
    total = 0
    for i in range(len(coordinates) - 1):
        distance = ((coordinates[i+1][0] - coordinates[i][0])**2 + (coordinates[i+1][1] - coordinates[i][1])**2)**(1/2)
        total += distance
    return total

print(totalDistance(coordinates))",Data Structure,1649,"def totalDistance___:
    total = 0
    for i in range___ - 1):
        distance = ___**2 + ___**2)**___
        total += distance
    return total

print___)"
Create a Python program to determine if a list is monotonically increasing.,"list = [1, 3, 4, 5, 9, 10]","def check_monotonic(list):
 is_monotonic = True
 for i in range(len(list)-1):
  if(list[i] > list[i+1]):
   is_monotonic = False
 return is_monotonic

list = [1, 3, 4, 5, 9, 10]
print(check_monotonic(list)) # Output: True",Data Structure,1651,"def check_monotonic___:
 is_monotonic = True
 for i in range___-1):
  if___:
   is_monotonic = False
 return is_monotonic

list = ___
print___) # Output: True"
Create a program in Python that shuffles and prints an array of items.,"['a', 'b', 'c', 'd']","import random

items = ['a', 'b', 'c', 'd']
random.shuffle(items)

print(items)",Data Structure,1652,"import random

items = ['a', 'b', 'c', 'd']
random.shuffle___

print___"
Compute with a Python program which elements of an array can be used as the divisor of other elements in the array.,"[18, 30, 42, 45, 24]","arr = [18, 30, 42, 45, 24]

for i in range(len(arr)):
    for j in range(i+1, len(arr)):
        if arr[i] != 0 and arr[j] % arr[i] == 0:
            print(str(arr[i]) + ' divides ' + str(arr[j]))",Data Structure,1655,"arr = ___

for i in range___):
    for j in range___):
        if arr[i] != 0 and arr[j] % arr[i] == 0:
            print___ + ' divides ' + str___)"
Create a Python script to filter out all numbers divisible by 3 in a list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]","# Initialize list
n = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]

# Function
def filter_divisible_by_3(n):
    return [num for num in n if num % 3 != 0]

# Output
print(filter_divisible_by_3(n))
# Output: [1, 2, 4, 5, 7, 8, 10, 11, 13]",Data Structure,1658,"# Initialize list
n = ___

# Function
def filter_divisible_by_3___:
    return [num for num in n if num % 3 != 0]

# Output
print___)
# Output: ___"
Write a Python program to filter out the duplicates in a list,"list_a = [1, 2, 3, 2, 5, 2]","def remove_duplicates(list_a):
    result = []
    for a in list_a:
        if a not in result:
            result.append(a)
    return result",Data Structure,1659,"def remove_duplicates___:
    result = []
    for a in list_a:
        if a not in result:
            result___a)
    return result"
Write a python program to create a histogram of the given list elements,"list: [1, 2, 4, 5, 6, 3, 2]","def create_histogram(list):
    hist = dict()
    
    for i in list:
        if i not in hist:
            hist[i] = 1
        else:
            hist[i] += 1
    
    return hist",Data Structure,1662,"def create_histogram___:
    hist = dict()
    
    for i in list:
        if i not in hist:
            hist[i] = 1
        else:
            hist[i] += 1
    
    return hist"
Generate a Python program that reads in a list of words and sorts them alphabetically.,"List of words: ['apple', 'banana', 'cat', 'zebra']","words = ['apple', 'banana', 'cat', 'zebra']
words.sort()

for word in words:
 print(word)",Data Structure,1667,"words = ['apple', 'banana', 'cat', 'zebra']
words.sort()

for word in words:
 print___"
"Given a list of integers, write a Python program to find the list's maximum value.","[1, 8, 2, 4, 10]","def find_max(nums):
    max_value = nums[0] 
    for i in nums:
        if i > max_value:
            max_value = i
    return max_value

nums = [1, 8, 2, 4, 10]
print(find_max(nums))",Data Structure,1669,"def find_max___:
    max_value = nums___ 
    for i in nums:
        if i > max_value:
            max_value = i
    return max_value

nums = ___
print___)"
Generate a correct Python program to filter out elements of a list using lambda,"list = [1,2,3,4,5]","list = [1,2,3,4,5]

result = list(filter(lambda x : x % 2 == 0 , list))
print(result)",Data Structure,1674,"list = ___

result = list___)
print___"
Write a Python program to optimize an array of numbers so that the sum of elements is maximum and all the elements are greater than 0.,"[1,-2,3,4,-5]","import numpy as np

# Get the input array
arr = [1,-2,3,4,-5]

# Optimize the array so that the sum of elements is maximized
# and all the elements are greater than 0
new_arr = np.max(arr,0)

# Print the optimized array
print(""Optimized Array : "",*new_arr)",Data Structure,1676,"import numpy as np

# Get the input array
arr = [1,-2,3,4,-5]

# Optimize the array so that the sum of elements is maximized
# and all the elements are greater than 0
new_arr = np.max___

# Print the optimized array
print___"
Generate Python code to compute the sum of items in a list.,"[2, 17, 3, 8]","sum = 0
for value in [2, 17, 3, 8]:
 sum += value
print(sum)",Data Structure,1677,"sum = 0
for value in ___:
 sum += value
print___"
Create a function in Python that sorts the elements of a given list.,"[5, 7, 2, 3, 4, 1]","def sort_list(numbers):
    numbers.sort()
    return numbers

result = sort_list([5, 7, 2, 3, 4, 1])
print(result)",Data Structure,1679,"def sort_list___:
    numbers.sort()
    return numbers

result = sort_list___
print___"
"Optimize the following Python code so that it runs faster, given that x is an array of integers.

sum = 0
for i in range(len(x)):
 sum += x[i]","x = [4, 2, 1, 7, 8, 6]","# Optimized Python code
sum = 0
for num in x:
 sum += num
 
# Using built-in sum function
sum = sum(x)",Data Structure,1682,"# Optimized Python code
sum = 0
for num in x:
 sum += num
 
# Using built-in sum function
sum = sum___"
Write Python code to implement the Bubble Sort algorithm for sorting a list of numbers.,"[5,1,4,2,8]","def bubble_sort(lst):
    n = len(lst)
    for i in range(n): 
        for j in range(0, n-i-1): 
            if lst[j] > lst[j+1] : 
                lst[j], lst[j+1] = lst[j+1], lst[j]
    return lst",Data Structure,1686,"def bubble_sort___:
    n = len___
    for i in range___: 
        for j in range___: 
            if lst[j] > lst[j+1] : 
                lst[j], lst[j+1] = lst[j+1], lst[j]
    return lst"
Create a for loop in Python to calculate the total sum of all elements in the given list.,"data = [1, 9, 3, 5]","total = 0
for element in data:
    total = total + element
print(total)",Data Structure,1687,"total = 0
for element in data:
    total = total + element
print___"
Create a program in Python that takes an array and finds the minimum value stored in it.,"[34, 48, 19, 61, 3]","arr = [34, 48, 19, 61, 3] 
  
# Finds the minimum element 
print (""The minimum element is "" + str(min(arr)))",Data Structure,1690,"arr = ___ 
  
# Finds the minimum element 
print ___))"
Generate a new Python List containing all of the even numbers from a given list.,"my_list = [2, 3, 4, 5, 6, 7, 8, 9]","my_list = [2, 3, 4, 5, 6, 7, 8, 9]

even_list = [x for x in my_list if x % 2 == 0]
print(even_list)",Data Structure,1692,"my_list = ___

even_list = [x for x in my_list if x % 2 == 0]
print___"
Write a Python script to sort a given list in ascending order.,"[4, 6, 1, 7]","def sort_ascending(list):
    return sorted(list)",Data Structure,1694,"def sort_ascending___:
    return sorted___"
Create a random forest model in Python from the given data set.,"import pandas as pd

data = {
    'Gender': ['male', 'female', 'male', 'female'],
    'Income': [30000, 50000, 40000, 60000],
    'Label': [1, 0, 0, 1]
}

df = pd.DataFrame(data)","from sklearn.ensemble import RandomForestClassifier

features = ['Gender', 'Income']
X = df[features]
y = df['Label']

clf = RandomForestClassifier(n_estimators=100, max_depth=2, random_state=0)
clf.fit(X, y)",Data Structure,1700,"from sklearn.ensemble import RandomForestClassifier

features = ['Gender', 'Income']
X = df[features]
y = df['Label']

clf = RandomForestClassifier___
clf.fit___"
Create a Python generator that returns numbers from a given list.,"[1,3,5,7,9]","def list_generator(input_list):
    for item in input_list:
        yield item

gen = list_generator([1,3,5,7,9])
for item in gen:
    print(item)",Data Structure,1702,"def list_generator___:
    for item in input_list:
        yield item

gen = list_generator___
for item in gen:
    print___"
Write a Python function that takes a list of numbers and returns the sum of all odd numbers in the list.,"[1, 2, 3, 4, 5]","def sum_odd_numbers(nums):
    result = 0
    for num in nums:
        # check for odd number
        if num % 2 != 0:
            result += num
    return result

result = sum_odd_numbers([1, 2, 3, 4, 5])
print(result)",Data Structure,1704,"def sum_odd_numbers___:
    result = 0
    for num in nums:
        # check for odd number
        if num % 2 != 0:
            result += num
    return result

result = sum_odd_numbers___
print___"
"Using some common sorting algorithms, create a Python program to sort the given array of numbers","arr = [4, 6, 8, 1, 3, 9]","def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and key < arr[j]:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    return arr

insertion_sort(arr)",Data Structure,1705,"def insertion_sort___:
    for i in range___):
        key = arr[i]
        j = i - 1
        while j >= 0 and key < arr[j]:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    return arr

insertion_sort___"
Read a given list of strings and create a new list of all strings that are longer than 5 characters long.,"['Python', 'is', 'Fun']","def filter_long_strings(string_list):
 long_strings = []
 for string in string_list:
 if len(string) > 5:
 long_strings.append(string)
 return long_strings

string_list = ['Python', 'is', 'Fun']

long_strings = filter_long_strings(string_list)
print(long_strings)",Data Structure,1706,"def filter_long_strings___:
 long_strings = []
 for string in string_list:
 if len___ > 5:
 long_strings___string)
 return long_strings

string_list = ['Python', 'is', 'Fun']

long_strings = filter_long_strings___
print___"
"Create a function in Python which takes a list of strings as input, and prints the longest palindrome contained in the list.","[""racecar"", ""python"", ""mom"", ""abba""]","def longest_palindrome(str_list):
  longest_palindrome = """"
  for s in str_list:
    if s == s[::-1] and len(s) > len(longest_palindrome):
      longest_palindrome = s
  print(longest_palindrome)
  
longest_palindrome([""racecar"", ""python"", ""mom"", ""abba""])",Data Structure,1716,"def longest_palindrome___:
  longest_palindrome = """"
  for s in str_list:
    if s == s[::-1] and len___ > len___:
      longest_palindrome = s
  print___
  
longest_palindrome___"
Write a Python program to slice a list and store the first two elements in separate variables.,"[2, 4, 6, 8, 10]","list = [2, 4, 6, 8, 10] 
first, second = list[0], list[1]  
print(first) 
print(second)",Data Structure,1718,"list = ___ 
first, second = list___, list___  
print___ 
print___"
Create a Python program that extracts the nth element from a nested array.,"nested array: [[1,2,3], [4,5,6], [7,8,9]]
nth index: 5","def extract_nth_element(arr, n):
 nth_element = arr[n // len(arr[0])][n % len(arr[0])]
 return nth_element

arr = [[1,2,3], [4,5,6], [7,8,9]]
n = 5
print(extract_nth_element(arr, n))
# Output: 6",Data Structure,1719,"def extract_nth_element___:
 nth_element = arr[n // len___][n % len___]
 return nth_element

arr = [___, ___, ___]
n = 5
print___)
# Output: 6"
Generate a Python program that takes a list of strings as input and prints the strings in alphabetical order.,"['cat', 'dog', 'apple', 'banana']","strings = ['cat', 'dog', 'apple', 'banana']

strings.sort()

for string in strings:
    print(string)",Data Structure,1722,"strings = ['cat', 'dog', 'apple', 'banana']

strings.sort()

for string in strings:
    print___"
Write a python code to perform the task of bubble sorting in a list.,"arr = [1, 10, 5, 4, 8]","def bubble_sort(arr): 
    n = len(arr) 
    for i in range(n): 
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]
                
bubble_sort(arr)",Data Structure,1723,"def bubble_sort___: 
    n = len___ 
    for i in range___: 
        for j in range___: 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]
                
bubble_sort___"
Write a python script that extracts data from a JSON object and stores it in a new array.,"{
    ""name"": ""John Doe"", 
    ""age"": 30,
    ""occupation"": ""programmer""
}","data = [{
    ""name"": ""John Doe"",
    ""age"": 30,
    ""occupation"": ""programmer""
}]

arr = []

for item in data:
    arr.append(item)
    
print(arr)",Data Structure,1724,"data = [{
    ""name"": ""John Doe"",
    ""age"": 30,
    ""occupation"": ""programmer""
}]

arr = []

for item in data:
    arr___item)
    
print___"
Write a Python program for generating random strings of a given length from a given character set.,The given character set: abcdefghijklmnopqrstuvwxyz,"import random
 
def random_string(length, char_set):
 result = """"
 for _ in range(length):
  result += random.choice(char_set)
 return result
 
print(random_string(6, 'abcdefghijklmnopqrstuvwxyz'))

# Output: acehkl",Data Structure,1728,"import random
 
def random_string___:
 result = """"
 for _ in range___:
  result += random.choice___
 return result
 
print___)

# Output: acehkl"
Create a program in Python for finding the maximum in a list of numbers.,"[2, 3, 4, 9, 5]","def find_max(lst): 
 
    # Initialize maximum element 
    max = lst[0] 
   
    # Traverse list element 
    # from second and compare 
    # every element with current max  
    for i in range(1, len(lst)): 
        if lst[i] > max: 
            max = lst[i] 
   
    return max

max_num = find_max([2, 3, 4, 9, 5])
print(""The maximum number in the list is:"",max_num)",Data Structure,1729,"def find_max___: 
 
    # Initialize maximum element 
    max = lst___ 
   
    # Traverse list element 
    # from second and compare 
    # every element with current max  
    for i in range___): 
        if lst[i] > max: 
            max = lst[i] 
   
    return max

max_num = find_max___
print___"
Create a Python program to remove duplicates from an unsorted array.,"[1, 1, 2, 2, 3, 4, 5, 5, 6]","original_list = [1, 1, 2, 2, 3, 4, 5, 5, 6]

def remove_duplicates(lst):
    new_list = []
    for item in lst:
        if item not in new_list:
            new_list.append(item)
    return new_list

print(remove_duplicates(original_list))",Data Structure,1731,"original_list = ___

def remove_duplicates___:
    new_list = []
    for item in lst:
        if item not in new_list:
            new_list___item)
    return new_list

print___)"
Write a Python function to perform a linear search in a given array.,"array = [2, 3, 41, 64, 1, -5]
target = -5","def linear_search(arr, target):  
    for i in range(len(arr)): 
        if arr[i] == target: 
            return i 
    return -1",Data Structure,1733,"def linear_search___:  
    for i in range___): 
        if arr[i] == target: 
            return i 
    return -1"
Write a Python function that takes a dictionary as input and returns a list of values sorted in ascending order.,"mydict = {'x':4, 'y':2, 'z':1}","def sort_dict_values(d):
    # create a list of values from the dictionary
    values = list(d.values())
    # sort the list 
    values.sort()
    return values

result = sort_dict_values(mydict)
print(result)",Data Structure,1736,"def sort_dict_values___:
    # create a list of values from the dictionary
    values = list___)
    # sort the list 
    values.sort()
    return values

result = sort_dict_values___
print___"
Create a Lambda function in Python to process an integer array and return the square of the even numbers in the array.,"The integer array: [2, 4, 7, 9, 12, 14]","def lambda_handler(event, context):
    numbers = event['numbers']
    result = [num ** 2 for num in numbers if num % 2 == 0]
    return {'result': result}",Data Structure,1740,"def lambda_handler___:
    numbers = event['numbers']
    result = [num ** 2 for num in numbers if num % 2 == 0]
    return ___"
Create a Python program to calculate the average number of items in a list. The list should be taken as input from the user.,"List elements: 1, 6, 5, 7","list_elements = input('List elements: ').split()

sum = 0
for num in list_elements:
 sum += int(num)

average = sum / len(list_elements)

print(f'The average number of items in the list is {average}.')",Data Structure,1743,"list_elements = input___.split()

sum = 0
for num in list_elements:
 sum += int___

average = sum / len___

print(f'The average number of items in the list is ___.')"
Write a Python script to sort a given list in descending order.,"[5, 3, 2, 1, 4]","def sort_desc(lst): 
    return sorted(lst, reverse=True)",Data Structure,1745,"def sort_desc___: 
    return sorted___"
Convert the given array to an array of dictionaries in Python.,"array = [[""a"", 1], [""b"", 2], [""c"", 3]]","[{'a': 1}, {'b': 2}, {'c': 3}]",Data Structure,1747,"[___, ___, ___]"
Create a Python function to remove the items in a list that appear multiple times.,"[""Apple"", ""Banana"", ""Orange"", ""Apple"", ""Banana""]","def remove_extras(lst):
    # Create a new list with unique items
    unique_items = []
    for item in lst:
        if item not in unique_items:
            unique_items.append(item)

    # Return the list with unique items
    return unique_items

test = [""Apple"", ""Banana"", ""Orange"", ""Apple"", ""Banana""]
print(remove_extras(test))",Data Structure,1748,"def remove_extras___:
    # Create a new list with unique items
    unique_items = []
    for item in lst:
        if item not in unique_items:
            unique_items___item)

    # Return the list with unique items
    return unique_items

test = [""Apple"", ""Banana"", ""Orange"", ""Apple"", ""Banana""]
print___)"
Write a Python program to check if an array has more than three duplicate elements.,"arr = [4, 2, 8, 2, 1, 4, 19, 4]","def check_duplicate_in_array(arr):
    result = False
    for i in range(len(arr) - 2):
        if arr[i] == arr[i + 1] == arr[i + 2]:
            result = True
            break
    return result

arr = [4, 2, 8, 2, 1, 4, 19, 4]
print(check_duplicate_in_array(arr)) # Output: True",Data Structure,1749,"def check_duplicate_in_array___:
    result = False
    for i in range___ - 2):
        if arr[i] == arr[i + 1] == arr[i + 2]:
            result = True
            break
    return result

arr = ___
print___) # Output: True"
Write a function in Python that takes a list of numbers and returns the sum of the list items that are greater than the given value.,"nums = [1, 4, 5, 10, 12]
value = 6","def findSum(nums, value):
 total = 0
 
 for num in nums:
 if num > value:
 total += num
 
 return total
 
nums = [1, 4, 5, 10, 12]
value = 6

res = findSum(nums, value)

print(res)",Data Structure,1750,"def findSum___:
 total = 0
 
 for num in nums:
 if num > value:
 total += num
 
 return total
 
nums = ___
value = 6

res = findSum___

print___"
Create a Python function to remove a given item from a list.,"[2, 3, 4], 4","def removeItem(lst, item):
    if item in lst:
        lst.remove(item)
    return lst

print(removeItem([2, 3, 4], 4))",Data Structure,1751,"def removeItem___:
    if item in lst:
        lst___item)
    return lst

print___)"
Create a Python program for finding the maximum and minimum numbers in an array of numbers.,"1, 10, 3, 8, 6","def find_min_max(numbers):
 
 min_num = float('inf')
 max_num = float('-inf')
 
 for num in numbers:
  if num < min_num:
   min_num = num
  if num > max_num:
   max_num = num
 
 return [min_num, max_num]

numbers = [1, 10, 3, 8, 6]
print(find_min_max(numbers))

# Output: [1, 10]",Data Structure,1754,"def find_min_max___:
 
 min_num = float___
 max_num = float___
 
 for num in numbers:
  if num < min_num:
   min_num = num
  if num > max_num:
   max_num = num
 
 return [min_num, max_num]

numbers = ___
print___)

# Output: ___"
Write an algorithm in Python to calendarify the dates in the following array,"dates = [423, 198, 720, 930, 505]","def calendarify(dates):
    calendar = []
    for date in dates:
        day = date % 100
        month = date // 100
        calendar.append((day, month))
    return calendar
  
calendarify(dates)",Data Structure,1756,"def calendarify___:
    calendar = []
    for date in dates:
        day = date % 100
        month = date // 100
        calendar___(day, month))
    return calendar
  
calendarify___"
Generate a Python program to optimize an array of numbers,"A = [5, 4, 8, 9, 6, 1, -4, 7]","def optimize_array(A):
    A.sort()
    return A

print(optimize_array([5, 4, 8, 9, 6, 1, -4, 7]))",Data Structure,1760,"def optimize_array___:
    A.sort()
    return A

print___)"
"Generate
a python program that calculates the total cost of all items in a given list","[(""apple"", 5, 50),(""mango"",6,70)]","def total_cost(items):
    total_cost = 0
    for item in items:
        quantity = item[1]
        unit_price = item[2]
        total_cost += quantity * unit_price
    return total_cost",Data Structure,1763,"def total_cost___:
    total_cost = 0
    for item in items:
        quantity = item___
        unit_price = item___
        total_cost += quantity * unit_price
    return total_cost"
Create a python script that sorts a list of tuples based on the second element.,"tuples = [('a',3), ('d', 1), ('c', 2)]","sortedTuples = sorted(tuples, key = lambda x: x[1])",Data Structure,1780,sortedTuples = sorted___
Write a Python program to identify the number of times a given number appears in a list.,"list = [12, 46, 8, 12, 8, 8]
number = 8","counter = 0
for num in list:
    if num == number:
        counter += 1
print(""The given number appears"", counter, ""times in the list."")",Data Structure,1782,"counter = 0
for num in list:
    if num == number:
        counter += 1
print___"
Create a python function to extract the largest DNA sequence from a list of sequences.,"sequences = [""ATGATATCATCGATTGTA"",
""ATGCGATATACGATGAT"",
""ATGGATCGATTATATTA""]","def longest_sequence(sequences):
 longest_sequence = sequences[0]

 for sequence in sequences:
 if len(sequence) > len(longest_sequence):
 longest_sequence = sequence

 return longest_sequence

print(longest_sequence(sequences))  # ATGATATCATCGATTGTA",Data Structure,1784,"def longest_sequence___:
 longest_sequence = sequences___

 for sequence in sequences:
 if len___ > len___:
 longest_sequence = sequence

 return longest_sequence

print___)  # ATGATATCATCGATTGTA"
Generate a lambda expression in Python that takes a list of numbers and returns the maximum value.,"[16, 25, 4, 12, 6]",max_value = lambda num_list: max(num_list),Data Structure,1786,max_value = lambda num_list: max___
Write a Python program that can generate all permutations of a given list.,"list_a = [1, 2, 3]","def generate_permutations(list_a):
  import itertools 
  return list(itertools.permutations(list_a))
  
generate_permutations(list_a)",Data Structure,1788,"def generate_permutations___:
  import itertools 
  return list___)
  
generate_permutations___"
Design a code in Python to count the number of unique elements in a list.,"numbers_list = [1, 2, 2, 5, 6, 6]","def count_unique_elements(numbers_list): 
    seen = set() 
    count = 0 
    for number in numbers_list: 
        if number not in seen: 
            seen.add(number) 
            count+=1 
    return count",Data Structure,1790,"def count_unique_elements___: 
    seen = set() 
    count = 0 
    for number in numbers_list: 
        if number not in seen: 
            seen.add___ 
            count+=1 
    return count"
Write a Python program to edit an existing array without creating a new array.,"arr = [1,2,3,4,5]","def edit_array(arr):
    for i in range(len(arr)):
        arr[i] += 10
    return arr

if __name__ == '__main__':
    arr = [1,2,3,4,5]
    print(""Edited array:"", edit_array(arr))",Data Structure,1793,"def edit_array___:
    for i in range___):
        arr[i] += 10
    return arr

if __name__ == '__main__':
    arr = ___
    print___)"
"Given a list of dictionaries, write a python program to find the item with the highest value for the key 'price'.","[
 {'name': 'apple', 'price': 3}, 
 {'name': 'orange', 'price': 2}, 
 {'name': 'banana', 'price': 6}, 
 {'name': 'kiwi', 'price': 4}
]","maxVal = 0
maxItem = {}
for item in items:
 if item['price'] > maxVal:
 maxVal = item['price']
 maxItem = item

print(""The item with the highest price is: "", maxItem)",Data Structure,1794,"maxVal = 0
maxItem = {}
for item in items:
 if item['price'] > maxVal:
 maxVal = item['price']
 maxItem = item

print___"
"Given a list of integers, write a Python program to find the two numbers whose sum is closest to zero.","arr = [25, -19, 3, 8, -12]","def find_sum_close_to_zero(arr):
    min_sum = float('inf')
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            if abs(arr[i] + arr[j]) < abs(min_sum):
                min_sum = arr[i] + arr[j]
    return min_sum

print(find_sum_close_to_zero(arr)) # -7",Data Structure,1798,"def find_sum_close_to_zero___:
    min_sum = float___
    for i in range___):
        for j in range___):
            if abs___ < abs___:
                min_sum = arr[i] + arr[j]
    return min_sum

print___) # -7"
Write a Python function that takes a list and returns the number of elements that are divisible by 3.,"list = [4, 6, 8, 9, 10]","def number_divisible_by_3(list):
    count = 0
    for item in list:
        if item % 3 == 0:
            count += 1
    return count

result = number_divisible_by_3(list)
print(result)",Data Structure,1802,"def number_divisible_by_3___:
    count = 0
    for item in list:
        if item % 3 == 0:
            count += 1
    return count

result = number_divisible_by_3___
print___"
Create a Python program to sort a list of numbers from lowest to highest.,"[5, 2, 3, 7, 4]","def sort_list(numbers): 
    numbers.sort() 
    return numbers 
  
# Driver code 
numbers = [5, 2, 3, 7, 4]
print(sort_list(numbers))",Data Structure,1803,"def sort_list___: 
    numbers.sort() 
    return numbers 
  
# Driver code 
numbers = ___
print___)"
Create a program in Python to remove all elements of a given list with a value of 0.,"[0, 1, 0, 3, 5, 0, 4]","def remove_zeroes(nums):
  return [x for x in nums if x != 0]
  
print(remove_zeroes([0, 1, 0, 3, 5, 0, 4]))",Data Structure,1806,"def remove_zeroes___:
  return [x for x in nums if x != 0]
  
print___)"
"Rewrite the following python program using a functional programming approach. The code should take a list of integers as input, filter out the odd numbers, square each even number, and return the sum of all the numbers.","[3, 4, 5, 6, 7, 8, 9, 10]","def fx(nums): 
 return sum(map(lambda x : x*x if x % 2==0 else 0, nums)) 

print(fx([3, 4, 5, 6, 7, 8, 9, 10]))  # Output: 240",Data Structure,1811,"def fx___: 
 return sum___) 

print___)  # Output: 240"
Construct a Python function to find the largest and smallest number in a list.,"[5, 2, 7, 9]","def find_min_max(nums):
    max_num, min_num = nums[0], nums[0]
    for num in nums:
        if num > max_num:
            max_num = num
        if num < min_num:
            min_num = num
    return min_num, max_num

nums = [5, 2, 7, 9]
min_num, max_num = find_min_max(nums)
print(""Max num:"",max_num)
print(""Min num:"",min_num)",Data Structure,1814,"def find_min_max___:
    max_num, min_num = nums___, nums___
    for num in nums:
        if num > max_num:
            max_num = num
        if num < min_num:
            min_num = num
    return min_num, max_num

nums = ___
min_num, max_num = find_min_max___
print___
print___"
Generate a Python script to calculate the sum of elements in the following input array.,"Input Array: [1, 4, 8, 10, 12]","def SumArray(arr):
  result = 0
  for num in arr: 
    result += num
  return result 
 
print(SumArray([1, 4, 8, 10, 12]))
    # Outputs: 35",Data Structure,1818,"def SumArray___:
  result = 0
  for num in arr: 
    result += num
  return result 
 
print___)
    # Outputs: 35"
"Create a Python script that takes the list [1, 2, 3, 4, 5] and returns the sum.","[1, 2, 3, 4, 5]","def sum_list(lst):
  total = 0
  for num in lst:
    total += num
  return total

sum_list([1,2,3,4,5])",Data Structure,1819,"def sum_list___:
  total = 0
  for num in lst:
    total += num
  return total

sum_list___"
Optimize the following Python program to find the maximum number in a list.,"list = [9, 2, 5, 6, 4, 1]","def max_num(list):
  max_num = list[0]

  for num in list:
    if num > max_num:
      max_num = num
  
  return max_num",Data Structure,1822,"def max_num___:
  max_num = list___

  for num in list:
    if num > max_num:
      max_num = num
  
  return max_num"
Design a Python program to generate a frequency distribution report given a list of input words.,"[‘hello’, ‘world’, ‘hello’, ‘welcome’, ’world’]","from collections import Counter

def print_frequency_report(words):
    word_frequencies = Counter(words)
    print('Word\tFrequency')
    print('==============')
    for word, frequency in word_frequencies.items():
        print('{}\t{}'.format(word, frequency))",Data Structure,1823,"from collections import Counter

def print_frequency_report___:
    word_frequencies = Counter___
    print___
    print___
    for word, frequency in word_frequencies.items():
        print___)"
Generate a Python program that removes all occurrences of an element from a list,"[1, 2, 2, 3, 2, 4]","def remove_element(arr, x):
  new_arr = [i for i in arr if i != x] 
  return new_arr 
  
arr = [1, 2, 2, 3, 2, 4] 
x = 2

new_arr = remove_element(arr, x) 
print(new_arr)",Data Structure,1824,"def remove_element___:
  new_arr = [i for i in arr if i != x] 
  return new_arr 
  
arr = ___ 
x = 2

new_arr = remove_element___ 
print___"
Create a Python program to sort the elements of a list in descending order (largest value first).,"numbers = [1, 7, 25, 8, 14]","numbers = [1, 7, 25, 8, 14]

# Sort the list in descending order
numbers.sort(reverse=True)

# Print the sorted list
print(numbers)

# Output
[25, 14, 8, 7, 1]",Data Structure,1827,"numbers = ___

# Sort the list in descending order
numbers.sort___

# Print the sorted list
print___

# Output
___"
"Given a list of integers, write a Python program to find the index of the largest number.","[5, 10, 20, 6, 8]","nums = [5, 10, 20, 6, 8]
max_num = max(nums)
max_index = nums.index(max_num)

print(max_index)",Data Structure,1832,"nums = ___
max_num = max___
max_index = nums.index___

print___"
Write a code to convert a JSON object to an array of dictionaries in Python.,"JSON Object: {
 ""Fruit"": ""Apple"",
 ""Shape"": ""Round"",
 ""Color"": ""Red""
}","#Function to convert a JSON object to an array of dictionaries in Python
import json

def json_to_array(data):
    my_dict = json.loads(data)
    return [{k: v} for k, v in my_dict.items()]

# Driver code
data = '{ ""Fruit"": ""Apple"", ""Shape"": ""Round"", ""Color"": ""Red"" }'
dict_array = json_to_array(data)
print(dict_array)",Data Structure,1833,"#Function to convert a JSON object to an array of dictionaries in Python
import json

def json_to_array___:
    my_dict = json.loads___
    return [___ for k, v in my_dict.items()]

# Driver code
data = '___'
dict_array = json_to_array___
print___"
Create a python program to group similar items together in a list.,"list = [""dog"", ""cat"", ""cat"", ""fox"", ""dog"", ""elephant""]","def group_similar_items(list): 
    grouped_items = {} 

    for item in list: 
        if item in grouped_items: 
            grouped_items[item] += 1
        else: 
            grouped_items[item] = 1

    print(grouped_items)

group_similar_items([""dog"", ""cat"", ""cat"", ""fox"", ""dog"", ""elephant""]) 
# Output: {'dog': 2, 'cat': 2, 'fox': 1, 'elephant': 1}",Data Structure,1834,"def group_similar_items___: 
    grouped_items = {} 

    for item in list: 
        if item in grouped_items: 
            grouped_items[item] += 1
        else: 
            grouped_items[item] = 1

    print___

group_similar_items___ 
# Output: ___"
Find the highest number in a list of numbers in Python.,"[7, 4, 5, 100, 2]","max_number = max([7, 4, 5, 100, 2])
print(max_number)",Data Structure,1837,"max_number = max___
print___"
Design a function in Python that takes a list of integers and returns the difference between the maximum and the minimum values.,"data = [1, 5, 2, 3, 7, 9]","def getDifference(data):
 min_value = min(data)
 max_value = max(data)
 return max_value - min_value

difference = getDifference(data)
print(difference) # 8",Data Structure,1840,"def getDifference___:
 min_value = min___
 max_value = max___
 return max_value - min_value

difference = getDifference___
print___ # 8"
Create a Python program that takes a list as argument and returns it in reverse order.,"[1, 3, 5, 6, 10]","def reverse_list(lst): 
    return lst[::-1] 
  
lst = [1, 3, 5, 6, 10] 
print(reverse_list(lst))",Data Structure,1841,"def reverse_list___: 
    return lst[::-1] 
  
lst = ___ 
print___)"
Write a Python program to sort a list according to a given order of letters.,"['c','d','a','b'], order=['a', 'b', 'c', 'd']","def sort_by_order(l, order):
	return sorted(l, key = lambda x : order.index(x))",Data Structure,1844,"def sort_by_order___:
	return sorted___)"
Write a Python function to sort an array of numbers in descending order,"[3, 7, 1, 5]","def sortDescending(arr):
    arr.sort(reverse=True)
    return arr

array = [3, 7, 1, 5]
sortedArray = sortDescending(array)",Data Structure,1845,"def sortDescending___:
    arr.sort___
    return arr

array = ___
sortedArray = sortDescending___"
Create a Python script to check if an array contains contiguous numbers.,"arr = [20, 21, 22, 23, 24]","def is_contiguous(arr):
    if (len(arr) == 0):
        return True
    arr.sort()
    for i in range(len(arr) - 1):
        if (arr[i] + 1 != arr[i+1]):
            return False
    return True",Data Structure,1850,"def is_contiguous___:
    if ___ == 0):
        return True
    arr.sort()
    for i in range___ - 1):
        if ___:
            return False
    return True"
Develop an algorithm in Python to check if an array contains a given number.,"array = [2, 4, 6, 8], number = 8","def checkNumber(array, number):
    for i in array:
        if i == number:
            return True
    return False

checkNumber([2, 4, 6, 8], 8)",Data Structure,1854,"def checkNumber___:
    for i in array:
        if i == number:
            return True
    return False

checkNumber___"
Endeavour to create a python function that takes an array of numbers and returns the highest number in the array.,"[2,5,1,6,3]","def find_largest_number(nums):
    highest_num = nums[0]
    for i in nums:
        if i>highest_num:
            highest_num = i
    return highest_num",Data Structure,1858,"def find_largest_number___:
    highest_num = nums___
    for i in nums:
        if i>highest_num:
            highest_num = i
    return highest_num"
Construct a Python code to find the maximum in a given list.,"[10, 3, 16, 17, 8]","def find_max(list): 
    max = list[0] 
    for i in list: 
        if i > max: 
            max = i 
    return max 
  
list = [10, 3, 16, 17, 8]
print(""Maximum number in the list:"", find_max(list))",Data Structure,1870,"def find_max___: 
    max = list___ 
    for i in list: 
        if i > max: 
            max = i 
    return max 
  
list = ___
print___)"
Complete the Python code to generate a list of the odd numbers in the range 1 to 25.,-,"odd_nums_list = []

for number in range(1, 26):
    if number % 2 != 0:
        odd_nums_list.append(number)

print(odd_nums_list) # [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25]",Data Structure,1875,"odd_nums_list = []

for number in range___:
    if number % 2 != 0:
        odd_nums_list___number)

print___ # [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25]"
Generate a random list of numbers between 1 and 10 of a given length in Python.,length = 5,"import random

def generateRandomList(length):
    random_list = []
    for _ in range(length):
        random_list.append(random.randint(1, 10))
    return random_list

if __name__ == '__main__':
    print(generateRandomList(5))",Data Structure,1876,"import random

def generateRandomList___:
    random_list = []
    for _ in range___:
        random_list___random.randint(1, 10))
    return random_list

if __name__ == '__main__':
    print___)"
Generate a python code to calculate the median of an unsorted list of numbers.,"[3, 4, 1, 2, 5]","def median(lst):
    lst = sorted(lst)
    if len(lst) % 2 == 0:
        mid = int(len(lst) / 2)
        return (lst[mid] + lst[mid-1]) / 2
    else:
        mid = int(len(lst) / 2)
        return lst[mid]

median([3, 4, 1, 2, 5])",Data Structure,1881,"def median___:
    lst = sorted___
    if len___ % 2 == 0:
        mid = int___ / 2)
        return ___ / 2
    else:
        mid = int___ / 2)
        return lst[mid]

median___"
Write a Python program that takes an input list of integers and finds out the sum of all the odd elements in the list.,"List: [2, 3, 4, 5, 6]","def sum_odd_elements(int_list):
    '''This function takes a list of integers and returns the sum of all the odd elements.'''
    total = 0
    for num in int_list:
        if num % 2 != 0:
            total += num
    return total

int_list = [2, 3, 4, 5, 6]
sum = sum_odd_elements(int_list)

print(sum) # 8",Data Structure,1884,"def sum_odd_elements___:
    '''This function takes a list of integers and returns the sum of all the odd elements.'''
    total = 0
    for num in int_list:
        if num % 2 != 0:
            total += num
    return total

int_list = ___
sum = sum_odd_elements___

print___ # 8"
Create a function in Python which takes a list of integers as input and returns a sorted list.,"[3, 2, 5, 1, 4]","def sort_list(list):
    list.sort()
    return list
    
sorted_list = sort_list([3, 2, 5, 1, 4])
print(sorted_list) # output: [1, 2, 3, 4, 5]",Data Structure,1885,"def sort_list___:
    list.sort()
    return list
    
sorted_list = sort_list___
print___ # output: [1, 2, 3, 4, 5]"
Generate a Python program to find the mode of the given list.,"[6, 2, 8, 9, 3, 2, 10]","from collections import Counter

def mode(list):
    c = Counter(list)
    freq = c.most_common()
    if freq[0][1] == freq[1][1]:
        return ""No single mode found"" 
    else:
        return freq[0][0]

list = [6, 2, 8, 9, 3, 2, 10]
print(""Mode:"", mode(list))",Data Structure,1886,"from collections import Counter

def mode___:
    c = Counter___
    freq = c.most_common()
    if freq______ == freq______:
        return ""No single mode found"" 
    else:
        return freq______

list = ___
print___)"
Sort a given list using bubble sort in Python.,"list = [3,5,2,4,7,5]","def bubble_sort(list):
    for i in range(len(list)):
        for j in range(len(list)-1):
            if list[j]>list[j+1]:
                list[j],list[j+1] = list[j+1],list[j]
    return list

if __name__ == '__main__':
    list = [3,5,2,4,7,5]
    print(bubble_sort(list))",Data Structure,1891,"def bubble_sort___:
    for i in range___):
        for j in range___-1):
            if list[j]>list[j+1]:
                list[j],list[j+1] = list[j+1],list[j]
    return list

if __name__ == '__main__':
    list = ___
    print___)"
Write a Python program that sorts a given array of numbers in ascending order.,"[1, 3, 5, 2, 6]","def sort_ascending(arr):
    for x in range(len(arr)-1):
        for y in range(x+1, len(arr)):
            if arr[x] > arr[y]:
                arr[x], arr[y] = arr[y], arr[x]
    return arr

arr = [1, 3, 5, 2, 6]
print(sort_ascending(arr)) # Output: [1, 2, 3, 5, 6]",Data Structure,1893,"def sort_ascending___:
    for x in range___-1):
        for y in range___):
            if arr[x] > arr[y]:
                arr[x], arr[y] = arr[y], arr[x]
    return arr

arr = ___
print___) # Output: [1, 2, 3, 5, 6]"
Generate a Python program to calculate the total price of a grocery list given a list of items and their prices.,"[
    [apple, 2.00], 
    [banana, 4.00], 
    [bread, 3.50], 
    [orange, 1.50]
]","items = [
    ['apple', 2.00], 
    ['banana', 4.00], 
    ['bread', 3.50], 
    ['orange', 1.50]
]

total = 0

for item in items:
    total += item[1]

print(""The total price of the grocery list is:"", total)",Data Structure,1896,"items = [
    ['apple', 2.00], 
    ['banana', 4.00], 
    ['bread', 3.50], 
    ['orange', 1.50]
]

total = 0

for item in items:
    total += item___

print___"
Can you write a Python program that takes a list of strings as an argument and returns the list with all elements sorted by their length?,"['Cat','Dog','Elephant','Horse']","def sort_by_length(strings):
    return sorted(strings, key=len)",Data Structure,1898,"def sort_by_length___:
    return sorted___"
Create a Python script to find the sum of all the even numbers in a list of integers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","def find_sum(lst):
 
sum = 0
 
for num in lst:
 if num % 2 == 0:
  sum += num
 
return sum

lst = [1,2,3,4,5,6,7,8,9]
print(find_sum(lst))
 
# Output: 20",Data Structure,1906,"def find_sum___:
 
sum = 0
 
for num in lst:
 if num % 2 == 0:
  sum += num
 
return sum

lst = ___
print___)
 
# Output: 20"
Create a Python program to implement linear search to find a specified item in an array.,"Array = [1, 2, 3, 4, 5], search_number = 4","def linear_search(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i 
    return -1

arr = [1, 2, 3, 4, 5]
search_number = 4
result = linear_search(arr, search_number)
if result == -1:
    print(""Number not found in the array"")
else:
    print(""Number found at index:"", result)",Data Structure,1907,"def linear_search___: 
    for i in range___): 
        if arr[i] == x: 
            return i 
    return -1

arr = ___
search_number = 4
result = linear_search___
if result == -1:
    print___
else:
    print___"
Create a function in Python for converting a list of strings to a dictionary.,"Strings: [""John"", ""Jake"", ""Adam""]","def stringsToDict(strings):
    return {string:0 for string in strings}

strings = [""John"", ""Jake"", ""Adam""]
dict = stringsToDict(strings)
print(dict) # Output: {'John': 0, 'Jake': 0, 'Adam': 0}",Data Structure,1908,"def stringsToDict___:
    return ___

strings = [""John"", ""Jake"", ""Adam""]
dict = stringsToDict___
print(dict) # Output: ___"
Develop a Python function to find the average of a list of positive numbers in the given range.,"[1, 2, 3, 4]","def find_average(nums):
  sum = 0
  count = 0
  for num in nums:
    if num > 0:
      sum += num
      count += 1
  return sum/count

print (find_average([1, 2, 3, 4]))",Data Structure,1911,"def find_average___:
  sum = 0
  count = 0
  for num in nums:
    if num > 0:
      sum += num
      count += 1
  return sum/count

print ___)"
Create a script in Python for finding the maximum and minimum value of an array.,"Array: [1, -5, 10, 25, 6]","def max_min(arr):
  max = arr[0]
  min = arr[0]
  
  for i in range(1, len(arr)):
    if arr[i] > max:
      max = arr[i]
    if arr[i] < min:
      min = arr[i]
  
  return max, min

max, min = max_min(arr)",Data Structure,1915,"def max_min___:
  max = arr___
  min = arr___
  
  for i in range___):
    if arr[i] > max:
      max = arr[i]
    if arr[i] < min:
      min = arr[i]
  
  return max, min

max, min = max_min___"
Create a sorting algorithm that sorts a list of strings alphabetically in Python.,"[""list"", ""of"", ""unsorted"", ""strings""]","def sortAlphabetically(stringList):
  sortedList = sorted(stringList)
  return sortedList

unsortedList = [""list"", ""of"", ""unsorted"", ""strings""]
sortedList = sortAlphabetically(unsortedList)

print(sortedList)",Data Structure,1917,"def sortAlphabetically___:
  sortedList = sorted___
  return sortedList

unsortedList = [""list"", ""of"", ""unsorted"", ""strings""]
sortedList = sortAlphabetically___

print___"
Build a Python program that will receive a list of integers as an input and output the lowest common multiple (LCM) of these numbers.,"array = [2,4,6]","# Function to calculate LCM 
def lcm(l):
    ans = l[0]
    for i in l[1:]:
          ans = (ans*i)//gcd(ans, i)
    return ans;
  
# Driver program to test above function 
array = [2,4,6] 
print(""The LCM of"", array,""is"", lcm(array))",Data Structure,1918,"# Function to calculate LCM 
def lcm___:
    ans = l___
    for i in l[1:]:
          ans = ___//gcd___
    return ans;
  
# Driver program to test above function 
array = ___ 
print___)"
Develop a python program that applies the following operation to a given list,Provide each element in the list with its index,"def enumerate_list(lst):
    output = []
    for i in range(len(lst)):
        output.append((i, lst[i]))
    return output",Data Structure,1920,"def enumerate_list___:
    output = []
    for i in range___):
        output___(i, lst[i]))
    return output"
Generate a python function to count the number of unique elements in a list,"[10, 12, 10, 4, 10, 6, 4]","def uniqueCount(mylist): 
    unique = []
    for x in mylist: 
        if x not in unique: 
            unique.append(x)
    return len(unique)
  
mylist = [10, 12, 10, 4, 10, 6, 4]
print(uniqueCount(mylist))",Data Structure,1927,"def uniqueCount___: 
    unique = []
    for x in mylist: 
        if x not in unique: 
            unique___x)
    return len___
  
mylist = ___
print___)"
Write a Python program to find the maximum sum of a contiguous subarray in a given array of integers.,"[-2,1,-3,4,-1,2,1,-5,4].","def max_sum_contiguous_subarray(arr):
    max_sum = 0
    curr_sum = 0
 
    for i in range(len(arr)):
        curr_sum = max(curr_sum + arr[i], arr[i])
        max_sum = max(max_sum, curr_sum)
 
    return max_sum",Data Structure,1930,"def max_sum_contiguous_subarray___:
    max_sum = 0
    curr_sum = 0
 
    for i in range___):
        curr_sum = max___
        max_sum = max___
 
    return max_sum"
Suggest an improvement for the following python code for finding the sum of elements of a list,"def sum_elements(arr):
    sum_value = 0
    for num in arr:
        sum_value += num
    return sum_value","def sum_elements(arr):
    return sum(arr) # return sum of elements of arr with one line of code.",Data Structure,1932,"def sum_elements___:
    return sum___ # return sum of elements of arr with one line of code."
Generate a program in Python that takes a given list as input and reverses it,"my_list = [3, 7, 2, 4]","def reverse_list(my_list):
    rev_list = []
    for val in reversed(my_list):
        rev_list.append(val)
    return rev_list

reversed_list = reverse_list(my_list)
print(reversed_list)",Data Structure,1939,"def reverse_list___:
    rev_list = []
    for val in reversed___:
        rev_list___val)
    return rev_list

reversed_list = reverse_list___
print___"
Edit this python code to remove all even numbers from a given list.,"my_list = [1,2,3,4,5,6,7,8,9,10]","""""""
Edit this python code to remove all even numbers from a given list.
""""""

my_list = [1,2,3,4,5,6,7,8,9,10]

# Use a list comprehension to remove even numbers
my_list = [i for i in my_list if i % 2 != 0]
 
print(my_list) # [1, 3, 5, 7, 9]",Data Structure,1942,"""""""
Edit this python code to remove all even numbers from a given list.
""""""

my_list = ___

# Use a list comprehension to remove even numbers
my_list = [i for i in my_list if i % 2 != 0]
 
print___ # [1, 3, 5, 7, 9]"
Suggest a solution in Python to convert a sentence into a list of individual words.,"""This is a test sentence.""","def sentence_to_words(sentence):
    words = sentence.split()
    return words 

result = sentence_to_words(""This is a test sentence."")
print(result)",Data Structure,1943,"def sentence_to_words___:
    words = sentence.split()
    return words 

result = sentence_to_words___
print___"
Design an efficient algorithm in Python for sorting a list of numbers.,"[3, 5, 7, 4, 2, 1]","def quicksort(arr):
    if len(arr) <= 1:
        return arr
 
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort(left) + middle + quicksort(right)",Data Structure,1946,"def quicksort___:
    if len___ <= 1:
        return arr
 
    pivot = arr[len___ // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort___ + middle + quicksort___"
"Given a list of colors [""red"", ""green"", ""blue""], create a Python program to find the longest color name.","[""red"", ""green"", ""blue""]","def longest_color_name(colors): 
 longest_name = 0 
 longest_color = None
 for color in colors: 
  if len(color) > longest_name: 
   longest_name = len(color) 
   longest_color = color
 return longest_color",Data Structure,1959,"def longest_color_name___: 
 longest_name = 0 
 longest_color = None
 for color in colors: 
  if len___ > longest_name: 
   longest_name = len___ 
   longest_color = color
 return longest_color"
Write a Python program to create a list of all the even numbers between two given numbers.,"5, 10","def even_number_list(a, b):
    return list(i for i in range(a, b+1) if i%2 == 0)",Data Structure,1962,"def even_number_list___:
    return list___ if i%2 == 0)"
Write a script in Python for shuffling elements in an array.,"arr = [1, 2, 3, 4, 5]","import random

def shuffle(arr):
    random.shuffle(arr)
    return arr",Data Structure,1964,"import random

def shuffle___:
    random.shuffle___
    return arr"
Update the python program by including a function that finds the shortest word in a list.,"my_list = [""hello"", ""world"", ""this"", ""is"", ""a"", ""test""]","def find_shortest(input_list):
    shortest = input_list[0]
    for word in input_list:
        if len(word) < len(shortest):
            shortest = word
    return shortest

shortest_word = find_shortest(my_list)
print(shortest_word)",Data Structure,1968,"def find_shortest___:
    shortest = input_list___
    for word in input_list:
        if len___ < len___:
            shortest = word
    return shortest

shortest_word = find_shortest___
print___"
Write a python program to filter a list of strings and return only those which contain the given substring.,"[""Hello"", ""World"", ""Hey""], Substring: ""or""","def filter_strings(lst, substring):
    filtered_lst = []
    for string in lst:
        if substring in string:
            filtered_lst.append(string)
    return filtered_lst

print(filter_strings([""Hello"", ""World"", ""Hey""], ""or""))",Data Structure,1973,"def filter_strings___:
    filtered_lst = []
    for string in lst:
        if substring in string:
            filtered_lst___string)
    return filtered_lst

print___)"
Create a Python program which takes a list of numbers and a number k and returns whether any two numbers from the list add up to k.,"list: [10,15,3,7]
k: 17","def twoNumberSum(list, k):
  seen = set()
  for num in list:
    if k-num in seen:
      return [num, k-num]
    else:
      seen.add(num)
  return []",Data Structure,1977,"def twoNumberSum___:
  seen = set()
  for num in list:
    if k-num in seen:
      return [num, k-num]
    else:
      seen.add___
  return []"
Write a Python program to find all the unique numbers in a list.,"[1, 2, 1, 3, 4, 5, 5, 1]","def unique_numbers(number_list):
    unique_numbers = []
    for number in number_list:
        if number not in unique_numbers:
            unique_numbers.append(number)
    return unique_numbers

print(unique_numbers([1, 2, 1, 3, 4, 5, 5, 1]))",Data Structure,1979,"def unique_numbers___:
    unique_numbers = []
    for number in number_list:
        if number not in unique_numbers:
            unique_numbers___number)
    return unique_numbers

print___)"
Design an algorithm in Python that can read a list and return the most frequent item.,"[1,2,3,4,4,4,5,5]","def most_frequent(list):
    return max(list, key=list.count)

list = [1,2,3,4,4,4,5,5]
print(most_frequent(list))",Data Structure,1980,"def most_frequent___:
    return max___

list = ___
print___)"
Write a Python program to find the closest number to zero from an array.,"[8, 5, -2, 10]","def closest_number(arr):
    min_diff = abs(arr[0])
    for num in arr: 
        if abs(num) < min_diff: 
            min_diff = abs(num) 
  
    return min_diff
  
# Driver Code
arr = [8, 5, -2, 10]
print(closest_number(arr)) # -2",Data Structure,1981,"def closest_number___:
    min_diff = abs___
    for num in arr: 
        if abs___ < min_diff: 
            min_diff = abs___ 
  
    return min_diff
  
# Driver Code
arr = [8, 5, -2, 10]
print___) # -2"
Write a Python program to delete all occurrences of a given number from a list,"lst=[2,2,3,5,7,2,9]","def remove_all(num, lst):
    result = []
    for i in range(len(lst)):
        if lst[i] != num:
            result.append(lst[i])
    return result",Data Structure,1983,"def remove_all___:
    result = []
    for i in range___):
        if lst[i] != num:
            result___lst[i])
    return result"
Optimize a Python program for speed. The program should calculate the sum of a list of numbers and return the result.,"list_of_numbers = [2, 4, 6, 8, 10]","def sum_of_numbers(list_of_numbers):
# initialize the result to 0
 result = 0
 
# Iterate over the list of numbers
 for num in list_of_numbers:
 result += num
 
# return the result
 return result
 
# testing the function
list_of_numbers = [2, 4, 6, 8, 10]
print(sum_of_numbers(list_of_numbers))",Data Structure,1984,"def sum_of_numbers___:
# initialize the result to 0
 result = 0
 
# Iterate over the list of numbers
 for num in list_of_numbers:
 result += num
 
# return the result
 return result
 
# testing the function
list_of_numbers = ___
print___)"
Construct a code snippet in Python to eliminate all the negative numbers in a given list.,"list = [-3, -2, 0, 4, 5]","list = [-3, -2, 0, 4, 5]

list = [x for x in list if x >= 0] 

print(list)",Data Structure,1985,"list = [-3, -2, 0, 4, 5]

list = [x for x in list if x >= 0] 

print___"
Create a Python function that takes a 2D array as an input and returns the sum of all the elements in the array.,"[[1,2,3],[4,5,6]]","def array_sum(arr):
    sum = 0
    for i in range(len(arr)):
        for j in range(len(arr[i])):
            sum += arr[i][j]
    return sum

array_sum([[1,2,3],[4,5,6]])",Data Structure,1987,"def array_sum___:
    sum = 0
    for i in range___):
        for j in range___):
            sum += arr[i][j]
    return sum

array_sum___"
Generate a Python program which will filter all prime numbers from a list of integers.,"[19, 32, 13, 35, 22, 17, 27]","def filter_prime_numbers(l):
    result = []
    for num in l:
        if is_prime(num):
            result.append(num)
    return result

def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True",Data Structure,1996,"def filter_prime_numbers___:
    result = []
    for num in l:
        if is_prime___:
            result___num)
    return result

def is_prime___:
    if n <= 1:
        return False
    for i in range___ + 1):
        if n % i == 0:
            return False
    return True"
Write a python program to determine if the given list has duplicates.,"list = [1, 2, 4, 6, 2, 5]","def isDuplicates(list):
    duplicate_items = set()
    for item in list:
        if item in duplicate_items:
            return True
        duplicate_items.add(item)
    return False

my_list = [1, 2, 4, 6, 2, 5]
result = isDuplicates(my_list)
print(result) # prints True",Data Structure,1997,"def isDuplicates___:
    duplicate_items = set()
    for item in list:
        if item in duplicate_items:
            return True
        duplicate_items.add___
    return False

my_list = ___
result = isDuplicates___
print___ # prints True"
Create a Python program to group a list of numbers into evens and odds.,"A list of numbers [1, 2, 3, 4, 5, 6]","def even_odd_grouping(nums):
    evens = []
    odds = []
    for num in nums:
        if num % 2 == 0:
            evens.append(num)
        else:
            odds.append(num)
    return (evens, odds)

nums = [1, 2, 3, 4, 5, 6]
evens, odds = even_odd_grouping(nums)
print(""Evens: "", evens) 
print(""Odds: "", odds)",Data Structure,1998,"def even_odd_grouping___:
    evens = []
    odds = []
    for num in nums:
        if num % 2 == 0:
            evens___num)
        else:
            odds___num)
    return ___

nums = ___
evens, odds = even_odd_grouping___
print___ 
print___"
Create a Python algorithm to return all possible combinations of a given list.,"[1, 2, 3]","def subset(s): 
    if len(s) == 0: 
        return [[]] 
    else: 
        pre_list = subset(s[1:]) 
        post_list = [] 
        for i in pre_list: 
            post_list.append(i+[s[0]]) 
  
        return pre_list + post_list 

result = subset([1, 2, 3]) 
print(result)",Data Structure,2000,"def subset___: 
    if len___ == 0: 
        return [[]] 
    else: 
        pre_list = subset___ 
        post_list = [] 
        for i in pre_list: 
            post_list___i+[s[0]]) 
  
        return pre_list + post_list 

result = subset___ 
print___"
Create a program in Python to sort a given array in ascending order using bubble sort.,"[3,7,4,1]","def bubble_sort(arr): 
    n = len(arr) 
    for i in range(n-1):
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 

arr = [3,7,4,1]
bubble_sort(arr) 
print (""Sorted array :"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i]),",Data Structure,2001,"def bubble_sort___: 
    n = len___ 
    for i in range___:
        for j in range___: 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 

arr = ___
bubble_sort___ 
print ___ 
for i in range___): 
    print ___,"
"Given two lists x and y, write a python program to return a list that contains the elements which are common to both lists.","x = [1, 2, 3, 4], y = [2, 3, 4, 5]","def common_elements(x, y):
    common = []
    for i in x:
        if i in y:
            common.append(i)
    return common",Data Structure,2002,"def common_elements___:
    common = []
    for i in x:
        if i in y:
            common___i)
    return common"
Write a Python program to transform an input array of length 5 into a matrix of 3x3.,"[1, 2, 3, 4, 5]","def transform_to_matrix(lst):
    matrix = [[lst[0], lst[1], lst[2]],
              [lst[3], lst[4], 0],
              [0, 0, 0]]
    return matrix",Data Structure,2004,"def transform_to_matrix___:
    matrix = [[lst___, lst___, lst___],
              [lst___, lst___, 0],
              ___]
    return matrix"
"Write a function in Python that takes a 2D array and a target value as input, and determines if the array contains the target value.","[[3, 6, 2], [2, 3, 4], [1, 2, 5]], target = 4","def targetInArray(arr,target):
    for i in range(len(arr)):
        for j in range(len(arr[i])):
            if target == arr[i][j]:
                return True
    return False",Data Structure,2011,"def targetInArray___:
    for i in range___):
        for j in range___):
            if target == arr[i][j]:
                return True
    return False"
Create a program in Python that shuffles an array of numbers.,"[1, 5, 8, 11, 3]","import random

# Create an array
arr = [1, 5, 8, 11, 3]

# Function to shuffle an array
def shuffle_array(arr):
    random.shuffle(arr)
    return arr

# Shuffle the array and print the result
print(shuffle_array(arr))",Data Structure,2014,"import random

# Create an array
arr = ___

# Function to shuffle an array
def shuffle_array___:
    random.shuffle___
    return arr

# Shuffle the array and print the result
print___)"
Construct a python program to flatten a nested list recursively.,"list = [[1,2,3], [4,5], [6]]","# Defining a function to flatten a nested list
def flatten(list):
    flatlist = []
    for item in list:
        if isinstance(item, list):
            flatlist.extend(flatten(item))
        else:
            flatlist.append(item)
    return flatlist

# Testing the flatten function
list = [[1,2,3], [4,5], [6]]
print(flatten(list)) # [1, 2, 3, 4, 5, 6]",Data Structure,2020,"# Defining a function to flatten a nested list
def flatten___:
    flatlist = []
    for item in list:
        if isinstance___:
            flatlist.extend___)
        else:
            flatlist___item)
    return flatlist

# Testing the flatten function
list = [___, ___, ___]
print___) # [1, 2, 3, 4, 5, 6]"
Generate the python code that check if the given element is in a list.,"list = [1, 2, 3, 4]","def check_list(list, element):
    if element in list:
        print(element, ""is in the list"")
    else:
        print(element, ""is not in the list"")",Data Structure,2021,"def check_list___:
    if element in list:
        print___
    else:
        print___"
Suggest a function to remove elements of an array that are greater than a given limit,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","# Python program to remove elements of an array that are greater than a given limit

def remove_above_limit(arr, limit):
    new_arr = [x for x in arr if x <= limit]
    return new_arr",Data Structure,2024,"# Python program to remove elements of an array that are greater than a given limit

def remove_above_limit___:
    new_arr = [x for x in arr if x <= limit]
    return new_arr"
Generate a Python function that takes an array of numbers and returns the sum of all the odd numbers in the array.,"[2, 4, 5, 6]","def findOddSums(arr):
    sum = 0
    for num in arr:
        if num % 2 != 0:
            sum += num
    return sum

odd_sums = findOddSums([2, 4, 5, 6])
print(odd_sums)",Data Structure,2028,"def findOddSums___:
    sum = 0
    for num in arr:
        if num % 2 != 0:
            sum += num
    return sum

odd_sums = findOddSums___
print___"
Write a Python program to filter out the numbers from a list that are divisible by a given number.,"list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
divisible_by = 3","numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
divisible_by = 3
result = [num for num in numbers if num % divisible_by != 0]

print(result) # [1, 2, 4, 5, 7, 8, 10]",Data Structure,2029,"numbers = ___
divisible_by = 3
result = [num for num in numbers if num % divisible_by != 0]

print___ # [1, 2, 4, 5, 7, 8, 10]"
Create a program in Python that takes a list of numbers and sorts them in descending order.,"[30, 10, 40, 20]","def sortListInDescendingOrder(list):
    return sorted(list, reverse=True)

list1 = [30, 10, 40, 20]
sortedList = sortListInDescendingOrder(list1)
print(sortedList)",Data Structure,2032,"def sortListInDescendingOrder___:
    return sorted___

list1 = ___
sortedList = sortListInDescendingOrder___
print___"
Create a function in Python to identify consecutive numbers in a given list.,"[1, 4, 6, 5, 2, 7, 9]","def consecutive_numbers(lst):
  count = 0
  for i in range(len(lst)-1):
    if lst[i+1] - lst[i] == 1:
      count += 1
    else:
      count = 0
  return count

# Test Code
lst = [1, 4, 6, 5, 2, 7, 9]
result = consecutive_numbers(lst)
print(result)

# Output --> 2",Data Structure,2034,"def consecutive_numbers___:
  count = 0
  for i in range___-1):
    if lst[i+1] - lst[i] == 1:
      count += 1
    else:
      count = 0
  return count

# Test Code
lst = ___
result = consecutive_numbers___
print___

# Output --> 2"
Create a program to remove all the duplicate elements from the given array in Python.,"[3, 5, 7, 9, 3, 5, 7]","def remove_duplicates(arr):
    result = []
    seen = set()

    for item in arr:
        if item not in seen:
            seen.add(item)
            result.append(item)

    return result

print(remove_duplicates([3, 5, 7, 9, 3, 5, 7]))",Data Structure,2035,"def remove_duplicates___:
    result = []
    seen = set()

    for item in arr:
        if item not in seen:
            seen.add___
            result___item)

    return result

print___)"
Create an algorithm in Python that reads an array of integers and returns the maximum element.,"[1, 5, -3, 10]","def findMaxElement(arr):
  max_element = 0
  for element in arr:
    if element > max_element:
      max_element = element
  
  return max_element

arr = [1, 5, -3, 10]
max_element = findMaxElement(arr)
print(max_element)",Data Structure,2038,"def findMaxElement___:
  max_element = 0
  for element in arr:
    if element > max_element:
      max_element = element
  
  return max_element

arr = [1, 5, -3, 10]
max_element = findMaxElement___
print___"
Develop a Python function to calculate the mean of a list of numbers.,"[1, 5, 8, 9]","def mean(lst):
    total = 0
    for n in lst:
        total += n
    return total / len(lst)

result = mean([1, 5, 8, 9])
print(result)",Data Structure,2040,"def mean___:
    total = 0
    for n in lst:
        total += n
    return total / len___

result = mean___
print___"
Develop a program to sort an list of strings by their length using Python.,"['dog', 'cat', 'mouse', 'elephant']","def sort_by_length(strings): 
    return sorted(strings, key=len) 
  
# Test 
strings = ['dog', 'cat', 'mouse', 'elephant'] 
  
print(sort_by_length(strings))",Data Structure,2042,"def sort_by_length___: 
    return sorted___ 
  
# Test 
strings = ['dog', 'cat', 'mouse', 'elephant'] 
  
print___)"
Write a Python code to sort a list of words alphabetically.,"word_list = [""hello"", ""computer"", ""science"", ""art""]","word_list.sort()
print(word_list)",Data Structure,2045,"word_list.sort()
print___"
Develop a Python program to sort a 3D array according to the second axis in ascending order.,"[[[1,6,4],
  [4,3,2],
  [2,3,6]],
 [[3,3,3],
  [2,2,2],
  [1,1,1]]]","def sort_array(arr):
    arr.sort(key=lambda x: x[1])
    return arr

data = [[[1,6,4], [4,3,2], [2,3,6]], [[3,3,3], [2,2,2], [1,1,1]]]

print(sort_array(data))",Data Structure,2047,"def sort_array___:
    arr.sort___
    return arr

data = [[___, ___, ___], [___, ___, ___]]

print___)"
Generate a python program to iterate through a given list and find the minimum value.,"[5, 7, -1, 4]","def find_min(arr):
    min_val = arr[0]
    for i in arr:
        if i < min_val:
            min_val = i
    return min_val

arr = [5, 7, -1, 4]
min_val = find_min(arr)
print(min_val)",Data Structure,2048,"def find_min___:
    min_val = arr___
    for i in arr:
        if i < min_val:
            min_val = i
    return min_val

arr = [5, 7, -1, 4]
min_val = find_min___
print___"
Write a python program that sorts a list of numbers in descending order.,"list_numbers = [8, 4, 6, 10, 3]","list_numbers = [8, 4, 6, 10, 3]

list_numbers.sort(reverse=True)

print(list_numbers) # Output: [10, 8, 6, 4, 3]",Data Structure,2049,"list_numbers = ___

list_numbers.sort___

print___ # Output: [10, 8, 6, 4, 3]"
"In Python, create an algorithm to find the k most frequent strings in a given list.","list = [""Cat"", ""Dog"", ""Bird"", ""Bird"", ""Bird"", ""Fish""]","from collections import Counter

list = [""Cat"", ""Dog"", ""Bird"", ""Bird"", ""Bird"", ""Fish""]

count = Counter(list)
k = 3

mostFrequent = count.most_common(k)

print(mostFrequent)  # Output: [('Bird', 3), ('Cat', 1), ('Dog', 1)]",Data Structure,2051,"from collections import Counter

list = [""Cat"", ""Dog"", ""Bird"", ""Bird"", ""Bird"", ""Fish""]

count = Counter___
k = 3

mostFrequent = count.most_common___

print___  # Output: [___, ___, ___]"
In Python create a function that takes a list of numbers and returns the sum of the even numbers in the list.,"[3, 5, 8, 9, 10]","def even_sum(numbers): 
    even_sum = 0
    for num in numbers:
        if (num % 2 == 0):
            even_sum += num
    return even_sum",Data Structure,2054,"def even_sum___: 
    even_sum = 0
    for num in numbers:
        if ___:
            even_sum += num
    return even_sum"
Create a function in Python that returns the sequential median value from an array of integers.,"arr = [1, 3, 5, 6, 9, 11]","def find_median(arr):
    n = len(arr) 
    arr.sort() 
  
    if n % 2 != 0: 
        return arr[n//2] 
  
    return (arr[(n-1)//2] + arr[n//2]) / 2.0",Data Structure,2057,"def find_median___:
    n = len___ 
    arr.sort() 
  
    if n % 2 != 0: 
        return arr[n//2] 
  
    return ___//2] + arr[n//2]) / 2.0"
Design an algorithm in Python to find the second smallest number in an array.,"[45, 25, 12, 34, 36]","def second_smallest_num(arr):
    min1 = min(arr)
    arr.remove(min1)
    min2 = min(arr)
    return min2


arr = [45, 25, 12, 34, 36]
res = second_smallest_num(arr)
print(res)",Data Structure,2058,"def second_smallest_num___:
    min1 = min___
    arr___min1)
    min2 = min___
    return min2


arr = ___
res = second_smallest_num___
print___"
Create a Python program to compute the sum of all elements in a given array.,"array = [1, 2, 3, 4, 5]","def compute_sum(array):
    sum = 0
    for element in array:
        sum += element
    return sum
    
if __name__ == '__main__':
    array = [1, 2, 3, 4, 5]
    print(compute_sum(array))",Data Structure,2064,"def compute_sum___:
    sum = 0
    for element in array:
        sum += element
    return sum
    
if __name__ == '__main__':
    array = ___
    print___)"
Construct a python program for linear search for a given element in an array.,"Array: [1, 2, 3, 4, 5] 
Element: 4","def linearSearch(array, element): 
    for i in range(len(array)): 
        if array[i]==element: 
            return i
    return -1

linearSearch([1, 2, 3, 4, 5], 4) # returns 3",Data Structure,2065,"def linearSearch___: 
    for i in range___): 
        if array[i]==element: 
            return i
    return -1

linearSearch___ # returns 3"
Rewrite the following list comprehension in a more pythonic way.,values = [x*2 for x in range(10)],"values = list(map(lambda x: x*2, range(10)))",Data Structure,2066,values = list___))
Make Python program to filter out all even numbers from a given list,"[10, 11, 5, 16, 4, 9]","def filter_even(arr):
    result = []
    for i in arr:
        if i % 2 != 0:
            result.append(i)
    return result",Data Structure,2067,"def filter_even___:
    result = []
    for i in arr:
        if i % 2 != 0:
            result___i)
    return result"
Write a python program to calculate the total of the following list of numbers,"[2, 4, 5, 6, 8]","def calculate_total(lst):
    total = 0
    for item in lst:
        total += item
    return total

lst = [2, 4, 5, 6, 8]
total = calculate_total(lst)
print(total)",Data Structure,2068,"def calculate_total___:
    total = 0
    for item in lst:
        total += item
    return total

lst = ___
total = calculate_total___
print___"
Write a python code to calculate the sum of numbers in a list except for the last element.,"[1,2,3,4,5]","def sum_except_last(arr):
    total = 0
    for i in range(len(arr) - 1):
        total += arr[i]
    return total

if __name__ == '__main__':
    output = sum_except_last([1,2,3,4,5])
    print(output)",Data Structure,2072,"def sum_except_last___:
    total = 0
    for i in range___ - 1):
        total += arr[i]
    return total

if __name__ == '__main__':
    output = sum_except_last___
    print___"
Create a Python function that sorts the numbers in a given list in ascending order.,"[8,3,5,2,9,7]","def sort_list(list):
    list.sort()
    return list

if __name__ == ""__main__"":
    l = [8,3,5,2,9,7]
    print(sort_list(l))",Data Structure,2074,"def sort_list___:
    list.sort()
    return list

if __name__ == ""__main__"":
    l = ___
    print___)"
Reverse the elements of a given array in Python.,"arr = [1, 4, 6, 8, 5]","def reverse_array(arr):
    n = len(arr) 

for i in range(n // 2): 
	arr[i], arr[n - i - 1] = arr[n - i - 1], arr[i] 

return arr",Data Structure,2076,"def reverse_array___:
    n = len___ 

for i in range___: 
	arr[i], arr[n - i - 1] = arr[n - i - 1], arr[i] 

return arr"
Find the maximum number in the following list using a Python program.,"[8, 5, -1, 7, 2]","def find_max(my_list):
    max_num = my_list[0]
    for num in my_list:
        if num > max_num:
            max_num = num
    return max_num

my_list = [8, 5, -1, 7, 2]

print(find_max(my_list))",Data Structure,2079,"def find_max___:
    max_num = my_list___
    for num in my_list:
        if num > max_num:
            max_num = num
    return max_num

my_list = [8, 5, -1, 7, 2]

print___)"
Create a python script that takes 2 arguments - an array and an integer - and prints the sum of the array multiplied by the integer.,"Array: [3, 5, 8] 
Integer: 5","def sum_arr(arr, num):
    total = 0
    for i in arr:
        total += i
    total *= num
    return total

# Output 
95",Data Structure,2086,"def sum_arr___:
    total = 0
    for i in arr:
        total += i
    total *= num
    return total

# Output 
95"
Write a Python program that optimizes an array to find the smallest and largest numbers in the array.,"[45, 2, 84, 33, 8, 1, 2]","def optimize(arr):
    min = arr[0] 
    max = arr[0] 
    for i in range(1, len(arr)): 
        if arr[i] < min: 
            min = arr[i] 
  
        if arr[i] > max: 
            max = arr[i] 
  
    print(""Minimum element is:"", min) 
    print(""Maximum element is:"", max)

# Main   
arr = [45, 2, 84, 33, 8, 1, 2]
optimize(arr)",Data Structure,2087,"def optimize___:
    min = arr___ 
    max = arr___ 
    for i in range___): 
        if arr[i] < min: 
            min = arr[i] 
  
        if arr[i] > max: 
            max = arr[i] 
  
    print___ 
    print___

# Main   
arr = ___
optimize___"
"Create a Python program to check if a given number is in a given linear list or not, and return the position if found.","List: [2, 3, 5, 6, 8, 9], Number: 5","def is_in_linear_list(lst, num):
    for i, val in enumerate(lst):
        if val == num:
            return ""Found at {0} position"".format(i)

    return False

lst = [2, 3, 5, 6, 8, 9]
num = 5
result = is_in_linear_list(lst, num)
print(result)",Data Structure,2090,"def is_in_linear_list___:
    for i, val in enumerate___:
        if val == num:
            return ""Found at ___ position"".format(i)

    return False

lst = ___
num = 5
result = is_in_linear_list___
print___"
Create a function in Python which takes two arguments – an array of integers and an integer x – and returns a list of all pairs in the array with a sum equal to x.,"array = [4, 6, 2, 8]
x = 10","def equalSums(array, x): 
    result = [] 

    for i in range(0, len(array)-1): 
        for j in range(i + 1, len(array)): 
            if array[i] + array[j] == x: 
                result.append([array[i], array[j]]) 
  
    return result 
  
print(equalSums(array, x))",Data Structure,2092,"def equalSums___: 
    result = [] 

    for i in range___-1): 
        for j in range___): 
            if array[i] + array[j] == x: 
                result___[array[i], array[j]]) 
  
    return result 
  
print___)"
Build a Python program that takes in two lists as an input and returns a third list with the common elements across the two inputs.,"list1 = [2, 3, 4, 5, 6]
list2 = [3, 5, 7, 8, 9]","def common_elements(list1, list2):
    common_elements = []

    for element in list1: 
        if element in list2:
            common_elements.append(element)
    return common_elements

list1 = [2, 3, 4, 5, 6]
list2 = [3, 5, 7, 8, 9]

print(common_elements(list1, list2))",Data Structure,2094,"def common_elements___:
    common_elements = []

    for element in list1: 
        if element in list2:
            common_elements___element)
    return common_elements

list1 = ___
list2 = ___

print___)"
Write a Python program to find the prime numbers from a list given by the user.,"mylist = [3,4,7,11,13,18]","def isPrime(num):
    for i in range (2, num): 
        if num % i == 0: 
            return False
    return True  
  
# Driver Code 
mylist = [3,4,7,11,13,18]
  
for num in mylist: 
    # if condition is true, print the number 
    if isPrime(num): 
        print(num, end ="" "")",Data Structure,2096,"def isPrime___:
    for i in range ___: 
        if num % i == 0: 
            return False
    return True  
  
# Driver Code 
mylist = ___
  
for num in mylist: 
    # if condition is true, print the number 
    if isPrime___: 
        print___"
Write a Python program to find the list of words that are longer than n from a given list of words.,"word_list = [""cat"", ""dog"", ""dragon"", ""fish"", ""tiger""]
n = 4","def get_long_words(word_list, n):
  return [w for w in word_list if len(w) > n]

long_words = get_long_words(word_list, n)
print(long_words)",Data Structure,2101,"def get_long_words___:
  return [w for w in word_list if len___ > n]

long_words = get_long_words___
print___"
"Create a Python module that takes a list of numbers, calculates the mean, and returns it.","[1, 7, 11, 13]","def calculate_mean(numbers):
    total_sum = 0
    for num in numbers:
        total_sum += num
    mean = total_sum / len(numbers)
    return mean

list_of_numbers = [1, 7, 11, 13]
mean = calculate_mean(list_of_numbers)
print(mean) # 7.5",Data Structure,2103,"def calculate_mean___:
    total_sum = 0
    for num in numbers:
        total_sum += num
    mean = total_sum / len___
    return mean

list_of_numbers = ___
mean = calculate_mean___
print___ # 7.5"
Create a Python script to implement a linear search for a given list of numbers.,"numbers_list = [1, 4, 5, 6, 7, 8 , 10]
number = 6","def linear_search(numbers_list, number):
    """"""Implements a linear search for a given list of numbers and returns the index of the number if exists""""""
    
    for index, element in enumerate(numbers_list):
        if element == number:
            return index
    return -1",Data Structure,2105,"def linear_search___:
    """"""Implements a linear search for a given list of numbers and returns the index of the number if exists""""""
    
    for index, element in enumerate___:
        if element == number:
            return index
    return -1"
Create a Python program to track and record the frequency of each word from a given list of words.,"['Good', 'Outlook', 'Good', 'Luck', 'Bad', 'Outlook', 'Good']","words = ['Good', 'Outlook', 'Good', 'Luck', 'Bad', 'Outlook', 'Good']
 
freq = {}
 
for word in words:
 if word in freq:
 freq[word] += 1
 else:
 freq[word] = 1
 
print(freq)",Data Structure,2106,"words = ['Good', 'Outlook', 'Good', 'Luck', 'Bad', 'Outlook', 'Good']
 
freq = {}
 
for word in words:
 if word in freq:
 freq[word] += 1
 else:
 freq[word] = 1
 
print___"
Develop a Python class that reads and stores a list of integers.,"[1, 2, 3, 4, 5]","class ListOfInts:
    def __init__(self, numbers):
        self.numbers = numbers
    
    def get_list(self):
        return self.numbers",Data Structure,2109,"class ListOfInts:
    def __init_____:
        self.numbers = numbers
    
    def get_list___:
        return self.numbers"
Create a Python function to remove all duplicate elements in a given list.,"list = [1, 2, 3, 4, 4, 4, 5, 5]","def removeDuplicates(lst):
 return list(set(lst))

list = [1, 2, 3, 4, 4, 4, 5, 5]
print(removeDuplicates(list))",Data Structure,2110,"def removeDuplicates___:
 return list___)

list = ___
print___)"
Compose a python program to classify each items in our list.,"List items: shirt, pants, dress, coat","def classify(items):
    categories = ['shirts', 'pants', 'dresses', 'coats']
    results = {}
    for item in items:
        for category in categories:
            if item == category:
                results[item] = category
    return results",Data Structure,2120,"def classify___:
    categories = ['shirts', 'pants', 'dresses', 'coats']
    results = {}
    for item in items:
        for category in categories:
            if item == category:
                results[item] = category
    return results"
Generate a python program to remove duplicate values in a given list.,"myList = [1, 2, 3, 2, 4, 5, 5]","def remove_duplicates(myList):
    unique_list = []
    for item in myList:
        if item not in unique_list:
            unique_list.append(item)
    return unique_list

result = remove_duplicates(myList)
print(result)",Data Structure,2121,"def remove_duplicates___:
    unique_list = []
    for item in myList:
        if item not in unique_list:
            unique_list___item)
    return unique_list

result = remove_duplicates___
print___"
Write a Python program that finds the smallest number in a given array with an algorithm that has an optimal time complexity.,"array = [3, 8, 2, 5, 4, 1, 9]","def find_smallest_number(array):
    smallest = array[0]
    for element in array:
        if element < smallest:
            smallest = element
    return smallest",Data Structure,2123,"def find_smallest_number___:
    smallest = array___
    for element in array:
        if element < smallest:
            smallest = element
    return smallest"
Develop a function in Python to take as input two array of integers and swap their elements.,"arr1 = [3, 5, 6, 9]
arr2 = [2, 4, 7, 8]","def swap(arr1, arr2):
    assert len(arr1) == len(arr2)
    for i in range(len(arr1)):
        temp = arr1[i]
        arr1[i] = arr2[i]
        arr2[i] = temp",Data Structure,2125,"def swap___:
    assert len___ == len___
    for i in range___):
        temp = arr1[i]
        arr1[i] = arr2[i]
        arr2[i] = temp"
Generate a program in Python to implement quick sort on an array of integers.,"[6, 9, 20, 1, 11, 46]","def quicksort(arr):
    if len(arr) <= 1:
        return arr
    else:
        pivot = arr[0]
        less_than_pivot = [x for x in arr[1:] if x <= pivot]
        greater_than_pivot = [x for x in arr[1:] if x > pivot]

        return quicksort(less_than_pivot) + [pivot] + quicksort(greater_than_pivot)
 
arr = [6, 9, 20, 1, 11, 46]
print (""Quick Sort: "" + str(quicksort(arr)))",Data Structure,2129,"def quicksort___:
    if len___ <= 1:
        return arr
    else:
        pivot = arr___
        less_than_pivot = [x for x in arr[1:] if x <= pivot]
        greater_than_pivot = [x for x in arr[1:] if x > pivot]

        return quicksort___ + [pivot] + quicksort___
 
arr = ___
print ___))"
Reformat a collection of list into a dictionary in Python.,"[['a', 1], ['b', 2], ['c', 3], ['d', 4]]","data = [['a', 1], ['b', 2], ['c', 3], ['d', 4]]

my_dict = dict(data)
print(my_dict) # {'a': 1, 'b': 2, 'c': 3, 'd': 4}",Data Structure,2130,"data = [['a', 1], ['b', 2], ['c', 3], ['d', 4]]

my_dict = dict___
print(my_dict) # ___"
Give a Python function that shuffles the elements of a given list.,"[1, 2, 3, 4, 5]","import random

def shuffle(list):
    random.shuffle(list)
    return list

list = [1, 2, 3, 4, 5]
shuffledList = shuffle(list)

print(shuffledList)",Data Structure,2133,"import random

def shuffle___:
    random.shuffle___
    return list

list = ___
shuffledList = shuffle___

print___"
Create a Python program to normalize a list of numbers so that the sum of the numbers add up to 1.,"[2, 5, 8, 9, 12, 25]","import numpy as np

def normalize_list(lst):
    lst = np.array(lst)
    normalized = lst / lst.sum()
    return normalized

lst = [2, 5, 8, 9, 12, 25]
normalized_list = normalize_list(lst)
print(normalized_list)",Data Structure,2137,"import numpy as np

def normalize_list___:
    lst = np.array___
    normalized = lst / lst.sum()
    return normalized

lst = ___
normalized_list = normalize_list___
print___"
Create a Python program to generate a sentence from a given set of words.,"[""The"",""quick"",""brown"",""fox"",""jumped"",""over"",""the"",""lazy"",""dog""]","def generateSentence(words):
  sentence = ''
  for word in words:
    sentence += word + ' '
  sentence += '.'
  return sentence

sentence = generateSentence([""The"",""quick"",""brown"",""fox"",""jumped"",""over"",""the"",""lazy"",""dog""])
print(sentence)",Data Structure,2139,"def generateSentence___:
  sentence = ''
  for word in words:
    sentence += word + ' '
  sentence += '.'
  return sentence

sentence = generateSentence___
print___"
Create a Python program to sort a given array in increasing and decreasing order.,"Array: [3, 5, 8, 9, 0, 4, 1]","def sort_array(arr): 
	asc_arr = arr.copy() 
	asc_arr.sort() 

	dsc_arr = arr.copy()
	dsc_arr.sort(reverse=True)
 
	return asc_arr, dsc_arr

asc_arr, dsc_arr = sort_array([3, 5, 8, 9, 0, 4, 1])
print(""Sorted in ascending order:"", asc_arr)
print(""Sorted in descending order:"", dsc_arr)",Data Structure,2141,"def sort_array___: 
	asc_arr = arr.copy() 
	asc_arr.sort() 

	dsc_arr = arr.copy()
	dsc_arr.sort___
 
	return asc_arr, dsc_arr

asc_arr, dsc_arr = sort_array___
print___
print___"
Create a Python script to generate all the combinations of a given list of integers.,"[1, 2, 3]","def generate_combinations(input_list):
    import itertools
    comb_list = []
    # Get all possible combinations of the list
    for subset in itertools.combinations(input_list,
                                       len(input_list)):
        comb_list.append(subset)
    return comb_list",Data Structure,2142,"def generate_combinations___:
    import itertools
    comb_list = []
    # Get all possible combinations of the list
    for subset in itertools.combinations(input_list,
                                       len___):
        comb_list___subset)
    return comb_list"
Write a Python program to edit an array of strings to filter out all the strings that do not contain the given substring.,"array = [""stack"", ""overflow"", ""coding"", ""challenge""]
substring = ""stack""","# Filtering out the strings that don't contain the substring
filtered_array = [s for s in array if substring in s]

print(filtered_array)",Data Structure,2143,"# Filtering out the strings that don't contain the substring
filtered_array = [s for s in array if substring in s]

print___"
Compose a Python program that takes in a list of strings and returns a list with duplicate strings removed.,"[""Hello"", ""World"", ""Hello"", ""Goodbye"", ""Goodbye"", ""Welcome""]","def remove_duplicates(strs):
    new_strs = [] 
    for i in strs: 
        if i not in new_strs: 
            new_strs.append(i) 
    return new_strs
    
# Driver Code
strs = [""Hello"", ""World"", ""Hello"", ""Goodbye"", ""Goodbye"", ""Welcome""]
print(remove_duplicates(strs))",Data Structure,2157,"def remove_duplicates___:
    new_strs = [] 
    for i in strs: 
        if i not in new_strs: 
            new_strs___i) 
    return new_strs
    
# Driver Code
strs = [""Hello"", ""World"", ""Hello"", ""Goodbye"", ""Goodbye"", ""Welcome""]
print___)"
Outpus the number of unique elements in a Python list.,"list = [1, 2, 2, 3, 4, 4, 4]","unique_elements = set(list)
print(""Number of unique elements:"", len(unique_elements))",Data Structure,2158,"unique_elements = set___
print___)"
Create an efficient algorithm in Python to convert a list of integers into a single integer representing the sum of the list elements.,"List of integers: [1, 3, 5, 8]","def list_sum(nums): 
 total = 0
 
 for num in nums:
   total += num
 
 return total

list_sum([1, 3, 5, 8]) # output: 17",Data Structure,2163,"def list_sum___: 
 total = 0
 
 for num in nums:
   total += num
 
 return total

list_sum___ # output: 17"
Create a Python program to check if a given list is sorted in ascending order.,"[7, 4, 8, 3, 10]","def is_sorted_ascending(numbers):
 for i in range(len(numbers) - 1):
 if numbers[i] > numbers[i+1]:
 return False
 return True",Data Structure,2167,"def is_sorted_ascending___:
 for i in range___ - 1):
 if numbers[i] > numbers[i+1]:
 return False
 return True"
Write Python code to retrieve a specific element from a 2D array.,"my_2d_array = [[1,2,3],[4,5,6],[7,8,9]]
row_to_retrieve = 2
column_to_retrieve = 0","my_2d_array = [[1,2,3],[4,5,6],[7,8,9]]
row_to_retrieve = 2
column_to_retrieve = 0

retrieved_element = my_2d_array[row_to_retrieve][column_to_retrieve]",Data Structure,2168,"my_2d_array = [___,___,___]
row_to_retrieve = 2
column_to_retrieve = 0

retrieved_element = my_2d_array[row_to_retrieve][column_to_retrieve]"
Write a Python program to take a list of integers and sort them in ascending order using insertion sort.,"[4, 3, 7, 2, 1]","def insertion_sort(arr):
 for index in range(1,len(arr)):
 key = arr[index]
 j = index-1
 while j >=0 and key < arr[j]:
 arr[j+1] = arr[j]
 j -= 1
 arr[j+1] = key

arr = [4, 3, 7, 2, 1]
insertion_sort(arr)
print(arr)

# Output: [1, 2, 3, 4, 7]",Data Structure,2169,"def insertion_sort___:
 for index in range___):
 key = arr[index]
 j = index-1
 while j >=0 and key < arr[j]:
 arr[j+1] = arr[j]
 j -= 1
 arr[j+1] = key

arr = ___
insertion_sort___
print___

# Output: ___"
Create an algorithm in Python that finds all subsets of a given set.,"S = {a, b, c, d}","def subsets(S):
	""Return all subsets of set S.""
	if len(S) == 0:
		return [[]]  # list of the empty set
	T = subsets(S[1:])  # recur on S[1:]
	return T + [s + [S[0]] for s in T]  # add S[0] to front of each set in T

# Sample use
S = ['a', 'b', 'c', 'd']
print(subsets(S))",Data Structure,2171,"def subsets___:
	""Return all subsets of set S.""
	if len___ == 0:
		return [[]]  # list of the empty set
	T = subsets___  # recur on S[1:]
	return T + [s + [S___] for s in T]  # add S___ to front of each set in T

# Sample use
S = ['a', 'b', 'c', 'd']
print___)"
Create a python script that takes an array of integers and returns an array of their squares.,"[1, 2, 3, 4, 5]","def find_squares(arr):
    squares = []
    
    for num in arr:
        squares.append(num ** 2)
        
    return squares

find_squares([1, 2, 3, 4, 5])",Data Structure,2173,"def find_squares___:
    squares = []
    
    for num in arr:
        squares___num ** 2)
        
    return squares

find_squares___"
Create a Python function that takes in an array of numbers and returns the maximum value in the array.,"[5, 8, 1, 7, 4]","def max_value(arr):
    return max(arr)",Data Structure,2174,"def max_value___:
    return max___"
Write a function in Python that takes an unordered list of integers as a parameter and will return a sorted list.,"Unordered list = [8, 20, 5, 1]","def sortList(list):
 sorted_list = sorted(list)
 return sorted_list",Data Structure,2181,"def sortList___:
 sorted_list = sorted___
 return sorted_list"
Generate a Python program to remove all occurrences of the character 'x' from a list,No Input,"def remove_x(lst):
    """"""
    Function to remove all occurrences of a character 'x' from a list.

    Args:
        lst (list): The list to process.

    Returns:
        A list with all occurrences of the character 'x' removed.
    """"""
    
    return [item for item in lst if item != 'x']",Data Structure,2185,"def remove_x___:
    """"""
    Function to remove all occurrences of a character 'x' from a list.

    Args:
        lst ___: The list to process.

    Returns:
        A list with all occurrences of the character 'x' removed.
    """"""
    
    return [item for item in lst if item != 'x']"
Write code to generate a set of random numbers between 0 and 10 in Python.,Number of values in the set: 5,"import random

values = random.sample(range(11), 5)
print(values) // [5, 9, 3, 4, 1]",Data Structure,2187,"import random

values = random.sample___, 5)
print___ // [5, 9, 3, 4, 1]"
Create a Python function to calculate the standard deviation of a set of numbers.,"[1, 2, 3, 4, 5]","def calculate_std(numbers):
  mean = sum(numbers)/len(numbers)
  squared_differences = [(num-mean)**2 for num in numbers]
  variance = sum(squared_differences) / len(numbers)
  return variance**0.5

result = calculate_std([1, 2, 3, 4, 5])
print(result)",Data Structure,2190,"def calculate_std___:
  mean = sum___/len___
  squared_differences = [___**2 for num in numbers]
  variance = sum___ / len___
  return variance**0.5

result = calculate_std___
print___"
Suggest a completion for the following python code to get the maximum unique elements in an array.,def maximum_unique_elements(arr):,"def maximum_unique_elements(arr):
    curr_max = 0
    seen = set()
    for num in arr:
        if num not in seen:
            curr_max += 1
            seen.add(num)

    return curr_max",Data Structure,2195,"def maximum_unique_elements___:
    curr_max = 0
    seen = set()
    for num in arr:
        if num not in seen:
            curr_max += 1
            seen.add___

    return curr_max"
Write a Python program to calculate the total sum of a given list of numbers,"[1,2,3,4,5]","""""""
Calculate the total sum of a given list of numbers using Python
""""""

# Function to calculate the total sum of a given list of numbers
def get_total_sum(num_list):
    total = 0
    
    for num in num_list:
        total += num

    return total

if __name__ == '__main__':
    num_list = [1,2,3,4,5]
    total_sum = get_total_sum(num_list)
    print(total_sum)",Data Structure,2196,"""""""
Calculate the total sum of a given list of numbers using Python
""""""

# Function to calculate the total sum of a given list of numbers
def get_total_sum___:
    total = 0
    
    for num in num_list:
        total += num

    return total

if __name__ == '__main__':
    num_list = ___
    total_sum = get_total_sum___
    print___"
Develop a python program to convert the given text into a list,"Text: Apples, oranges, and bananas","text = ""Apples, oranges, and bananas""

list_from_text = text.split("", "")

print(""List:"", list_from_text)",Data Structure,2200,"text = ""Apples, oranges, and bananas""

list_from_text = text.split___

print___"
Write a Python program to efficiently delete all items from a set that are in another set.,"A = {1, 2, 3, 4, 5}
B = {2, 4}","A = {1, 2, 3, 4, 5}
B = {2, 4}

A -= B",Data Structure,2202,"A = ___
B = ___

A -= B"
Create a Python function that takes in an array of integers and returns the maximum value.,"[2,3,5,1]","def max_value(int_arr):
    max_val = int_arr[0]
    for i in int_arr:
        if i > max_val:
            max_val = i
    return max_val",Data Structure,2205,"def max_value___:
    max_val = int_arr___
    for i in int_arr:
        if i > max_val:
            max_val = i
    return max_val"
Create a Python program to remove all duplicate elements from a list and preserving the original order.,"[1, 3, 3, 5, 5, 7]","# Program to remove duplicate elements

def remove_duplicates(nums):
 new_list = []
 for num in nums:
 if num not in new_list:
 new_list.append(num)
 
return new_list

# Main program
nums = [1, 3, 3, 5, 5, 7]
dedup_nums = remove_duplicates(nums)
print(dedup_nums) # [1, 3, 5, 7]",Data Structure,2210,"# Program to remove duplicate elements

def remove_duplicates___:
 new_list = []
 for num in nums:
 if num not in new_list:
 new_list___num)
 
return new_list

# Main program
nums = ___
dedup_nums = remove_duplicates___
print___ # [1, 3, 5, 7]"
Construct a program to filter out empty strings from a given list.,"[""Hello"", """", ""Python"", ""World"", """"]","def remove_empty_strings(lst):
    filtered_list = []
    for item in lst:
        if item != """":
            filtered_list.append(item)
    return filtered_list

filtered_list = remove_empty_strings([""Hello"", """", ""Python"", ""World"", """"])
print(filtered_list)",Data Structure,2212,"def remove_empty_strings___:
    filtered_list = []
    for item in lst:
        if item != """":
            filtered_list___item)
    return filtered_list

filtered_list = remove_empty_strings___
print___"
Write a code snippet in Python which takes an array and returns the list of its square root values.,"[2, 4, 9]","[math.sqrt(x) for x in [2, 4, 9]]",Data Structure,2214,"[math.sqrt___ for x in [2, 4, 9]]"
Create a Python script to randomly generate a character from a given list of characters.,"['A', 'B', 'C', 'D']","import random

char_list = ['A', 'B', 'C', 'D']
random_char = random.choice(char_list)
print(random_char)",Data Structure,2216,"import random

char_list = ['A', 'B', 'C', 'D']
random_char = random.choice___
print___"
Generate a Python function to classify the given list of numbers into two subgroups (positives and negatives).,"list = [4, 5, -2, -7, 5]","def classify_numbers(list):
    '''This function will classify the list of numbers into positives and negatives'''

    positives = []
    negatives = []

    for n in list:
        if n >= 0:
            positives.append(n)
        else:
            negatives.append(n)

    return positives, negatives",Data Structure,2218,"def classify_numbers___:
    '''This function will classify the list of numbers into positives and negatives'''

    positives = []
    negatives = []

    for n in list:
        if n >= 0:
            positives___n)
        else:
            negatives___n)

    return positives, negatives"
Generate a Python script to sort a 2D array of integers by the second column.,"[[1, 10], [5, 5], [4, 8]]","def sort_2d_arr(arr):
    arr.sort(key = lambda x : x[1])
    return arr

print(sort_2d_arr([[1, 10], [5, 5], [4, 8]]))

# Output
[[5, 5], [4, 8], [1, 10]]",Data Structure,2220,"def sort_2d_arr___:
    arr.sort___
    return arr

print___)

# Output
[___, ___, ___]"
Create a function in Python that takes a list of strings and checks if any of the strings are palindromes.,"[""civic"", ""apple"", ""racecar""]","def check_palindrome(string_list):
    for string in string_list:
        if string == string[::-1]:
            return True
    return False

result = check_palindrome([""civic"", ""apple"", ""racecar""])
print(result)",Data Structure,2221,"def check_palindrome___:
    for string in string_list:
        if string == string[::-1]:
            return True
    return False

result = check_palindrome___
print___"
Develop a Python program to search an element in a list using linear search.,"[25, 10, 5, 2, 50], 50","def linear_search(list, element):
    for i in range(len(list)):
        if list[i] == element:
            return i
    return -1

index = linear_search([25, 10, 5, 2, 50], 50)
if index < 0:
    print(f""{element} not found in the list"")
else:
    print(f""{element} found at index {index}"")",Data Structure,2224,"def linear_search___:
    for i in range___):
        if list[i] == element:
            return i
    return -1

index = linear_search___
if index < 0:
    print(f""___ not found in the list"")
else:
    print(f""___ found at index ___"")"
Create a function in Python to generate a random username using a list of provided names.,"names = [""John"", ""Alice"", ""Bob""]","import random

def generate_username(names):
    username = random.choice(names)
    username += str(random.randint(0, 100))
    return username

# Generate a random username
username = generate_username(names)
print(username)

# Output
Alice54",Data Structure,2225,"import random

def generate_username___:
    username = random.choice___
    username += str___)
    return username

# Generate a random username
username = generate_username___
print___

# Output
Alice54"
"Write a function in Python that takes two parameters, an integer and a list of strings, and returns a modified list of strings.","int: 2 
list: [""Hello"", ""World""]","def modified_list(num, lst):
    modified_list = []
    for item in lst:
        modified_list.append(str(num) + item)
    return modified_list
    
print(modified_list(2, [""Hello"", ""World""]))
# Output: [""2Hello"", ""2World""]",Data Structure,2233,"def modified_list___:
    modified_list = []
    for item in lst:
        modified_list___str(num) + item)
    return modified_list
    
print___)
# Output: [""2Hello"", ""2World""]"
Generate a python program that takes a list of names and prints the longest name.,"[""John"", ""Mark"", ""Kelly"", ""Cindy"", ""Dylan""]","def get_longest_name(names):
    longest_name = """"
    max_length = 0

    for name in names:
        if len(name) > max_length:
            longest_name = name
            max_length = len(name)

    return longest_name

longest_name = get_longest_name([""John"", ""Mark"", ""Kelly"", ""Cindy"", ""Dylan""]) 
print(longest_name)",Data Structure,2235,"def get_longest_name___:
    longest_name = """"
    max_length = 0

    for name in names:
        if len___ > max_length:
            longest_name = name
            max_length = len___

    return longest_name

longest_name = get_longest_name___ 
print___"
Generate a function in Python that finds the max element in a given list.,"[2, 78, 34, 55]","def maxElement(arr):
    return max(arr)

array = [2, 78, 34, 55]

print(maxElement(array)) # 78",Data Structure,2244,"def maxElement___:
    return max___

array = ___

print___) # 78"
Create an optimizer tool in Python to find the maximum of a given set of inputs.,"[5, 10, 15, 20]","def max_optimizer(input_list):
    maximum = max(input_list)
    return maximum",Data Structure,2246,"def max_optimizer___:
    maximum = max___
    return maximum"
Write a Python function to convert all strings in a list to lower case.,"list = ['Hello', 'FRIENDS', 'WorLd']","def to_lower(arr): 
    return [item.lower() for item in arr] 

result = to_lower(list) 
print(result) 

# output 
['hello', 'friends', 'world']",Data Structure,2247,"def to_lower___: 
    return [item.lower() for item in arr] 

result = to_lower___ 
print___ 

# output 
['hello', 'friends', 'world']"
"Given a list, convert it to a dictionary using Python.","list_1 = [1, 2, 3, 4]","list_1_dict =dict() 
for i in range(len(list_1)): 
    list_1_dict[i] = list_1[i] 
print(list_1_dict)",Data Structure,2250,"list_1_dict =dict() 
for i in range___): 
    list_1_dict[i] = list_1[i] 
print___"
Add a function to a python program that returns the maximum value in a list of integers.,"arr = [3, 6, 4, 7, 15, 10]","def max_val(arr):
    max_val = 0
    for num in arr:
        if num > max_val:
            max_val = num
    return max_val",Data Structure,2252,"def max_val___:
    max_val = 0
    for num in arr:
        if num > max_val:
            max_val = num
    return max_val"
Create a Python program to take an array of integers and calculate the sum of squares of all numbers provided in the array.,"[2, 3, 4]","def sum_squares(arr):
    total = 0
    for num in arr:
        total += num ** 2
    return total

arr = [2, 3, 4]

total = sum_squares(arr)
print(total) # 29",Data Structure,2254,"def sum_squares___:
    total = 0
    for num in arr:
        total += num ** 2
    return total

arr = ___

total = sum_squares___
print___ # 29"
Create a function to remove duplicates from an array with Python.,"arr = [1,2,2,3,4,4,5]","def remove_duplicates(arr): 
    result = [] 
    seen = set() 
   
    for item in arr: 
        if item not in seen: 
            seen.add(item) 
            result.append(item) 
    return result",Data Structure,2255,"def remove_duplicates___: 
    result = [] 
    seen = set() 
   
    for item in arr: 
        if item not in seen: 
            seen.add___ 
            result___item) 
    return result"
Implement a function in Python that takes a list of integers and a number and returns a list of numbers that have the given number as their sum.,"lst = [1, 2, 3, 4]
num = 4","def find_combos(lst, num):
 result = []
 for i in range(len(lst)):
 for j in range(i+1, len(lst)):
 if lst[i] + lst[j] == num:
 result.append([lst[i], lst[j]])
 return result

print(find_combos([1, 2, 3, 4], 4))

# Output: [[1, 3], [2, 2], [3, 1]]",Data Structure,2256,"def find_combos___:
 result = []
 for i in range___):
 for j in range___):
 if lst[i] + lst[j] == num:
 result___[lst[i], lst[j]])
 return result

print___)

# Output: [___, ___, ___]"
Create a program in Python that takes in a list of strings and returns the longest common substring between all the strings.,"[""hello"", ""hi"", ""hell""]","def longest_common_substring(strs):
 substr = strs[0]
 for s in strs[1:]:
 i = 0
 while i < min(len(substr), len(s)) and substr[i] == s[i]:
 i += 1
 substr = substr[:i]
 
 return substr

print(longest_common_substring([""hello"", ""hi"", ""hell""])) # Prints ""hell""",Data Structure,2259,"def longest_common_substring___:
 substr = strs___
 for s in strs[1:]:
 i = 0
 while i < min___, len___) and substr[i] == s[i]:
 i += 1
 substr = substr[:i]
 
 return substr

print___) # Prints ""hell"""
Write a Python program to create a list of odd numbers between x and y.,"x = 3, y = 10","# Generate a list of odd numbers between x and y
def odd_numbers(x, y):
  # Initialize an empty list 
  odd_list = [] 
  
  # Loop through the range
  for i in range(x, y): 
    # If the number is odd
    if (i % 2 != 0): 
      odd_list.append(i)
  
  return odd_list 
  
x = 3
y = 10

# Get the list of odd numbers
odd_list = odd_numbers(x, y)

# Print the list
print(odd_list)",Data Structure,2263,"# Generate a list of odd numbers between x and y
def odd_numbers___:
  # Initialize an empty list 
  odd_list = [] 
  
  # Loop through the range
  for i in range___: 
    # If the number is odd
    if ___: 
      odd_list___i)
  
  return odd_list 
  
x = 3
y = 10

# Get the list of odd numbers
odd_list = odd_numbers___

# Print the list
print___"
Write a python program which will show the number of even numbers in a list.,"[1, 2, 3, 4, 5, 6]","def count_even_numbers(list):
    count = 0
    for num in list:
        if num % 2 == 0:
            count += 1
    return count",Data Structure,2267,"def count_even_numbers___:
    count = 0
    for num in list:
        if num % 2 == 0:
            count += 1
    return count"
Generate a python program to calculate the number of elements in a set.,"{1, 2, 3, 4, 5}","# calculate the number of elements in a set

my_set = {1, 2, 3, 4, 5}
num_elements = len(my_set)

print(""Number of elements in the set:"", num_elements)",Data Structure,2270,"# calculate the number of elements in a set

my_set = ___
num_elements = len___

print___"
Write a Python code for sorting a list of integers in ascending order.,"[5,2,7,3,1]","list=[5,2,7,3,1]
list.sort()
print(list)",Data Structure,2271,"list=___
list.sort()
print___"
"Create a Python script to normalize numerical data. The script should take a list of numbers as an input, and returns a normalized list of numbers.","[1, -2, 7, 5, 2]","import numpy as np

def normalize(data):
 return np.divide(data, np.linalg.norm(data))

data = [1, -2, 7, 5, 2]
print(normalize(data))

# Output
[ 0.1245256  -0.2490512  0.8736233  0.6207616  0.2490512]",Data Structure,2274,"import numpy as np

def normalize___:
 return np.divide___)

data = [1, -2, 7, 5, 2]
print___)

# Output
[ 0.1245256  -0.2490512  0.8736233  0.6207616  0.2490512]"
Create a program in Python to multiply all numbers in a list by a given number and return the result as a new list.,"multiply [2, 4, 6] by 2","def multiplyListByNumber(list, number):
  return [element*number for element in list]",Data Structure,2275,"def multiplyListByNumber___:
  return [element*number for element in list]"
Design a program using the Python language to calculate the average cost of a given list of items.,"[2.15, 3.35, 6.25, 8.25]","def calculate_average(items):
 sum = 0
 for item in items:
  sum += item
 
 return sum / len(items)

items = [2.15, 3.35, 6.25, 8.25]

average = calculate_average(items)

print(""Average cost: $"" + str(round(average, 2)))",Data Structure,2276,"def calculate_average___:
 sum = 0
 for item in items:
  sum += item
 
 return sum / len___

items = [2.15, 3.35, 6.25, 8.25]

average = calculate_average___

print___))"
Write a python program to parse a JSON array of objects.,"[""name"":""Bob"",""age"":30,""city"":""New York""],[""name"":""Alice"",""age"":27,""city"":""San Francisco""]","import json
arr = json.loads('[{""name"":""Bob"",""age"":30,""city"":""New York""}, {""name"":""Alice"",""age"":27,""city"":""San Francisco""}]')
for obj in arr:
    print(""Name:"", obj[""name""])
    print(""Age:"", obj[""age""])
    print(""City:"", obj[""city""])
    print()",Data Structure,2278,"import json
arr = json.loads('[___, ___]')
for obj in arr:
    print___
    print___
    print___
    print()"
Create an algorithm in Python that takes a list of strings and returns a list of strings with the duplicates removed.,"[""apple"", ""banana"", ""apple"", ""orange""]","def remove_duplicates(list_of_strings):
  unique_strings = set(list_of_strings)
  return list(unique_strings)",Data Structure,2280,"def remove_duplicates___:
  unique_strings = set___
  return list___"
Create a Python package that contains a collection of functions for finding the average value of an array.,"[1,2,3,4,5]","def average(array):
 '''
 Finds the average of all numbers in an array

 Args:
 array (list): List of numbers

 Returns:
 float: The average of all values in the array
 '''

 total = 0
 for value in array:
 total += value

 return total / len(array)",Data Structure,2294,"def average___:
 '''
 Finds the average of all numbers in an array

 Args:
 array ___: List of numbers

 Returns:
 float: The average of all values in the array
 '''

 total = 0
 for value in array:
 total += value

 return total / len___"
Create a Python script that takes an array with n elements and shuffles it.,n = 10,"import random

def shuffle(lst):
    random.shuffle(lst)
    return lst

arr = [i for i in range(10)]
print(shuffle(arr))",Data Structure,2299,"import random

def shuffle___:
    random.shuffle___
    return lst

arr = [i for i in range___]
print___)"
Write a Python program to return a list that contains all the elements of a given list except the given element x.,"[3, 5, 9, 8], x = 5","def removeElement(list, x):
    new_list = []
    for item in list:
        if item != x:
            new_list.append(item)
    return new_list",Data Structure,2301,"def removeElement___:
    new_list = []
    for item in list:
        if item != x:
            new_list___item)
    return new_list"
Write a Python function to sort a list of dictionaries according to a certain key.,"[{'a': 5, 'b': 3}, {'a': 4, 'b': 1}, {'a': 2, 'b': 8}]","def sort_dict_list(dict_list, sort_key):
  return sorted(dict_list, key=lambda k: k[sort_key])",Data Structure,2302,"def sort_dict_list___:
  return sorted___"
Create a Python program to remove all occurrences of the given element in a given array.,"arr = [2, 4, 5, 7, 4, 2], element = 4","def remove_element(arr, element):
    arr = [x for x in arr if x != element]
    return arr",Data Structure,2303,"def remove_element___:
    arr = [x for x in arr if x != element]
    return arr"
Generate a python function to convert an array to a dictionary,"['a', 1, 'b', 2, 'c', 3]","def array_to_dict(lst):
    output = {}
    for i in range(0, len(lst), 2):
        output[lst[i]] = lst[i+1]
 
    return output

# main program
my_list = ['a', 1, 'b', 2, 'c', 3]
result = array_to_dict(my_list)
print(result)",Data Structure,2304,"def array_to_dict___:
    output = {}
    for i in range___, 2):
        output[lst[i]] = lst[i+1]
 
    return output

# main program
my_list = ['a', 1, 'b', 2, 'c', 3]
result = array_to_dict___
print___"
Suggest a way to sort a list of integers in python in ascending order.,"[9, 1, 8, 0, 2]","sorted_list = [9, 1, 8, 0, 2].sort()
print(sorted_list)",Data Structure,2305,"sorted_list = ___.sort()
print___"
Suggest a completion for the following Python code snippet that implements a linear search on an array.,"def linear_search(arr, target):
    for i in range(len(arr)):","def linear_search(arr, target):
    for i in range(len(arr)):
        if (arr[i] == target):
            return i
    return -1",Data Structure,2306,"def linear_search___:
    for i in range___):
        if ___:
            return i
    return -1"
"Given an array of numbers, write a program to remove the duplicates from the array.","[1, 2, 2, 3, 4, 4, 5]","def remove_duplicates(arr):
    return list(set(arr)) # using built-in python set()",Data Structure,2310,"def remove_duplicates___:
    return list___) # using built-in python set()"
"Write a Python program to create a set from a given list and calculate its intersection, union and difference with another set.","list1 = [10, 20, 30, 40]
list2 = [30, 40, 50, 60]","# create set from list
set1 = set(list1)
set2 = set(list2)

# calculate set intersection
intersection = set1.intersection(set2)

# calculate set union
union = set1.union(set2)

# calculate set difference
difference = set1.difference(set2)",Data Structure,2313,"# create set from list
set1 = set___
set2 = set___

# calculate set intersection
intersection = set1.intersection___

# calculate set union
union = set1.union___

# calculate set difference
difference = set1.difference___"
Develop a Python function to calculate the mean of an array of numbers.,"data = [1, 4, 6]","# Python Function to calculate mean 
def calculateMean(data): 
    sum = 0
    # calculating sum 
    for e in data: 
        sum += e
  
    # calculating mean 
    mean = sum / len(data) 
    return mean
  
# Driver code 
data = [1, 4, 6]
mean = calculateMean(data)
print(""Mean of given data is:"", mean)",Data Structure,2316,"# Python Function to calculate mean 
def calculateMean___: 
    sum = 0
    # calculating sum 
    for e in data: 
        sum += e
  
    # calculating mean 
    mean = sum / len___ 
    return mean
  
# Driver code 
data = ___
mean = calculateMean___
print___"
Design a class in Python that finds the highest number in a given array of integers.,"[3, 5, 1, 8, 11, 12]","class HighestNumberFinder:
    def __init__(self, array):
        self.array = array
    
    def find_highest_number(self):
        highest_number = self.array[0]
        for number in self.array:
            if (number > highest_number):
                highest_number = number
        return highest_number",Data Structure,2322,"class HighestNumberFinder:
    def __init_____:
        self.array = array
    
    def find_highest_number___:
        highest_number = self.array___
        for number in self.array:
            if ___:
                highest_number = number
        return highest_number"
Create a function in Python that takes an array and returns the element at the middle index.,"[1, 2, 3, 4, 5]","def returnMiddle(arr):
    if len(arr) % 2 == 0:
        return (arr[int(len(arr) / 2) - 1] + arr[int(len(arr) / 2)])/2
    else:
        return arr[int(len(arr) / 2)]
 print(returnMiddle([1, 2, 3, 4, 5]))",Data Structure,2329,"def returnMiddle___:
    if len___ % 2 == 0:
        return ___ / 2) - 1] + arr[int___ / 2)])/2
    else:
        return arr[int___ / 2)]
 print___)"
Generate a Python function that takes in a list of words and returns the length of the longest word.,"['Ram', 'Shyam', 'Mohan']","def longest_word_length(words):
   length = 0
   for word in words:
       if len(word) > length:
           length = len(word)
           
   return length",Data Structure,2332,"def longest_word_length___:
   length = 0
   for word in words:
       if len___ > length:
           length = len___
           
   return length"
Create a simple algorithm in Python to find the mode of a given array of numbers.,"[1, 2, 2, 3, 5, 6, 7]","def mode(arr):
  dict = {}
  for item in arr:
    if item in dict:
      dict[item] += 1
    else:
      dict[item] = 1
  
  max_val = 0
  max_key = 0
  for key, value in dict.items():
    if value > max_val:
      max_val = value
      max_key = key
  
  return max_key

arr = [1, 2, 2, 3, 5, 6, 7]
print(mode(arr))",Data Structure,2333,"def mode___:
  dict = {}
  for item in arr:
    if item in dict:
      dict[item] += 1
    else:
      dict[item] = 1
  
  max_val = 0
  max_key = 0
  for key, value in dict.items():
    if value > max_val:
      max_val = value
      max_key = key
  
  return max_key

arr = ___
print___)"
Write a Python program to delete the third element of a list.,"list = [1, 2, 3, 4, 5]","def delete_third_element(list): 
    """"""Function to delete the third element of a list"""""" 
    del list[2] 
    return list

#Example:
print(delete_third_element(list))",Data Structure,2341,"def delete_third_element___: 
    """"""Function to delete the third element of a list"""""" 
    del list___ 
    return list

#Example:
print___)"
Create a Python program which will sort the given array of numbers,"[9, 5, 1, 10]","def sortArray(arr): 
    arr.sort() 
    return arr 
  
# Driver code 
arr = [9, 5, 1, 10] 
print(sortArray(arr)) 
# Output: [1, 5, 9, 10]",Data Structure,2342,"def sortArray___: 
    arr.sort() 
    return arr 
  
# Driver code 
arr = ___ 
print___) 
# Output: ___"
Sum the integers in a Python list.,"List of integers: [1, 2, 3, 4, 5]","def sumList(list): 
    sum = 0
    for ele in list:
        sum += ele     
    return sum
  
list = [1, 2, 3, 4, 5] 
print(""Sum of the elements in given list is :"", sumList(list))",Data Structure,2347,"def sumList___: 
    sum = 0
    for ele in list:
        sum += ele     
    return sum
  
list = ___ 
print___)"
Create a Python script to return the average of the given list of numbers.,"[10, 15, 20, 25]","def average(numbers):
 total = 0
 for num in numbers:
 total += num
 return total / len(numbers)

average([10, 15, 20, 25])",Data Structure,2348,"def average___:
 total = 0
 for num in numbers:
 total += num
 return total / len___

average___"
Design a Python program that takes an array of integers and returns the first element that is divisible by 7.,"[41, 42, 43, 44, 45]","def findFirstDivisibleBy7(arr):
    for i in range(0, len(arr)):
        if arr[i] % 7 == 0:
            return arr[i]
    return -1

arr = [41, 42, 43, 44, 45]
result = findFirstDivisibleBy7(arr)
print(result) # 42",Data Structure,2353,"def findFirstDivisibleBy7___:
    for i in range___):
        if arr[i] % 7 == 0:
            return arr[i]
    return -1

arr = ___
result = findFirstDivisibleBy7___
print___ # 42"
Write a function to reverse the elements of a given array in Python.,"[1, 2, 3, 4, 5]","def reverse_array(arr):
    """"""This function reverses the elements of a given array of numbers
    
    Parameters: 
        arr (list): The list of numbers to reverse.
	
    Returns: The reversed array
    """"""
    return arr[::-1]",Data Structure,2354,"def reverse_array___:
    """"""This function reverses the elements of a given array of numbers
    
    Parameters: 
        arr ___: The list of numbers to reverse.
	
    Returns: The reversed array
    """"""
    return arr[::-1]"
Design an algorithm in Python to find the smallest number in a given list.,"[4, 5, 6, 7, 8]","def smallestNumber(nums):
    smallest = nums[0]
    for i in range(1, len(nums)):
        if nums[i] < smallest:
            smallest = nums[i]
    return smallest

nums = [4, 5, 6, 7, 8]
smallestNum = smallestNumber(nums)
print('The smallest number is', smallestNum)",Data Structure,2355,"def smallestNumber___:
    smallest = nums___
    for i in range___):
        if nums[i] < smallest:
            smallest = nums[i]
    return smallest

nums = ___
smallestNum = smallestNumber___
print___"
Write a Python program to create a dictionary containing the given list of numbers and their squares as values.,"[1,2,3,4,5]","my_list = [1,2,3,4,5]

squares_dictionary = {}

for x in my_list:
  squares_dictionary[x] = x**2

print(squares_dictionary)",Data Structure,2359,"my_list = ___

squares_dictionary = {}

for x in my_list:
  squares_dictionary[x] = x**2

print___"
Suggest a python code to get the common elements of a list of lists.,"list_of_lists = [[1,3,5], [3,5,7], [1,2,3]]","def get_common_elements(list_of_lists): 
    commons = []
    for i in range(len(list_of_lists)): 
        commons = list(set(commons).intersection(list_of_lists[i]))
    return commons",Data Structure,2361,"def get_common_elements___: 
    commons = []
    for i in range___): 
        commons = list___.intersection___)
    return commons"
Generate a python statements to insert an item at a specific index in a list.,"list = [1, 2, 4, 5]
item = 3
index = 2","list.insert(index, item)",Data Structure,2362,"list___index, item)"
Write a Python program to generate a unique set of random numbers from an existing list of numbers.,"[1, 2, 3, 4, 5, 6, 7]","import random

numbers = [1, 2, 3, 4, 5, 6, 7] 
random_numbers = set()

while len(random_numbers) < 4:
    random_numbers.add(random.choice(numbers))

print(random_numbers)",Data Structure,2366,"import random

numbers = ___ 
random_numbers = set()

while len___ < 4:
    random_numbers.add___)

print___"
Design an algorithm in Python that sorts an unordered list of three numbers in increasing order.,"List = [3, 1, 2]","def sort_list(input_list):
    output_list = []
    while input_list:
        smallest = input_list[0]
        for i in input_list:
            if i < smallest:
                smallest = i
        output_list.append(smallest)
        input_list.remove(smallest)
    return output_list",Data Structure,2367,"def sort_list___:
    output_list = []
    while input_list:
        smallest = input_list___
        for i in input_list:
            if i < smallest:
                smallest = i
        output_list___smallest)
        input_list___smallest)
    return output_list"
Generate a Python function that sorts a list of numbers using the bubble sort algorithm,"[8,2,11,9,20,7]","def bubbleSort(list): 
	n = len(list) 
	for i in range(n): 
		for j in range(0, n-i-1): 
			if list[j] > list[j+1] : 
				list[j], list[j+1] = list[j+1], list[j] 
	return list

print(bubbleSort([8,2,11,9,20,7]))",Data Structure,2369,"def bubbleSort___: 
	n = len___ 
	for i in range___: 
		for j in range___: 
			if list[j] > list[j+1] : 
				list[j], list[j+1] = list[j+1], list[j] 
	return list

print___)"
Generate code to calculate the distance between two points in an array in Python.,"Two points in an array: [2, 4] and [10, 6]","from math import sqrt

def calcDistance(p1, p2):
    return sqrt( (p2[0] - p1[0])**2 + (p2[1] - p1[1])**2 )

point1 = [2, 4]
point2 = [10, 6]

distance = calcDistance(point1, point2)
print(""Distance between the two points is"", distance)",Data Structure,2372,"from math import sqrt

def calcDistance___:
    return sqrt___**2 + ___**2 )

point1 = ___
point2 = ___

distance = calcDistance___
print___"
Generate a Python program to group a list of integers into even and odd numbers.,"[1, 2, 3, 4, 5, 6]","def group_integers(lst):
 evens = []
 odds = []
 for num in lst:
 if (num % 2 == 0):
 evens.append(num)
 else:
 odds.append(num)
 
 return (evens, odds)
 
 lst = [1, 2, 3, 4, 5, 6]
 result = group_integers(lst)
 
 print(""Even numbers:"", result[0])
 print(""Odd numbers:"", result[1])",Data Structure,2375,"def group_integers___:
 evens = []
 odds = []
 for num in lst:
 if ___:
 evens___num)
 else:
 odds___num)
 
 return ___
 
 lst = ___
 result = group_integers___
 
 print___
 print___"
Write a Python program to iterate through a given list of integers and output the maximum value.,"[1,5,2,3,8,9]","max_value = 0

for value in [1,5,2,3,8,9]:
    if value > max_value:
    max_value = value

print(max_value) # Output: 9",Data Structure,2380,"max_value = 0

for value in ___:
    if value > max_value:
    max_value = value

print___ # Output: 9"
"Construct a python program that takes an array of integers as an argument, and returns the second largest number.","arr = [10, 12, 2, 8, 6, 4]","def second_largest(arr):
  max_first = max(arr[0], arr[1])
  max_second = min(arr[0], arr[1])
  for i in range(2, len(arr)):
    if arr[i] > max_first:
      max_second = max_first
      max_first = arr[i]
    else: 
      if arr[i] > max_second:
        max_second = arr[i]
  return max_second

print(second_largest(arr))",Data Structure,2381,"def second_largest___:
  max_first = max___
  max_second = min___
  for i in range___):
    if arr[i] > max_first:
      max_second = max_first
      max_first = arr[i]
    else: 
      if arr[i] > max_second:
        max_second = arr[i]
  return max_second

print___)"
"Given a list of integers, write a Python program to find the maximum value in the array and display its index.","[3, 2, 5, 8, 6]","mylist = [3, 2, 5, 8, 6]

# initialize maximum value and index
maxval = 0
maxindex = 0

# iterate through list
for i, val in enumerate(mylist):
 # check if the current value is greater than the maximum value
 if val > maxval:
  maxval = val
  maxindex = i

# print the result
print('Maximum value:', maxval)
print('Index of maximum value:', maxindex)",Data Structure,2385,"mylist = ___

# initialize maximum value and index
maxval = 0
maxindex = 0

# iterate through list
for i, val in enumerate___:
 # check if the current value is greater than the maximum value
 if val > maxval:
  maxval = val
  maxindex = i

# print the result
print___
print___"
Write a function in Python that computes the median of a given array of numbers.,"[2,3,4,5,6,7,8]","def median(arr):
 arr.sort() 
 n = len(arr) 
 if n % 2 != 0: 
 return arr[n//2] 
 else: 
 return (arr[(n-1)//2] + arr[n//2]) / 2

# driver code 
arr = [2,3,4,5,6,7,8] 
print(median(arr))",Data Structure,2388,"def median___:
 arr.sort() 
 n = len___ 
 if n % 2 != 0: 
 return arr[n//2] 
 else: 
 return ___//2] + arr[n//2]) / 2

# driver code 
arr = ___ 
print___)"
Write a Python program to generate a table of all possible combinations for a given set of symbols.,"['A', 'B', 'C']","def print_combinations(symbols):
    for idx in range(1 << len(symbols)):
        combination = [symbol for symbol, flag in zip(symbols, bin(idx)[2:]) if flag == ""1""]
        print(combination)

symbols = ['A', 'B', 'C']
print_combinations(symbols)",Data Structure,2389,"def print_combinations___:
    for idx in range___):
        combination = [symbol for symbol, flag in zip___[2:]) if flag == ""1""]
        print___

symbols = ['A', 'B', 'C']
print_combinations___"
Write a python program that takes a list of numbers and prints out only the even numbers,"[2, 4, 7, 14, 21]","for num in [2, 4, 7, 14, 21]: 
    if num % 2 == 0: 
        print(num, end = "" "")",Data Structure,2393,"for num in ___: 
    if num % 2 == 0: 
        print___"
Find the maximum value of a 10 element array in Python.,"array = [1, 7, 3, 4, 5, 9, 8, 0, 2, 6]","# Max value in array

def max_val(array):
    max_val = array[0]
    for num in array[1:]:
        if num > max_val:
            max_val = num
    return max_val",Data Structure,2396,"# Max value in array

def max_val___:
    max_val = array___
    for num in array[1:]:
        if num > max_val:
            max_val = num
    return max_val"
Write a Python program to sort a list of tuples by the second element in the tuple.,"tuples = [(""Alice"", 15),(""Bob"", 10),(""Robot"",25)]","def sort_tuples_by_second_element(tuples):
  return sorted(tuples, key=lambda tup: tup[1])",Data Structure,2397,"def sort_tuples_by_second_element___:
  return sorted___"
Generate Python code to calculate the Mean Squared Error (MSE) between a given set of predicted values and actual values.,"y_true = [2.2, 3.7, 4.1, 5.7]
y_pred = [1.8, 2.3, 2.9, 5.9]","def calculate_mse(y_true, y_pred):
    mse = 0
    for i in range(len(y_true)):
        mse += (y_true[i] - y_pred[i])**2
    mse = mse / len(y_true)
    return mse

mse=calculate_mse(y_true, y_pred)
print(mse)
# Output: 0.44000000000000006",Data Structure,2399,"def calculate_mse___:
    mse = 0
    for i in range___):
        mse += ___**2
    mse = mse / len___
    return mse

mse=calculate_mse___
print___
# Output: 0.44000000000000006"
Update the given Python program to shuffle an array of numbers.,"[1, 2, 3, 4, 5, 6]","import random

def shuffleArray(arr):
    random.shuffle(arr)
    return arr

array = [1, 2, 3, 4, 5, 6]
shuffledArray = shuffleArray(array)
print(shuffledArray)",Data Structure,2400,"import random

def shuffleArray___:
    random.shuffle___
    return arr

array = ___
shuffledArray = shuffleArray___
print___"
Create a function in Python to delete all elements from a list which are divisible by 5.,"[1, 10, 15, 20, 25]","def delete_divisible_by_5(my_list):
  new_list = []
  for i in my_list:
    if i % 5 != 0:
      new_list.append(i)
  return new_list

# Test
my_list = [1, 10, 15, 20, 25]

new_list = delete_divisible_by_5(my_list)

print(""List after deletion: "" + str(new_list))",Data Structure,2401,"def delete_divisible_by_5___:
  new_list = []
  for i in my_list:
    if i % 5 != 0:
      new_list___i)
  return new_list

# Test
my_list = ___

new_list = delete_divisible_by_5___

print___)"
Create a Python program that takes a list of numbers as an input from the user and prints out the number that appears the most in the list.,"1, 1, 2, 3","list_of_numbers = [int(x) for x in input(""Please enter a list of numbers: "").split(',')]

c = collections.Counter(list_of_numbers)

most_common_num = c.most_common(1)[0][0]

print(""The most common number in the list is "" + str(most_common_num))",Data Structure,2403,"list_of_numbers = [int___ for x in input___.split___]

c = collections.Counter___

most_common_num = c.most_common___[0][0]

print___)"
"Given a list of dictionarys, create a python command to add ""hello"" in front of every value in the list.","[{'string' : 'world'}, {'number' : 5}]","[{'string' : 'hello world'}, {'number' : 'hello 5'}]",Data Structure,2408,"[___, ___]"
Generate a Python program which use to generate an array of length N with random numbers based on the given seed.,"N = 10
Seed = 42","import random

def generate_array_with_random_numbers(n, seed):
 random.seed(seed)
 return [random.randint(0, 100) for _ in range(n)]

n = 10
seed = 42
array = generate_array_with_random_numbers(n, seed)

print(array)
# [19, 25, 44, 36, 33, 20, 72, 15, 85, 37]",Data Structure,2410,"import random

def generate_array_with_random_numbers___:
 random.seed___
 return [random.randint___ for _ in range___]

n = 10
seed = 42
array = generate_array_with_random_numbers___

print___
# ___"
Sort a list in Python using the Quick Sort algorithm,"[5, 2, 9, 1, 4, 12]","def quicksort (array) :
    if len(array) <= 1 :
        return array
    else:
        pivot = array[len(array) // 2]
        left = [x for x in array if x < pivot]
        middle = [x for x in array if x == pivot]
        right = [x for x in array if x > pivot]
        return quicksort(left) + middle + quicksort(right)

array = [5, 2, 9, 1, 4, 12]
result = quicksort(array)
print(result)",Data Structure,2413,"def quicksort ___ :
    if len___ <= 1 :
        return array
    else:
        pivot = array[len___ // 2]
        left = [x for x in array if x < pivot]
        middle = [x for x in array if x == pivot]
        right = [x for x in array if x > pivot]
        return quicksort___ + middle + quicksort___

array = ___
result = quicksort___
print___"
How can you use Python to calculate the mean value of a given list,"[25, 34, 42]","def mean_value(numbers):
    sum = 0
    for n in numbers:
        sum += n
    return sum / len(numbers)",Data Structure,2416,"def mean_value___:
    sum = 0
    for n in numbers:
        sum += n
    return sum / len___"
Create a Python program that takes a list of integers and returns true if the list contains two distinct numbers whose product is even.,"[1, 2, 3, 4]","def has_even_product(numbers):
 for i in range(len(numbers)):
 for j in range(i+1, len(numbers)):
 if numbers[i] * numbers[j] % 2 == 0:
 return True
 return False",Data Structure,2418,"def has_even_product___:
 for i in range___):
 for j in range___):
 if numbers[i] * numbers[j] % 2 == 0:
 return True
 return False"
Create a Python program to search for an item in a list and return its index.,"[2, 3, 5, 7, 11], target = 5","def linear_search(list, target):
  for index, item in enumerate(list):
    if target == item:
      return index
    return -1

result = linear_search([2, 3, 5, 7, 11], 5)
print(result)",Data Structure,2429,"def linear_search___:
  for index, item in enumerate___:
    if target == item:
      return index
    return -1

result = linear_search___
print___"
"Using the provided inputs, write a python code that calculates the sum of all the elements in the list.","my_list = [1,2,3,4,5,6]","def calculate_sum(my_list):
    """""" Calculate the sum of all the elements in the list. """"""
    sum = 0
    for elem in my_list:
        sum += elem
    return sum

my_list = [1,2,3,4,5,6]
total_sum = calculate_sum(my_list)
print(""The sum of all elements in the list is: %d"" %total_sum)",Data Structure,2434,"def calculate_sum___:
    """""" Calculate the sum of all the elements in the list. """"""
    sum = 0
    for elem in my_list:
        sum += elem
    return sum

my_list = ___
total_sum = calculate_sum___
print___"
Write a Python program to calculate the amount of time for an action to be completed given a set of parameters.,"speed = 100;
distance = 1000;","def calculate_time(speed, distance):
 time = distance / speed 
 return time 

print(calculate_time(100, 1000)) 
# Output: 10.0",Data Structure,2440,"def calculate_time___:
 time = distance / speed 
 return time 

print___) 
# Output: 10.0"
Create a Python program to generate random strings using a given character set.,"Character Set: 'abc'
String Length: 5","import random

def generate_random_string(length, char_set):
    random_string = ''
    
    for _ in range(length):
        random_string += random.choice(char_set)
    
    return random_string

char_set = 'abc'
length = 5

print(generate_random_string(length, char_set))",Data Structure,2449,"import random

def generate_random_string___:
    random_string = ''
    
    for _ in range___:
        random_string += random.choice___
    
    return random_string

char_set = 'abc'
length = 5

print___)"
Create a function in Python to perform a linear search on a list of numbers.,"def linear_search(numbers, x):","def linear_search(numbers, x):
    """"""This function will perform a linear search on a list of numbers and return the index of the number if it is present in the list.""""""
    for i in range(len(numbers)):
        if numbers[i] == x:
            return i 
    # if the number is not found
    return -1",Data Structure,2450,"def linear_search___:
    """"""This function will perform a linear search on a list of numbers and return the index of the number if it is present in the list.""""""
    for i in range___):
        if numbers[i] == x:
            return i 
    # if the number is not found
    return -1"
Create a Python function that takes an integer n and returns an array of n random numbers between 0 and 9.,10,"def random_array(n):
    import random
    arr = []
    for _ in range(n):
        arr.append(random.randint(0,9))
    return arr
    
arr = random_array(10)
print(arr)",Data Structure,2452,"def random_array___:
    import random
    arr = []
    for _ in range___:
        arr___random.randint(0,9))
    return arr
    
arr = random_array___
print___"
Finish coding a reusable Python function that takes in a list and an argument.,"list = [1, 2, 3, 4, 5]
argument = ""multiply""","def modify_list(list, argument):
    if argument == ""multiply"":
        for i in range(len(list)):
            list[i] = list[i]*list[i]
    elif argument == ""add"":
        for i in range(len(list)):
            list[i] = list[i] + list[i]
    return list",Data Structure,2454,"def modify_list___:
    if argument == ""multiply"":
        for i in range___):
            list[i] = list[i]*list[i]
    elif argument == ""add"":
        for i in range___):
            list[i] = list[i] + list[i]
    return list"
Generate a Python program to output the maximum element in a given array.,"The array is [1, 4, 9, 3, 6, 5]","def findMax(arr):
    max_number = arr[0]
    for i in range(1, len(arr)):
        if arr[i] > max_number:
            max_number = arr[i]
    return max_number

arr = [1, 4, 9, 3, 6, 5]
max_number = findMax(arr)
print(""The maximum element in the array is:"", max_number)",Data Structure,2455,"def findMax___:
    max_number = arr___
    for i in range___):
        if arr[i] > max_number:
            max_number = arr[i]
    return max_number

arr = ___
max_number = findMax___
print___"
Write a Python program that takes a list and prints out the items after sorting them in descending order.,"['apple', 'banana', 'cherry']","fruit = ['apple', 'banana', 'cherry'] 
fruit.sort(reverse=True)
print(fruit) # ['cherry', 'banana', 'apple']",Data Structure,2458,"fruit = ['apple', 'banana', 'cherry'] 
fruit.sort___
print___ # ['cherry', 'banana', 'apple']"
"Given a list of elements, write a program to shuffle the elements in Python.","myList = [1, 2, 3, 4, 5, 6]","import random 

def shuffle_list(myList): 
  shuffledList = random.sample(myList, len(myList)) 
  return shuffledList

shuffledList = shuffle_list(myList) 

print(""Shuffled List :"", shuffledList) 

# Output: Shuffled List : [2, 6, 4, 5, 3, 1]",Data Structure,2459,"import random 

def shuffle_list___: 
  shuffledList = random.sample___) 
  return shuffledList

shuffledList = shuffle_list___ 

print___ 

# Output: Shuffled List : ___"
Write a code in Python for computing the maximum difference between any two elements in an array.,"Array: [2, 9, 4, 1, 5]","def max_difference(arr): 
  
    max_diff = 0
    for i in range(0, len(arr)): 
        for j in range(i+1, len(arr)): 
            diff = arr[j]-arr[i] 
            if(diff > max_diff): 
                max_diff = diff 
  
    return max_diff 
  
array = [2, 9, 4, 1, 5]
  
print(""Maximum difference ="", max_difference(array))",Data Structure,2461,"def max_difference___: 
  
    max_diff = 0
    for i in range___): 
        for j in range___): 
            diff = arr[j]-arr[i] 
            if___: 
                max_diff = diff 
  
    return max_diff 
  
array = ___
  
print___)"
Construct a code to eliminate all negative numbers from a list using Python.,"[-1, 9, -3, 4, -8]","def remove_negatives(nums):
    new_list = [num for num in nums if num > 0]
    return new_list

my_list = [-1, 9, -3, 4, -8]
filtered_list = remove_negatives(my_list)
print(filtered_list) #[9, 4]",Data Structure,2465,"def remove_negatives___:
    new_list = [num for num in nums if num > 0]
    return new_list

my_list = [-1, 9, -3, 4, -8]
filtered_list = remove_negatives___
print___ #[9, 4]"
"Modify the following line of code in Python to generate a list of odd numbers in the range [1,n].","[i for i in range (1, 10)]","[i for i in range (1, 10) if i % 2 != 0]",Data Structure,2466,[i for i in range ___ if i % 2 != 0]
Write a Python program that takes a list of numbers and checks if a given number is present in the list.,"Given list: [12, 45, 37, 13, 4]
Given number: 4","list = [12, 45, 37, 13, 4]
x = 4

if x in list:
 print(""Given number is present in the list"") 
else: 
 print(""Given number is not present in the list"")",Data Structure,2472,"list = ___
x = 4

if x in list:
 print___ 
else: 
 print___"
Design a program in Python that uses a loop to iterate through the items in a list.,"items = [1, 2, 3, 4, 5]","def loop_through_list(items):
    """"""Iterates through a list of items and prints each one""""""
    for item in items:
        print(item)",Data Structure,2475,"def loop_through_list___:
    """"""Iterates through a list of items and prints each one""""""
    for item in items:
        print___"
"Create a Python program to calculate the sum of two numbers, given their positions in a given list.","[1, 4, 5, 8, 9], positions = 3, 5","def sum_positions(numbers, pos1, pos2):
 sum = numbers[pos1] + numbers[pos2]
 return sum

numbers = [1, 4, 5, 8, 9]
positions = (3, 5)
print(sum_positions(numbers, positions[0], positions[1]))",Data Structure,2476,"def sum_positions___:
 sum = numbers[pos1] + numbers[pos2]
 return sum

numbers = ___
positions = ___
print___)"
Write a python script to calculate the standard deviation of a given list of numbers,"numbers = [1, 2, 3, 4, 5]","import numpy as np

def calculate_standard_deviation(arr):
    return np.std(arr)

print(calculate_standard_deviation(numbers)) # Prints 1.4142135623730951",Data Structure,2490,"import numpy as np

def calculate_standard_deviation___:
    return np.std___

print___) # Prints 1.4142135623730951"
Create a for loop in Python to iterate through a given list of numbers and find the sum.,"[11, 12 , 15, 20, 56]","nums = [11, 12, 15, 20, 56]

total = 0
for num in nums:
    total += num
 
print(total) # 110",Data Structure,2491,"nums = ___

total = 0
for num in nums:
    total += num
 
print___ # 110"
Sort an array in ascending order using Python.,"8, 16, 7, 15, 1","def myFunc(arr): 
    arr.sort()
    return arr
  
arr = [8, 16, 7, 15, 1]
x = myFunc(arr)
print(x)",Data Structure,2493,"def myFunc___: 
    arr.sort()
    return arr
  
arr = ___
x = myFunc___
print___"
Design a function in Python that takes a list and removes the duplicates from it.,"list = [1, 2, 3, 4, 3, 2]","def remove_duplicates(my_list):
  my_list = list(dict.fromkeys(my_list))
  return my_list
  
list = [1, 2, 3, 4, 3, 2]

unique_list = remove_duplicates(list)

print(unique_list) # [1, 2, 3, 4]",Data Structure,2494,"def remove_duplicates___:
  my_list = list___)
  return my_list
  
list = ___

unique_list = remove_duplicates___

print___ # [1, 2, 3, 4]"
Write a function in Python that sorts a given list of strings in alphabetical order case insensitive.,"input_list = [""BANANA"", ""apple"", "" Orange "", ""GRAPES""]","def sort_strings_case_insensitive(input_list):
  return sorted([string.strip().lower() for string in input_list])",Data Structure,2495,"def sort_strings_case_insensitive___:
  return sorted___.lower() for string in input_list])"
Write a Python function to sort the following list of numbers with bubble sort algorithm.,"[5, 4, 3, 2, 1]","def bubble_sort(list): 
    n = len(list)  
    for i in range(n-1): 
        for j in range(0, n-i-1): 
            if list[j] > list[j+1] : 
                list[j], list[j+1] = list[j+1], list[j]
    return list
  
# Sample list 
list = [5, 4, 3, 2, 1]
  
# Function Call 
bubble_sort(list)",Data Structure,2496,"def bubble_sort___: 
    n = len___  
    for i in range___: 
        for j in range___: 
            if list[j] > list[j+1] : 
                list[j], list[j+1] = list[j+1], list[j]
    return list
  
# Sample list 
list = ___
  
# Function Call 
bubble_sort___"
Create a python program that counts the words in a list of sentences.,"sentences = ['This is a sentence', 'This is another sentence', 'And yet another sentence.']","def count_words(sentences):
    count = 0
    for sentence in sentences:
        words = sentence.split()
        count += len(words)
    return count",Data Structure,2497,"def count_words___:
    count = 0
    for sentence in sentences:
        words = sentence.split()
        count += len___
    return count"
Create a Python program for sorting a list of numbers in increasing order.,"[3, 1, 8, 5, 7]","def sort_list(list):
 for _ in range(len(list)):
 for j in range(len(list)-1):
 if list[j] > list[j+1]:
 list[j], list[j+1] = list[j+1], list[j]
 return list

# Testing the function
example_list = [3, 1, 8, 5, 7]
sorted_list = sort_list(example_list)

print(sorted_list)
# Output: [1, 3, 5, 7, 8]",Data Structure,2499,"def sort_list___:
 for _ in range___):
 for j in range___-1):
 if list[j] > list[j+1]:
 list[j], list[j+1] = list[j+1], list[j]
 return list

# Testing the function
example_list = ___
sorted_list = sort_list___

print___
# Output: ___"
Develop a Python program to convert a list into a dictionary.,"List of colors: [""red"", ""green"", ""blue""],","colors = [""red"", ""green"", ""blue""]

color_dictionary = {i : colors[i] for i in range(len(colors))} 

print(color_dictionary)",Data Structure,2500,"colors = [""red"", ""green"", ""blue""]

color_dictionary = ___ 

print___"
Generate a Python program to delete the element at a given index from the given array.,"[1,2,3,4,5], index=3","def delete_element_at_index(arr, index):
    if index >= len(arr):
        raise Exception('index out of range')
    
    # Delete the element at the index
    del arr[index]

# Example array and index
my_arr = [1,2,3,4,5];
index = 3;

# Call the function
delete_element_at_index(my_arr, index)

# Print the array
print(my_arr)",Data Structure,2501,"def delete_element_at_index___:
    if index >= len___:
        raise Exception___
    
    # Delete the element at the index
    del arr[index]

# Example array and index
my_arr = ___;
index = 3;

# Call the function
delete_element_at_index___

# Print the array
print___"
Generate an algorithm in Python to rotate an array of size 'n' by 'd' elements.,"[1, 2, 3, 4, 5], d=2","def rotate(arr, d):
    for _ in range(d):
        temp = arr[0]
        for i in range(len(arr)-1):
            arr[i] = arr[i+1]
        arr[len(arr)-1] = temp

    return arr

arr = [1, 2, 3, 4, 5]
d = 2

rotated_arr = rotate(arr, d)
print(rotated_arr) # [3, 4, 5, 1, 2]",Data Structure,2502,"def rotate___:
    for _ in range___:
        temp = arr___
        for i in range___-1):
            arr[i] = arr[i+1]
        arr[len___-1] = temp

    return arr

arr = ___
d = 2

rotated_arr = rotate___
print___ # [3, 4, 5, 1, 2]"
Make a prediction model in Python and classify a given set of data into two different categories,"Data: 
[1, 2, 3, 4, 5]

Category 1: Even
Category 2: Odd","def predict_model(arr):
    labels = []
    for num in arr:
        if num % 2 == 0:
            labels.append('Even')
        else:
            labels.append('Odd')
    return labels

result = predict_model([1, 2, 3, 4, 5])
print(result)",Data Structure,2505,"def predict_model___:
    labels = []
    for num in arr:
        if num % 2 == 0:
            labels___'Even')
        else:
            labels___'Odd')
    return labels

result = predict_model___
print___"
Edit the following Python code to sort a list of numbers in reversed order.,"numbers = [15, 2, 5, 12, 8]",numbers.sort(reverse=True),Data Structure,2507,numbers.sort___
Design a Python program to record data from a given list of dictionaries.,"[{'name':'John', 'age':25, 'team':'A'}, {'name':'Mark', 'age':30, 'team':'B'}]","data = [
    {'name': 'John', 'age': 25, 'team': 'A'}, 
    {'name': 'Mark', 'age': 30, 'team': 'B'}
]

records = []
for item in data:
    record = {}
    for key, value in item.items():
        record[key] = value
    records.append(record)

print(records)",Data Structure,2509,"data = [
    ___, 
    ___
]

records = []
for item in data:
    record = {}
    for key, value in item.items():
        record[key] = value
    records___record)

print___"
Create a program in Python to delete all the elements from the list which have a value greater than a given number.,"list = [1, 5, 6, 8, 9, 10], num = 7","def removeGreaterNum(list, num): 
  
    return [x for x in list if x < num] 
      
list = [1, 5, 6, 8, 9, 10] 
num = 7
print(removeGreaterNum(list, num))",Data Structure,2511,"def removeGreaterNum___: 
  
    return [x for x in list if x < num] 
      
list = ___ 
num = 7
print___)"
Design a program in Python to delete all the odd numbers from an array.,"[1, 2, 3, 4, 5, 6]","def delete_odd_numbers(arr):
  new_arr = []
  for i in arr:
    if i % 2 != 0:
      continue
    else:
      new_arr.append(i)
  return new_arr

arr = [1, 2, 3, 4, 5, 6]
print(delete_odd_numbers(arr))",Data Structure,2513,"def delete_odd_numbers___:
  new_arr = []
  for i in arr:
    if i % 2 != 0:
      continue
    else:
      new_arr___i)
  return new_arr

arr = ___
print___)"
Write a Python script to generate all the possible words for a given set of characters.,"""abc""","import itertools

characters = 'abc'
words = [''.join(word) for word in itertools.product(characters, repeat=3)]

print (words)

# output: ['aaa', 'aab', 'aac', 'aba', 'abb', 'abc', 'aca', 'acb', 'acc', 'baa', 'bab', 'bac', 'bba', 'bbb', 'bbc', 'bca', 'bcb', 'bcc', 'caa', 'cab', 'cac', 'cba', 'cbb', 'cbc', 'cca', 'ccb', 'ccc']",Data Structure,2516,"import itertools

characters = 'abc'
words = [''.join___ for word in itertools.product___]

print ___

# output: ['aaa', 'aab', 'aac', 'aba', 'abb', 'abc', 'aca', 'acb', 'acc', 'baa', 'bab', 'bac', 'bba', 'bbb', 'bbc', 'bca', 'bcb', 'bcc', 'caa', 'cab', 'cac', 'cba', 'cbb', 'cbc', 'cca', 'ccb', 'ccc']"
Write python code to return the maximum number in a list.,"nums = [1, 15, 20, 6]","def find_max(nums):
    '''Returns the maximum number in the list.'''
    max_val = nums[0]
    for num in nums:
        if num > max_val:
            max_val = num
    
    return max_val",Data Structure,2518,"def find_max___:
    '''Returns the maximum number in the list.'''
    max_val = nums___
    for num in nums:
        if num > max_val:
            max_val = num
    
    return max_val"
Create an algorithm in Python to sort an array using selection sort.,"[4, 1, 6, 5, 7, 2, 0]","def selection_sort(arr):
    for i in range(len(arr)):
        min_index = i
        
        for j in range(i + 1, len(arr)):
            if arr[min_index] > arr[j]:
                min_index = j
                
        arr[i], arr[min_index] = arr[min_index], arr[i]
        
    return arr

arr = [4, 1, 6, 5, 7, 2, 0]
print(selection_sort(arr))",Data Structure,2527,"def selection_sort___:
    for i in range___):
        min_index = i
        
        for j in range___):
            if arr[min_index] > arr[j]:
                min_index = j
                
        arr[i], arr[min_index] = arr[min_index], arr[i]
        
    return arr

arr = ___
print___)"
Write a python function to remove duplicates from an array.,"[1, 2, 3, 3, 3, 4, 5, 6]","""""""
Remove duplicates from an array
""""""

def remove_duplicates(arr):
    # Create a set 
    seen = set()
    
    # Traverse the array
    for i in range(len(arr)):
        if arr[i] not in seen:
            seen.add(arr[i])
            
    return seen

if __name__ == '__main__':
    arr = [1, 2, 3, 3, 3, 4, 5, 6]
    print(remove_duplicates(arr))",Data Structure,2528,"""""""
Remove duplicates from an array
""""""

def remove_duplicates___:
    # Create a set 
    seen = set()
    
    # Traverse the array
    for i in range___):
        if arr[i] not in seen:
            seen.add___
            
    return seen

if __name__ == '__main__':
    arr = ___
    print___)"
Write a Python program to sort a list of tuples using a given key.,"[(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)]","def sort_list(lst, key): 
    return sorted(lst, key = lambda x: x[key]) 

# Driver code 
lst = [(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)] 
key = 1
print(sort_list(lst, key))",Data Structure,2529,"def sort_list___: 
    return sorted___ 

# Driver code 
lst = [___, ___, ___, ___, ___] 
key = 1
print___)"
Design a Python program that finds maximum sum of an array,"Array: [1,-3,7,12,-4,8]","def max_sum(arr): 
    n = len(arr) 
    max_sum_so_far = 0
  
    for i in range(n): 
        max_ending_here = 0
          
        for j in range(i, n): 
            max_ending_here += arr[j] 
            if (max_sum_so_far < max_ending_here): 
                max_sum_so_far = max_ending_here 
  
    return max_sum_so_far

result = max_sum([1,-3,7,12,-4,8])
print(result)",Data Structure,2534,"def max_sum___: 
    n = len___ 
    max_sum_so_far = 0
  
    for i in range___: 
        max_ending_here = 0
          
        for j in range___: 
            max_ending_here += arr[j] 
            if ___: 
                max_sum_so_far = max_ending_here 
  
    return max_sum_so_far

result = max_sum___
print___"
Generate a program in Python that returns a list of all prime numbers between two given numbers.,"start = 5
end = 100","def primes(start, end):
    prime_list = []
    for i in range(start, end + 1):
        is_prime = True
        for j in range(2, i):
            if i % j == 0:
                is_prime = False
                break
        if is_prime:
            prime_list.append(i)
    return prime_list

prime_numbers = primes(start, end)
print(prime_numbers)",Data Structure,2537,"def primes___:
    prime_list = []
    for i in range___:
        is_prime = True
        for j in range___:
            if i % j == 0:
                is_prime = False
                break
        if is_prime:
            prime_list___i)
    return prime_list

prime_numbers = primes___
print___"
Write a Python function to rotate a list by n items to the left.,"list = [1, 2, 3, 4, 5]","def rotate(list, n): 
    return list[n:] + list[:n]",Data Structure,2539,"def rotate___: 
    return list[n:] + list[:n]"
Create a Python program to search for a given query from a given array of strings using regular expressions.,"query = 'ab+c'
string_array = ['abc', 'def', 'ghi', 'abcd', 'abcde']","import re

query = 'ab+c'
string_array = ['abc', 'def', 'ghi', 'abcd', 'abcde']

for string in string_array:
    if re.search(query, string):
        print(string)

# Output:
# abc
# abcd
# abcde",Data Structure,2543,"import re

query = 'ab+c'
string_array = ['abc', 'def', 'ghi', 'abcd', 'abcde']

for string in string_array:
    if re.search___:
        print___

# Output:
# abc
# abcd
# abcde"
"Create a Python program to remove all the elements in a given array, which are divisible by a certain number.","[23, 45, 12, 35, 29], 3","# Enter the Array
arr = [23, 45, 12, 35, 29] 
 
# Enter the Number
num = 3
 
# Print the New Array
new_arr = [x for x in arr if x % num != 0] 
 
# Print the Result
print(new_arr)",Data Structure,2547,"# Enter the Array
arr = ___ 
 
# Enter the Number
num = 3
 
# Print the New Array
new_arr = [x for x in arr if x % num != 0] 
 
# Print the Result
print___"
Write an algorithm in Python to determine the largest number in an array.,"arr = [10, 8, 12, 4, 6]","def find_max(arr): 
    max_val = arr[0] 
  
    for i in range(1, len(arr)): 
        if arr[i] > max_val: 
            max_val = arr[i] 
  
    return max_val 
  
# Driver code 
arr = [10, 8, 12, 4, 6]
result = find_max(arr) 
print(result) 

# Output: 12",Data Structure,2551,"def find_max___: 
    max_val = arr___ 
  
    for i in range___): 
        if arr[i] > max_val: 
            max_val = arr[i] 
  
    return max_val 
  
# Driver code 
arr = ___
result = find_max___ 
print___ 

# Output: 12"
Write an algorithm in Python to sort an array of numbers in descending order.,"[13, 11, 7, 4, 2]","def descendingSort(arr): 
    arr.sort(reverse=True) 
    return arr
  
arr = [13, 11, 7, 4, 2]
result = descendingSort(arr) 
  
print (result)",Data Structure,2552,"def descendingSort___: 
    arr.sort___ 
    return arr
  
arr = ___
result = descendingSort___ 
  
print ___"
Create a Python program that creates a new list containing only even numbers from a given list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","# create a list
original_list = [1, 2, 3, 4, 5, 6, 7, 8, 9]

# create a new list with only even numbers 
even_list = [num for num in original_list if num % 2 == 0] 
  
# display the even list 
print(even_list)",Data Structure,2553,"# create a list
original_list = ___

# create a new list with only even numbers 
even_list = [num for num in original_list if num % 2 == 0] 
  
# display the even list 
print___"
Create a Python script to remove all empty elements from a list.,"list = [""a"", """", ""b"", """", ""c"", """"]","list = [""a"", """", ""b"", """", ""c"", """"] 

result = [element for element in list if len(element) > 0] 

print(result)",Data Structure,2554,"list = [""a"", """", ""b"", """", ""c"", """"] 

result = [element for element in list if len___ > 0] 

print___"
Generate python code to rotate an array to the left.,"arr = [1, 2, 3, 4, 5]","def rotate_left(arr):
    first_element = arr[0]
    for i in range(len(arr) - 1):
        arr[i] = arr[i + 1]
    arr[len(arr) - 1] = first_element

rotate_left(arr)",Data Structure,2555,"def rotate_left___:
    first_element = arr___
    for i in range___ - 1):
        arr[i] = arr[i + 1]
    arr[len___ - 1] = first_element

rotate_left___"
Write a Python function that takes an array of numbers and returns an array with the greatest and smallest values.,"[3, 4, 2, 8, 15, 6]","def min_max(arr):
  min_val = min(arr)
  max_val = max(arr)
  return [min_val, max_val]

result = min_max([3, 4, 2, 8, 15, 6])
print(result)",Data Structure,2557,"def min_max___:
  min_val = min___
  max_val = max___
  return [min_val, max_val]

result = min_max___
print___"
Write an algorithm in Python to find the maximum and minimum elements in a given array of integers.,"[3, 5, 8, 1, 10]","def findMinMax(arr):
    min = arr[0]
    max = arr[0]
    for i in range(1, len(arr)):
        if arr[i] < min:
            min = arr[i]
        elif arr[i] > max:
            max = arr[i]
    return min, max

arr = [3, 5, 8, 1, 10]

min_val, max_val = findMinMax(arr)
print(min_val, max_val)",Data Structure,2563,"def findMinMax___:
    min = arr___
    max = arr___
    for i in range___):
        if arr[i] < min:
            min = arr[i]
        elif arr[i] > max:
            max = arr[i]
    return min, max

arr = ___

min_val, max_val = findMinMax___
print___"
Write a Python script that randomly shuffles a list of strings.,"[""Apple"", ""Orange"", ""Banana"", ""Strawberry""]","import random

list = [""Apple"", ""Orange"", ""Banana"", ""Strawberry""]
random.shuffle(list)

for item in list:
    print(item)",Data Structure,2564,"import random

list = [""Apple"", ""Orange"", ""Banana"", ""Strawberry""]
random.shuffle___

for item in list:
    print___"
Create a class in Python that takes a list of numbers as input and returns the product of all the numbers.,"[5, 4, 9, 10]","class ProductCalculator:
    def __init__(self, num_list):
        self.num_list = num_list
    
    def find_product(self):
        product = 1
        for num in self.num_list:
            product *= num
        return product

# example usage
num_list = [5, 4, 9, 10]
calc = ProductCalculator(num_list)
product = calc.find_product()
print(product)",Data Structure,2565,"class ProductCalculator:
    def __init_____:
        self.num_list = num_list
    
    def find_product___:
        product = 1
        for num in self.num_list:
            product *= num
        return product

# example usage
num_list = ___
calc = ProductCalculator___
product = calc.find_product()
print___"
"Create a script in Python which receives a list of numbers, and prints the sorted list in ascending order.","List of numbers: [7, 3, 4, 2]","list_of_numbers = [7, 3, 4, 2]

# sort the list
list_of_numbers.sort()

# print the sorted list
print(list_of_numbers)",Data Structure,2567,"list_of_numbers = ___

# sort the list
list_of_numbers.sort()

# print the sorted list
print___"
"Given a list of numbers, create a program to find the maximum number using Python.","numbers = [1,2,3,4,5,6]","def find_max(numbers):
    maximum = numbers[0]
    for num in numbers:
        if num > maximum:
            maximum = num
    return maximum

if __name__ == ""__main__"":
    numbers = [1,2,3,4,5,6]
    print(find_max(numbers))",Data Structure,2570,"def find_max___:
    maximum = numbers___
    for num in numbers:
        if num > maximum:
            maximum = num
    return maximum

if __name__ == ""__main__"":
    numbers = ___
    print___)"
Generate a Python program to insert an element into a given sorted array.,"The sorted array is [1, 2, 3, 5] and the new element is 4.","def insert(arr, x):
    i = len(arr)-1
    while (i >= 0 and x < arr[i]):
        arr[i+1] = arr[i]
        i = i-1
    arr[i+1] = x
    return arr
  
# Input array and element 
arr = [1, 2, 3, 5] 
x = 4
  
# Calling Insert Function 
arr = insert(arr, x) 
  
# Print the modified array 
print(arr)",Data Structure,2571,"def insert___:
    i = len___-1
    while ___:
        arr[i+1] = arr[i]
        i = i-1
    arr[i+1] = x
    return arr
  
# Input array and element 
arr = ___ 
x = 4
  
# Calling Insert Function 
arr = insert___ 
  
# Print the modified array 
print___"
Generate a program in python that converts a given sequence of strings into a list,"""This is a test""","def convert_str_list(x):
    return x.split()

print(convert_str_list(""This is a test""))",Data Structure,2573,"def convert_str_list___:
    return x.split()

print___)"
Suggest a Python code to identify the median element of a given list,"example_list = [10,20,30,40]","def find_median(example_list):
    example_list.sort()
    if len(example_list) % 2 == 0:
        median = (example_list[int(len(example_list)/2)-1] + example_list[int(len(example_list)/2)])/2
    else:
        median = example_list[int((len(example_list)-1)/2)]
    return median",Data Structure,2575,"def find_median___:
    example_list.sort()
    if len___ % 2 == 0:
        median = ___/2)-1] + example_list[int___/2)])/2
    else:
        median = example_list[int___-1)/2)]
    return median"
Implement an algorithm in Python to sort a list of integers.,"List: [3, 9, 8, 5, 6, 4, 2, 1, 10, 7]","def sort(arr):
 for i in range(len(arr)):
 min_idx = i
 for j in range(i+1, len(arr)):
 if arr[min_idx] > arr[j]:
 min_idx = j
 arr[i], arr[min_idx] = arr[min_idx], arr[i]

list = [3, 9, 8, 5, 6, 4, 2, 1, 10, 7]
sort(list)
print(list) # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",Data Structure,2576,"def sort___:
 for i in range___):
 min_idx = i
 for j in range___):
 if arr[min_idx] > arr[j]:
 min_idx = j
 arr[i], arr[min_idx] = arr[min_idx], arr[i]

list = ___
sort___
print___ # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
Write a Python program to find the maximum possible sum of a sequence of consecutive numbers in a given array of integers.,"[2, 6, -2, -3, 8, 4]","def max_sum_sequence(arr):
    curr_max = 0
    max_so_far = 0
  
    for i in range(0, len(arr)):
        curr_max = max(arr[i], curr_max + arr[i])
        max_so_far = max(max_so_far, curr_max)
      
    return max_so_far

arr = [2, 6, -2, -3, 8, 4]
max_sum = max_sum_sequence(arr)
print(max_sum)",Data Structure,2582,"def max_sum_sequence___:
    curr_max = 0
    max_so_far = 0
  
    for i in range___):
        curr_max = max___
        max_so_far = max___
      
    return max_so_far

arr = [2, 6, -2, -3, 8, 4]
max_sum = max_sum_sequence___
print___"
Create a Python program to sort a given list according to the second element,"list = [[2,4], [3,2], [4,1], [1,3]]","def sortList(list):
    list.sort(key=lambda x: x[1]) 
    return list

list = [[2,4], [3,2], [4,1], [1,3]]
sorted_list = sortList(list)

print(sorted_list)

# output
[[4, 1], [3, 2], [1, 3], [2, 4]]",Data Structure,2586,"def sortList___:
    list.sort___ 
    return list

list = [___, ___, ___, ___]
sorted_list = sortList___

print___

# output
[___, ___, ___, ___]"
"Given a list of [x,y] coordinates, write a Python program to check whether the two points are on a straight line or not.","points = [[3,3], [2,2], [1,1]]","def line_checker(points):
    is_straight = True
    ref_x, ref_y = points[0]
    for i in range(1, len(points)):
        x, y = points[i]
        if (ref_y - y) * (ref_x - x) != 0:
            is_straight = False
            break
    return is_straight

points = [[3,3], [2,2], [1,1]]

print(line_checker(points))",Data Structure,2590,"def line_checker___:
    is_straight = True
    ref_x, ref_y = points___
    for i in range___):
        x, y = points[i]
        if ___ * ___ != 0:
            is_straight = False
            break
    return is_straight

points = [___, ___, ___]

print___)"
Edit the given python program to display the sum of all even numbers in the given list.,"list = [1, 2, 3, 4, 5]","list = [1, 2, 3, 4, 5]

total = 0
for num in list:
  if (num % 2 == 0):
    total += num
print (total)",Data Structure,2591,"list = ___

total = 0
for num in list:
  if ___:
    total += num
print ___"
Design a function in Python to sort a list of numbers in increasing order using a recursive insertion sort algorithm.,"[3, 7, 4, 9, 5, 2, 6, 1]","def recursiveInsertionSort(arr):
    for i in range(1, len(arr)):
        currElem = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > currElem:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = currElem
    return arr",Data Structure,2594,"def recursiveInsertionSort___:
    for i in range___):
        currElem = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > currElem:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = currElem
    return arr"
Generate a program in Python for sorting the elements of an array in descending order.,"[2, 4, 1, 6, 5]","def sort_descending(arr):
    # Sort array from largest to smallest
    arr.sort(reverse=True)

    # Print result
    print(arr)

# Test
arr = [2, 4, 1, 6, 5]
sort_descending(arr)
# Output: [6, 5, 4, 2, 1]",Data Structure,2595,"def sort_descending___:
    # Sort array from largest to smallest
    arr.sort___

    # Print result
    print___

# Test
arr = ___
sort_descending___
# Output: ___"
Develop a Python function that removes duplicate elements from a given list and returns a list with unique elements.,"my_list = [1,2,3,3,4,5,5,5,6,7,7]","def remove_duplicates(my_list):
 new_list = []

 for item in my_list:
 if item not in new_list:
 new_list.append(item)

 return new_list

my_list = [1,2,3,3,4,5,5,5,6,7,7]
my_list = remove_duplicates(my_list)
print(my_list)
# [1, 2, 3, 4, 5, 6, 7]",Data Structure,2596,"def remove_duplicates___:
 new_list = []

 for item in my_list:
 if item not in new_list:
 new_list___item)

 return new_list

my_list = ___
my_list = remove_duplicates___
print___
# ___"
Write a for loop to iterate over the given list in Python.,"list = [3,7,11,13]","for x in list:
    print(x)",Data Structure,2612,"for x in list:
    print___"
Write a python program to shuffle a given list in random order.,"[3, 8, 2, 5, 4]","import random

def shuffle_list(lst):
    random.shuffle(lst)
    return lst

print(shuffle_list([3, 8, 2, 5, 4])) # prints [2, 3, 5, 4, 8] or any other combination",Data Structure,2613,"import random

def shuffle_list___:
    random.shuffle___
    return lst

print___) # prints [2, 3, 5, 4, 8] or any other combination"
Write a Python function to check if a given list of numbers is sorted in ascending order or not.,"list_numbers = [5, 8, 9, 11, 1]","def is_sorted_asc(list_numbers):
 for i in range(len(list_numbers) - 1):
 if list_numbers[i] > list_numbers[i + 1]:
 return False
 return True
 
result = is_sorted_asc(list_numbers)
print(result) # False",Data Structure,2614,"def is_sorted_asc___:
 for i in range___ - 1):
 if list_numbers[i] > list_numbers[i + 1]:
 return False
 return True
 
result = is_sorted_asc___
print___ # False"
Write a Python code snippet to remove the last element from a list.,"example_list = [3, 1, 5, 7, 4, 8, 2]","def remove_last_element(lst):
    last_index = len(lst) - 1
    del lst[last_index]

example_list = [3, 1, 5, 7, 4, 8, 2]
remove_last_element(example_list)
print(example_list) 
# Output: [3, 1, 5, 7, 4, 8]",Data Structure,2617,"def remove_last_element___:
    last_index = len___ - 1
    del lst[last_index]

example_list = ___
remove_last_element___
print___ 
# Output: ___"
Write a Python program to get the sum of a given array of numbers.,"[1, 2, 3]","def get_sum(nums):
    sum = 0
    for num in nums:
        sum += num
    return sum

result = get_sum([1, 2, 3])
print(result)
# Output: 6",Data Structure,2619,"def get_sum___:
    sum = 0
    for num in nums:
        sum += num
    return sum

result = get_sum___
print___
# Output: 6"
Generate a list of the top 10 common words in a given list of words.,"['Python', 'programming', 'language', 'is', 'powerful', 'and', 'versatile']","from collections import Counter

words = ['Python', 'programming', 'language', 'is', 'powerful', 'and', 'versatile']

word_counts = Counter(words)
top_10 = word_counts.most_common(10)
print (top_10)",Data Structure,2624,"from collections import Counter

words = ['Python', 'programming', 'language', 'is', 'powerful', 'and', 'versatile']

word_counts = Counter___
top_10 = word_counts.most_common___
print ___"
Write a python program to filter a list of numbers and remove those that are divisible by 3.,"nums = [12, 14, 16, 18, 20, 21, 24]","def filter_list(nums):
    return [num for num in nums if num % 3 != 0]

print(filter_list(nums)) # Output: [12, 14, 20, 21]",Data Structure,2625,"def filter_list___:
    return [num for num in nums if num % 3 != 0]

print___) # Output: [12, 14, 20, 21]"
Design a solution in Python that creates a deep copy of an array of numbers.,"[1,2,3,4,5]","original_list = [1,2,3,4,5]

# Create a copy of the original list
copied_list = original_list[:]

# Modify the copied list so we can verify that it is a deep copy
copied_list[0] = 10

# Print both lists - the original list should be unchanged
print(""Original list:"", original_list)
print(""Copied list:"", copied_list)",Data Structure,2626,"original_list = ___

# Create a copy of the original list
copied_list = original_list[:]

# Modify the copied list so we can verify that it is a deep copy
copied_list___ = 10

# Print both lists - the original list should be unchanged
print___
print___"
"Given a list of integers, write a Python function to find the largest consecutive sum of elements in the list.","nums = [1, 2, -5, 9, 0, 10]","def largest_consecutive_sum(nums):
    max_sum = 0
    total_sum = 0
    for num in nums:
        total_sum += num
        if total_sum > max_sum:
            max_sum = total_sum
    return max_sum",Data Structure,2629,"def largest_consecutive_sum___:
    max_sum = 0
    total_sum = 0
    for num in nums:
        total_sum += num
        if total_sum > max_sum:
            max_sum = total_sum
    return max_sum"
Can you design a function in Python for reversing a list?,"[1,2,3,4,5]","def reverse_list(list): 
    return list[::-1]",Data Structure,2647,"def reverse_list___: 
    return list[::-1]"
Write a Python program to find the sum of all integers in a given list that are multiples of 8.,"4, 8, 12, 17, 30","# Initializing list 
l = [4, 8, 12, 17, 30] 

# Function to calculate sum 
def sum_multiples(l): 
	sum = 0
	
	# iterating over list 
	for num in l: 
		
		# checking for multiples of 8 
		if num % 8 == 0: 
			sum += num 
			
	return sum

# Driver code 
print(sum_multiples(l)) 
# Output: 20",Data Structure,2649,"# Initializing list 
l = ___ 

# Function to calculate sum 
def sum_multiples___: 
	sum = 0
	
	# iterating over list 
	for num in l: 
		
		# checking for multiples of 8 
		if num % 8 == 0: 
			sum += num 
			
	return sum

# Driver code 
print___) 
# Output: 20"
Write a Python program to create a list of powers of x for any given x.,x = 2,"def power_list(x):
    return [x**i for i in range(16)]",Data Structure,2651,"def power_list___:
    return [x**i for i in range___]"
Build a sorting algorithm in Python that sorts an array of integers.,"[5, 3, 1, 4, 2]","def sort_arr(arr):
    for i in range(len(arr)): 
        min_idx = i 
        for j in range(i+1, len(arr)): 
            if arr[min_idx] > arr[j]: 
                min_idx = j

        arr[i], arr[min_idx] = arr[min_idx], arr[i]
    return arr

result = sort_arr([5, 3, 1, 4, 2])
print(result)",Data Structure,2655,"def sort_arr___:
    for i in range___): 
        min_idx = i 
        for j in range___): 
            if arr[min_idx] > arr[j]: 
                min_idx = j

        arr[i], arr[min_idx] = arr[min_idx], arr[i]
    return arr

result = sort_arr___
print___"
Create a Python program that takes a given list and returns a new list without any duplicates.,"[1, 2, 2, 3, 4, 5, 5, 6]","def remove_duplicates(lst):
    new_list = []
    for i in lst:
        if i not in new_list:
            new_list.append(i)
    
    return new_list",Data Structure,2656,"def remove_duplicates___:
    new_list = []
    for i in lst:
        if i not in new_list:
            new_list___i)
    
    return new_list"
Write a Python program to generate all possible permutations of a given set of elements.,"[1, 2, 3]","def permutations(elements):
    if len(elements) <=1:
        yield elements
    else:
        for perm in permutations(elements[1:]):
            for i in range(len(elements)):
                yield perm[:i] + elements[0:1] + perm[i:]

result = list(permutations([1, 2, 3]))
print(result)",Data Structure,2657,"def permutations___:
    if len___ <=1:
        yield elements
    else:
        for perm in permutations___:
            for i in range___):
                yield perm[:i] + elements[0:1] + perm[i:]

result = list___)
print___"
Can you implement a function in Python that takes a list of two numbers as input and returns the sum of the two numbers?,"[5, 10]","def add(nums):
    return nums[0] + nums[1]

print(add([5, 10]))  #Prints 15",Data Structure,2658,"def add___:
    return nums___ + nums___

print___)  #Prints 15"
Compose a line of Python code to insert an element into a given list.,"list1 = [1, 3, 7, 8]
element = 5","list1 = [1, 3, 7, 8]
element = 5

list1.insert(2, element)
print(""New list:"", list1)",Data Structure,2661,"list1 = ___
element = 5

list1___2, element)
print___"
Find the smallest element in a 2D array using Python.,"arr = [[2, 5, 8],
       [1, 4, 7]]","def find_smallest_element_2D(arr):
    smallest = float('inf')
    for row in arr:
        smallest = min(smallest, min(row))
    return smallest",Data Structure,2666,"def find_smallest_element_2D___:
    smallest = float___
    for row in arr:
        smallest = min___)
    return smallest"
Suggest a Python program that prints out the unique strings in a list of strings.,"['hello', 'world', 'hello', 'moon', 'sun']","list_of_strings = ['hello', 'world', 'hello', 'moon', 'sun']
unique_strings = set(list_of_strings)

for string in unique_strings:
    print(string)",Data Structure,2667,"list_of_strings = ['hello', 'world', 'hello', 'moon', 'sun']
unique_strings = set___

for string in unique_strings:
    print___"
Compose a function to find the maximum value in an array in Python.,"[1, 4, 2]","def find_max_value(arr):
    max_value = arr[0]
    for i in range(1, len(arr)):
        if arr[i] > max_value:
            max_value = arr[i]
    return max_value

array = [1,4,2]
res = find_max_value(array)
print (res)",Data Structure,2668,"def find_max_value___:
    max_value = arr___
    for i in range___):
        if arr[i] > max_value:
            max_value = arr[i]
    return max_value

array = ___
res = find_max_value___
print ___"
code a recursive function in Python that accepts a list of integers and prints the sum of all even numbers.,"[1, 2, 3, 4, 5, 6, 7, 8]","def print_even_sum(L): 
    if len(L) == 0: 
        return 0
  
    if L[0] % 2 == 0: 
        return L[0] + print_even_sum(L[1:]) 
    else: 
        return print_even_sum(L[1:]) 
  
L = [1, 2, 3, 4, 5, 6, 7, 8] 
print(""Sum of even numbers in the list:"", print_even_sum(L))",Data Structure,2669,"def print_even_sum___: 
    if len___ == 0: 
        return 0
  
    if L___ % 2 == 0: 
        return L[0] + print_even_sum___ 
    else: 
        return print_even_sum___ 
  
L = ___ 
print___)"
Write a function to remove a given item from a python list.,"[1, 4, 8, 2], 8","def remove_item(lst, item):
    while item in lst:
        lst.remove(item)
    return lst

print(remove_item([1, 4, 8, 2], 8)) # prints [1, 4, 2]",Data Structure,2673,"def remove_item___:
    while item in lst:
        lst___item)
    return lst

print___) # prints [1, 4, 2]"
Design an algorithm in Python that calculates the sum of all numbers in an array.,"numbers = [2, 4, 6, 8]","def sum_array(arr): 
 
    total = 0
    for item in arr: 
        total += item 
 
    return total
 
print(sum_array([2, 4, 6, 8])) 
# Output: 20",Data Structure,2675,"def sum_array___: 
 
    total = 0
    for item in arr: 
        total += item 
 
    return total
 
print___) 
# Output: 20"
Create a Python program to generate all combinations of 3 elements from an array.,"array = [1, 2, 3, 4]","def comb3(arr):
    result = []
    for i in range(len(arr)):
       for j in range(i+1, len(arr)):
           for k in range(j+1, len(arr)):
               t = [arr[i],arr[j],arr[k]]
               result.append(t)
    return result",Data Structure,2679,"def comb3___:
    result = []
    for i in range___):
       for j in range___):
           for k in range___):
               t = [arr[i],arr[j],arr[k]]
               result___t)
    return result"
Create a Python statement that prints a list of numbers 0 to n (inclusive).,n = 10,"for i in range(n+1):
    print(i)",Data Structure,2682,"for i in range___:
    print___"
"Write a function in Python that takes two parameters, a positive integer n and a list of numbers, and returns the sum of the first n elements of the list.","n = 3, nums = [5, 8, 20, 3]","def func(n, nums):
  res = 0
  for i in range(n):
    res += nums[i]
  return res",Data Structure,2683,"def func___:
  res = 0
  for i in range___:
    res += nums[i]
  return res"
Write a Python program to create a 1D array of random numbers from 1 to 100.,5,"import random

# Create a 1-dimensional array of size 5
array = [0] * 5

# Fill the array with random numbers
for i in range(len(array)):
 array[i] = random.randint(1,100)

print(array)

# Output:
# [83, 5, 46, 69, 89]",Data Structure,2685,"import random

# Create a 1-dimensional array of size 5
array = ___ * 5

# Fill the array with random numbers
for i in range___):
 array[i] = random.randint___

print___

# Output:
# ___"
Create a Python script that will take an array of numbers and generate the maximum possible combination using those numbers.,"[4, 2, 8, 12]","def generatemaxcombo(arr):
    max_combo = []
    value = 1
    for x in arr:
        value = value * x
        max_combo.append(value)
    return max_combo

arr = [4, 2, 8, 12]
max_combo = generatemaxcombo(arr)

print(""The maximum combination of {} is: {}"".format(arr, max_combo))",Data Structure,2687,"def generatemaxcombo___:
    max_combo = []
    value = 1
    for x in arr:
        value = value * x
        max_combo___value)
    return max_combo

arr = ___
max_combo = generatemaxcombo___

print___)"
"Create a Python program to create a list of unique emails from a given list of emails, by removing any duplicates.","myList = [""test1@example.com"", ""test2@example.com"", ""test1@example.com"", ""test3@example.com""]","def remove_duplicates(myList):
    unique_list = []
    for item in myList:
        if item not in unique_list:
            unique_list.append(item)
    return unique_list

result = remove_duplicates(myList)
print(result)",Data Structure,2696,"def remove_duplicates___:
    unique_list = []
    for item in myList:
        if item not in unique_list:
            unique_list___item)
    return unique_list

result = remove_duplicates___
print___"
Create a Python program to calculate the average of a given list of integers while ignoring any values greater than 10.,"[1, 5, 9, 10, 12, 15]","def average_ignoring_ten(numbers):
    total = 0
    number_of_numbers = 0
    
    for number in numbers:
        if number <= 10:
            total += number
            number_of_numbers += 1
    
    return total / number_of_numbers",Data Structure,2702,"def average_ignoring_ten___:
    total = 0
    number_of_numbers = 0
    
    for number in numbers:
        if number <= 10:
            total += number
            number_of_numbers += 1
    
    return total / number_of_numbers"
Create a function in Python that takes a list of strings and returns only the strings with length of 5.,"array = [""Hello"", ""Hi"", ""Hola"", ""Bye"", ""Goodbye""]","def five_length_strings(arr):
    return [string for string in arr if len(string) == 5]

output = five_length_strings([""Hello"", ""Hi"", ""Hola"", ""Bye"", ""Goodbye""])

print(output) # Output: ['Hello', 'Hola', 'Bye']",Data Structure,2708,"def five_length_strings___:
    return [string for string in arr if len___ == 5]

output = five_length_strings___

print___ # Output: ['Hello', 'Hola', 'Bye']"
Write a Python function to calculate the total cost of a shopping cart given a list of items. The items list should contain the item name and price.,"items = [('Apple', 2.25), ('Banana', 0.75), ('Lemon', 1.50)]","def calculateTotalCost(items):
 total_cost = 0
 for item in items:
  total_cost += item[1]
 return total_cost

# Usage
total_cost = calculateTotalCost(items)
print(total_cost)",Data Structure,2709,"def calculateTotalCost___:
 total_cost = 0
 for item in items:
  total_cost += item___
 return total_cost

# Usage
total_cost = calculateTotalCost___
print___"
Create a program that takes a numerical array and returns a reversed array in Python.,"[1,2,3,4,5]","def reverse_array(array):
    reversed_array = array[::-1]
    return reversed_array

reversed_array = reverse_array([1,2,3,4,5])
print(reversed_array)",Data Structure,2710,"def reverse_array___:
    reversed_array = array[::-1]
    return reversed_array

reversed_array = reverse_array___
print___"
"Given an array of integers and a target number, write a Python function to return the two numbers from the array that add up to the target number.","[1, 2, 3, 4, 5], 9","def two_sum(arr, target): 
    for i in range(0, len(arr)-1): 
        for j in range(i + 1, len(arr)): 
            if arr[i] + arr[j] == target: 
                return [arr[i], arr[j]]",Data Structure,2711,"def two_sum___: 
    for i in range___-1): 
        for j in range___): 
            if arr[i] + arr[j] == target: 
                return [arr[i], arr[j]]"
Write a python for loop to iterate over a list of numbers and compute the sum of all numbers greater than 0,"[-1, 5, -7, 10, -2]","sum = 18

# using a for-loop
sum = 0
for num in [-1, 5, -7, 10, -2]:
  if num > 0:
    sum += num

print(sum)

Output: 18",Data Structure,2715,"sum = 18

# using a for-loop
sum = 0
for num in [-1, 5, -7, 10, -2]:
  if num > 0:
    sum += num

print___

Output: 18"
Create a Python function to compute the root mean square (RMS) of an array of values.,"values = [3,4,5,6,7]","import math

def computeRMS(values):
    # calculate the mean
    mean = sum(values)/len(values)
    # calculate the sum of the squares
    squares_sum = sum([val**2 for val in values])
    # calculate the RMS
    rms = math.sqrt(squares_sum/len(values))
    
    return rms
    
values = [3,4,5,6,7]
rms = computeRMS(values)
print(""Root mean square is: "", rms)",Data Structure,2716,"import math

def computeRMS___:
    # calculate the mean
    mean = sum___/len___
    # calculate the sum of the squares
    squares_sum = sum___
    # calculate the RMS
    rms = math.sqrt___)
    
    return rms
    
values = ___
rms = computeRMS___
print___"
Write a python script to format a list of numbers into a tabular form.,"[2, 3, 4, 5, 6]","def format_list(list_in):
   list_out = []

   for n in list_in:
      list_out.append('|'+str(n).ljust(2)+'|')
   
   header = '--|--+'
   header_line = '--|'+'--'*len(list_out)+'|'
   
   list_out = [header] + list_out + [header_line]
   
   return '\n'.join(list_out)

print(format_list([2, 3, 4, 5, 6]))

# Output:
--|--+
|2 |
|3 |
|4 |
|5 |
|6 |
--|---|",Data Structure,2719,"def format_list___:
   list_out = []

   for n in list_in:
      list_out___'|'+str(n).ljust(2)+'|')
   
   header = '--|--+'
   header_line = '--|'+'--'*len___+'|'
   
   list_out = [header] + list_out + [header_line]
   
   return '\n'.join___

print___)

# Output:
--|--+
|2 |
|3 |
|4 |
|5 |
|6 |
--|---|"
Develop a function to generate all combinations of a given list in Python.,"[1, 2, 3]","def all_combinations(list_of_numbers): 
    if len(list_of_numbers) == 0: 
        return [] 
  
    if len(list_of_numbers) == 1: 
        return [list_of_numbers] 
  
    combinations = [] 
    for combination in all_combinations(list_of_numbers[1:]): 
        combinations.append(combination) 
        combinations.append([list_of_numbers[0]] + combination) 
  
    return combinations",Data Structure,2721,"def all_combinations___: 
    if len___ == 0: 
        return [] 
  
    if len___ == 1: 
        return [list_of_numbers] 
  
    combinations = [] 
    for combination in all_combinations___: 
        combinations___combination) 
        combinations___[list_of_numbers[0]] + combination) 
  
    return combinations"
Create a function in Python to get the largest element in a given list.,"[4,8,2,9,10]","def get_largest_element(nums):
    largest = nums[0]
    for i in range(1, len(nums)):
        if nums[i] > largest:
            largest = nums[i]
    return largest

# Test the function
numbers = [4,8,2,9,10]
print(get_largest_element(numbers)) # Output: 10",Data Structure,2724,"def get_largest_element___:
    largest = nums___
    for i in range___):
        if nums[i] > largest:
            largest = nums[i]
    return largest

# Test the function
numbers = ___
print___) # Output: 10"
Write a function to remove every other element in a Python list in place.,"[1, 2, 3, 4, 5, 6]","def remove_other_list_elements_inplace(list_elements):
    list_elements[:] = [element for index, element in enumerate(list_elements) if (index + 1) % 2 == 1]
    return list_elements 

sample_list = [1,2,3,4,5,6]
print(""Original List:"", sample_list) 

remove_other_list_elements_inplace(sample_list)
print(""Modified List:"", sample_list)",Data Structure,2727,"def remove_other_list_elements_inplace___:
    list_elements[:] = [element for index, element in enumerate___ if ___ % 2 == 1]
    return list_elements 

sample_list = ___
print___ 

remove_other_list_elements_inplace___
print___"
Create a function in Python that takes a list of integers as input and returns a list of the sorted integers.,"[5, 7, 3, 2, 9]","def sort_list_of_integers(lst):
    lst.sort()
    return lst

print(sort_list_of_integers([5, 7, 3, 2, 9])) # Output: [2, 3, 5, 7, 9]",Data Structure,2729,"def sort_list_of_integers___:
    lst.sort()
    return lst

print___) # Output: [2, 3, 5, 7, 9]"
Write a Python code to convert a given list of strings to all lowercase.,"['CoDE', 'OF', 'LinK']","def to_lowercase(strings):
    return [string.lower() for string in strings]
    
result = to_lowercase(['CoDE', 'OF', 'LinK'])
print(result)",Data Structure,2730,"def to_lowercase___:
    return [string.lower() for string in strings]
    
result = to_lowercase___
print___"
"Create a Python program to sort a list of numbers by their absolute value (e.g. sort [2,-5, -1, 3] in ascending order).","[2,-5, -1, 3]","def abs_sort(arr):
    return sorted(arr, key=abs)

abs_sort([2,-5, -1, 3])",Data Structure,2731,"def abs_sort___:
    return sorted___

abs_sort___"
Write a Python program to optimize a list of numbers so that every follower is greater than its predecessor.,"[3, 8, 2, 6, 10]","def optimized_list(arr):
n = len(arr)
for i in range(n):
 j = i+1
 while(j < n):
  if arr[i] > arr[j]:
   temp = arr[i]
   arr[i] = arr[j]
   arr[j] = temp
  j+=1
 
return arr
 
arr = [3, 8, 2, 6, 10]
result = optimized_list(arr)
print(result) #[2, 3, 6, 8, 10]",Data Structure,2733,"def optimized_list___:
n = len___
for i in range___:
 j = i+1
 while___:
  if arr[i] > arr[j]:
   temp = arr[i]
   arr[i] = arr[j]
   arr[j] = temp
  j+=1
 
return arr
 
arr = ___
result = optimized_list___
print___ #[2, 3, 6, 8, 10]"
Create an optimization function in Python that takes in a list of integers and finds the smallest number that is greater than all of the other numbers in the list.,"[1, 2, 3, 4]","def optimize(arr):
    smallest = None
    
    for num in arr:
        if (smallest is None) or (num > smallest):
            smallest = num
    
    return smallest + 1

x = [1, 2, 3, 4]
result = optimize(x)

print(result) # 5",Data Structure,2734,"def optimize___:
    smallest = None
    
    for num in arr:
        if ___ or ___:
            smallest = num
    
    return smallest + 1

x = ___
result = optimize___

print___ # 5"
Create a Python script to automatically fill out a web form with a given set of data.,"The name ""John Doe"" 
The email ""john.doe@example.com""","import requests

url = 'https://www.example.com/form-url'

name = 'John Doe'
email = 'john.doe@example.com'

data = {
 'name' : name,
 'email' : email
}

response = requests.post(url, data)",Data Structure,2739,"import requests

url = 'https://www.example.com/form-url'

name = 'John Doe'
email = 'john.doe@example.com'

data = {
 'name' : name,
 'email' : email
}

response = requests.post___"
"Given the following array of numbers, write a Python code snippet to sort it in descending order.","[9, 2, 4, 7, 6]","numbers = [9, 2, 4, 7, 6]
numbers.sort(reverse=True)
print(numbers)",Data Structure,2744,"numbers = ___
numbers.sort___
print___"
Count the number of unique items in a list using dictionaries in Python.,"list = [1, 2, 5, 9, 10, 1, 3, 9, 1, 2]","def count_unique(list):
    unique = {}
    for item in list:
        if item not in unique:
            unique[item] = 1
        else:
            unique[item] += 1
    return len(unique)",Data Structure,2746,"def count_unique___:
    unique = {}
    for item in list:
        if item not in unique:
            unique[item] = 1
        else:
            unique[item] += 1
    return len___"
Design a program to filter out strings in a list that have length 3.,"['ada', 'python', 'ruby', 'egg', 'coffee']","def filter_by_length(list):
    """"""
    Filters out strings in the given list that have length 3.
    """"""
    filtered_list = [word for word in list if len(word) == 3]
    return filtered_list

if __name__ == '__main__':
    list = ['ada', 'python', 'ruby', 'egg', 'coffee']
    print(filter_by_length(list))",Data Structure,2747,"def filter_by_length___:
    """"""
    Filters out strings in the given list that have length 3.
    """"""
    filtered_list = [word for word in list if len___ == 3]
    return filtered_list

if __name__ == '__main__':
    list = ['ada', 'python', 'ruby', 'egg', 'coffee']
    print___)"
Generate a Python script to sort the given list of words.,"['bubble', 'selection', 'quicksort', 'insertion']","# function to sort the given list of words
def sort_words(words):
    # sort the list of words in alphabetical order
    words.sort()

    # print the sorted list of words
    print(words)

# driver code
words = ['bubble', 'selection', 'quicksort', 'insertion']
sort_words(words)

# output
['bubble', 'insertion', 'quicksort', 'selection']",Data Structure,2756,"# function to sort the given list of words
def sort_words___:
    # sort the list of words in alphabetical order
    words.sort()

    # print the sorted list of words
    print___

# driver code
words = ['bubble', 'selection', 'quicksort', 'insertion']
sort_words___

# output
['bubble', 'insertion', 'quicksort', 'selection']"
Generate a Python program to find the maximum value in a list of numbers.,"[23, 12, 48, 61]","def find_max(list_of_numbers):
    max_val = max(list_of_numbers)
    return max_val

list_nums = [23, 12, 48, 61]
max_val = find_max(list_nums)
print(max_val)",Data Structure,2761,"def find_max___:
    max_val = max___
    return max_val

list_nums = ___
max_val = find_max___
print___"
Create a Python program that prints the following numbers in a comma seperated list.,"1, 8, 10, 15, 12","print("", "".join([str(x) for x in [1, 8, 10, 15, 12]]))",Data Structure,2762,"print___ for x in [1, 8, 10, 15, 12]]))"
Develop a Python script that determines the average age of people in a given list.,"[{""name"":""john"",""age"":20},{""name"":""jack"",""age"":25},{""name"":""jason"",""age"":30}]","def find_average_age(people_list):
    ages_sum = 0
    for person in people_list:
        ages_sum += person['age']
    return ages_sum / len(people_list)

people_list = [{""name"":""john"",""age"":20},{""name"":""jack"",""age"":25},{""name"":""jason"",""age"":30}] 
average_age = find_average_age(people_list)
print(average_age)",Data Structure,2764,"def find_average_age___:
    ages_sum = 0
    for person in people_list:
        ages_sum += person['age']
    return ages_sum / len___

people_list = [___,___,___] 
average_age = find_average_age___
print___"
Write a Python program to calculate the standard deviation of a given list of numbers.,"[1, 2, 3, 4]","def calculate_sd(lst):
    avg = sum(lst) / len(lst)
    return (sum([(x - avg)**2 for x in lst]) / len(lst)) ** 0.5",Data Structure,2765,"def calculate_sd___:
    avg = sum___ / len___
    return ___**2 for x in lst]) / len___) ** 0.5"
Develop a function in Python that takes a list of numbers as an argument and returns the difference between the maximum and minimum value.,"[3, 4, 7, 8, 12]","def maxMinDifference(arr):
    return max(arr)-min(arr)

result = maxMinDifference([3, 4, 7, 8, 12])
print(result)",Data Structure,2767,"def maxMinDifference___:
    return max___-min___

result = maxMinDifference___
print___"
Write a Python program to sort a given list of strings based on their length.,"list1 = [""apple"", ""orange"", ""banana"", ""mango""]","def sort_str_by_length(list1):
 return sorted(list1, key=len)",Data Structure,2769,"def sort_str_by_length___:
 return sorted___"
Write a function in Python that accepts a list of numbers and returns the  highest and lowest values in the list.,"numbers = [2, 18, 9, 22, 10, 17, 24]","def max_min(numbers):
  '''returns a tuple containing highest and lowest values in a given list'''
  return (max(numbers), min(numbers))",Data Structure,2773,"def max_min___:
  '''returns a tuple containing highest and lowest values in a given list'''
  return ___, min___)"
Write a Python program to find the maximum and minimum value of a given array.,"[-2, 15, 4, 8, 11]","def min_max(data):
    min_val = min(data)
    max_val = max(data)
    return min_val, max_val
 
min_val, max_val = min_max([-2, 15, 4, 8, 11])
 
print('Minimum Value: ', min_val)
print('Maximum Value: ', max_val)",Data Structure,2779,"def min_max___:
    min_val = min___
    max_val = max___
    return min_val, max_val
 
min_val, max_val = min_max___
 
print___
print___"
Create a Python script to sort a list of tuples by the second element in the tuple in ascending order.,"myList = [('Tom',7),('Harry',5),('Bob',8)]","def sortList(myList): 
 # sort list by second element  
 myList.sort(key = lambda x: x[1]) 
  
 # printing the sorted list  
 print (""The sorted list in ascending order is : "") 
 for i in range(len(myList)): 
  print(myList[i]), 

myList = [('Tom',7),('Harry',5),('Bob',8)]
sortList(myList)",Data Structure,2786,"def sortList___: 
 # sort list by second element  
 myList.sort___ 
  
 # printing the sorted list  
 print ___ 
 for i in range___): 
  print___, 

myList = [___,___,___]
sortList___"
Create a Python function to identify the number of even numbers present in a given list of numbers.,"list = [1, 2, 3, 4, 5]","def countEvenNum(list):
    return len([x for x in list if x % 2 == 0])

list = [1, 2, 3, 4, 5]
print(countEvenNum(list))",Data Structure,2792,"def countEvenNum___:
    return len___

list = ___
print___)"
"Generate a program in Python to take in two strings as input, and output a list of all thewords in both strings.","String 1: I want to make a difference
String 2: The journey to success is long","def string_to_list(s1, s2):
    s1_list = s1.split()
    s2_list = s2.split()
    output_list = s1_list + s2_list
    return output_list

words = string_to_list(""I want to make a difference"", ""The journey to success is long"")
print(words)",Data Structure,2795,"def string_to_list___:
    s1_list = s1.split()
    s2_list = s2.split()
    output_list = s1_list + s2_list
    return output_list

words = string_to_list___
print___"
Write a Python program to filter a list of numbers so only even numbers are kept.,"[2, 7, 3, 6, 10, 11, 13]","new_list = [x for x in input_list if x % 2 == 0]
print(new_list) # Output: [2, 6, 10]",Data Structure,2797,"new_list = [x for x in input_list if x % 2 == 0]
print___ # Output: [2, 6, 10]"
Write a Python script to implement an iterator that iterates over a given array.,"[2, 5, 6, 8, 9]","def iterator(array):
  index = 0
  while (index < len(array)):
    yield array[index]
    index += 1

given_array = [2, 5, 6, 8, 9]
iterating = iterator(given_array)

for value in iterating:
  print(value)",Data Structure,2798,"def iterator___:
  index = 0
  while ___):
    yield array[index]
    index += 1

given_array = ___
iterating = iterator___

for value in iterating:
  print___"
Create a Python program to compare two list and return a new combined list,"list_a = [1, 2, 3]
list_b = [4, 5, 6]","def combine_list(list_a, list_b):
    combined_list = []
    for a in list_a:
        combined_list.append(a)
    for b in list_b:
        combined_list.append(b)
    return combined_list",Data Structure,2803,"def combine_list___:
    combined_list = []
    for a in list_a:
        combined_list___a)
    for b in list_b:
        combined_list___b)
    return combined_list"
You are given a list containing integers. Generate a Python program to find the median of that list.,"list = [5, 3, 8, 1, 9, 2]","def find_median(list): 
    list = sorted(list) 
    mid = len(list) // 2 
    if len(list) % 2 == 0: 
        return (list[mid] + list[mid - 1]) / 2 
    else: 
        return list[mid] 

find_median(list)",Data Structure,2804,"def find_median___: 
    list = sorted___ 
    mid = len___ // 2 
    if len___ % 2 == 0: 
        return ___ / 2 
    else: 
        return list[mid] 

find_median___"
Create a function in Python to initialize an array with two parameters.,"params: (4, 5)","def initialize_array(rows, cols): 
    array = [[0 for i in range(cols)] for j in range(rows)]
    return array",Data Structure,2805,"def initialize_array___: 
    array = [[0 for i in range___] for j in range___]
    return array"
Write a function in Python which will take an array of numbers and return the numbers in descending order.,"Example Array: [1, 12, 3, 8]","def sortDescending(arr):
    return sorted(arr, reverse=True)

print(sortDescending([1, 12, 3, 8]))",Data Structure,2809,"def sortDescending___:
    return sorted___

print___)"
Create a Python code snippet to calculate the average of the following array.,"items = [1, 5, 6, 4, 8, 9]","def get_average(array):
    array_length = len(array)
    total_sum = 0
    for i in array:
        total_sum += i
    average = total_sum / array_length
    return average

print(get_average(items))",Data Structure,2810,"def get_average___:
    array_length = len___
    total_sum = 0
    for i in array:
        total_sum += i
    average = total_sum / array_length
    return average

print___)"
Debug the following python code snippet so that it returns a list of even numbers from the given list of numbers.,"ls = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","ls = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
result = []

for num in ls:
 if num % 2 == 0:
 result.append(num)
 
print(result) # prints [2, 4, 6, 8, 10]",Data Structure,2811,"ls = ___
result = []

for num in ls:
 if num % 2 == 0:
 result___num)
 
print___ # prints [2, 4, 6, 8, 10]"
Generate a list comprehension of python that adds two to each element of a given list.,"list = [1, 2, 3, 4]","list = [x+2 for x in [1, 2, 3, 4]]",Data Structure,2812,list = [x+2 for x in ___]
Write a Python program to split a given list into two lists based on a given condition.,"list = [1, 2, 3, 4, 5, 6, 7, 8]","list = [1, 2, 3, 4, 5, 6, 7, 8]

#Split the list into two lists based on a given condition
list_a = [x for x in list if x % 2 == 0]
list_b = [x for x in list if x % 2 != 0]

print(list_a) #[2, 4, 6, 8]
print(list_b) #[1, 3, 5, 7]",Data Structure,2813,"list = ___

#Split the list into two lists based on a given condition
list_a = [x for x in list if x % 2 == 0]
list_b = [x for x in list if x % 2 != 0]

print___ #[2, 4, 6, 8]
print___ #[1, 3, 5, 7]"
Create a Python function to remove duplicate elements from a given array.,"array = [1, 2, 5, 2, 1, 9]","def remove_duplicates(array): 
    result = set() 
    for element in array: 
        result.add(element) 
  
    return list(result) 
  
result = remove_duplicates(array) 
print(result)",Data Structure,2815,"def remove_duplicates___: 
    result = set() 
    for element in array: 
        result.add___ 
  
    return list___ 
  
result = remove_duplicates___ 
print___"
Create a function in Python to sort a list of dictionaries by a particular key.,Example of a list of dictionaries,"def sort_list(lst, key):
    # Sorts a list of dictionaries
    return sorted(lst, key=lambda k: k[key])",Data Structure,2821,"def sort_list___:
    # Sorts a list of dictionaries
    return sorted___"
Sort the list in the following python code using the bubble sort algorithm.,"arr = [1, 10, 5, 4, 8]","def bubble_sort(arr): 
    n = len(arr) 
    for i in range(n): 
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]

bubble_sort(arr)",Data Structure,2829,"def bubble_sort___: 
    n = len___ 
    for i in range___: 
        for j in range___: 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]

bubble_sort___"
Write a Python code that takes a given list of numbers and returns the mode of that list.,"List = [1,2,3,4,2,2,2,5]","def find_mode(List): 
    max_count = 0
    modes = [] 
    for num in List: 
        current_count = List.count(num) 
        if current_count > max_count: 
            max_count = current_count 
            modes = [num] 
        elif current_count == max_count: 
            modes.append(num) 
    return modes",Data Structure,2838,"def find_mode___: 
    max_count = 0
    modes = [] 
    for num in List: 
        current_count = List.count___ 
        if current_count > max_count: 
            max_count = current_count 
            modes = [num] 
        elif current_count == max_count: 
            modes___num) 
    return modes"
Write a code to sort a list of strings according to their lengths,"[""Python"", ""is"", ""a"", ""programming"", ""language""]","def sortByLength(strings):
    """"""Sort a list of strings according to their lengths""""""
    # Sort the list using a key function
    return sorted(strings, key=len)

if __name__ == '__main__':
    strings = [""Python"", ""is"", ""a"", ""programming"", ""language""]
    print(sortByLength(strings))",Data Structure,2843,"def sortByLength___:
    """"""Sort a list of strings according to their lengths""""""
    # Sort the list using a key function
    return sorted___

if __name__ == '__main__':
    strings = [""Python"", ""is"", ""a"", ""programming"", ""language""]
    print___)"
Write a Python program to calculate the total cost of a shopping cart containing multiple items. The program should take a list of items and their prices as input and output the total cost.,"items = {'apple': 2.99, 'banana': 0.99, 'mango': 4.98}","totalCost = 0
for item, price in items.items():
totalCost += price

print(f'Total cost of the cart is {totalCost}')",Data Structure,2846,"totalCost = 0
for item, price in items.items():
totalCost += price

print(f'Total cost of the cart is ___')"
Optimize performance of an existing code snippet by making use of Python's list comprehensions.,"numbers = [1, 2, 3, 4, 5]
squares = []
for n in numbers:
 squares.append(n*n)","numbers = [1, 2, 3, 4, 5]
squares = [n*n for n in numbers]",Data Structure,2848,"numbers = ___
squares = [n*n for n in numbers]"
Implement a Python function to check if all n numbers in an array are equal.,"[1,1,1]","def checkEqual(arr):
    if len(arr) == 0:
        return False
    return all(arr[0] == x for x in arr)",Data Structure,2850,"def checkEqual___:
    if len___ == 0:
        return False
    return all___"
Generate a Python program that determines whether a given array is a palindrome or not.,"[3,2,1,1,2,3]","def is_palindrome(arr):
    if arr == arr[::-1]:
        return True
    return False

result = is_palindrome([3, 2, 1, 1, 2, 3])
print(result) # Output: True",Data Structure,2851,"def is_palindrome___:
    if arr == arr[::-1]:
        return True
    return False

result = is_palindrome___
print___ # Output: True"
Generate a program in Python to output the top 3 numbers from an array of integers,"[7, 13, 5, 8, 50, 11, 64, 48]","def top_three(numbers):
    sorted_numbers = sorted(numbers, reverse=True)
    return sorted_numbers[:3]

print(top_three([7, 13, 5, 8, 50, 11, 64, 48]))",Data Structure,2852,"def top_three___:
    sorted_numbers = sorted___
    return sorted_numbers[:3]

print___)"
Create a python function which takes a list as an argument and returns the largest number in the list.,"numbers = [20, 9, 5, 10]","def largest_number(numbers):
    largest = numbers[0]
    for num in numbers:
        if num > largest:
            largest = num
    return largest

largest = largest_number(numbers)
print('The largest number in the list is: ', largest)",Data Structure,2855,"def largest_number___:
    largest = numbers___
    for num in numbers:
        if num > largest:
            largest = num
    return largest

largest = largest_number___
print___"
Create a function in Python that takes a list of numbers andarranges them in ascending order.,"nums = [4, 5, 2, 1, 6, 5]","def sort_ascending(nums):
    sorted_list = sorted(nums) 
  
    return sorted_list

print(sort_ascending(nums)) # [1, 2, 4, 5, 5, 6]",Data Structure,2857,"def sort_ascending___:
    sorted_list = sorted___ 
  
    return sorted_list

print___) # [1, 2, 4, 5, 5, 6]"
Design a Python program to remove all the elements from a list that are not a prime number.,"[1, 2, 3, 4, 5, 6, 7, 8]","def remove_non_primes(my_list):
    result = []
    for num in my_list:
        prime = True
        for i in range(2, num):
            if num % i == 0:
                prime = False
                break
        if prime:
            result.append(num)
    return result

result = remove_non_primes([1, 2, 3, 4, 5, 6, 7, 8])
print(result)",Data Structure,2860,"def remove_non_primes___:
    result = []
    for num in my_list:
        prime = True
        for i in range___:
            if num % i == 0:
                prime = False
                break
        if prime:
            result___num)
    return result

result = remove_non_primes___
print___"
Create a python program to filter out all the even numbers from a given list.,"[3, 4, 5, 6, 7]","def filter_even_numbers(numbers):
    even_numbers = []
    for i in numbers:
        if i % 2 == 0:
            even_numbers.append(i)
    return even_numbers
    
    
filtered = filter_even_numbers([3, 4, 5, 6, 7])
print(filtered)",Data Structure,2863,"def filter_even_numbers___:
    even_numbers = []
    for i in numbers:
        if i % 2 == 0:
            even_numbers___i)
    return even_numbers
    
    
filtered = filter_even_numbers___
print___"
Develop a python code that prints the longest word in a list.,"The list is [""Hello"", ""World"", ""Welcome"", ""To"", ""the"", ""universe""].","def longest_word(word_list): 
    maxLen = len(max(word_list, key = len)) 
    return [x for x in word_list if len(x) == maxLen] 
  
list = [""Hello"", ""World"", ""Welcome"", ""To"", ""the"", ""universe""]
  
print(longest_word(list)) # Output: [""Welcome"", ""universe""]",Data Structure,2866,"def longest_word___: 
    maxLen = len___) 
    return [x for x in word_list if len___ == maxLen] 
  
list = [""Hello"", ""World"", ""Welcome"", ""To"", ""the"", ""universe""]
  
print___) # Output: [""Welcome"", ""universe""]"
Create a Python script that orders a list of strings alphabetically from a to z.,"[""Banana"", ""Apple"", ""Orange"", ""Pear""]","def sort_list(list):
    list.sort()
    return list

sorted_list = sort_list([""Banana"", ""Apple"", ""Orange"", ""Pear""])
print(sorted_list)",Data Structure,2871,"def sort_list___:
    list.sort()
    return list

sorted_list = sort_list___
print___"
Design a Python web crawler that takes a URL as an input and prints out a list of all the hyperlinks on the page.,https://www.example.com,"import requests 
from bs4 import BeautifulSoup 

def crawl_page(url): 
    page = requests.get(url) 
    soup = BeautifulSoup(page.content, 'html.parser') 
    return [link.get('href') for link in soup.find_all('a')] 

url = ""https://www.example.com""
links = crawl_page(url)
for link in links:
 print(link)",Data Structure,2873,"import requests 
from bs4 import BeautifulSoup 

def crawl_page___: 
    page = requests.get___ 
    soup = BeautifulSoup___ 
    return [link.get___ for link in soup.find_all___] 

url = ""https://www.example.com""
links = crawl_page___
for link in links:
 print___"
Write a loop in Python that accumulates the sum of the numbers in an array.,"[1, 2, 3]","sum = 0

for num in [1, 2, 3]:
    sum += num

print(sum)",Data Structure,2874,"sum = 0

for num in ___:
    sum += num

print___"
Create a Python program to join a list of strings with a delimiter.,"[""Apple"", ""Orange"", ""Mango""]","def join_list_str(list_str, delimiter):
  return delimiter.join(list_str)

list_str = [""Apple"", ""Orange"", ""Mango""]
delimiter = "",""

result = join_list_str(list_str, delimiter)

print(result)

# Output
Apple,Orange,Mango",Data Structure,2876,"def join_list_str___:
  return delimiter.join___

list_str = [""Apple"", ""Orange"", ""Mango""]
delimiter = "",""

result = join_list_str___

print___

# Output
Apple,Orange,Mango"
Use Python to sort the list of words in descending alphabetical order.,"correct, tango, apple, banana","words = [""correct"", ""tango"", ""apple"", ""banana""] 

# Sort words in reverse alphabetical order 
words.sort(reverse=True) 

# Print list in descending order 
print(words)",Data Structure,2879,"words = [""correct"", ""tango"", ""apple"", ""banana""] 

# Sort words in reverse alphabetical order 
words.sort___ 

# Print list in descending order 
print___"
"Implement a function in Python that takes a nested list as an input, and flattens the list into a single list.","[[1,2,3],[4,5,6],[7,8,9]]","def flatten_list(list):
 flattened_list = []
 for sublist in list:
 for item in sublist:
 flattened_list.append(item)
 return flattened_list

print(flatten_list([[1,2,3],[4,5,6],[7,8,9]]))
# Output: [1, 2, 3, 4, 5, 6, 7, 8, 9]",Data Structure,2883,"def flatten_list___:
 flattened_list = []
 for sublist in list:
 for item in sublist:
 flattened_list___item)
 return flattened_list

print___)
# Output: ___"
Generate a function in Python that takes a list and returns a list of all possible subsequences.,"[1, 2, 3]","def get_subsequences(arr):
    subsequences = [[]]
    for num in arr:
        new_subsequences = []
        for sub in subsequences:
            new_subsequences.append(sub + [num])
        subsequences += new_subsequences
    return subsequences

arr = [1, 2, 3]
result = get_subsequences(arr)
print(result)",Data Structure,2888,"def get_subsequences___:
    subsequences = [[]]
    for num in arr:
        new_subsequences = []
        for sub in subsequences:
            new_subsequences___sub + [num])
        subsequences += new_subsequences
    return subsequences

arr = ___
result = get_subsequences___
print___"
Implement a Python program to remove all duplicates from an array.,"array = [3, 8, 12, 3, 17, 8, 25]","def remove_duplicates(my_list):
    result = []
    seen = set()
    for item in my_list:
        if item not in seen:
            seen.add(item)
            result.append(item)
    return result",Data Structure,2890,"def remove_duplicates___:
    result = []
    seen = set()
    for item in my_list:
        if item not in seen:
            seen.add___
            result___item)
    return result"
Construct a Python program to sum the items of a given list.,"[3, 5, 6, 10]","def list_sum(input_list):
    """"""Computes the sum of the items of a given list.""""""
    output = 0
    for item in input_list:
        output += item
    return output

print(list_sum([3, 5, 6, 10]))",Data Structure,2894,"def list_sum___:
    """"""Computes the sum of the items of a given list.""""""
    output = 0
    for item in input_list:
        output += item
    return output

print___)"
"Given a set of numbers, write a Python program to find the maximum number after performing arithmetic operations on the digits of the set of numbers.","nums = [12, 198, 16]","def find_max(nums):
    max_num = 0
    for num in nums:
        str_num = str(num)
        mul_res = 1
        for digit in str_num:
            mul_res *= int(digit)
        max_num = max(max_num, mul_res)
    return max_num",Data Structure,2899,"def find_max___:
    max_num = 0
    for num in nums:
        str_num = str___
        mul_res = 1
        for digit in str_num:
            mul_res *= int___
        max_num = max___
    return max_num"
Write a python code for taking an array of numbers and returning only the odd numbers in descending order.,"[1, 8, 5, 9, 12, 17]","def extract_odd(arr):
    odd = [x for x in arr if x % 2 != 0]
    return sorted(odd, reverse = True)

arr = [1, 8, 5, 9, 12, 17]
print(extract_odd(arr)) # Output: [17, 9, 5, 1]",Data Structure,2901,"def extract_odd___:
    odd = [x for x in arr if x % 2 != 0]
    return sorted___

arr = ___
print___) # Output: [17, 9, 5, 1]"
Create an API using flask and python which takes a list or array of integers and returns their minimum and maximum values.,"[12, 4, 9, 24, -5]","from flask import Flask, request
app = Flask(name)

@app.route('/minmax', methods=['POST'])
def minmax():
 data = request.get_json()
 nums = data['nums']
 minVal = min(nums)
 maxVal = max(nums)
 return {'min': minVal, 'max': maxVal}

if name == 'main':
 app.run()",Data Structure,2908,"from flask import Flask, request
app = Flask___

@app.route___
def minmax():
 data = request.get_json()
 nums = data['nums']
 minVal = min___
 maxVal = max___
 return ___

if name == 'main':
 app.run()"
Generate a Python program to sort a list of strings alphabetically.,"['banana', 'apple', 'orange']","def sort_strings(string_list):
    sorted_list = sorted(string_list)
    return sorted_list

unsorted_list = ['banana', 'apple', 'orange']
sorted_list = sort_strings(unsorted_list)
print(sorted_list)",Data Structure,2912,"def sort_strings___:
    sorted_list = sorted___
    return sorted_list

unsorted_list = ['banana', 'apple', 'orange']
sorted_list = sort_strings___
print___"
Write a python program to sort a given list of tuples based on its first element in increasing order.,"[(3, 'ape'), (1, 'cat'), (4, 'dog'), (2, 'bee')]","def sortTuplesByFirstElement(lst):
    lst.sort(key = lambda x: x[0])
    return lst

sortedList = sortTuplesByFirstElement([(3, 'ape'), (1, 'cat'), (4, 'dog'), (2, 'bee')])
print(sortedList)",Data Structure,2918,"def sortTuplesByFirstElement___:
    lst.sort___
    return lst

sortedList = sortTuplesByFirstElement___, ___, ___, ___])
print___"
Design an algorithm in Python to find the largest number in a list.,"[2, 5, 8, 10, 21]","def largest_num_in_list(arr):
    largest_num = 0
    for num in arr:
        if num > largest_num:
            largest_num = num
    return largest_num

if __name__ == '__main__':
    print(largest_num_in_list([2, 5, 8, 10, 21])) # 21",Data Structure,2919,"def largest_num_in_list___:
    largest_num = 0
    for num in arr:
        if num > largest_num:
            largest_num = num
    return largest_num

if __name__ == '__main__':
    print___) # 21"
Develop an algorithm for a Linear Search of an unordered array in Python.,"[4, 8, 15, 23]","def linear_search(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1",Data Structure,2922,"def linear_search___:
    for i in range___):
        if arr[i] == target:
            return i
    return -1"
Generate a python code to rotate an array by k steps.,"[1,2,3,4,5]","def leftRotate(arr, k): 
    new_arr = arr[k:] + arr[:k] 
    return new_arr",Data Structure,2923,"def leftRotate___: 
    new_arr = arr[k:] + arr[:k] 
    return new_arr"
Refactor a Python function to use list comprehension.,"def square_list(nums):
    squares = []
    # Iterate over the given list
    for num in nums:
        # Append the value of num squared to the new list
        squares.append(num ** 2)
    
    return squares","def square_list(nums):
    return [num ** 2 for num in nums]",Data Structure,2925,"def square_list___:
    return [num ** 2 for num in nums]"
Write a Python function to find the most frequent elements in a list.,"[3, 4, 2, 5, 4, 3, 2, 5, 4]","def most_frequent_elements(lst):
 count = {}
 for item in lst:
 if item in count:
 count[item] += 1
 else:
 count[item] = 1
 max_count = 0
 max_element = None
 for item in count:
 if count[item] > max_count:
 max_count = count[item]
 max_element = item

return max_element

print(most_frequent_elements([3, 4, 2, 5, 4, 3, 2, 5, 4]))
# Output: 4",Data Structure,2928,"def most_frequent_elements___:
 count = {}
 for item in lst:
 if item in count:
 count[item] += 1
 else:
 count[item] = 1
 max_count = 0
 max_element = None
 for item in count:
 if count[item] > max_count:
 max_count = count[item]
 max_element = item

return max_element

print___)
# Output: 4"
Write a Python program to sort a given list according to specified criteria.,"lst = [('a', 1), ('b', 3), ('c', 2)]","def sort_list(lst):
  return sorted(lst, key=lambda x: x[1])

result = sort_list([('a', 1), ('b', 3), ('c', 2)]) 
print(result)",Data Structure,2930,"def sort_list___:
  return sorted___

result = sort_list___, ___, ___]) 
print___"
Create a program in Python that takes an array of integers and prints the first odd number from the left side.,"arr = [1, 4, 5, 6, 9, 10, 11]","def first_odd(arr):
    for num in arr:
        if num % 2 != 0:
            print(num)
            break

arr = [1, 4, 5, 6, 9, 10, 11]
first_odd(arr)",Data Structure,2932,"def first_odd___:
    for num in arr:
        if num % 2 != 0:
            print___
            break

arr = ___
first_odd___"
Create a function in Python that takes a list of numbers and finds the largest even number.,"[2, 5, 7, 6]","def largest_even(arr):
    even_nums = []
    for num in arr:
        if num % 2 == 0:
            even_nums.append(num)
    
    if len(even_nums) == 0:
        return None
    
    largest = even_nums[0]
    for num in even_nums:
        if num > largest:
            largest = num
    
    return largest

result = largest_even([2, 5, 7, 6])
print(result)",Data Structure,2936,"def largest_even___:
    even_nums = []
    for num in arr:
        if num % 2 == 0:
            even_nums___num)
    
    if len___ == 0:
        return None
    
    largest = even_nums___
    for num in even_nums:
        if num > largest:
            largest = num
    
    return largest

result = largest_even___
print___"
Implement a function in Python that prints out the contents of a given list with even indices only.,"my_list = [1, 5, 10, 15, 20]","def print_even_indices(my_list):
    for i in range(len(my_list)):
        if i % 2 == 0:
            print(my_list[i])
            
print_even_indices(my_list)",Data Structure,2944,"def print_even_indices___:
    for i in range___):
        if i % 2 == 0:
            print___
            
print_even_indices___"
Create a for loop in python to loop through a list of numbers.,"[1, 5, 8]","for num in [1, 5, 8]: 
    print(num)",Data Structure,2945,"for num in ___: 
    print___"
Develop a function in Python to randomly select one element from a given array.,"[1, 2, 3, 4]","import random

def randomElement(arr):
    return random.choice(arr)",Data Structure,2949,"import random

def randomElement___:
    return random.choice___"
Create a Python function to sort an array of numbers based on their size.,"[5, 1, 2, 6, 4, 3]","def sort_array(arr):
    arr.sort()
    return arr",Data Structure,2953,"def sort_array___:
    arr.sort()
    return arr"
Write a Python program to detect the most frequently occurring element in a given array.,"array = [1, 3, 1, 4, 5, 3, 4, 3]","from collections import Counter

def most_frequent_element(array):
  return Counter(array).most_common(1)[0][0]
  
# Driver code 
print(most_frequent_element([1, 3, 1, 4, 5, 3, 4, 3]))",Data Structure,2954,"from collections import Counter

def most_frequent_element___:
  return Counter___.most_common___[0][0]
  
# Driver code 
print___)"
How would you write a code to flatten a given nested list in Python?,"nested_list = [1, [2, [3, 4], 5], 6]","def flatten_list(nested_list):
    flattened_list = []
    for item in nested_list:
        if type(item) == list:
            flattened_list.extend(flatten_list (item))
        else:
            flattened_list.append(item)
    return flattened_list",Data Structure,2956,"def flatten_list___:
    flattened_list = []
    for item in nested_list:
        if type___ == list:
            flattened_list.extend___)
        else:
            flattened_list___item)
    return flattened_list"
Generate an appropriate Python command to edit the following list such that all the negative numbers are replaced with 0.,"[-1, 5, 9, -8, 2]","def filter_negative(nums):
    return [max(0, n) for n in nums]",Data Structure,2957,"def filter_negative___:
    return [max___ for n in nums]"
Write a Python function that takes an array of integers as input and computes the average of the elements.,"array = [1, 2, 3, 4]","def compute_average(arr):
 sum = 0
 for i in arr:
 sum += i
 return sum / len(arr)
 
 arr = [1, 2, 3, 4]
 avg = compute_average(arr)
 print(""Average of array elements is:"", avg)",Data Structure,2961,"def compute_average___:
 sum = 0
 for i in arr:
 sum += i
 return sum / len___
 
 arr = ___
 avg = compute_average___
 print___"
Write a Python program to classify a given set of data into any two classes.,"data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def classify_data(data):
 class_1 = []
 class_2 = []

 for value in data:
 if value % 2 == 0:
 class_1.append(value)
 else:
 class_2.append(value)

 return class_1, class_2",Data Structure,2964,"def classify_data___:
 class_1 = []
 class_2 = []

 for value in data:
 if value % 2 == 0:
 class_1___value)
 else:
 class_2___value)

 return class_1, class_2"
Generate a Python program that adds a given number to an array.,Number: 5,"def add_to_array(num, array):
  for i in range(len(array)):
    array[i] += num

  return array",Data Structure,2966,"def add_to_array___:
  for i in range___):
    array[i] += num

  return array"
Create a function in Python that takes a list of numbers as an argument and prints the highest value in the list.,"[13, 6, 8, -2, 20]","def get_largest(nums):
    largest = nums[0]
    for num in nums[1:]:
        if num > largest:
            largest = num
    return largest

print(get_largest([13, 6, 8, -2, 20]))",Data Structure,2968,"def get_largest___:
    largest = nums___
    for num in nums[1:]:
        if num > largest:
            largest = num
    return largest

print___)"
Write a function in Python to return the kth smallest element in the given array.,"arr = [7, 10, 4, 3, 20, 15]
k=3","def find_kth_smallest(arr, k):
    """"""
    This function finds the kth smallest element in an array. 
    :param arr: array of integers
    :param k: integer
    :return: kth smallest element
    """"""
    sorted_arr = sorted(arr)
    return sorted_arr[k-1]",Data Structure,2969,"def find_kth_smallest___:
    """"""
    This function finds the kth smallest element in an array. 
    :param arr: array of integers
    :param k: integer
    :return: kth smallest element
    """"""
    sorted_arr = sorted___
    return sorted_arr[k-1]"
Create a Python program that computes the median of an array of numbers.,"[5, 4, 3, 2, 1]","def median(array):
    sorted_array = sorted(array)
    length = len(sorted_array)
    if (length % 2 == 0):
        median = (sorted_array[length//2] + sorted_array[length//2 - 1]) / 2
    else:
        median = sorted_array[length//2]

    return median

array = [5, 4, 3, 2, 1]
print(median(array))  # Output: 3",Data Structure,2974,"def median___:
    sorted_array = sorted___
    length = len___
    if ___:
        median = ___ / 2
    else:
        median = sorted_array[length//2]

    return median

array = ___
print___)  # Output: 3"
Design an algorithm in Python that sorts an unordered array of numbers from low to high.,"[2, 5, 1, 8, 7, 4]","def sort(arr): 
  for i in range(len(arr)): 
    minIdx = i 
    for j in range(i+1, len(arr)): 
      if arr[minIdx] > arr[j]: 
        minIdx = j       
    arr[i], arr[minIdx] = arr[minIdx], arr[i]
  return arr",Data Structure,2975,"def sort___: 
  for i in range___): 
    minIdx = i 
    for j in range___): 
      if arr[minIdx] > arr[j]: 
        minIdx = j       
    arr[i], arr[minIdx] = arr[minIdx], arr[i]
  return arr"
Can you write a program in Python to remove the duplicate elements in a list?,"[5, 9, 2, 4, 5, 9, 2]","def remove_duplicates(arr):
    new_arr = []
    for item in arr:
        if item not in new_arr:
            new_arr.append(item)
    return new_arr

my_list = [5, 9, 2, 4, 5, 9, 2]
print(remove_duplicates(my_list))
# Output: [5, 9, 2, 4]",Data Structure,2976,"def remove_duplicates___:
    new_arr = []
    for item in arr:
        if item not in new_arr:
            new_arr___item)
    return new_arr

my_list = ___
print___)
# Output: ___"
Generate an efficient python code which finds the most frequent element in an array.,"arr = [3, 2, 1, 3, 4, 2]","# Find the most frequent element in the array
most_freq = 0
count = 0

for x in arr:
    freq = arr.count(x)
    if freq > count:
        most_freq = x
        count = freq

# Print the most frequent element
print(""Most frequent element:"",most_freq)",Data Structure,2977,"# Find the most frequent element in the array
most_freq = 0
count = 0

for x in arr:
    freq = arr.count___
    if freq > count:
        most_freq = x
        count = freq

# Print the most frequent element
print___"
Write a function in Python that takes an array of integers as an input and returns an array with only the distinct numbers from the input.,"[1, 2, 3, 4, 4, 5, 5]","def distinct_numbers(arr):
 return list(set(arr))",Data Structure,2986,"def distinct_numbers___:
 return list___)"
Develop a Python program to calculate the largest sum of a consecutive sequence of n numbers given in an array.,"array = [1, 2, -5, 4, 5, 7, -8]","def max_consecutive_sum(array):
    max_val = 0
    cur_man = 0
    for x in array:
        cur_man = max(cur_man + x, 0)
        max_val = max(cur_man, max_val)
    return max_val",Data Structure,2989,"def max_consecutive_sum___:
    max_val = 0
    cur_man = 0
    for x in array:
        cur_man = max___
        max_val = max___
    return max_val"
Write a code to remove a specific value from a list in Python.,"mylist = [10, 20, 30, 40, 10]
value = 10","mylist = [10, 20, 30, 40, 10]
value_to_remove = 10

# new list after value is removed
new_list = [item for item in mylist if item != value_to_remove] 

print(new_list)",Data Structure,2991,"mylist = ___
value_to_remove = 10

# new list after value is removed
new_list = [item for item in mylist if item != value_to_remove] 

print___"
Optimize the following code snippet for accessing an element in a Python list.,"my_list = [1, 2, 3, 4, 5]","my_list = [1, 2, 3, 4, 5]

if len(my_list) > 0:
  element = my_list[0]
else:
  element = None",Data Structure,2993,"my_list = ___

if len___ > 0:
  element = my_list___
else:
  element = None"
Generate a Python function to convert a given sentence into a list of words.,"Convert ""This is a sentence""","def split_sentence(sentence):
    return sentence.split("" "")

sentence = ""This is a sentence""

words = split_sentence(sentence)
print(words)",Data Structure,2998,"def split_sentence___:
    return sentence.split___

sentence = ""This is a sentence""

words = split_sentence___
print___"
Design a Python algorithm to compute the total number of inversions in an array of integers.,"[2, 4, 1, 3, 5]","def count_inversions(arr): 
  inversion_count = 0  
  for i in range(len(arr)): 
    for j in range(i + 1, len(arr)): 
        if arr[i] > arr[j]: 
            inversion_count += 1
  
  return inversion_count",Data Structure,3001,"def count_inversions___: 
  inversion_count = 0  
  for i in range___): 
    for j in range___): 
        if arr[i] > arr[j]: 
            inversion_count += 1
  
  return inversion_count"
Program a Python function to calculate the average of a list of integers.,"[1, 3, 5, 3, 7, 1]","def avg_list(lst): 
  sum_lst = 0
  for i in range(len(lst)): 
    sum_lst = sum_lst + lst[i] 
  return sum_lst/len(lst) 
  
print(avg_list([1, 3, 5, 3, 7, 1]))",Data Structure,3007,"def avg_list___: 
  sum_lst = 0
  for i in range___): 
    sum_lst = sum_lst + lst[i] 
  return sum_lst/len___ 
  
print___)"
Write a python program to find the maximum value in the given list of numbers.,"[-2, 6, 8, -10]","def find_max(nums):
    max_val = nums[0]
    for num in nums[1:]:
        if num > max_val:
            max_val = num
    return max_val",Data Structure,3009,"def find_max___:
    max_val = nums___
    for num in nums[1:]:
        if num > max_val:
            max_val = num
    return max_val"
Write a Python code snippet to flatten the given list.,"my_list = [2, 3, [4, 5, [6]], [7, 8]]","my_list = [2, 3, [4, 5, [6]], [7, 8]]
new_list = []
def flatten(lst):
    for item in lst:
        if isinstance(item, list):
            flatten(item)
        else:
            new_list.append(item)

flatten(my_list)
print(new_list)",Data Structure,3011,"my_list = [2, 3, [4, 5, ___], ___]
new_list = []
def flatten___:
    for item in lst:
        if isinstance___:
            flatten___
        else:
            new_list___item)

flatten___
print___"
Generate a function in Python for finding the maximum value in a list of numbers with time complexity O(n).,"num_list = [3, 7, 4, 2, 8, 16, 1, 9, 10]","def max_val(num_list):
	if len(num_list) == 0:
		return None
	
	max_num = num_list[0]
	
	for num in num_list:
		if num > max_num:
			max_num = num
	
	return max_num",Data Structure,3012,"def max_val___:
	if len___ == 0:
		return None
	
	max_num = num_list___
	
	for num in num_list:
		if num > max_num:
			max_num = num
	
	return max_num"
Create a program in Python that takes a list of words and an integer n and returns a list of words that appear at least n times in the given list.,"words =['a', 'b', 'a', 'c', 'd', 'a', 'x', 'd', 'd']
n = 3","from collections import Counter

def frequent_words(words, n):
    counts = Counter(words)
    return [word for word, count in counts.items() if count >= n]

result = frequent_words(words, n)

print(result) # prints ['a', 'd']",Data Structure,3013,"from collections import Counter

def frequent_words___:
    counts = Counter___
    return [word for word, count in counts.items() if count >= n]

result = frequent_words___

print___ # prints ['a', 'd']"
Write a Python code to replace all the given elements of a list with the given value.,"list1 = [1, 3, 5, 7, 9]
value = 0","def replace_list_with_value(list1, value):
    list1[:] = [value] * len(list1) 
    return list1

result = replace_list_with_value(list1, value) 
print(result)",Data Structure,3014,"def replace_list_with_value___:
    list1[:] = [value] * len___ 
    return list1

result = replace_list_with_value___ 
print___"
Create a Python function for sorting a given list of integers using QuickSort algorithm.,"[8,5,4,7,3,1]","def quick_sort(numbers):
    if len(numbers) <= 1:
        return numbers 
    else:
        pivot = numbers[0]
        less = [i for i in numbers[1:] if i <= pivot]
        greater = [i for i in numbers[1:] if i > pivot]
        return quick_sort(less) + [pivot] + quick_sort(greater)

numbers = [8,5,4,7,3,1]
sorted_numbers = quick_sort(numbers)
print(sorted_numbers)",Data Structure,3016,"def quick_sort___:
    if len___ <= 1:
        return numbers 
    else:
        pivot = numbers___
        less = [i for i in numbers[1:] if i <= pivot]
        greater = [i for i in numbers[1:] if i > pivot]
        return quick_sort___ + [pivot] + quick_sort___

numbers = ___
sorted_numbers = quick_sort___
print___"
Compose a code in Python that counts the number of positive integers in a list.,"numbers = [1, -2, 3, -4, 5]","def count_positive_numbers(numbers):
    count = 0
    for num in numbers:
        if num > 0:
            count += 1
    return count",Data Structure,3018,"def count_positive_numbers___:
    count = 0
    for num in numbers:
        if num > 0:
            count += 1
    return count"
Generate a Python function that takes a list and a target number as input and returns a list of the indices of all elements in the given list that are smaller than the given target number.,"[2, 3, 4, 5, 6], 4","def find_smaller_elements(nums, target):
  indices = []
  for i, num in enumerate(nums):
    if num < target:
      indices.append(i)
  return indices
  
result = find_smaller_elements([2, 3, 4, 5, 6], 4)
print(result) # [0, 1]",Data Structure,3019,"def find_smaller_elements___:
  indices = []
  for i, num in enumerate___:
    if num < target:
      indices___i)
  return indices
  
result = find_smaller_elements___
print___ # [0, 1]"
Design an algorithm in Python to detect duplicate elements in an array.,"[1, 2, 3, 4, 2]","def find_duplicates(lst):
    seen = set()
    duplicates = []
    for item in lst:
        if item in seen:
            duplicates.append(item)
        else:
            seen.add(item)
    
    return duplicates",Data Structure,3022,"def find_duplicates___:
    seen = set()
    duplicates = []
    for item in lst:
        if item in seen:
            duplicates___item)
        else:
            seen.add___
    
    return duplicates"
Create a Python program that takes in an array of arrays of numbers as an argument and returns a new array with each of the inner arrays multiplied by its index in the outer array.,"[[1, 2, 3], [4, 5, 6]]","def arrayMultiplied(arr):
 resultArr = []
 for index, innerArr in enumerate(arr):
  resultArr.append([x * index for x in innerArr])
 return resultArr

print(arrayMultiplied([[1, 2, 3], [4, 5, 6]]))
# Output: [[0, 2, 6], [0, 5, 12]]",Data Structure,3028,"def arrayMultiplied___:
 resultArr = []
 for index, innerArr in enumerate___:
  resultArr___[x * index for x in innerArr])
 return resultArr

print___)
# Output: [___, ___]"
Develop a Python function to sum an array of integers,"[1, 2, 3, 4]","def sumIntArray(arr):
    arr_sum = 0
    for num in arr:
        arr_sum += num
    return arr_sum

arr = [1, 2, 3, 4]
print(sumIntArray(arr)) #prints 10",Data Structure,3029,"def sumIntArray___:
    arr_sum = 0
    for num in arr:
        arr_sum += num
    return arr_sum

arr = ___
print___) #prints 10"
Develop a Python function to select the odd numbers from a given list.,"[2, 3, 4, 5, 6, 7, 8, 9]","def selectOddNumbers(arr):
    oddNumbers = []
    for num in arr:
        if num % 2 == 1:
            oddNumbers.append(num)
    return oddNumbers

arr = [2, 3, 4, 5, 6, 7, 8, 9]
result = selectOddNumbers(arr)
print(result)",Data Structure,3031,"def selectOddNumbers___:
    oddNumbers = []
    for num in arr:
        if num % 2 == 1:
            oddNumbers___num)
    return oddNumbers

arr = ___
result = selectOddNumbers___
print___"
Write a Python program to find the number of times each character in an array occurs.,"Given an array = ['a', 'b', 'c', 'a', 'c', 'b', 'd', 'd']","from collections import Counter

s = ['a', 'b', 'c', 'a', 'c', 'b', 'd', 'd']
counts = Counter(s)

for c, count in counts.items():
 print(f'{c}: {count} times')",Data Structure,3032,"from collections import Counter

s = ['a', 'b', 'c', 'a', 'c', 'b', 'd', 'd']
counts = Counter___

for c, count in counts.items():
 print(f'___: ___ times')"
Write a Python program to sort a list of dictionaries by a given key.,"list_of_dicts = [
{'name': 'John', 'age': 25},
{'name': 'Adam', 'age': 30},
{'name': 'Sarah', 'age': 28}
]

sort_by_key = 'age'","def sort_dicts_by_key(list_of_dicts, key):
    return sorted(list_of_dicts, key=lambda k: k[key])

sorted_dicts = sort_dicts_by_key(list_of_dicts, sort_by_key)

# Output:
[
{'name': 'John', 'age': 25},
{'name': 'Sarah', 'age': 28},
{'name': 'Adam', 'age': 30}
]",Data Structure,3033,"def sort_dicts_by_key___:
    return sorted___

sorted_dicts = sort_dicts_by_key___

# Output:
[
___,
___,
___
]"
Create a Python function that takes two arguments: a list of numbers and an integer k. The function should return a list of all pairs of numbers in the given list whose sum is equal to k.,"list = [1, 2, 3, 4, 5], k = 5","def get_pairs(list, k):
 pairs = []
 for i in range(len(list)):
 for j in range(i+1, len(list)):
 if list[i] + list[j] == k:
 pairs.append( [list[i], list[j]] )
 return pairs

print(get_pairs([1, 2, 3, 4, 5], 5))

# Output: [[1, 4], [2, 3]]",Data Structure,3034,"def get_pairs___:
 pairs = []
 for i in range___):
 for j in range___):
 if list[i] + list[j] == k:
 pairs___ [list[i], list[j]] )
 return pairs

print___)

# Output: [___, ___]"
Generate a Python program that checks if all elements of a given list are the same.,"[1, 4, 1, 4, 1]","def check_list_elements(list_of_elements):
    if len(set(list_of_elements)) == 1:
        return True
    else:
        return False

list_of_elements = [1, 4, 1, 4, 1]
same_elements = check_list_elements(list_of_elements)
print(same_elements)",Data Structure,3036,"def check_list_elements___:
    if len___) == 1:
        return True
    else:
        return False

list_of_elements = ___
same_elements = check_list_elements___
print___"
Write a Python function to find the index of the smallest integer in a list.,"[1, 4, 7, 8, 10]","def find_smallest_int(lst):
  min_index = 0
  for index, num in enumerate(lst):
    if num < lst[min_index]:
      min_index = index
  return min_index

lst = [1, 4, 7, 8, 10]
smallest_int_index = find_smallest_int(lst)
print(""Index of the smallest integer:"", smallest_int_index)",Data Structure,3039,"def find_smallest_int___:
  min_index = 0
  for index, num in enumerate___:
    if num < lst[min_index]:
      min_index = index
  return min_index

lst = ___
smallest_int_index = find_smallest_int___
print___"
Create a function in Python to move a list of items from one list to another.,"list1 = [2, 4, 6, 8, 10]
list2 = [1, 3, 5, 7, 9]","def move_items(list1, list2): 
    for item in list1: 
        list2.append(item) 
    for i in range(len(list1)): 
        list1.pop() 

list1 = [2, 4, 6, 8, 10]
list2 = [1, 3, 5, 7, 9] 

move_items(list1, list2) 

print(""List 1 = "", list1) 
print(""List 2 = "", list2)",Data Structure,3040,"def move_items___: 
    for item in list1: 
        list2___item) 
    for i in range___): 
        list1___) 

list1 = ___
list2 = ___ 

move_items___ 

print___ 
print___"
Specify a quick sort algorithm in Python to sort the given array of numbers.,"[9, 6, 5, 3, 4, 7, 4, 1]","def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    mid = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quick_sort(left) + mid + quick_sort(right)

print(quick_sort([9, 6, 5, 3, 4, 7, 4, 1]))",Data Structure,3041,"def quick_sort___:
    if len___ <= 1:
        return arr
    pivot = arr[len___ // 2]
    left = [x for x in arr if x < pivot]
    mid = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quick_sort___ + mid + quick_sort___

print___)"
Use Python loops to generate a new list containing the square of all numbers in the following list.,"list = [1,2,3,4,5]","""""""
Generate a new list containing the square of all numbers in a list
""""""
# input list
in_list = [1,2,3,4,5]

# output list
out_list = []

# loop over the input list
for i in in_list:
    # calculate the square of the element and append it to output list
    out_list.append(i**2)

# print the output list
print(out_list)",Data Structure,3044,"""""""
Generate a new list containing the square of all numbers in a list
""""""
# input list
in_list = ___

# output list
out_list = []

# loop over the input list
for i in in_list:
    # calculate the square of the element and append it to output list
    out_list___i**2)

# print the output list
print___"
Create a Python program that takes two numbers from user and generates a list of all numbers in between them.,"2, 6","def generateList(start, end):
    res = []
    for num in range(start, end+1):
        res.append(num)
    return res

start = 2
end = 6
print(generateList(start, end))  # Output: [2, 3, 4, 5, 6]",Data Structure,3045,"def generateList___:
    res = []
    for num in range___:
        res___num)
    return res

start = 2
end = 6
print___)  # Output: [2, 3, 4, 5, 6]"
Develop a function in Python that removes all the duplicates from a list.,"arr = [1, 2, 2, 3, 3, 4, 4]","def remove_duplicates(arr):
    new_list = []
    for i in arr:
        if i not in new_list:
            new_list.append(i)
    return new_list

arr = [1, 2, 2, 3, 3, 4, 4]
print(remove_duplicates(arr))",Data Structure,3047,"def remove_duplicates___:
    new_list = []
    for i in arr:
        if i not in new_list:
            new_list___i)
    return new_list

arr = ___
print___)"
Write a Python code to return the highest frequency element in a given array of integers.,"arr = [1, 2, 4, 2, 3, 2]","from collections import Counter

def highest_frequency(arr):
    arr_counts = Counter(arr)
    max_freq = 0
    max_freq_num = 0
    for num in arr_counts:
        if arr_counts[num] > max_freq:
            max_freq = arr_counts[num]
            max_freq_num = num
    return max_freq_num

print(highest_frequency(arr))",Data Structure,3049,"from collections import Counter

def highest_frequency___:
    arr_counts = Counter___
    max_freq = 0
    max_freq_num = 0
    for num in arr_counts:
        if arr_counts[num] > max_freq:
            max_freq = arr_counts[num]
            max_freq_num = num
    return max_freq_num

print___)"
Create a Python function to generate a list of numbers between given two numbers,"start = 10
end = 20","def numbers_between(start, end):
    return [x for x in range(start, end + 1)]",Data Structure,3054,"def numbers_between___:
    return [x for x in range___]"
Create a Python program to remove all the duplicates in the given list,"list = [2, 10, 20, 30, 10, 20, 40]","def remove_duplicates(list): 
    temp_list = [] 
    for i in list: 
        if i not in temp_list:
            temp_list.append(i)
    return temp_list

remove_duplicates(list) # output: [2, 10, 20, 30, 40]",Data Structure,3056,"def remove_duplicates___: 
    temp_list = [] 
    for i in list: 
        if i not in temp_list:
            temp_list___i)
    return temp_list

remove_duplicates___ # output: [2, 10, 20, 30, 40]"
Find the maximum element in an array using a Python program.,"[1, 4, 9, 3, 6]","def findMax(arr):
    max = arr[0] 
    for i in range(1,len(arr)): 
        if arr[i] > max: 
            max = arr[i] 
  
    return max",Data Structure,3060,"def findMax___:
    max = arr___ 
    for i in range___): 
        if arr[i] > max: 
            max = arr[i] 
  
    return max"
Write a Python list comprehension to extract the individual digits of a given number.,num = 5112,[int(d) for d in str(num)],Data Structure,3061,[int___ for d in str___]
Construct a program in Python to find the total number of words in a list of strings.,"strings = [""Hello World"", ""Foo Bar"", ""Hello Again""]","def count_words(strings):
    count = 0
    for string in strings:
        words = string.split(' ')
        count += len(words)
    return count

strings = [""Hello World"", ""Foo Bar"", ""Hello Again""]
count = count_words(strings)
print(count)",Data Structure,3062,"def count_words___:
    count = 0
    for string in strings:
        words = string.split___
        count += len___
    return count

strings = [""Hello World"", ""Foo Bar"", ""Hello Again""]
count = count_words___
print___"
Construct a python program which takes in input the size of a jagged array and prints it(no values).,<noInpit>,"def print_jagged_array(array_size):    
    # Initialize a jagged array with the given size
    array = [None] * array_size
    
    # Populate the array with empty arrays
    for i in range(array_size):
        array[i] = []
    
    # Print the output array
    print(array)

if __name__ == ""__main__"":
    array_size = 4
    print_jagged_array(array_size)",Data Structure,3067,"def print_jagged_array___:    
    # Initialize a jagged array with the given size
    array = [None] * array_size
    
    # Populate the array with empty arrays
    for i in range___:
        array[i] = []
    
    # Print the output array
    print___

if __name__ == ""__main__"":
    array_size = 4
    print_jagged_array___"
Design a program in Python to calculate the sum of all the elements in a given list.,"[1, 2, 3, 4, 5]","def get_sum(list_nums):
    sum = 0
    for num in list_nums:
        sum += num
    return sum",Data Structure,3068,"def get_sum___:
    sum = 0
    for num in list_nums:
        sum += num
    return sum"
Write a Python script that will take an array of numbers and output the distinct elements.,"[1, 1, 3, 4, 5, 6, 6, 7, 8, 9, 9]","my_list = [1, 1, 3, 4, 5, 6, 6, 7, 8, 9, 9]
new_list = []

for item in my_list:
 if item not in new_list:
 new_list.append(item)

print(new_list)
# Output: [1, 3, 4, 5, 6, 7, 8, 9]",Data Structure,3072,"my_list = ___
new_list = []

for item in my_list:
 if item not in new_list:
 new_list___item)

print___
# Output: ___"
Write a function in Python that takes a list of integers and returns a new list containing only odd numbers.,"[3, 8, 6, 10, 17]","def odd_numbers_list(numbers):
    return [num for num in numbers if num % 2 != 0]",Data Structure,3073,"def odd_numbers_list___:
    return [num for num in numbers if num % 2 != 0]"
Use Python to modify the list below by swapping the first and last elements.,"[3, 6, 8, 5, 4]","[4, 6, 8, 5, 3]",Data Structure,3075,___
"Generate a function in Python that takes an unsorted list of integers, and sorts it using a bubble sort algorithm.","[9, 4, 5, 1, 0]","def bubble_sort(list):
  for i in range(len(list)-1):
    for j in range(len(list)-i-1):
      if list[j] > list[j+1]:
        temp = list[j]
        list[j] = list[j+1]
        list[j+1] = temp
  return list
  
print(bubble_sort([9, 4, 5, 1, 0])) // [0, 1, 4, 5, 9]",Data Structure,3087,"def bubble_sort___:
  for i in range___-1):
    for j in range___-i-1):
      if list[j] > list[j+1]:
        temp = list[j]
        list[j] = list[j+1]
        list[j+1] = temp
  return list
  
print___) // [0, 1, 4, 5, 9]"
Build a Python script that takes an array of numbers as input and prints the maximum element.,"[1,4,7,3]","def find_max(arr):
    max_value = -float('inf')
    for num in arr:
        if num > max_value:
            max_value = num
    return max_value

arr = [1,4,7,3]
result = find_max(arr)
print(result)",Data Structure,3089,"def find_max___:
    max_value = -float___
    for num in arr:
        if num > max_value:
            max_value = num
    return max_value

arr = ___
result = find_max___
print___"
Design a Python script to generate a frequency table from a given data set.,"data_set = [9, 5, 9, 8, 5, 5, 9]","def calculateFrequency(data_set):
    frequency_table = dict()
    for item in data_set:
        frequency_table[item] = frequency_table.get(item, 0) + 1
    return frequency_table

data_set = [9,5,9,8,5,5,9]
frequency_table = calculateFrequency(data_set)
print(frequency_table) # Outputs {9: 3, 5: 3, 8: 1}",Data Structure,3090,"def calculateFrequency___:
    frequency_table = dict()
    for item in data_set:
        frequency_table[item] = frequency_table.get___ + 1
    return frequency_table

data_set = ___
frequency_table = calculateFrequency___
print(frequency_table) # Outputs ___"
Create an algorithm in Python using numpy to normalize a given array of numbers.,"[1, 2, 3, 4]","import numpy as np

def normalize(arr):
  return (arr - np.mean(arr)) / np.std(arr)

normalize([1,2,3,4]) # [-1.,  0.,  1.,  2.]",Data Structure,3095,"import numpy as np

def normalize___:
  return ___) / np.std___

normalize___ # [-1.,  0.,  1.,  2.]"
"Craft a program in Python to take in a list of integers, and return the sum of the even numbers in the list.","[1, 2, 3, 4, 5]","def sum_even(arr):
    '''
    Function to calculate the sum of even numbers in an array
    
    Parameters
    arr: list of integers
    
    Returns
    sum of even numbers in the array
    '''
    total = 0
    for num in arr:
        if num % 2 == 0:
            total += num
    return total",Data Structure,3096,"def sum_even___:
    '''
    Function to calculate the sum of even numbers in an array
    
    Parameters
    arr: list of integers
    
    Returns
    sum of even numbers in the array
    '''
    total = 0
    for num in arr:
        if num % 2 == 0:
            total += num
    return total"
Design a program in Python to remove duplicate items in a list and display the resulting list.,"mylist = ['apple', 'pineapple', 'apple', 'banana']","def remove_duplicates(mylist):
    newlist = list(set(mylist))
    return newlist

mylist = ['apple', 'pineapple', 'apple', 'banana']
print(remove_duplicates(mylist))",Data Structure,3097,"def remove_duplicates___:
    newlist = list___)
    return newlist

mylist = ['apple', 'pineapple', 'apple', 'banana']
print___)"
Write a Python program to randomly shuffle a list of elements.,"[1,2,3,4,5,6,7]","import random

list_elements = [1,2,3,4,5,6,7]
random.shuffle(list_elements)
print (list_elements)",Data Structure,3098,"import random

list_elements = ___
random.shuffle___
print ___"
Generate a python function to find the largest number from the given list,"[10, 20, 40, 19]","def largest_number(list):
    largest = list[0]
    for number in list:
        if number > largest:
            largest = number
    return largest",Data Structure,3099,"def largest_number___:
    largest = list___
    for number in list:
        if number > largest:
            largest = number
    return largest"
Compose a Python program to move zeros in a given list to the end.,"[1,0,2,3,0,4,5,0]","def move_zeroes(nums):
    """"""
    Moves all the zeros in a given list to the end.
    @param nums: List
    @return: List
    """"""
    i = 0
    for num in nums:
        if num != 0:
            nums[i] = num
            i += 1
    while i < len(nums):
        nums[i] = 0
        i += 1
    return nums",Data Structure,3108,"def move_zeroes___:
    """"""
    Moves all the zeros in a given list to the end.
    @param nums: List
    @return: List
    """"""
    i = 0
    for num in nums:
        if num != 0:
            nums[i] = num
            i += 1
    while i < len___:
        nums[i] = 0
        i += 1
    return nums"
Write an optimized sequential search algorithm in Python that takes a list of numbers and a target number as input and returns the index of the target if it exists in the list.,"[1, 2, 3, 4, 5, 6], target = 4","def find_target(nums, target):
  for i in range(len(nums)):
    if nums[i] == target:
      return i
  return -1",Data Structure,3112,"def find_target___:
  for i in range___):
    if nums[i] == target:
      return i
  return -1"
Edit the following Python code to remove duplicate values in the given array.,"arr = [1, 2, 4, 2, 5, 4]","arr = [1, 2, 4, 5]
 
unique_arr = []
 
for element in arr:
    if element not in unique_arr:
        unique_arr.append(element)
 
print(unique_arr) # [1, 2, 4, 5]",Data Structure,3113,"arr = ___
 
unique_arr = []
 
for element in arr:
    if element not in unique_arr:
        unique_arr___element)
 
print___ # [1, 2, 4, 5]"
Create a lambda expression in Python to filter a list of integer greater than 50.,"[45, 12, 52, 89, 33, 99]","list1 = [45, 12, 52, 89, 33, 99]
filtered_list = list(filter(lambda x: x > 50, list1))

print(filtered_list)",Data Structure,3119,"list1 = ___
filtered_list = list___)

print___"
Develop a Python program to check if a list contains any duplicates,"nums = [1, 4, 5, 1]","def contains_duplicates(nums):
    seen = set()
    for num in nums:
        if num in seen:
            return True
        seen.add(num)
    return False

if __name__ == '__main__':
    nums = [1, 4, 5, 1]
    contains = contains_duplicates(nums)
    if contains:
        print('The list contains duplicates.')
    else:
        print('The list doesn\'t contain duplicates.')",Data Structure,3120,"def contains_duplicates___:
    seen = set()
    for num in nums:
        if num in seen:
            return True
        seen.add___
    return False

if __name__ == '__main__':
    nums = ___
    contains = contains_duplicates___
    if contains:
        print___
    else:
        print___"
Create a Python program that takes in an array and returns an array with each element multiplied by two.,"[2, 3, 4]","def double_array_elements(arr):
    new_arr = []
    for num in arr:
        new_arr.append(num * 2)
    return new_arr

arr = [2, 3, 4]

new_arr = double_array_elements(arr)
print(new_arr) # [4, 6, 8]",Data Structure,3130,"def double_array_elements___:
    new_arr = []
    for num in arr:
        new_arr___num * 2)
    return new_arr

arr = ___

new_arr = double_array_elements___
print___ # [4, 6, 8]"
Come up with a python program to find the longest common prefix in a list of strings.,"[""hello"", ""hey"", ""hi"", ""have""]","def longest_common_prefix(strings):
    if len(strings) == 0: 
        return ''

    prefix = strings[0]
    for s in strings:
        i = 0 
        while i < len(prefix) and i < len(s) and s[i] == prefix[i]: 
            i += 1 
        prefix = prefix[:i] 
    return prefix 

print(longest_common_prefix([""hello"", ""hey"", ""hi"", ""have""]))  # Output: h",Data Structure,3131,"def longest_common_prefix___:
    if len___ == 0: 
        return ''

    prefix = strings___
    for s in strings:
        i = 0 
        while i < len___ and i < len___ and s[i] == prefix[i]: 
            i += 1 
        prefix = prefix[:i] 
    return prefix 

print___)  # Output: h"
"Create a function in Python that takes two parameters, an array and an integer, and returns a new array with all of the elements of the array multiplied by the integer.","array = [1, 2, 3]
int = 4","def multiply_by_int(array, int):
    new_array = []
    for elem in array:
        new_array.append(elem * int)
    return new_array",Data Structure,3132,"def multiply_by_int___:
    new_array = []
    for elem in array:
        new_array___elem * int)
    return new_array"
Generate a list of distinct values from an array of integers using a python program.,"[50, 20, 30, 40, 10]","unique_list = list(set([50, 20, 30, 40, 10]))
print(unique_list)",Data Structure,3135,"unique_list = list___)
print___"
Generate a Python program to identify the last occurrence of an element in a list.,"element: 8
list: [3, 1, 4, 5, 8, 6, 8]","def last_occurrence(x, lst):
  last_index = -1
  for i in range(len(lst)):
    if lst[i] == x:
      last_index = i
  return last_index",Data Structure,3137,"def last_occurrence___:
  last_index = -1
  for i in range___):
    if lst[i] == x:
      last_index = i
  return last_index"
Create a Python script that takes a list of integers and finds the highest value.,"[2, 5, 3, 4, 8]","The highest value is 8.

list_ints = [2, 5, 3, 4, 8]

highest_value = max(list_ints)

print('The highest value is ' + str(highest_value) + '.')",Data Structure,3138,"The highest value is 8.

list_ints = ___

highest_value = max___

print___ + '.')"
Create a Python program to generate a list of random integers with the size,5,"import random

def generate_random_int_list(n):
  return [random.randint(0,10) for i in range(n)]",Data Structure,3144,"import random

def generate_random_int_list___:
  return [random.randint___ for i in range___]"
Create a Python program to remove repeating numbers from an array.,"[2, 3, 3, 4, 5, 4]","def removeRepeats(arr):
    result = []
    seen = set()
    for num in arr:
        if num not in seen:
            result.append(num)
            seen.add(num)
     return result

res = removeRepeats([2, 3, 3, 4, 5, 4])
print(res)",Data Structure,3155,"def removeRepeats___:
    result = []
    seen = set()
    for num in arr:
        if num not in seen:
            result___num)
            seen.add___
     return result

res = removeRepeats___
print___"
Design a Python program to find the sum of the two largest numbers in a list.,"[1, 3, 5, 7, 9]","def find_sum_of_largest(lst):
  lst.sort()
  return lst[-1] + lst[-2]

print(find_sum_of_largest([1, 3, 5, 7, 9]))",Data Structure,3158,"def find_sum_of_largest___:
  lst.sort()
  return lst[-1] + lst[-2]

print___)"
Develop a Python code which can search for a name in a list and return the position of the name in the list.,"[""John"", ""Richard"", ""Paul"", ""Ringo""]","def search(name_list, name): 
    for i in range(len(name_list)): 
        if name_list[i] == name: 
            return i 
    return -1",Data Structure,3162,"def search___: 
    for i in range___): 
        if name_list[i] == name: 
            return i 
    return -1"
Create a Python dictionary comprehension to remove all odd numbers from the provided list.,"[1, 2, 3, 4, 5]","even_dict = {k: v for k, v in enumerate([1, 2, 3, 4, 5]) if v % 2 == 0}",Data Structure,3163,even_dict = ___
Generate a Python program to find the maximum number in a given set of numbers.,"7, 6, 5, 9, 8","def find_maximum(nums):
    # Initialize the maximum number 
    max_num = nums[0]
    # Loop through the list
    for num in nums:
        # Check if the current number is bigger
        if num > max_num:
            # If it is, save the number
            max_num = num

    return max_num

# call the function
maximum = find_maximum(nums)
print(""The maximum is "" + str(maximum))",Data Structure,3168,"def find_maximum___:
    # Initialize the maximum number 
    max_num = nums___
    # Loop through the list
    for num in nums:
        # Check if the current number is bigger
        if num > max_num:
            # If it is, save the number
            max_num = num

    return max_num

# call the function
maximum = find_maximum___
print___)"
Calculate the sum of a given list of integers in Python.,"[ 7, 15, 23, 5, 9 ]","def sum_list(my_list):
  total = 0
  for num in my_list:
    total += num
  return total

print(sum_list([7, 15, 23, 5, 9]))",Data Structure,3173,"def sum_list___:
  total = 0
  for num in my_list:
    total += num
  return total

print___)"
Create an algorithm in Python to find the maximum number in a list,"list = [1, 4, 5, 9, 12, 14]","def find_max(list):
    max_num = list[0]
    for num in list:
        if num > max_num:
            max_num = num
    return max_num

max_number = find_max(list)
print(max_number)",Data Structure,3179,"def find_max___:
    max_num = list___
    for num in list:
        if num > max_num:
            max_num = num
    return max_num

max_number = find_max___
print___"
"Given a list of student records consisting of student name, roll number, and marks, write a Python program to sort the records based on marks in descending order.","records = [['John Doe', 1, 92], ['Anna Smith', 2, 91], ['Jim Green', 3, 87]]","def sort_by_marks(records):
    # Sort the records list according to the marks 
    sorted_records =sorted(records, key = lambda x: x[2], reverse=True)

    # Return the sorted list
    return sorted_records",Data Structure,3180,"def sort_by_marks___:
    # Sort the records list according to the marks 
    sorted_records =sorted___

    # Return the sorted list
    return sorted_records"
"Given a 2D array in Python, write a code to calculate the sum of all elements.","arr = [[1, 2, 3], [4, 5, 6], [7 , 8, 9]]","total = 0
for row in arr: 
    for num in row: 
        total += num 
print(total) # 45",Data Structure,3183,"total = 0
for row in arr: 
    for num in row: 
        total += num 
print___ # 45"
"In Python, write a program to find the average of all the even numbers in a given list.","list = [1, 7, 8, 10, 12, 17]","def average_even(list):
    even_list = []
    for i in list:
        if i % 2 == 0:
            even_list.append(i)
    return sum(even_list)/len(even_list)",Data Structure,3186,"def average_even___:
    even_list = []
    for i in list:
        if i % 2 == 0:
            even_list___i)
    return sum___/len___"
Create a Python program to find all numbers in a given list that are evenly divisible by 4.,"[1, 8, 10, 15, 20, 25]","def find_divisible_by_4(num_list):
    result_list = []
    
    for i in num_list:
        if i % 4 == 0:
            result_list.append(i)
            
    return result_list
 
print(find_divisible_by_4([1, 8, 10, 15, 20, 25]))",Data Structure,3188,"def find_divisible_by_4___:
    result_list = []
    
    for i in num_list:
        if i % 4 == 0:
            result_list___i)
            
    return result_list
 
print___)"
Write a Python program to convert a list into a dictionary.,"[1, 2, 3, 4]","input_list = [1, 2, 3, 4]
output_dict = {}

for item in input_list:
  output_dict[item] = None

print(output_dict)",Data Structure,3189,"input_list = ___
output_dict = {}

for item in input_list:
  output_dict[item] = None

print___"
Create a Python script to search a list of words for a given word and return its index.,"words = ['GPT', 'model', 'natural', 'language', 'processing'], search = 'language'","def search(words, search):
    for i, word in enumerate(words):
        if word == search:
            return i
    return -1

index = search(words, 'language')
print(index)",Data Structure,3191,"def search___:
    for i, word in enumerate___:
        if word == search:
            return i
    return -1

index = search___
print___"
Generate Python code to search through a given list of integers and return the closest match to the given number.,"[1, 5, 9, 10, 12, 15], search_term = 11","def closest_match(numbers, search_term):
    closest_match = None
    min_diff = float('inf')
    
    for number in numbers:
        diff = abs(number - search_term)
        if diff < min_diff:
            min_diff = diff
            closest_match = number
    
    return closest_match",Data Structure,3192,"def closest_match___:
    closest_match = None
    min_diff = float___
    
    for number in numbers:
        diff = abs___
        if diff < min_diff:
            min_diff = diff
            closest_match = number
    
    return closest_match"
Write a function in Python to check if a given array of numbers is in ascending order.,"[3, 5, 7, 9, 16, 19]","def isSorted(arr):
    for i in range(len(arr) - 1):
        if arr[i] > arr[i+1]:
            return False
    return True

print(isSorted([3, 5, 7, 9, 16, 19]))",Data Structure,3195,"def isSorted___:
    for i in range___ - 1):
        if arr[i] > arr[i+1]:
            return False
    return True

print___)"
Generate a Python statement to select unique values from a list.,"seq = [2, 3, 5, 3, 4, 9, 5]","result = set(seq)
print(result)",Data Structure,3200,"result = set___
print___"
"Given a list of names, write a program in Python to create a new list with the first letter in each name capitalized.","names = [""kevin"", ""david"", ""james"", ""george""]","def capitalized_list(names):
    new_list = []
    for name in names:
        new_list.append(name.capitalize())
    
    return new_list

print(capitalized_list(names))

# Output
['Kevin', 'David', 'James', 'George']",Data Structure,3203,"def capitalized_list___:
    new_list = []
    for name in names:
        new_list___name.capitalize())
    
    return new_list

print___)

# Output
['Kevin', 'David', 'James', 'George']"
Create a class in Python with a method to sort the given array in an ascending order.,"[3, 2, 5, 1, 4]","class Sort: 
    def sort_arr(self, arr):
        arr.sort()
        return arr",Data Structure,3205,"class Sort: 
    def sort_arr___:
        arr.sort()
        return arr"
Create a sorting algorithm in Python to organize a given array of numbers.,"Array of numbers: [3, 5, 4, 1, 6]","def bubbleSort(nums): 
    for i in range(len(nums)-1): 
        for j in range(0, len(nums)-i-1): 
            if nums[j] > nums[j+1] : 
                nums[j], nums[j+1] = nums[j+1], nums[j] 
    return nums
  
arr = [3, 5, 4, 1, 6]
print (bubbleSort(arr))",Data Structure,3207,"def bubbleSort___: 
    for i in range___-1): 
        for j in range___-i-1): 
            if nums[j] > nums[j+1] : 
                nums[j], nums[j+1] = nums[j+1], nums[j] 
    return nums
  
arr = ___
print ___)"
"Write a Python script that processes the list of words, and changes the case of the characters to capital letters.","words = [""elephant"", ""goose"", ""rabbit""]","def capitalize_strings(words):
    capital_words = []
    for word in words:
        capital_words.append(word.upper())
    
    return capital_words

capitalized_words = capitalize_strings(words)
print(capitalized_words)",Data Structure,3209,"def capitalize_strings___:
    capital_words = []
    for word in words:
        capital_words___word.upper())
    
    return capital_words

capitalized_words = capitalize_strings___
print___"
Generate an algorithm in Python that finds the number of times an element is present in an array.,"arr = [4, 5, 2, 4, 2]
x = 2","def countOccurrences(arr, x): 
  
    count = 0
    for i in range(len(arr)): 
        if (x == arr[i]): 
            count = count + 1
  
    return count 
  
arr = [4, 5, 2, 4, 2]
x = 2
print(countOccurrences(arr, x))",Data Structure,3210,"def countOccurrences___: 
  
    count = 0
    for i in range___): 
        if ___: 
            count = count + 1
  
    return count 
  
arr = ___
x = 2
print___)"
Design a linear search algorithm in Python that returns the index of an item in an array.,"arr = [1,2,3,4,5]","def linear_search(arr, target):
    """"""
    Searches through a given input array to find the index of a provided target number.
    Returns -1 if the target number is not found.
    """"""
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1",Data Structure,3213,"def linear_search___:
    """"""
    Searches through a given input array to find the index of a provided target number.
    Returns -1 if the target number is not found.
    """"""
    for i in range___):
        if arr[i] == target:
            return i
    return -1"
Create a Python program to classify a set of numbers into odd and even.,"[1, 2, 3, 4, 5]","def classify_odd_even(input_list):
    odd_nums = []
    even_nums = []
    for item in input_list:
        if item % 2 == 0:
            even_nums.append(item)
        else:
            odd_nums.append(item)

    return odd_nums, even_nums

input_list = [1, 2, 3, 4, 5]
odd_nums, even_nums = classify_odd_even(input_list)
print(""Odd Numbers: "", odd_nums)
print(""Even Numbers: "", even_nums)",Data Structure,3214,"def classify_odd_even___:
    odd_nums = []
    even_nums = []
    for item in input_list:
        if item % 2 == 0:
            even_nums___item)
        else:
            odd_nums___item)

    return odd_nums, even_nums

input_list = ___
odd_nums, even_nums = classify_odd_even___
print___
print___"
Generate a Python script that takes a list of integers and prints out the sum of their squares.,"data: [1, 2, 3]","data = [1, 2, 3] 
sum = 0 

for number in data: 
 sum += number ** 2 

print(f""The sum of the squares of the given numbers is {sum}."")",Data Structure,3215,"data = ___ 
sum = 0 

for number in data: 
 sum += number ** 2 

print(f""The sum of the squares of the given numbers is ___."")"
Optimize a function in Python which takes a list and returns the sum of all its elements.,"[1, 2, 3]","def sum_list_elements(lst):
    sum = 0
    for item in lst:
        sum += item
    return sum

print(sum_list_elements([1, 2, 3]))",Data Structure,3217,"def sum_list_elements___:
    sum = 0
    for item in lst:
        sum += item
    return sum

print___)"
Create a Python program to read an array of integers and calculate their sum.,"[1, 3, 5, 7]","def calculate_sum(arr):
  sum = 0

  for i in arr:
    sum += i

  return sum

input_array = [1, 3, 5, 7]

result = calculate_sum(input_array)

print(result) # prints 16",Data Structure,3218,"def calculate_sum___:
  sum = 0

  for i in arr:
    sum += i

  return sum

input_array = ___

result = calculate_sum___

print___ # prints 16"
Construct a Python function that takes in three strings as parameters and returns a list containing sorted versions of the strings.,"""apples"", ""oranges"", ""peaches""","def sort_strings(s1, s2, s3):
    return sorted([s1, s2, s3])

result = sort_strings('apples', 'oranges', 'peaches')
print(result)",Data Structure,3223,"def sort_strings___:
    return sorted___

result = sort_strings___
print___"
Design a Python script to rank a set of given numbers.,"[3, 8, 2, 9, 5]","def rank(nums): 
    sortedNums = sorted(nums, reverse = True) 
    for i in range(len(sortedNums)): 
        if sortedNums[i] == nums[i]: 
            print (i + 1, end = "" "") 
  
# Driver code 
nums = [3, 8, 2, 9, 5] 
rank(nums)",Data Structure,3229,"def rank___: 
    sortedNums = sorted___ 
    for i in range___): 
        if sortedNums[i] == nums[i]: 
            print ___ 
  
# Driver code 
nums = ___ 
rank___"
"Given a list of words and a length, write a Python program that returns a list of words with length equal or greater than the given length.","words = ['apple', 'toy', 'trees']
length = 5","def search_by_length(words, length):
    result = []
    for word in words:
        if len(word) >= length:
            result.append(word)
    return result

words = ['apple', 'toy', 'trees']
length = 5

print(search_by_length(words, length))",Data Structure,3237,"def search_by_length___:
    result = []
    for word in words:
        if len___ >= length:
            result___word)
    return result

words = ['apple', 'toy', 'trees']
length = 5

print___)"
Write a Python program to convert a list of lists into a dictionary where the first element of each list is the key and the rest of the elements are the values.,"list1 = [""apple"", ""red"", ""green""]
list2 = [""banana"", ""yellow"", ""green""]","dict1 = {}
for lst in [list1, list2]:
 key = lst[0]
 val = lst[1:]
 dict1[key] = val

print(dict1)
# Output: {'apple': ['red', 'green'], 'banana': ['yellow', 'green']}",Data Structure,3241,"dict1 = {}
for lst in [list1, list2]:
 key = lst___
 val = lst[1:]
 dict1[key] = val

print___
# Output: ___"
Write a Python program to generate a list of even numbers between two given numbers.,"Start value = 2
End value = 20","def generate_list(start, end):
    result = []
    for i in range(start, end+1):
        if i%2 == 0:
            result.append(i)
    return result

print(generate_list(2, 20))",Data Structure,3243,"def generate_list___:
    result = []
    for i in range___:
        if i%2 == 0:
            result___i)
    return result

print___)"
Create a script in Python that can sort the following list of items alphabetically.,"list = ['car', 'apple', 'ball', 'Boat']","def sortAlpha(list):
    list.sort()
    return list",Data Structure,3244,"def sortAlpha___:
    list.sort()
    return list"
Write an algorithm in Python that identifies and removes duplicates from a given array.,"Array = [2, 3, 4, 3, 2]","def removeDuplicates(array):
 result = []

 for number in array:
 if number not in result:
 result.append(number)

 return result

array = [2, 3, 4, 3, 2]
print(removeDuplicates(array))",Data Structure,3247,"def removeDuplicates___:
 result = []

 for number in array:
 if number not in result:
 result___number)

 return result

array = ___
print___)"
Find the largest number in an array using Python.,"Array: [1, 10, 5, 6, 9, 8, 20]","arr = [1, 10, 5, 6, 9, 8, 20]

def largest_number(arr):
  largest = arr[0]
  for num in arr:
    if num > largest:
      largest = num

  return largest

largest = largest_number(arr)
print(largest) # 20",Data Structure,3249,"arr = ___

def largest_number___:
  largest = arr___
  for num in arr:
    if num > largest:
      largest = num

  return largest

largest = largest_number___
print___ # 20"
Create a Python script to find the maximum and minimum numbers from a list.,"list1 = [2, 3, 7, 4, 5]","maxnum = max(list1)
minnum = min(list1)
print(""Maximum number is:"", maxnum) 
print(""Minimum number is:"", minnum) 
#prints Maximum number is: 7   Minimum number is: 2",Data Structure,3254,"maxnum = max___
minnum = min___
print___ 
print___ 
#prints Maximum number is: 7   Minimum number is: 2"
Create a method in Python to search through a list and return all elements which are divisible by 5.,"[4, 9, 5, 20, 21, 33]","def find_division_by_5(lst):
    """"""Search through a list and return all elements which are divisible by 5""""""
    result = []
    for item in lst:
        if item % 5 == 0:
            result.append(item)
    
    return result
    
if __name__ == '__main__':
    lst = [4, 9, 5, 20, 21, 33]
    print(find_division_by_5(lst))",Data Structure,3258,"def find_division_by_5___:
    """"""Search through a list and return all elements which are divisible by 5""""""
    result = []
    for item in lst:
        if item % 5 == 0:
            result___item)
    
    return result
    
if __name__ == '__main__':
    lst = ___
    print___)"
Create a Python program to generate a list of random numbers.,"length = 5, min = 2, max = 10","import random

def generate_random_numbers(length, min, max):
  result = []
  for _ in range(length):
    result.append(round(random.uniform(min, max), 1))
  return result

print(generate_random_numbers(5, 2, 10)) # [2.6, 6.2, 2.5, 8.5, 8.1]",Data Structure,3264,"import random

def generate_random_numbers___:
  result = []
  for _ in range___:
    result___round(random.uniform(min, max), 1))
  return result

print___) # [2.6, 6.2, 2.5, 8.5, 8.1]"
Write a code in Python to display a sorted array of the numbers in an array that are greater than the given value.,"[2, 4, 6, 8, 10, 12]
Given number: 6","def sort_greater_numbers(arr, num):
    result = [x for x in arr if  x > num]
    result.sort()
    return result",Data Structure,3278,"def sort_greater_numbers___:
    result = [x for x in arr if  x > num]
    result.sort()
    return result"
Write a Python program to convert a list to a tuple,"[1,2,3]","def list_to_tuple(list):
    return tuple(list)",Data Structure,3281,"def list_to_tuple___:
    return tuple___"
"Given a Python list of integers, write a function to find the sum of the elements in the list.","nums = [1, 2, 3, 4, 5]","def findSum(nums):
 total = 0
 for num in nums:
 total += num
 return total",Data Structure,3287,"def findSum___:
 total = 0
 for num in nums:
 total += num
 return total"
Create a Python program to count the number of occurrences of a certain element in a list.,"[1, 2, 1, 2, 5, 2, 1]","def count_occurrences(lst, element):
    count = 0
    for item in lst:
        if item == element:
            count += 1
    return count

result = count_occurrences([1, 2, 1, 2, 5, 2, 1], 2)
print(result)",Data Structure,3291,"def count_occurrences___:
    count = 0
    for item in lst:
        if item == element:
            count += 1
    return count

result = count_occurrences___
print___"
Write a Python script to find all prime numbers in a given list of numbers.,"[13, 19, 23, 5, 7]","""""""
Find all prime numbers in a given list of numbers
""""""

def is_prime(n):
    for i in range(2, n):
        if n % i == 0:
            return False
        else:
            return True

numbers = [13, 19, 23, 5, 7]
for num in numbers:
    if is_prime(num):
        print(num,""is a prime number"")",Data Structure,3292,"""""""
Find all prime numbers in a given list of numbers
""""""

def is_prime___:
    for i in range___:
        if n % i == 0:
            return False
        else:
            return True

numbers = ___
for num in numbers:
    if is_prime___:
        print___"
Write a Python program that takes a list of numbers and creates a new list of even numbers only.,"lst = [2, 3, 5, 6, 7, 8, 10, 11]","def get_even_numbers(lst):
    even_lst = []
    for num in lst:
        if num % 2 == 0:
            even_lst.append(num)
    return even_lst",Data Structure,3295,"def get_even_numbers___:
    even_lst = []
    for num in lst:
        if num % 2 == 0:
            even_lst___num)
    return even_lst"
Compose a python program to search an element in an array,"[2, 3, 4, 5]","def linear_search(arr, x): 
    for i in range(len(arr)): 
  
        if arr[i] == x: 
            return i+1
  
    return -1

arr = [2, 3, 4, 5] 
x = 4

print(linear_search(arr, x))",Data Structure,3297,"def linear_search___: 
    for i in range___): 
  
        if arr[i] == x: 
            return i+1
  
    return -1

arr = ___ 
x = 4

print___)"
Write a Python script that sorts a list of tuples in descending order based on the second element of each tuple.,"[('a', 3), ('b', 1), ('c', 4)]","def sortTupleListInDescendingOrder(tuple_list):
    tuple_list.sort(key=lambda tup: tup[1], reverse=True)
    return tuple_list

sorted_list = sortTupleListInDescendingOrder([('a', 3), ('b', 1), ('c', 4)])

print(sorted_list)",Data Structure,3302,"def sortTupleListInDescendingOrder___:
    tuple_list.sort___
    return tuple_list

sorted_list = sortTupleListInDescendingOrder___, ___, ___])

print___"
Create a Python script to remove all elements from a list that are divisible by 3.,"[2, 3, 4, 6, 8, 9]","def remove_divisible_by_3(arr):
    new_arr = []
    for num in arr:
        if num % 3 != 0:
            new_arr.append(num)
    return new_arr

arr = [2, 3, 4, 6, 8, 9]
result = remove_divisible_by_3(arr)
print(result)",Data Structure,3303,"def remove_divisible_by_3___:
    new_arr = []
    for num in arr:
        if num % 3 != 0:
            new_arr___num)
    return new_arr

arr = ___
result = remove_divisible_by_3___
print___"
Write a Python program that takes an array containing n elements and generates the power set.,n = 3,"import itertools

def powerset(lst):
    powerset = []
    for n in range(len(lst) + 1):
        for subset in itertools.combinations(lst, n):
            powerset.append(subset)
    return powerset

arr = [1, 2, 3]
print(powerset(arr))",Data Structure,3304,"import itertools

def powerset___:
    powerset = []
    for n in range___ + 1):
        for subset in itertools.combinations___:
            powerset___subset)
    return powerset

arr = ___
print___)"
Generate a Python program that finds the maximum and minimum values of a given list.,"[-1, 6, 4, -2, 3]","def findMaxMin(numbers):
    max_val = max(numbers)
    min_val = min(numbers)
    return max_val, min_val

numbers = [-1, 6, 4, -2, 3]
max_val, min_val = findMaxMin(numbers)

print(""The maximum value is:"", max_val)
print(""The minimum value is:"", min_val)",Data Structure,3306,"def findMaxMin___:
    max_val = max___
    min_val = min___
    return max_val, min_val

numbers = [-1, 6, 4, -2, 3]
max_val, min_val = findMaxMin___

print___
print___"
Generate a Python program to implement binary search on the given sorted array.,"[2, 3, 5, 6, 8, 9]","def binary_search(arr, target):
    low = 0
    high = len(arr) - 1
    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == target:
            return mid
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1
    return -1",Data Structure,3310,"def binary_search___:
    low = 0
    high = len___ - 1
    while low <= high:
        mid = ___ // 2
        if arr[mid] == target:
            return mid
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1
    return -1"
Optimize the following Python code to compute the sum of even numbers in a list.,"my_list = [1, 2, 3, 4, 5, 6]
total = 0
for num in my_list:
 if num % 2 == 0:
  total += num
print(total)","my_list = [1, 2, 3, 4, 5, 6]

# sum comprehension 
total = sum(num for num in my_list if num % 2 == 0)
print(total)",Data Structure,3312,"my_list = ___

# sum comprehension 
total = sum___
print___"
Develop a program in Python to sort a list of integer numbers.,"[1, 7, 5, 9, 3]","def sort_list(list):
 sorted_list = sorted(list)
 return sorted_list 

list = [1, 7, 5, 9 , 3]
print(sort_list(list)) # will print [1, 3, 5, 7, 9]",Data Structure,3317,"def sort_list___:
 sorted_list = sorted___
 return sorted_list 

list = ___
print___) # will print [1, 3, 5, 7, 9]"
Create a Python program that finds the low and high stock prices from a given array of stock prices.,"Example array: [9, 15, 7, 8, 13, 5]","def min_max_stock_price(arr):
 low = float('inf')
 high = float('-inf')
 
 for price in arr:
 low = min(low, price)
 high = max(high, price)
 
 return [low, high]
 
print(min_max_stock_price([9, 15, 7, 8, 13, 5])) # Output: [5, 15]",Data Structure,3318,"def min_max_stock_price___:
 low = float___
 high = float___
 
 for price in arr:
 low = min___
 high = max___
 
 return [low, high]
 
print___) # Output: [5, 15]"
"Create a function in Python that takes a list of strings, converts it to camelCase, and returns a new list with the converted strings.","list = [""this"", ""is"", ""an"", ""example""]","def convertToCamelCase(list):
    camelCaseList = []

    for string in list:
        string = string.capitalize()
        camelCaseList.append(string)

    return ''.join(camelCaseList)",Data Structure,3319,"def convertToCamelCase___:
    camelCaseList = []

    for string in list:
        string = string.capitalize()
        camelCaseList___string)

    return ''.join___"
Create a Python program that finds the longest common prefix strings among an array of strings.,"[""flower"",""flow"",""flight""]","def lcp(arr):
    if len(arr) == 0:
        return """"
    elif len(arr) == 1:
        return arr[0]
    else:
        prefix = arr[0]
        for i in range(1, len(arr)):
            while arr[i].find(prefix) != 0:
                prefix = prefix[:-1]
        return prefix

result = lcp([""flower"",""flow"",""flight""])
print(result)",Data Structure,3321,"def lcp___:
    if len___ == 0:
        return """"
    elif len___ == 1:
        return arr___
    else:
        prefix = arr___
        for i in range___):
            while arr[i].find___ != 0:
                prefix = prefix[:-1]
        return prefix

result = lcp___
print___"
Write a Python function to input a list of integers and a number and output the number of times that number appears in the list.,"[1, 2, 3, 4, 5, 2, 6], 2","def count_occurrences(numbers, n):
 count = 0
 for num in numbers:
 if num == n:
 count += 1
 return count",Data Structure,3324,"def count_occurrences___:
 count = 0
 for num in numbers:
 if num == n:
 count += 1
 return count"
Implement an algorithm in Python to find the mode of the given array,"arr = [2, 4, 3, 3, 5, 3, 7]","def findMode(arr): 
 max_count = 1 
 mode = arr[0] 
 count = 1 
  
 for i in range(1,len(arr)): 
 if (arr[i] == arr[i - 1]): 
 count = count + 1 # increment count
 if (count > max_count): 
 max_count = count # update max_count 
 mode = arr[i] 
 else: 
 count = 1 # reset count 
  
 return mode 

# Driver program 
arr = [2, 4, 3, 3, 5, 3, 7] 
print(findMode(arr)) # prints 3",Data Structure,3325,"def findMode___: 
 max_count = 1 
 mode = arr___ 
 count = 1 
  
 for i in range___): 
 if ___: 
 count = count + 1 # increment count
 if ___: 
 max_count = count # update max_count 
 mode = arr[i] 
 else: 
 count = 1 # reset count 
  
 return mode 

# Driver program 
arr = ___ 
print___) # prints 3"
"Given a list of words and a target word, write a Python function to check if the target word exists in the list.","Let's say the list is ['apple', 'banana', 'car', 'dog'] and the target word is 'banana'.","def isElementPresent(list, target): 
  for word in list: 
    if word == target: 
      return True
  return False

wordlist = ['apple', 'banana', 'car', 'dog'] 
target = 'banana'
print(isElementPresent(wordlist, target)) 
# prints True",Data Structure,3333,"def isElementPresent___: 
  for word in list: 
    if word == target: 
      return True
  return False

wordlist = ['apple', 'banana', 'car', 'dog'] 
target = 'banana'
print___) 
# prints True"
Create a Python program that reads in an unsorted array of integers and prints the array in sorted order.,"[3, 2, 5, 1, 7, 4]","def sort_array(arr):
   arr.sort()
   return arr

arr = [3, 2, 5, 1, 7, 4]

sorted_arr = sort_array(arr)
print(sorted_arr) # [1, 2, 3, 4, 5, 7]",Data Structure,3334,"def sort_array___:
   arr.sort()
   return arr

arr = ___

sorted_arr = sort_array___
print___ # [1, 2, 3, 4, 5, 7]"
"Given a 2D array of integers, write a Python function to rotate the array clockwise by 90 degrees.","[[1, 2, 3],
[4, 5, 6],
[7, 8, 9]]","def rotate_array(arr):
    newarr = []
    for i in range(len(arr[0])):
        newarr_row = []
        for j in range(len(arr)):
            newarr_row.append(arr[len(arr)-j-1][i])
        newarr.append(newarr_row)

    return newarr",Data Structure,3335,"def rotate_array___:
    newarr = []
    for i in range___):
        newarr_row = []
        for j in range___):
            newarr_row___arr[len(arr)-j-1][i])
        newarr___newarr_row)

    return newarr"
Generate a Python program to convert a list of lists into one flat list.,"[[1, 2], [3, 4], [5, 6]]","def flattenList(inputList): 
    outputList = [] 
    for subList in inputList: 
        for item in subList: 
            outputList.append(item) 
    return outputList",Data Structure,3342,"def flattenList___: 
    outputList = [] 
    for subList in inputList: 
        for item in subList: 
            outputList___item) 
    return outputList"
Generate a Python program that finds the maximum of an array of numbers.,"Find the maximum number from this array: [2, 4, 6, 1, 7, 12]","def find_max(arr): 
    # Initialize max 
    max = arr[0] 
  
    # Traverse from arr[1] to end 
    for i in range(1, len(arr)): 
  
        # Compare every element with current max 
        if arr[i] > max: 
            max = arr[i] 
              
    return max

arr = [2, 4, 6, 1, 7, 12] 

result = find_max(arr)
print(result)",Data Structure,3343,"def find_max___: 
    # Initialize max 
    max = arr___ 
  
    # Traverse from arr___ to end 
    for i in range___): 
  
        # Compare every element with current max 
        if arr[i] > max: 
            max = arr[i] 
              
    return max

arr = ___ 

result = find_max___
print___"
Write a Python program to remove all occurrences of a specific number in a given list.,"list = [2, 3, 4, 2, 5, 2, 6, 2, 7]","def remove_num(myList, num):
    return [x for x in myList if x != num]
  
removed_list = remove_num(list, 2)
print(removed_list)",Data Structure,3345,"def remove_num___:
    return [x for x in myList if x != num]
  
removed_list = remove_num___
print___"
Generate a function in Python to take a list of numbers as input and count the number of elements that are greater than a given number.,"list = [1, 5, 8, 10, 4], threshold = 7","def count_greater_than_threshold(list, threshold):
    count = 0
    for num in list:
        if num > threshold:
            count += 1
    return count
print(count_greater_than_threshold(list, threshold)) # Prints 2",Data Structure,3347,"def count_greater_than_threshold___:
    count = 0
    for num in list:
        if num > threshold:
            count += 1
    return count
print___) # Prints 2"
Write a script in Python using the Requests library to scrape all the websites from a list.,"Site URLs = [""http://www.example1.com"" , ""http://www.example2.com""]","import requests

site_urls = [""http://www.example1.com"" , ""http://www.example2.com""]

for url in site_urls:
 response = requests.get(url)
 page_source = response.content
 print(page_source)",Data Structure,3348,"import requests

site_urls = [""http://www.example1.com"" , ""http://www.example2.com""]

for url in site_urls:
 response = requests.get___
 page_source = response.content
 print___"
Generate a sentence in Python that uses a for loop to iterate over a list of strings.,"strings = ['apple', 'banana', 'cherry']","for s in strings:
    print(f'I like to eat {s}!')",Data Structure,3354,"for s in strings:
    print(f'I like to eat ___!')"
Design an algorithm in Python which takes a given 2D array and finds the product of the elements in each row.,"[[1, 2], [3, 4]]","def rowProduct(arr):
    result = []
    for row in arr:
        product = 1
        for num in row:
            product = product * num
        result.append(product)

    return result

arr = [[1, 2], [3, 4]]

result = rowProduct(arr)
print(result)",Data Structure,3355,"def rowProduct___:
    result = []
    for row in arr:
        product = 1
        for num in row:
            product = product * num
        result___product)

    return result

arr = [___, ___]

result = rowProduct___
print___"
Create a Python function to calculate the sum of all numbers in a nested list.,"nested_list = [[1,2], [3,4], [6,7]]","def calculate_sum(nested_list):
    sum = 0
    for item in nested_list:
        for num in item:
            sum += num
    return sum

nested_list = [[1,2], [3,4], [6,7]]
print(calculate_sum(nested_list))",Data Structure,3357,"def calculate_sum___:
    sum = 0
    for item in nested_list:
        for num in item:
            sum += num
    return sum

nested_list = [___, ___, ___]
print___)"
Write a Python program to sort the input list according to its length.,"list = [""Hello"", ""World"", ""This is a test""]","list = [""Hello"", ""World"", ""This is a test""]

def sort_list_length(list):
    '''
    Function to sort the list according to its length
    '''
    return sorted(list, key=len)

if __name__ == ""__main__"":
    list = [""Hello"", ""World"", ""This is a test""]
    sorted_list = sort_list_length(list)
    print(sorted_list)",Data Structure,3358,"list = [""Hello"", ""World"", ""This is a test""]

def sort_list_length___:
    '''
    Function to sort the list according to its length
    '''
    return sorted___

if __name__ == ""__main__"":
    list = [""Hello"", ""World"", ""This is a test""]
    sorted_list = sort_list_length___
    print___"
Create a Python program that sorts a list of integers.,"my_list = [9, 3, 6, 7, 1]","def sort_list(list):
    for i in range(len(list)):
        for j in range(i+1, len(list)):
            if list[i] > list[j]:
                list[i], list[j] = list[j], list[i]
    return list

my_list = [9, 3, 6, 7, 1]
my_list = sort_list(my_list)
print(my_list)",Data Structure,3360,"def sort_list___:
    for i in range___):
        for j in range___):
            if list[i] > list[j]:
                list[i], list[j] = list[j], list[i]
    return list

my_list = ___
my_list = sort_list___
print___"
Generate a Python code to search for an element in an array,"[2, 3, 4, 5, 7, 8, 9], N = 7","def linear_search(arr, N):
  for i in range(len(arr)):
    if arr[i] == N:
      return i+1
  return -1",Data Structure,3361,"def linear_search___:
  for i in range___):
    if arr[i] == N:
      return i+1
  return -1"
Develop a program to normalize a list of numbers in Python.,"[1.2,-2.3, 3.4, -4.5, 5.6]","def normalize_list(lst):
    '''Normalizes a list of numbers'''
    max_val = max(lst)
    min_val = min(lst)

    normalized_lst = []
    for num in lst:
        normalized_val = (num - min_val)/(max_val - min_val)
        normalized_lst.append(normalized_val)

    return normalized_lst",Data Structure,3365,"def normalize_list___:
    '''Normalizes a list of numbers'''
    max_val = max___
    min_val = min___

    normalized_lst = []
    for num in lst:
        normalized_val = ___/___
        normalized_lst___normalized_val)

    return normalized_lst"
Write a Python program to filter a list and sort it in descending order by length.,"a = [""apple"", ""ball"", ""cat"", ""dog"", ""elephant"", ""frog"", ""giraffe""]","a.sort(key=len, reverse=True)
# Output: ['elephant', 'giraffe', 'ball', 'apple', 'dog', 'cat', 'frog']",Data Structure,3367,"a.sort___
# Output: ['elephant', 'giraffe', 'ball', 'apple', 'dog', 'cat', 'frog']"
Write a script in Python that takes a URL and a list of words as input and then searches the page content for any of the given words.,"URL: https://www.example.com
Word List: [cat, dog, bird]","import requests

url = 'https://www.example.com'
word_list = ['cat', 'dog', 'bird']

r = requests.get(url).text
for word in word_list:
 if word in r:
  print('Word ""{}"" found on the given URL'.format(word))
else:
  print('Word ""{}"" not found the given URL'.format(word))",Data Structure,3373,"import requests

url = 'https://www.example.com'
word_list = ['cat', 'dog', 'bird']

r = requests.get___.text
for word in word_list:
 if word in r:
  print___)
else:
  print___)"
Create a python program to randomly select a survivor from a given list of names,"names = [""Alex"", ""Bob"", ""Charlotte"", ""John"", ""Mike""]","import random

names = [""Alex"", ""Bob"", ""Charlotte"", ""John"", ""Mike""]

def randomly_select_survivor(names):
    survivor = random.choice(names)
    print(f""The randomly selected survivor is: {survivor}"")

randomly_select_survivor(names)",Data Structure,3374,"import random

names = [""Alex"", ""Bob"", ""Charlotte"", ""John"", ""Mike""]

def randomly_select_survivor___:
    survivor = random.choice___
    print(f""The randomly selected survivor is: ___"")

randomly_select_survivor___"
"In Python, generate a script to find the length of a given list.","Input List: [1, 3, 5, 7, 9]","def lengthList(arr):
    length = 0
    for i in arr:
        length += 1
    return length
 
print(lengthList([1, 3, 5, 7, 9])) # Outputs: 5",Data Structure,3377,"def lengthList___:
    length = 0
    for i in arr:
        length += 1
    return length
 
print___) # Outputs: 5"
Create a new program in Python that creates a list of prime numbers ranging from 2 to n.,15,"""""""
Create a list of prime numbers ranging from 2 to n.
""""""

def prime_list(n):
    prime_list = []
    for num in range(2, n + 1):
        for prime in prime_list:
            if num % prime == 0: 
                break
        else: 
            prime_list.append(num)
    return prime_list

if __name__ == '__main__':
    n = 15
    print(prime_list(n))",Data Structure,3383,"""""""
Create a list of prime numbers ranging from 2 to n.
""""""

def prime_list___:
    prime_list = []
    for num in range___:
        for prime in prime_list:
            if num % prime == 0: 
                break
        else: 
            prime_list___num)
    return prime_list

if __name__ == '__main__':
    n = 15
    print___)"
Write a Python program to create a list of dictionaries from a given list of dictionary keys and a list of dictionary values.,"keys: [1, 2, 3]
values: [""a"", ""b"", ""c""]","keys = [1,2,3] 
values = [""a"",""b"",""c""]
list_of_dict = [dict(zip(keys, values)) for i in range(len(keys))] 
print(list_of_dict) # Output: [{1: 'a', 2: 'b', 3: 'c'}]",Data Structure,3393,"keys = ___ 
values = [""a"",""b"",""c""]
list_of_dict = [dict___) for i in range___)] 
print(list_of_dict) # Output: [___]"
Can you create a Python program to get the largest element from a list?,"myList = [13, 7, 5, 21, 101]","def largestElement(myList): 
    return max(myList)",Data Structure,3394,"def largestElement___: 
    return max___"
Create a function ``squareSum`` in python which will take a list of numbers as arguments and calculate their sum of squares.,"numbers=[1, 2, 3, 4, 5]","def squareSum(numbers):
    sum_of_squares = 0
    for num in numbers:
        sum_of_squares += num**2
    return sum_of_squares",Data Structure,3397,"def squareSum___:
    sum_of_squares = 0
    for num in numbers:
        sum_of_squares += num**2
    return sum_of_squares"
Generate a Python program to search an element in an array.,"[2, 4, 6, 8], 8","def searchElement(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i
    return -1
    
arr = [2, 4, 6, 8]
x = 8

result = searchElement(arr, x) 

if(result == -1): 
  print(""Element is not present in array"") 
else: 
  print(""Element is present at index"", result)",Data Structure,3401,"def searchElement___: 
    for i in range___): 
        if arr[i] == x: 
            return i
    return -1
    
arr = ___
x = 8

result = searchElement___ 

if___: 
  print___ 
else: 
  print___"
Generate a Python function that takes a list and a number as input and assigns the number to each item in the list.,"[2, 3, 4, 5], 7","def assign_value(lst, num):
    for i in range(len(lst)):
        lst[i] = num
    return lst

print(assign_value([2, 3, 4, 5], 7)) # Output: [7, 7, 7, 7]",Data Structure,3402,"def assign_value___:
    for i in range___):
        lst[i] = num
    return lst

print___) # Output: [7, 7, 7, 7]"
Design a Python program to sort the given list using insertion sort.,"[3,8,15,2,6,10]","def insertionSort(arr): 
    for i in range(1, len(arr)): 
  
        j = i-1
        key = arr[i] 
  
        while j >=0 and key < arr[j] : 
                arr[j+1] = arr[j] 
                j -= 1
        arr[j+1] = key 
  
arr = [3,8,15,2,6,10]
insertionSort(arr) 
print (""Sorted array is:"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i])",Data Structure,3404,"def insertionSort___: 
    for i in range___): 
  
        j = i-1
        key = arr[i] 
  
        while j >=0 and key < arr[j] : 
                arr[j+1] = arr[j] 
                j -= 1
        arr[j+1] = key 
  
arr = ___
insertionSort___ 
print ___ 
for i in range___): 
    print ___"
Create a program using Python to generate a histogram given a list of numbers.,"numbers = [2, 5, 2, 8, 3, 9, 4, 10]","# importing matplotlib module
import matplotlib.pyplot as plt

# list of numbers 
numbers = [2, 5, 2, 8, 3, 9, 4, 10]

# draw histogram 
plt.hist(numbers, bins = [0, 2, 4, 6, 8, 10])

# x label, y label and title
plt.xlabel('Numbers');
plt.ylabel('Frequency');
plt.title('Histogram for Numbers')

# display histogram 
plt.show()",Data Structure,3405,"# importing matplotlib module
import matplotlib.pyplot as plt

# list of numbers 
numbers = ___

# draw histogram 
plt.hist___

# x label, y label and title
plt.xlabel___;
plt.ylabel___;
plt.title___

# display histogram 
plt.show()"
Implement a Python function that takes a list of numbers as an input and counts the number of odd numbers in the list.,"[2, 3, 5, 7]","def countOddNumbers(arr):
    count = 0
    for num in arr:
        if num % 2 != 0:
            count += 1
    return count

count = countOddNumbers([2, 3, 5, 7])
print(""Number of odd numbers found: "" + str(count))",Data Structure,3416,"def countOddNumbers___:
    count = 0
    for num in arr:
        if num % 2 != 0:
            count += 1
    return count

count = countOddNumbers___
print___)"
Create a Python program to randomly filter out half of the elements of an array.,"[9, 2, 7, 4, 5, 6, 8, 1, 4, 0]","import random

def filter_half_array(arr):
    while len(arr)>0:
        el = random.choice(arr) # randomly select an element of the list
        arr.remove(el) # remove the selected item from the list
    return arr

arr = [9, 2, 7, 4, 5, 6, 8, 1, 4, 0]
filter_half_array(arr)",Data Structure,3425,"import random

def filter_half_array___:
    while len___>0:
        el = random.choice___ # randomly select an element of the list
        arr___el) # remove the selected item from the list
    return arr

arr = ___
filter_half_array___"
Develop an algorithm in Python that takes an array of integers and returns the maximum of the numbers.,"[7, 9, 5, 10, 2]","def get_max(arr):
    max_num = None

    for num in arr:
        if max_num == None or num > max_num:
            max_num = num 

    return max_num

result = get_max([7, 9, 5, 10, 2])
print(result)",Data Structure,3427,"def get_max___:
    max_num = None

    for num in arr:
        if max_num == None or num > max_num:
            max_num = num 

    return max_num

result = get_max___
print___"
Use Python to generate a program that takes a list of integers as input and prints out their factors.,"[24, 75]","def print_factors(numbers):
    
    for n in numbers:
        print(""Factors of {}:"".format(n)) 
        for i in range(1, n + 1):
            if n % i == 0:
                print(i)

print_factors([24, 75])",Data Structure,3430,"def print_factors___:
    
    for n in numbers:
        print___) 
        for i in range___:
            if n % i == 0:
                print___

print_factors___"
Design a Python program that computes the maximum and minimum of a given list.,"[5, 3, 4, 10, 7]","def find_max_min(list_vals): 
    max_val = max(list_vals) 
    min_val = min(list_vals) 
  
    return max_val, min_val 

list_vals = [5, 3, 4, 10, 7] 
print(""Maximum value :"", find_max_min(list_vals)[0]) 
print(""Minimum value :"", find_max_min(list_vals)[1])",Data Structure,3431,"def find_max_min___: 
    max_val = max___ 
    min_val = min___ 
  
    return max_val, min_val 

list_vals = ___ 
print___[0]) 
print___[1])"
Create a Python program to take a list of names and sort them alphabetically.,"['Adam', 'David', 'Mark', 'John', 'Sam']","def sort_names_alphabetically(names):
    names.sort()
    print(names)

names = ['Adam', 'David', 'Mark', 'John', 'Sam']
sort_names_alphabetically(names)

# Output: 
# ['Adam', 'David', 'John', 'Mark', 'Sam']",Data Structure,3435,"def sort_names_alphabetically___:
    names.sort()
    print___

names = ['Adam', 'David', 'Mark', 'John', 'Sam']
sort_names_alphabetically___

# Output: 
# ['Adam', 'David', 'John', 'Mark', 'Sam']"
Create an algorithm in Python which takes a list of numbers and sorts them in ascending order.,"numbers = [4, 1, 8, 5, 6]","def sortAscending(numbers):
    for i in range(len(numbers)):
        for j in range(i+1,len(numbers)):
            if numbers[i] > numbers[j] :
                temp = numbers[i]
                numbers[i] = numbers[j]
                numbers[j] = temp
    return numbers

print(sortAscending([4, 1, 8, 5, 6]))

# Output:
# [1, 4, 5, 6, 8]",Data Structure,3436,"def sortAscending___:
    for i in range___):
        for j in range___):
            if numbers[i] > numbers[j] :
                temp = numbers[i]
                numbers[i] = numbers[j]
                numbers[j] = temp
    return numbers

print___)

# Output:
# ___"
"Given a list of squares in a 2D array, generate a Python program to find the number of squares with a side greater than 5.","[[2, 6, 1], [4, 3, 9], [4, 6, 7]]","count = 0
for row in arr:
    for col in row:
        if col > 5:
            count += 1
print(count)",Data Structure,3438,"count = 0
for row in arr:
    for col in row:
        if col > 5:
            count += 1
print___"
Compose a Python program for finding the maximum number from a given list of numbers.,"list = [10, 11, 25, 80, 50]","def max_number(list):
    max_num = 0
    for i in list:
        if i > max_num:
            max_num = i
    return max_num

max_num = max_number(list)
print(""The maximum number is:"", max_num)",Data Structure,3439,"def max_number___:
    max_num = 0
    for i in list:
        if i > max_num:
            max_num = i
    return max_num

max_num = max_number___
print___"
Develop a Python program to insert a given element into a specific position in a list,"2, [1, 3, 4]","# Create a function
def insert_element(el, lst):
    # Insert the element into the specific position
    lst.insert(2, el)
    return lst

# Test the function
print(insert_element(2, [1,3,4]))

# Output
[1, 3, 2, 4]",Data Structure,3440,"# Create a function
def insert_element___:
    # Insert the element into the specific position
    lst___2, el)
    return lst

# Test the function
print___)

# Output
___"
Generate a function in Python to find the maximum element from a given array.,"[10, 15, 20, 11, 99]","def findMaxElement(array):
    maxElement = 0
    for element in array:
        if element > maxElement:
            maxElement = element
    return maxElement

array = [10, 15, 20, 11, 99] 
maxElement = findMaxElement(array)
print(""The maximum element in the array is"", maxElement)",Data Structure,3442,"def findMaxElement___:
    maxElement = 0
    for element in array:
        if element > maxElement:
            maxElement = element
    return maxElement

array = ___ 
maxElement = findMaxElement___
print___"
Implement an algorithm in Python that takes an array of numbers and returns the maximum value in the array.,"[2, 5, 8, 10, 4]","def find_max(arr):
    max_val = arr[0]
    
    for num in arr:
        if num > max_val:
            max_val = num
    return max_val

result = find_max([2, 5, 8, 10, 4])
print(result)",Data Structure,3446,"def find_max___:
    max_val = arr___
    
    for num in arr:
        if num > max_val:
            max_val = num
    return max_val

result = find_max___
print___"
Create an algorithm in Python to determine all pairs of negative numbers in an array.,"[-2, -1, 0, 1, 2]","def findNegativePairs(arr):
  results = []
  for i in range(0, len(arr)):
    for j in range(i + 1, len(arr)):
      if arr[i] < 0 and arr[j] < 0:
        results.append((arr[i], arr[j]))
  return results 

print(findNegativePairs([-2, -1, 0, 1, 2]))",Data Structure,3449,"def findNegativePairs___:
  results = []
  for i in range___):
    for j in range___):
      if arr[i] < 0 and arr[j] < 0:
        results___(arr[i], arr[j]))
  return results 

print___)"
Write an algorithm in Python that uses an iterative approach to count all elements greater than a given value in an array.,"array: [7, 8, 4, 2, 9], target: 5","def countGreaterThan(arr, target):
    count = 0
    for element in arr:
        if element > target:
            count += 1
    return count

# Example
arr = [7, 8, 4, 2, 9]
target = 5
print(countGreaterThan(arr, target))
# Output: 3",Data Structure,3451,"def countGreaterThan___:
    count = 0
    for element in arr:
        if element > target:
            count += 1
    return count

# Example
arr = ___
target = 5
print___)
# Output: 3"
Create a script in Python to sort a list of names by alphabetical order.,"names = [""John"", ""Sara"", ""Joseph"", ""James""]","names.sort()
print(names)",Data Structure,3455,"names.sort()
print___"
Create a new Python list with only the odd numbers from the following list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","odd_numbers = [num for num in [1, 2, 3, 4, 5, 6, 7, 8, 9] if num % 2 != 0]",Data Structure,3457,odd_numbers = [num for num in ___ if num % 2 != 0]
Write a Python program to input a list of integers and remove any duplicate values.,"my_list = [1, 3, 3, 5, 6, 6, 9]","def remove_duplicates(my_list):
    unique_list = []
    for i in my_list:
        if i not in unique_list:
            unique_list.append(i)
    return unique_list",Data Structure,3459,"def remove_duplicates___:
    unique_list = []
    for i in my_list:
        if i not in unique_list:
            unique_list___i)
    return unique_list"
Write a Python program to classify a set of input data as either True or False.,"[1, 2, 3, 4, 5]","def classify(data):
    if min(data) < 0:
        return False
    elif max(data) > 1:
        return False
    else:
        return True",Data Structure,3460,"def classify___:
    if min___ < 0:
        return False
    elif max___ > 1:
        return False
    else:
        return True"
Design a program in Python which takes an array of words as input and return an alphabetically ordered array of the words.,"[""apple"",""banana"",""grapes""]","def sortAlphabetically(arr):
    arr.sort()
    return arr

print(sortAlphabetically([""apple"",""banana"",""grapes""]))",Data Structure,3466,"def sortAlphabetically___:
    arr.sort()
    return arr

print___)"
"Using the comment as a guide, create a python loop that calculates the sum of the numbers in a given list","Input List: [1, 2, 3, 4, 5]","def sum_list(input_list):
    """"""Calculate the sum of the numbers in a given list""""""
    total = 0
    for num in input_list:
        total += num
    return total",Data Structure,3473,"def sum_list___:
    """"""Calculate the sum of the numbers in a given list""""""
    total = 0
    for num in input_list:
        total += num
    return total"
Create a function in Python to remove all duplicates from a given list.,Example of a list containing duplicates,"def remove_duplicates(lst): 
    new_list = [] 
    for item in lst: 
        if item not in new_list: 
            new_list.append(item) 
    return new_list",Data Structure,3475,"def remove_duplicates___: 
    new_list = [] 
    for item in lst: 
        if item not in new_list: 
            new_list___item) 
    return new_list"
Design a Python program to generate a set of Fibonacci numbers up to a given value.,n = 10,"def fibonacci(n): 
 fib = [] 
 
 a, b = 0, 1
 while a < n: 
  fib.append(a) 
  a, b = b, a + b 
 
 return fib

n = 10
print(fibonacci(n))",Data Structure,3477,"def fibonacci___: 
 fib = [] 
 
 a, b = 0, 1
 while a < n: 
  fib___a) 
  a, b = b, a + b 
 
 return fib

n = 10
print___)"
Write a python program to combine two lists in a dictionary. The dictionary should have the first list as keys and the second list as the corresponding values.,"list1 = [1,2,3]
list2 = [4,5,6]","def list_to_dict(keys, values):
 result = {}
 for i in range(len(keys)):
  result[keys[i]] = values[i] 
 return result",Data Structure,3480,"def list_to_dict___:
 result = {}
 for i in range___):
  result[keys[i]] = values[i] 
 return result"
Construct a function to reverse an array in Python.,"[1, 2, 3, 4]","def reverse_array(arr):
    left = 0
    right = len(arr) - 1

    while left < right:
        temp = arr[left]
        arr[left] = arr[right]
        arr[right] = temp
        left += 1
        right -= 1

arr = [1, 2, 3, 4]

reverse_array(arr)

print(arr)  # [4, 3, 2, 1]",Data Structure,3481,"def reverse_array___:
    left = 0
    right = len___ - 1

    while left < right:
        temp = arr[left]
        arr[left] = arr[right]
        arr[right] = temp
        left += 1
        right -= 1

arr = ___

reverse_array___

print___  # [4, 3, 2, 1]"
"Using the input, write a Python function to calculate the average number of items in the list.","list_items = [1, 3, 5, 7, 8, 10]","def average_list_items(list_items):
  list_length = len(list_items)
  list_sum = sum(list_items)
  average = list_sum/list_length
  return average",Data Structure,3482,"def average_list_items___:
  list_length = len___
  list_sum = sum___
  average = list_sum/list_length
  return average"
Generate Python code that collects all the even numbers from a given list of numbers.,"[1, 2, 3, 4, 5, 6, 7, 8]","def collect_even_numbers(nums):
    even_nums = []
    for num in nums:
        if num % 2 == 0:
            even_nums.append(num)
    return even_nums",Data Structure,3486,"def collect_even_numbers___:
    even_nums = []
    for num in nums:
        if num % 2 == 0:
            even_nums___num)
    return even_nums"
Write a Python program to find the most common number among a given array of numbers.,"[1, 5, 4, 3, 2, 5, 4, 1, 3, 5]","def most_common(arr):
    counts = {}
    for n in arr:
        if n in counts:
            counts[n] += 1
        else:
            counts[n] = 1
    max_count = 0
    max_element = None
    for k, v in counts.items():
        if v > max_count:
            max_count = v
            max_element = k
    return max_element",Data Structure,3487,"def most_common___:
    counts = {}
    for n in arr:
        if n in counts:
            counts[n] += 1
        else:
            counts[n] = 1
    max_count = 0
    max_element = None
    for k, v in counts.items():
        if v > max_count:
            max_count = v
            max_element = k
    return max_element"
Create a Python script for downloading webpages from a list of URLs.,"The URLs are: https://www.google.com, https://www.youtube.com and https://www.yahoo.com","import requests

urls = [""https://www.google.com"", ""https://www.youtube.com"", ""https://www.yahoo.com""]

for url in urls:
 response = requests.get(url)
 html = response.text
 with open(f""{url.split('//')[1]}.html"", ""w"") as file:
 file.write(html)",Data Structure,3489,"import requests

urls = [""https://www.google.com"", ""https://www.youtube.com"", ""https://www.yahoo.com""]

for url in urls:
 response = requests.get___
 html = response.text
 with open(f""___.html"", ""w"") as file:
 file.write___"
Create a python program that reads a list of names and picks a random name from that list.,"John, Mary, Paul, Gerry","import random

names = [""John"", ""Mary"", ""Paul"", ""Gerry""]

print(""The randomly chosen name is"", random.choice(names))",Data Structure,3493,"import random

names = [""John"", ""Mary"", ""Paul"", ""Gerry""]

print___)"
Create a Python program that takes a list of digits as input and returns a 2D list of all the possible permutations of these digits.,"[1, 2]","def permutations(nums):
 permutations_list = []
 for permutation in itertools.permutations(nums):
 permutations_list.append(list(permutation))
 
 return permutations_list
 
 print(permutations([1, 2]))
# Output: [[1, 2], [2, 1]]",Data Structure,3495,"def permutations___:
 permutations_list = []
 for permutation in itertools.permutations___:
 permutations_list___list(permutation))
 
 return permutations_list
 
 print___)
# Output: [___, ___]"
Implement a function in Python which takes an array of integers and an integer target and returns whether the given target exists in the array or not.,"[1, 4, 7, 11], 4","def contains_target(numbers, target):
    return target in numbers",Data Structure,3496,"def contains_target___:
    return target in numbers"
Can you generate a Python program that takes a list of numbers and creates a new list with only even numbers?,"[1, 2, 3, 4, 5, 6, 7, 8]","def extractEvenNumbers(numbers): 
    even_numbers = [num for num in numbers if num % 2 == 0]
    return even_numbers
  
numbers = [1, 2, 3, 4, 5, 6, 7, 8]
even_numbers = extractEvenNumbers(numbers)
print(even_numbers)",Data Structure,3497,"def extractEvenNumbers___: 
    even_numbers = [num for num in numbers if num % 2 == 0]
    return even_numbers
  
numbers = ___
even_numbers = extractEvenNumbers___
print___"
Write a Python program to look for an element in an array and return its index if found or -1 otherwise,"[10, 20, 10, 40, 5], 10","def search_element(arr, ele):
    for i in range(len(arr)):
        if arr[i] == ele:
            return i
    return -1",Data Structure,3503,"def search_element___:
    for i in range___):
        if arr[i] == ele:
            return i
    return -1"
Design a Python program to find all the palindromes in a given list of words.,"[""apple"", ""eye"", ""ball"", ""abba""]","mylist = [""apple"", ""eye"", ""ball"", ""abba""]

palindromes = [word for word in mylist if word == word[::-1]]
print(palindromes)",Data Structure,3505,"mylist = [""apple"", ""eye"", ""ball"", ""abba""]

palindromes = [word for word in mylist if word == word[::-1]]
print___"
Construct a Python program to sort an array in descending order.,"arr = [4, 5, 2, 6, 1, 3]","def descending_sort(arr): 
    for i in range(len(arr)): 
        for j in range(0, len(arr)-i-1): 
            if arr[j] < arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr
  
arr = [4, 5, 2, 6, 1, 3]
  
descending_sort(arr)

print (""Sorted array is:"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i])",Data Structure,3508,"def descending_sort___: 
    for i in range___): 
        for j in range___-i-1): 
            if arr[j] < arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr
  
arr = ___
  
descending_sort___

print ___ 
for i in range___): 
    print ___"
Can you modify the given Python program to fetch the top 5 elements in the list?,"sequence = [2, 8, 6, 4, 1, 9, 5]","sequence = [2, 8, 6, 4, 1, 9, 5]

top_5 = sorted(sequence)[-5:]

print(top_5)",Data Structure,3510,"sequence = ___

top_5 = sorted___[-5:]

print___"
"Write a Python program to replace all empty strings in a given list with ""NULL"".","data = [""A"", """", ""B"", """", ""C"", """"]","data = [""A"", ""NULL"", ""B"", ""NULL"", ""C"", ""NULL""]

##
new_data = []
for i in data:
 if i == """":
 new_data.append(""NULL"")
 else:
 new_data.append(i)

print(new_data)",Data Structure,3511,"data = [""A"", ""NULL"", ""B"", ""NULL"", ""C"", ""NULL""]

##
new_data = []
for i in data:
 if i == """":
 new_data___""NULL"")
 else:
 new_data___i)

print___"
Create a Python function which adds the given list of numbers and returns the sum.,"list_of_nums = [1, 2, 3, 4, 5]","def add_nums(list_of_nums):
 sum = 0
 for num in list_of_nums:
  sum += num
 return sum

sum_of_nums = add_nums(list_of_nums)
print(sum_of_nums) # 15",Data Structure,3512,"def add_nums___:
 sum = 0
 for num in list_of_nums:
  sum += num
 return sum

sum_of_nums = add_nums___
print___ # 15"
Convert the given JSON object to a Python list.,"{""name"": ""John"", ""age"": 25, ""hobby"": ""programming""}","data = {""name"": ""John"", ""age"": 25, ""hobby"": ""programming""}

list = list(data.values())
 
print(list)
# Output: [""John"", 25, ""programming""]",Data Structure,3513,"data = ___

list = list___)
 
print___
# Output: [""John"", 25, ""programming""]"
Create a function in Python to search a list for a given item.,"list = [1, 2, 3, 4, 5, 6]
item = 4","def search_list(lst, item): 
    for i in range(len(lst)): 
        if lst[i] == item: 
            return i 
    return -1

idx = search_list(list, item) 
if idx == -1: 
    print(""Item not found"")
else:
    print(""Item found at index"", idx)",Data Structure,3515,"def search_list___: 
    for i in range___): 
        if lst[i] == item: 
            return i 
    return -1

idx = search_list___ 
if idx == -1: 
    print___
else:
    print___"
"Create a function in Python that takes a list as an input and returns a list containing the same elements, but with all duplicates removed.","list = [1, 2, 3, 1, 4, 2, 5]","def remove_duplicates(list):
 result = []
 for element in list:
  if element not in result:
    result.append(element)
 return result

print(remove_duplicates(list)) # Will return [1, 2, 3, 4, 5]",Data Structure,3516,"def remove_duplicates___:
 result = []
 for element in list:
  if element not in result:
    result___element)
 return result

print___) # Will return [1, 2, 3, 4, 5]"
Write a python code to sort the given array of numbers in ascending order.,"[3, 5, 1, 6, 9, 4]","""""""
Sort array of numbers in ascending order
""""""

def sort_in_ascending(arr):
    arr.sort()
    return arr

if __name__==""__main__"":
    arr = [3, 5, 1, 6, 9, 4]
    sorted_arr = sort_in_ascending(arr)
    print(""Sorted array in ascending order is ""+str(sorted_arr))",Data Structure,3517,"""""""
Sort array of numbers in ascending order
""""""

def sort_in_ascending___:
    arr.sort()
    return arr

if __name__==""__main__"":
    arr = ___
    sorted_arr = sort_in_ascending___
    print___)"
Implement a sorting algorithm in Python that takes in a list of integers and returns a sorted version.,"[3, 5, 18, 6, 1, 20]","def sort_list(lst): 
  for i in range(len(lst)):
    min_idx = i
    for j in range(i+1, len(lst)):
      if lst[min_idx] > lst[j]:
        min_idx = j
    lst[i], lst[min_idx] = lst[min_idx], lst[i]
  return lst

print(sort_list([3, 5, 18, 6, 1, 20]))",Data Structure,3522,"def sort_list___: 
  for i in range___):
    min_idx = i
    for j in range___):
      if lst[min_idx] > lst[j]:
        min_idx = j
    lst[i], lst[min_idx] = lst[min_idx], lst[i]
  return lst

print___)"
Create an algorithm in Python to find the smallest number in an unsorted list,"[12, 5, 9, 8, 10]","def find_smallest(list):
    smallest = list[0]
    for num in list:
        if num < smallest:
            smallest = num
    return smallest

result = find_smallest([12, 5, 9, 8, 10])
print(result)",Data Structure,3524,"def find_smallest___:
    smallest = list___
    for num in list:
        if num < smallest:
            smallest = num
    return smallest

result = find_smallest___
print___"
Write an Algorithm to sort an array of integers using the insertion sort technique in Python,"[9, 3, 4, 2, 6, 7]","def insertion_sort(arr): 
 for i in range(1, len(arr)): 
 key = arr[i] 
 j = i-1
 while j>=0 and key < arr[j] : 
 arr[j+1] = arr[j] 
 j -= 1
 arr[j+1] = key 
return arr 
  
arr = [9, 3, 4, 2, 6, 7]
answer = insertion_sort(arr)
print(answer) # [2, 3, 4, 6, 7, 9]",Data Structure,3526,"def insertion_sort___: 
 for i in range___): 
 key = arr[i] 
 j = i-1
 while j>=0 and key < arr[j] : 
 arr[j+1] = arr[j] 
 j -= 1
 arr[j+1] = key 
return arr 
  
arr = ___
answer = insertion_sort___
print___ # [2, 3, 4, 6, 7, 9]"
Write a python program to find the smallest element in an array.,"arr = [4, 6, 2, 7, 5]","def find_smallest(arr):
    smallest = arr[0]
    for i in range(1, len(arr)):
        if arr[i] < smallest:
            smallest = arr[i]
    return smallest",Data Structure,3529,"def find_smallest___:
    smallest = arr___
    for i in range___):
        if arr[i] < smallest:
            smallest = arr[i]
    return smallest"
"Given a list of numbers, write a Python program to find the number which occurs the most in the list","list1 = [1, 2, 3, 4, 4, 3, 3, 3]","def most_frequent(list1): 
	return max(set(list1), key = list1.count) 

list1 = [1, 2, 3, 4, 4, 3, 3, 3]
print(""Number that occurs the most in the list is : "", most_frequent(list1))",Data Structure,3530,"def most_frequent___: 
	return max___, key = list1.count) 

list1 = ___
print___)"
"Given a list of integers, write a Python program to compute the maximum difference between any two numbers of the list?","[4, 8, 2, 10, 6]","def max_difference(numbers):
 max_diff = 0
 for i in range(len(numbers)-1):
 for j in range(i+1, len(numbers)):
 cur_diff = abs(numbers[i] - numbers[j])
 if cur_diff > max_diff:
 max_diff = cur_diff
 return max_diff

result = max_difference([4, 8, 2, 10, 6])
print(result)",Data Structure,3537,"def max_difference___:
 max_diff = 0
 for i in range___-1):
 for j in range___):
 cur_diff = abs___
 if cur_diff > max_diff:
 max_diff = cur_diff
 return max_diff

result = max_difference___
print___"
Can you create a Python function that returns the sum of all the elements in a given list?,"[1, 2, 3, 4, 5]","def list_sum(list):
   sum = 0
   for el in list:
       sum += el
   return sum",Data Structure,3539,"def list_sum___:
   sum = 0
   for el in list:
       sum += el
   return sum"
Create a python program to insert a new element into a given list in the correct order,"Input List: [1, 2, 3, 4]
Element: 0","def insert_element(array, element):
    if element >= array[len(array)-1]:
        array.append(element)
    else:
        for i in range(len(array)):
            if element < array[i]:
                array.insert(i, element)
                break
    return array",Data Structure,3540,"def insert_element___:
    if element >= array[len___-1]:
        array___element)
    else:
        for i in range___):
            if element < array[i]:
                array___i, element)
                break
    return array"
Write a script in Python to sort a list of words alphabetically.,"[python, java, c, sql, ruby]","def sort_words(words):
    '''
    Function to sort a list of words alphabetically
    
    Parameters
    words: list of strings
    
    Returns
    sorted list of strings
    '''
    sorted_list = sorted(words)
    return sorted_list",Data Structure,3543,"def sort_words___:
    '''
    Function to sort a list of words alphabetically
    
    Parameters
    words: list of strings
    
    Returns
    sorted list of strings
    '''
    sorted_list = sorted___
    return sorted_list"
Write a python script to sort the given array,"[10, 15, 7, 8, 12]","arr = [10, 15, 7, 8, 12]
arr.sort()
print(arr)",Data Structure,3544,"arr = ___
arr.sort()
print___"
Generate a valid Python script which calculates the median of a given  list of numbers.,"my_list = [1, 8, 4, 9, 5]","def median(my_list):
  my_list.sort()
  if len(my_list) % 2 == 0:
    return (my_list[(len(my_list) // 2) - 1] + my_list[(len(my_list)) // 2]) / 2
  return my_list[len(my_list) // 2]",Data Structure,3546,"def median___:
  my_list.sort()
  if len___ % 2 == 0:
    return ___ // 2) - 1] + my_list[___) // 2]) / 2
  return my_list[len___ // 2]"
Design a Python function to sort a list of strings by their first character alphabetically.,"[""yesterday"", ""today"", ""tomorrow""]","def sort_list_by_first_char(strings):
    return sorted(strings, key=lambda s: s[0])

strings = [""yesterday"", ""today"", ""tomorrow""]
print(sort_list_by_first_char(strings))",Data Structure,3547,"def sort_list_by_first_char___:
    return sorted___

strings = [""yesterday"", ""today"", ""tomorrow""]
print___)"
Create a function in Python that will take an array of integers and return the minimum value.,"[3, 9, 0, 7, 88]","def find_min(arr):
min = arr[0]
for num in arr:
 if num < min:
 min = num
return min

# Test
arr = [3, 9, 0, 7, 88]
min_val = find_min(arr)
print(""Minimum value is:"", min_val)  # Output: Minimum value is: 0",Data Structure,3548,"def find_min___:
min = arr___
for num in arr:
 if num < min:
 min = num
return min

# Test
arr = ___
min_val = find_min___
print___  # Output: Minimum value is: 0"
Create a Python function that takes a list of strings as input and returns a dictionary of words with their frequency counts.,"words = [""apple"", ""orange"", ""apple"", ""orange"", ""pear""]","def word_count(words):
    counter = {}
    for word in words:
        if word not in counter:
            counter[word] = 0
        counter[word] += 1
    return counter
    
words = [""apple"", ""orange"", ""apple"", ""orange"", ""pear""]
word_count(words)
""""""
{'apple': 2, 'orange': 2, 'pear': 1}
""""""",Data Structure,3551,"def word_count___:
    counter = {}
    for word in words:
        if word not in counter:
            counter[word] = 0
        counter[word] += 1
    return counter
    
words = [""apple"", ""orange"", ""apple"", ""orange"", ""pear""]
word_count___
""""""
___
"""""""
Create a Python program which prints the top three elements in a given list,"[10, 4, 45, 34, 99, 24, 10]","def top_three(list):
    sorted_list = sorted(list, reverse = True) 
    return sorted_list[:3]",Data Structure,3552,"def top_three___:
    sorted_list = sorted___ 
    return sorted_list[:3]"
Create a code generation task to generate a Python program to calculate the sum of a list of numbers.,"nums = [2, 5, 10, 15]","def list_sum(nums): 
    '''This function will take a list as input and return the sum of its elements.'''
    result = 0
    for num in nums:
        result += num
    return result

nums = [2, 5, 10, 15]
print(list_sum(nums))",Data Structure,3554,"def list_sum___: 
    '''This function will take a list as input and return the sum of its elements.'''
    result = 0
    for num in nums:
        result += num
    return result

nums = ___
print___)"
"Create a function in Python that takes a list as input and searches for a number ""x"" and returns the index of it.","[10, 8 , 5, 15], x = 15","def search(arr, x):
    for i in range(len(arr)):
        if arr[i] == x:
            return i
    return -1

arr = [10, 8 , 5, 15]
x = 15
print(search(arr, x))",Data Structure,3557,"def search___:
    for i in range___):
        if arr[i] == x:
            return i
    return -1

arr = ___
x = 15
print___)"
Write a Python program to search for a specific value in a large array of integers and return the index of the value if found.,"arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
target = 8","def search(arr, target):
 for i in range(len(arr)):
  if arr[i] == target:
   return i
 return -1
  
arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
target = 8
index = search(arr, target)
if index != -1:
 print(""Found at index: "" + str(index))
else:
 print(""Not Found"")",Data Structure,3559,"def search___:
 for i in range___):
  if arr[i] == target:
   return i
 return -1
  
arr = ___
target = 8
index = search___
if index != -1:
 print___)
else:
 print___"
"Create a program in Python, which takes two parameters: a list of integers and a number X, and returns true if there are two numbers in the list, such that their sum is equal to X.","list = [1, 3, 7, 4, 5]
X = 12","def two_sum(lst, x):
 for i in range(len(lst)):
  for j in range(i+1, len(lst)):
   if lst[i] + lst[j] == x:
    return True 
 return False

list = [1, 3, 7, 4, 5]
X = 12

two_sum(list, X) # True",Data Structure,3567,"def two_sum___:
 for i in range___):
  for j in range___):
   if lst[i] + lst[j] == x:
    return True 
 return False

list = ___
X = 12

two_sum___ # True"
Write a Python function that takes a list as an argument and returns the second largest element in the list.,"lst = [1, 14, 8, 5]","def second_largest(lst):
    sorted_list = sorted(lst)
    return sorted_list[-2]

result = second_largest(lst)
print(result)",Data Structure,3582,"def second_largest___:
    sorted_list = sorted___
    return sorted_list[-2]

result = second_largest___
print___"
Write a Python function to calculate the number of possible permutations for a given input array.,"[2, 1, 3]","from math import factorial 
  
def calculate_permutations(arr): 
    n = len(arr) 
    return factorial(n) 
  
result = calculate_permutations([2, 1, 3])
print(result)",Data Structure,3585,"from math import factorial 
  
def calculate_permutations___: 
    n = len___ 
    return factorial___ 
  
result = calculate_permutations___
print___"
Create a Python program to generate unique coupon codes with a given length and character set.,"length = 8
characters = '0123456789ABCDEF'","import random

def generate_coupon(length, characters):
 coupon_code = ''
 for i in range(length):
  coupon_code += random.choice(characters)
 return coupon_code

coupon_code = generate_coupon(8, '0123456789ABCDEF')
print(coupon_code)",Data Structure,3589,"import random

def generate_coupon___:
 coupon_code = ''
 for i in range___:
  coupon_code += random.choice___
 return coupon_code

coupon_code = generate_coupon___
print___"
Write a Python program for searching for a particular item in a list.,"[1, 5, 4, 6, 9, 10], item = 6","def search(input_list, item):
  for i in range(len(input_list)):
    if item == input_list[i]:
      return i
  
  return -1

if __name__ == '__main__':
  input_list = [1, 5, 4, 6, 9, 10]
  item = 6
  result = search(input_list, item)
  print(result)",Data Structure,3590,"def search___:
  for i in range___):
    if item == input_list[i]:
      return i
  
  return -1

if __name__ == '__main__':
  input_list = ___
  item = 6
  result = search___
  print___"
What is the best way to optimize the following Python code which prints the first and last letters of an array of strings?,"words = [""cat"", ""dog"", ""snake"", ""elephant""]","# optimized version 
words = [""cat"", ""dog"", ""snake"", ""elephant""]

first_letters = [word[0] for word in words] # list of first letters
last_letters = [word[-1] for word in words] # list of last letters

# print the results
print(first_letters)
print(last_letters)",Data Structure,3592,"# optimized version 
words = [""cat"", ""dog"", ""snake"", ""elephant""]

first_letters = [word___ for word in words] # list of first letters
last_letters = [word[-1] for word in words] # list of last letters

# print the results
print___
print___"
Create a function in Python that prints out all the odd numbers from a given list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def print_odd_numbers(lst):
    odd_nums = []
    for num in lst:
        if num % 2 != 0:
            odd_nums.append(num)
    print(odd_nums)

print_odd_numbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])",Data Structure,3594,"def print_odd_numbers___:
    odd_nums = []
    for num in lst:
        if num % 2 != 0:
            odd_nums___num)
    print___

print_odd_numbers___"
Produce a Python code for finding the largest element in an array.,"[40, 50, 11, 70, 39]","def find_max(arr):
    max = arr[0]
    for i in range(1,len(arr)):
        if arr[i] > max:
            max = arr[i]
    return max

result = find_max([40, 50, 11, 70, 39])
print(result)",Data Structure,3608,"def find_max___:
    max = arr___
    for i in range___):
        if arr[i] > max:
            max = arr[i]
    return max

result = find_max___
print___"
You are given a list of integers and a number n. Write a python program that checks if any two numbers in the list sum up to n.,"numbers = [1, 5, 6, 10, 8, 20]
n = 11","def sum_check(numbers, n):
    for i in range(len(numbers)):
        for j in range(i + 1, len(numbers)):
            if numbers[i] + numbers[j] == n:
                return True
    return False

numbers = [1, 5, 6, 10, 8, 20]
n = 11

print(sum_check(numbers, n))",Data Structure,3610,"def sum_check___:
    for i in range___):
        for j in range___):
            if numbers[i] + numbers[j] == n:
                return True
    return False

numbers = ___
n = 11

print___)"
Write a Python program to sort a given list of numbers and return the sorted list,"list_of_numbers = [2, 3, 5, 8, 1, 4]","list_of_numbers = [2, 3, 5, 8, 1, 4]

def sort_list(list_of_numbers): 
    list_of_numbers.sort() 
    return list_of_numbers

sorted_list = sort_list(list_of_numbers) 
print(sorted_list)",Data Structure,3613,"list_of_numbers = ___

def sort_list___: 
    list_of_numbers.sort() 
    return list_of_numbers

sorted_list = sort_list___ 
print___"
Create a Python script to search for a given element in a list?,"my_list = [1, 3, 5, 7, 8]","def find_element(my_list, x):
  found = False
  for item in my_list:
    if item == x:
      found = True
      break
  
  return found

element = 3

print(find_element(my_list, element))

# Output
True",Data Structure,3614,"def find_element___:
  found = False
  for item in my_list:
    if item == x:
      found = True
      break
  
  return found

element = 3

print___)

# Output
True"
Construct a python program to identify the number of times the given element is present in the given list.,"list: [2, 3, 4, 5, 2, 3]
x: 3","def count_x(list, x):
    count = 0
    for i in list:
        if i == x:
            count += 1
    return count",Data Structure,3617,"def count_x___:
    count = 0
    for i in list:
        if i == x:
            count += 1
    return count"
Create a Python script that uses a for loop to display the items from a list.,"[apple, orange, banana]","# Create a list
list = ['apple', 'orange', 'banana']

# Loop over the list
for item in list:
    print(item)",Data Structure,3618,"# Create a list
list = ['apple', 'orange', 'banana']

# Loop over the list
for item in list:
    print___"
"Given a Python list containing a set of numbers and strings, create a new list with only the integers.","mylist = ['a', 1, 3, 2.5, 'b']","mylist = [item for item in mylist if isinstance(item, int)]",Data Structure,3619,mylist = [item for item in mylist if isinstance___]
Opitmize a Python program to search a list of numbers for a given target number.,"list = [10,20,30,40,50]
target = 40","def search(list, target):
  
 for i in range(len(list)):
  if list[i] == target:
   return i
 return -1

list = [10,20,30,40,50]
target = 40

# linear search in list

index = search(list, target)

if index != -1:
 print(""Element found at index :"", index)
else:
 print(""Element not found"")",Data Structure,3621,"def search___:
  
 for i in range___):
  if list[i] == target:
   return i
 return -1

list = ___
target = 40

# linear search in list

index = search___

if index != -1:
 print___
else:
 print___"
Write an algorithm in Python to find the largest and smallest element in an array.,"arr = [3, 7, 1, 12, 5]","def find_min_max(arr):
    min, max = arr[0], arr[0]
    for item in arr:
        if item < min:
            min = item
        if item > max:
            max = item
    return min, max

# test
arr = [3, 7, 1, 12, 5]
min, max = find_min_max(arr)
print(f'min: {min}, max: {max}')",Data Structure,3623,"def find_min_max___:
    min, max = arr___, arr___
    for item in arr:
        if item < min:
            min = item
        if item > max:
            max = item
    return min, max

# test
arr = ___
min, max = find_min_max___
print(f'min: ___, max: ___')"
Generate a function in Python that returns the index of the first occurrence of a given number in an array.,"[1, 4, 6, 9], 5","def first_occurrence(arr, num):
    '''Returns index of the first occurrence of num in an array.'''
    for i in range(len(arr)):
        if(arr[i] == num):
            return i
    return -1

arr = [1, 4, 6, 9]
num = 5

first_occurrence(arr, num) # -1",Data Structure,3624,"def first_occurrence___:
    '''Returns index of the first occurrence of num in an array.'''
    for i in range___):
        if___:
            return i
    return -1

arr = ___
num = 5

first_occurrence___ # -1"
Write a Python program that takes a list of numbers and lists all the prime numbers in the list.,"[4, 8, 11, 13]","[11, 13]",Data Structure,3633,___
Write a Python script that takes a list of strings as input and prints out a modified version of the list. The modified version should contain only strings that have the letter 'b' in them.,"['foo', 'bar', 'baz', 'hello', 'world']","input = ['foo', 'bar', 'baz', 'hello', 'world']
output = [x for x in input if 'b' in x]
print(output) # ['bar', 'baz']",Data Structure,3634,"input = ['foo', 'bar', 'baz', 'hello', 'world']
output = [x for x in input if 'b' in x]
print___ # ['bar', 'baz']"
Create a function to sort the below list of numbers in ascending order in Python.,"[3,7,1,9,2]","def sorting_ascending(lst): 
    lst.sort() 
    return lst",Data Structure,3638,"def sorting_ascending___: 
    lst.sort() 
    return lst"
Generate a Python script that sorts a given array of integers.,"Array: <10, 8, 1, 4, 6, 5>","def array_sort(array):
  # Iterate over the array
  for i in range(len(array)):
    # Find the minimum element
    min_position = i
    for j in range(i + 1, len(array)):
      if array[min_position] > array[j]:
        min_position = j

    # Swap minimum element to current position
    array[i], array[min_position] = array[min_position], array[i]
  
  return array",Data Structure,3639,"def array_sort___:
  # Iterate over the array
  for i in range___):
    # Find the minimum element
    min_position = i
    for j in range___):
      if array[min_position] > array[j]:
        min_position = j

    # Swap minimum element to current position
    array[i], array[min_position] = array[min_position], array[i]
  
  return array"
Create a Python program to take an array of numbers and calculate the average.,"[1, 4, 5, 6, 7]","def average(nums):
    sum = 0
    for n in nums:
        sum += n
    return sum / len(nums)

nums = [1, 4, 5, 6, 7]
print(average(nums))",Data Structure,3644,"def average___:
    sum = 0
    for n in nums:
        sum += n
    return sum / len___

nums = ___
print___)"
Create a Python program to compute the average of all the numbers in a list.,"[1, 5, 9.7, 8, 5.6]","def avg(list):
    if len(list) == 0:
        return 0
    else:
        sum = 0
        for num in list:
            sum += num
        return sum / len(list)",Data Structure,3646,"def avg___:
    if len___ == 0:
        return 0
    else:
        sum = 0
        for num in list:
            sum += num
        return sum / len___"
Write a Python program to iterate through a list and return the index of the maximum of all the even numbers in the list.,"[1, 5, 8, 10, 3, 13, 21, 24]","def find_max_even_index(lst):
  max_even = None
  index = -1
  
  for i, num in enumerate(lst):
    if num % 2 == 0 and (max_even is None or num > max_even):
      max_even = num
      index = i
  
  return index",Data Structure,3647,"def find_max_even_index___:
  max_even = None
  index = -1
  
  for i, num in enumerate___:
    if num % 2 == 0 and ___:
      max_even = num
      index = i
  
  return index"
Generate a python program to sort a list of numbers,"array = [4, 2, 6, 7, 1]","def sort_list(array): 
    n = len(array) 
  
    for i in range(n): 
  
        min_idx = i 
        for j in range(i+1, n): 
            if array[min_idx] > array[j]: 
                min_idx = j 
        array[i], array[min_idx] = array[min_idx], array[i]

if __name__ == ""__main__"":
    array = [4, 2, 6, 7, 1]
    sort_list(array)
    print(array)",Data Structure,3650,"def sort_list___: 
    n = len___ 
  
    for i in range___: 
  
        min_idx = i 
        for j in range___: 
            if array[min_idx] > array[j]: 
                min_idx = j 
        array[i], array[min_idx] = array[min_idx], array[i]

if __name__ == ""__main__"":
    array = ___
    sort_list___
    print___"
Implement a function in Python that takes in a list of integers and returns a new list where the elements are reversed.,"Input list: [1, 2, 3, 4, 5]","def reverse_list(arr): 
    return arr[::-1] 

Input_list = [1, 2, 3, 4, 5]
print(""Original List:"", Input_list) 
Rev_list = reverse_list(Input_list) 
print(""Reversed List:"", Rev_list)",Data Structure,3656,"def reverse_list___: 
    return arr[::-1] 

Input_list = ___
print___ 
Rev_list = reverse_list___ 
print___"
Construct a Python program to find the index of a given item in a list,"[""a"", ""b"", ""c""], ""b""","def index_of_item(list_of_items, item):
    for i in range(len(list_of_items)):
        if list_of_items[i] == item:
            return i

list_of_items = [""a"", ""b"", ""c""]
result = index_of_item(list_of_items, ""b"")
print(result)",Data Structure,3659,"def index_of_item___:
    for i in range___):
        if list_of_items[i] == item:
            return i

list_of_items = [""a"", ""b"", ""c""]
result = index_of_item___
print___"
Create a Python program which sorts elements of an array in ascending order.,"[5, 2, 1, 3, 6, 4]","def sort_ascending(array):
    for i in range(len(array)-1):
        for j in range(i, len(array)):
            if array[i] > array[j]:
                array[i], array[j] = array[j], array[i]

    return array

sort_ascending([5, 2, 1, 3, 6, 4]) # Output = [1, 2, 3, 4, 5, 6]",Data Structure,3669,"def sort_ascending___:
    for i in range___-1):
        for j in range___):
            if array[i] > array[j]:
                array[i], array[j] = array[j], array[i]

    return array

sort_ascending___ # Output = [1, 2, 3, 4, 5, 6]"
Create a Python function that takes a list of numbers and returns the sum of the odd numbers in the list.,"[1, 2, 3, 4, 5]","def sumOdds(nums):
 total = 0
 for num in nums:
 if num % 2 != 0:
 total += num
 return total

nums = [1,2,3,4,5]
sum_odds = sumOdds(nums)
print(sum_odds) #output: 9",Data Structure,3674,"def sumOdds___:
 total = 0
 for num in nums:
 if num % 2 != 0:
 total += num
 return total

nums = ___
sum_odds = sumOdds___
print___ #output: 9"
Modify the given Python program to sort a list of words in alphabetical order.,"words = ['cat', 'dog', 'bird', 'fish']","words = ['cat', 'dog', 'bird', 'fish']

sorted_words = sorted(words)

print(sorted_words)",Data Structure,3677,"words = ['cat', 'dog', 'bird', 'fish']

sorted_words = sorted___

print___"
Write a script in Python that takes an array of numbers as parameter and returns the minimum and maximum values.,"array=[4, 6, 3, 2, 8, 10]","def min_max(array):
    min = array[0]
    max = array[0]

    for value in array:
        if value < min:
            min = value
        elif value > max:
            max = value
    
    return min, max

array=[4, 6, 3, 2, 8, 10]

min, max = min_max(array)

print(""Minimum: "", min)
print(""Maximum: "", max)",Data Structure,3684,"def min_max___:
    min = array___
    max = array___

    for value in array:
        if value < min:
            min = value
        elif value > max:
            max = value
    
    return min, max

array=___

min, max = min_max___

print___
print___"
Write a Python program to perform a series of transformations on a given list.,"[1,2,3,4,5,6,7]

Transformations: Multiply each element by 2, select only odd elements, subtract 3 from each remaining element.","def transformations(arr):
    result = [x*2 for x in arr if x%2 != 0]
    result = [x-3 for x in result]
    return result",Data Structure,3687,"def transformations___:
    result = [x*2 for x in arr if x%2 != 0]
    result = [x-3 for x in result]
    return result"
Produce a Python program that calculates the average of a list of numbers.,"[1,2,3,4,5,6]","def average(numbers):
	total = 0
	for num in numbers:
		total += num
	return total/len(numbers)

nums = [1,2,3,4,5,6]
print(""Average of the list of numbers is:"", average(nums))",Data Structure,3689,"def average___:
	total = 0
	for num in numbers:
		total += num
	return total/len___

nums = ___
print___)"
Create a Python program to swap the first and last items in a list.,"items = [1, 2, 3, 4]","def swap(items):
    temp = items[0]
    items[0] = items[-1]
    items[-1] = temp
    return items",Data Structure,3690,"def swap___:
    temp = items___
    items___ = items[-1]
    items[-1] = temp
    return items"
Write a Python script to compute the mean of a given set of numbers.,"[78.3, 75.1, 76.7, 78.2]","def mean(list_of_numbers):
    total = 0
    for num in list_of_numbers:
        total += num
    return total / len(list_of_numbers)

list_of_numbers = [78.3, 75.1, 76.7, 78.2]
mean_of_list = mean(list_of_numbers)
print(mean_of_list)",Data Structure,3691,"def mean___:
    total = 0
    for num in list_of_numbers:
        total += num
    return total / len___

list_of_numbers = [78.3, 75.1, 76.7, 78.2]
mean_of_list = mean___
print___"
Write a function in Python that takes a list and prints out all the elements in the list.,"list1 = [1, 2, 3, 4, 5]","def printList(list1): 
    for x in list1: 
        print(x) 

printList(list1)",Data Structure,3692,"def printList___: 
    for x in list1: 
        print___ 

printList___"
Create a Python script that takes a word as an input and returns a list of synonyms for that word.,Word (e.g. happy),"import requests
import json

word = input(""Enter a word: "")

url = ""https://api.datamuse.com/words?rel_syn="" + word

response = requests.get(url)

if response.status_code == 200:
 json_data = json.loads(response.text)
 synonyms = [item['word'] for item in json_data]
 print(synonyms)
else:
 print(""Something went wrong!"")",Data Structure,3693,"import requests
import json

word = input___

url = ""https://api.datamuse.com/words?rel_syn="" + word

response = requests.get___

if response.status_code == 200:
 json_data = json.loads___
 synonyms = [item['word'] for item in json_data]
 print___
else:
 print___"
"Design a function in Python which takes a list of numbers as the input, and returns the maximum element of the list.","[1, 5, 3, 9, 0, 4, 2]","def max_list_element(list):
    max_list_element = None
    for element in list:
        if max_list_element is None or max_list_element < element:
            max_list_element = element
    return max_list_element",Data Structure,3694,"def max_list_element___:
    max_list_element = None
    for element in list:
        if max_list_element is None or max_list_element < element:
            max_list_element = element
    return max_list_element"
"Using the given input, sort a list containing both numerical and strings data types in Python.","[1, 'c', 3, 'a', 2, 'b']","# define list 
lst = [1, 'c', 3, 'a', 2, 'b']

# sort list
sorted_lst = sorted(lst, key=lambda x:str(x))

# print sorted list
print(sorted_lst)",Data Structure,3699,"# define list 
lst = [1, 'c', 3, 'a', 2, 'b']

# sort list
sorted_lst = sorted___)

# print sorted list
print___"
Create a Python program to remove all the duplicates from a given list.,"[1, 4, 2, 5, 6, 4, 1, 5]","def remove_duplicates(lst): 
  non_duplicate_lst = [] 

  for i in lst: 
    if i not in non_duplicate_lst: 
      non_duplicate_lst.append(i) 

  return non_duplicate_lst 

lst = [1, 4, 2, 5, 6, 4, 1, 5]
print(remove_duplicates(lst))",Data Structure,3700,"def remove_duplicates___: 
  non_duplicate_lst = [] 

  for i in lst: 
    if i not in non_duplicate_lst: 
      non_duplicate_lst___i) 

  return non_duplicate_lst 

lst = ___
print___)"
Generate a function in Python that returns a random element from a given list.,"[""cat"", ""dog"", ""bird""]","import random

def getRandomElement(list):
  random_index = random.randint(0,len(list)-1)
  return list[random_index]

list = [""cat"", ""dog"", ""bird""]
random_element = getRandomElement(list)
print(random_element)
// Output: one of [""cat"", ""dog"", ""bird""] randomly",Data Structure,3705,"import random

def getRandomElement___:
  random_index = random.randint___-1)
  return list[random_index]

list = [""cat"", ""dog"", ""bird""]
random_element = getRandomElement___
print___
// Output: one of [""cat"", ""dog"", ""bird""] randomly"
Create a Python program to check if a list is sorted in ascending order.,"listA = [1, 5, 9, 10]","def isListAscending(listA): 
    return all(listA[i] <= listA[i+1] for i in range(len(listA)-1)) 

# Driver code 
listA = [1, 5, 9, 10] 
# listA = [10, 9, 5, 1] 

# Print result 
print(isListAscending(listA))",Data Structure,3707,"def isListAscending___: 
    return all___-1)) 

# Driver code 
listA = ___ 
# listA = ___ 

# Print result 
print___)"
Create a Python algorithm to calculate the maximum profit that can be earned given a stock's price list for the day.,"`List of prices = [5, 7, 1, 3, 6, 8]`","def maxProfit(prices):
 maxProfit = 0
 minPrice = float('inf')

 for price in prices:
 minPrice = min(minPrice, price)
 maxProfit = max(maxProfit, price - minPrice)

 return maxProfit

# example
maxProfit([5, 7, 1, 3, 6, 8]) # returns 7",Data Structure,3711,"def maxProfit___:
 maxProfit = 0
 minPrice = float___

 for price in prices:
 minPrice = min___
 maxProfit = max___

 return maxProfit

# example
maxProfit___ # returns 7"
Optimize an algorithm written in Python that sums up the numbers in an array.,"[2, 4, 6, 8]","def sum_numbers(arr):
    result = 0
    for num in arr:
        result += num
    return result

arr = [2, 4, 6, 8]

print(sum_numbers(arr))

# optimized version
def optimised_sum_numbers(arr):
    return sum(arr)

print(optimised_sum_numbers(arr))",Data Structure,3713,"def sum_numbers___:
    result = 0
    for num in arr:
        result += num
    return result

arr = ___

print___)

# optimized version
def optimised_sum_numbers___:
    return sum___

print___)"
Find the most frequent value in the given array in Python.,"[2, 3, 4, 2, 5, 3]","from collections import Counter

def most_frequent(input_list):
    count = Counter(input_list)
    max_freq = max(count.values())
    for num, freq in count.items():
        if freq == max_freq:
            most_frequent_element = num
    return most_frequent_element

result = most_frequent([2, 3, 4, 2, 5, 3])
print(result)",Data Structure,3716,"from collections import Counter

def most_frequent___:
    count = Counter___
    max_freq = max___)
    for num, freq in count.items():
        if freq == max_freq:
            most_frequent_element = num
    return most_frequent_element

result = most_frequent___
print___"
Create a Python script to extract a list of unique words from the given text.,This is a sample text with some duplicate entries,"import re

text = 'This is a sample text with some duplicate entries'
words_list = re.findall(r'\w+', text)
unique_words = set(words_list)

print(unique_words)
# output: {'some', 'is', 'duplicate', 'with', 'entries', 'text', 'This', 'a'}",Data Structure,3719,"import re

text = 'This is a sample text with some duplicate entries'
words_list = re.findall___
unique_words = set___

print___
# output: ___"
Write a function in Python that takes a list of integers and returns the sum of the even numbers in the list.,"[1, 2, 3, 4, 5, 6]","def sum_even_integers(lst):
    total = 0
    for num in lst:
        if num % 2 == 0:
            total += num
    return total

print(sum_even_integers([1, 2, 3, 4, 5, 6])) # 12",Data Structure,3723,"def sum_even_integers___:
    total = 0
    for num in lst:
        if num % 2 == 0:
            total += num
    return total

print___) # 12"
Generate a python code to classify an array of numbers into a set of categories,"Given an array of numbers [3, 8, 15, 7, 20], classify the array into two categories - even and odd.","def even_odd_classification(arr):
    evens = []
    odds = []

    for i in arr:
        if i % 2 == 0:
            evens.append(i)
        else:
            odds.append(i)
    
    return evens, odds",Data Structure,3729,"def even_odd_classification___:
    evens = []
    odds = []

    for i in arr:
        if i % 2 == 0:
            evens___i)
        else:
            odds___i)
    
    return evens, odds"
Write a python function to search a list of numbers for a given number and output the position if found.,"numbers=[1,2,3,4,5], search=3","def search_list(numbers, search):
    for index, num in enumerate(numbers):
        if num == search:
            return index
    return -1",Data Structure,3730,"def search_list___:
    for index, num in enumerate___:
        if num == search:
            return index
    return -1"
Can you create a Python script to find the maximum element in the given array using divide and conquer algorithm?,"arr = [3, 5, 7, 9, 1, 20]","def findMaxElement(arr, low, high):
    if (high == low): 
        return arr[low] 
    else: 
        mid = (low + high) // 2
        max_left = findMaxElement(arr, low, mid) 
        max_right = findMaxElement(arr, mid + 1, high) 
        return max(max_left, max_right) 

print(findMaxElement(arr, 0, len(arr)-1)) # 20",Data Structure,3731,"def findMaxElement___:
    if ___: 
        return arr[low] 
    else: 
        mid = ___ // 2
        max_left = findMaxElement___ 
        max_right = findMaxElement___ 
        return max___ 

print___-1)) # 20"
"Optimize the following Python code to sort a set of numbers (set = [2, 6, 3, 8, 4]) in O(n) time complexity.","unsorted_list = [2, 6, 3, 8, 4]","def sort_list(unsorted_list):
    sorted_list = []
    while unsorted_list:
        min_elem = min(unsorted_list)
        unsorted_list.remove(min_elem)
        sorted_list.append(min_elem)
    return sorted_list",Data Structure,3734,"def sort_list___:
    sorted_list = []
    while unsorted_list:
        min_elem = min___
        unsorted_list___min_elem)
        sorted_list___min_elem)
    return sorted_list"
Combine the two Python lists into a single list.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","combined_list = list1 + list2
print(combined_list)",Data Structure,3740,"combined_list = list1 + list2
print___"
Create a Python script to divide two sets and store the results in a new set.,"Set 1: {2, 4, 6, 8, 10}
Set 2: {3, 5, 7, 9}","set1 = {2, 4, 6, 8, 10} 
set2 = {3, 5, 7, 9}

# Divide two sets and store the results in a new set
new_set = set1.difference(set2) 
 
# Print the result
print(new_set) # Output: {2, 4, 6, 8, 10}",Data Structure,3743,"set1 = ___ 
set2 = ___

# Divide two sets and store the results in a new set
new_set = set1.difference___ 
 
# Print the result
print(new_set) # Output: ___"
Create a python program to sort a given array in increasing order.,"[21, 3, 14, 15, 5, 21]","def insertion_sort(arr):
    for key in range(1,len(arr)):
        j=key
        while j>0 and arr[j-1] > arr[j]:
            arr[j-1],arr[j]=arr[j],arr[j-1]
            j-=1
    return arr

print(insertion_sort([21, 3, 14, 15, 5, 21]))",Data Structure,3749,"def insertion_sort___:
    for key in range___):
        j=key
        while j>0 and arr[j-1] > arr[j]:
            arr[j-1],arr[j]=arr[j],arr[j-1]
            j-=1
    return arr

print___)"
Develop an algorithm in Python to store a set of objects in the most efficient data structure.,"Objects: [1, 2, 3, 4, 5]","def store_elements(elements):
    store = []
    for i in elements:
        store.append(i)
    return store

objects = [1, 2, 3, 4, 5]
storage = store_elements(objects)
print(storage)",Data Structure,3750,"def store_elements___:
    store = []
    for i in elements:
        store___i)
    return store

objects = ___
storage = store_elements___
print___"
Can you provide a Python program to generate all possible combinations of a given list of numbers?,"""list = [1, 2, 3]""","import itertools

# list of numbers
list_of_nums = [1, 2, 3]

# get all possible combinations of numbers
combinations = itertools.combinations(list_of_nums, 3)

# print all possible combinations
for combination in combinations:
    print(combination)",Data Structure,3754,"import itertools

# list of numbers
list_of_nums = ___

# get all possible combinations of numbers
combinations = itertools.combinations___

# print all possible combinations
for combination in combinations:
    print___"
Generate a Python list comprehension that returns all even numbers in a given range.,"start_num = 2
end_num = 10","even_nums = [num for num in range(start_num, end_num + 1) if num % 2 == 0]",Data Structure,3757,even_nums = [num for num in range___ if num % 2 == 0]
Create a variable in Python to store the length of a list.,"example_list = [1, 2, 3, 4]",list_length = len(example_list),Data Structure,3762,list_length = len___
Write a python program to return the average value of numbers in the given list.,"numbers = [2, 4, 6, 8]","def avg_list(numbers): 
    total = 0
    for x in numbers: 
        total += x 
    return total / len(numbers)",Data Structure,3766,"def avg_list___: 
    total = 0
    for x in numbers: 
        total += x 
    return total / len___"
Create a python program to rotate a list of numbers by a given number.,"[1,2,3,4,5]","def rotate_list(nums, n):
  return nums[n:] + nums[:n]",Data Structure,3769,"def rotate_list___:
  return nums[n:] + nums[:n]"
Develop a Python program that calculates the mean of list of numbers.,"[1, 5, 2, 4, 9]","def calculate_mean(nums):
    total = 0
    for n in nums:
        total += n
    mean = total / len(nums)
    return mean

mean = calculate_mean([1, 5, 2, 4, 9])",Data Structure,3772,"def calculate_mean___:
    total = 0
    for n in nums:
        total += n
    mean = total / len___
    return mean

mean = calculate_mean___"
Design a Python solution to find the position of a given element in a list.,"List: ['a', 'b', 'c', 'd']
Element: 'd'","def find_index(arr, element):
    for index, value in enumerate(arr): 
        if value == element: 
            return index
    return -1
  
arr = ['a', 'b', 'c', 'd']
element = 'd'
print(find_index(arr, element)) # Output: 3",Data Structure,3775,"def find_index___:
    for index, value in enumerate___: 
        if value == element: 
            return index
    return -1
  
arr = ['a', 'b', 'c', 'd']
element = 'd'
print___) # Output: 3"
"Given an array of integers, write a function in Python to search for a given number in the array.","array = [1, 5, 8, 9], number = 5","def search_in_array(array, number):
    for element in array:
        if element == number:
            return True
    return False

array = [1, 5, 8, 9]
number = 5
result = search_in_array(array, number)
if result:
    print(""Number found"")
else:
    print(""Number not found"")",Data Structure,3776,"def search_in_array___:
    for element in array:
        if element == number:
            return True
    return False

array = ___
number = 5
result = search_in_array___
if result:
    print___
else:
    print___"
Rewrite a python function from a set of instructions using list comprehension.,Define a function that takes a list of numbers and returns a list containing only the odd numbers from the given list.,"def odd_numbers(numbers):
 return [n for n in numbers if n % 2 != 0]",Data Structure,3781,"def odd_numbers___:
 return [n for n in numbers if n % 2 != 0]"
Develop a python program to calculate the maximum product of two numbers greater than 0 in a given numerical array.,"array = [6, -3, -10, 0, 2]","def maxProduct(arr): 
    n = len(arr) 
    max_prod = 0
    for i in range(0, n): 
        for j in range(i + 1, n): 
            if arr[i] > 0 and arr[j] > 0: 
                max_prod = max(max_prod, arr[i] * arr[j]) 
  
    return max_prod 

# Input
array = [6, -3, -10, 0, 2]

# Output
result = maxProduct(array)
print(result)",Data Structure,3782,"def maxProduct___: 
    n = len___ 
    max_prod = 0
    for i in range___: 
        for j in range___: 
            if arr[i] > 0 and arr[j] > 0: 
                max_prod = max___ 
  
    return max_prod 

# Input
array = [6, -3, -10, 0, 2]

# Output
result = maxProduct___
print___"
Create a Python script that will automatically detect the largest number in a given list.,"[7, 2, -4, 5, 8, 1]","def find_largest_number(list):
 largest = list[0]
 for number in list:
 if number > largest:
 largest = number
 return largest

list = [7, 2, -4, 5, 8, 1]
print(find_largest_number(list))
# Output: 8",Data Structure,3783,"def find_largest_number___:
 largest = list___
 for number in list:
 if number > largest:
 largest = number
 return largest

list = [7, 2, -4, 5, 8, 1]
print___)
# Output: 8"
Generate a Python program to unpack a given list of tuples,"[(1, ""a""), (2, ""b""), (3, ""c"")]","list_of_tuples = [(1, ""a""), (2, ""b""), (3, ""c"")]

list_1, list_2 = zip(*list_of_tuples)

print(list_1)
print(list_2)",Data Structure,3784,"list_of_tuples = [___, ___, ___]

list_1, list_2 = zip___

print___
print___"
Design a python program that returns the index of the first occurrence of an item in a given list,"item = 7
list = [1, 4, 8, 7, 5, 9, 7]","def index_first_occurrence(item, list):
    for i in range(len(list)):
        if list[i] == item:
            return i
    return -1",Data Structure,3785,"def index_first_occurrence___:
    for i in range___):
        if list[i] == item:
            return i
    return -1"
Modify this Python program to sort a given list of numbers.,"numbers = [2, 3, 4, 5, 1]","numbers.sort()
print(numbers) # prints [1, 2, 3, 4, 5]",Data Structure,3786,"numbers.sort()
print___ # prints [1, 2, 3, 4, 5]"
"Using the input, create a Python program which generates a random array of length n filled with binary values.",n = 10,"import random

def random_binary_array(n):
    """"""Return a random array of length n with binary values.""""""
    array = []
    for i in range(n):
        array.append(random.choice([0, 1]))
    return array",Data Structure,3792,"import random

def random_binary_array___:
    """"""Return a random array of length n with binary values.""""""
    array = []
    for i in range___:
        array___random.choice([0, 1]))
    return array"
Create a Python function for predicting the label for a given set of features.,"[10, 20, 30]","def predict_label(features):
    # write your code here
    label = None
    
    if features[0] > 10 and features[1] > 20:
        label = ""A""
    elif features[0] > 10 and features[1] < 20:
        label = ""B""
    else:
        label = ""C""
        
    return label

features = [10, 20, 30]
label = predict_label(features)
print(label)",Data Structure,3800,"def predict_label___:
    # write your code here
    label = None
    
    if features___ > 10 and features___ > 20:
        label = ""A""
    elif features___ > 10 and features___ < 20:
        label = ""B""
    else:
        label = ""C""
        
    return label

features = ___
label = predict_label___
print___"
Generate a python program for searching for a value in an array.,"Array: [0, 1, 2, 3, 4, 5]
Value: 3","def search_value(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1",Data Structure,3801,"def search_value___:
    for i in range___):
        if arr[i] == target:
            return i
    return -1"
Write a Python program to clean up a data set containing temperature readings. Write a function that takes the raw temperature data and returns a list of cleaned up readings as integers.,"raw_readings = [""  24.8"",""31 "",""   15.6    "", ""21.9  ""]","def clean_temps(raw_readings):
 cleaned_data = []
 for reading in raw_readings:
 cleaned_data.append(int(reading.strip()))
 return cleaned_data
 
print(clean_temps(raw_readings)) 
# Output: [24, 31, 15, 21]",Data Structure,3802,"def clean_temps___:
 cleaned_data = []
 for reading in raw_readings:
 cleaned_data___int(reading.strip()))
 return cleaned_data
 
print___) 
# Output: ___"
Compile a Python program that takes a given list and returns a dictionary with the list elements as keys and their frequencies as values.,"[apple, orange, banana, apple, apple]","def get_frequencies(arr):
  frequency_dict = {}
  for item in arr:
    if item in frequency_dict:
      frequency_dict[item] += 1
    else:
      frequency_dict[item] = 1
  
  return frequency_dict",Data Structure,3804,"def get_frequencies___:
  frequency_dict = {}
  for item in arr:
    if item in frequency_dict:
      frequency_dict[item] += 1
    else:
      frequency_dict[item] = 1
  
  return frequency_dict"
Create a python program that categorizes a given list of numbers into odd and even numbers.,"list N = [1, 2, 3, 4, 5, 6]","even = []
odd = []

for num in N:
    if num % 2 == 0:
        even.append(num)
    else:
        odd.append(num)",Data Structure,3813,"even = []
odd = []

for num in N:
    if num % 2 == 0:
        even___num)
    else:
        odd___num)"
Construct a code in Python to reverse a given list.,"[""Apple"", ""Banana"", ""Cherry""]","myList = [""Apple"", ""Banana"", ""Cherry""]

def reverse(myList):
    myList.reverse()
    return myList

print(reverse(myList))  # [""Cherry"", ""Banana"", ""Apple""]",Data Structure,3814,"myList = [""Apple"", ""Banana"", ""Cherry""]

def reverse___:
    myList.reverse()
    return myList

print___)  # [""Cherry"", ""Banana"", ""Apple""]"
Create a Python for loop that prints out each element in a given list.,"[10, 20, 30, 40]","for element in [10,20,30,40]:
    print(element)",Data Structure,3815,"for element in ___:
    print___"
Create a python program to remove all the values in a list that are greater than a given value.,"list = [10, 15, 20, 25, 30], remove values greater than 15","# Defining a function to remove all the values in a list that are greater than a given value
def remove_greater(list, n):
  return [val for val in list if val <= n]

# Testing the remove_greater() function
list = [10, 15, 20, 25, 30]
print(remove_greater(list, 15)) # [10, 15]",Data Structure,3817,"# Defining a function to remove all the values in a list that are greater than a given value
def remove_greater___:
  return [val for val in list if val <= n]

# Testing the remove_greater() function
list = ___
print___) # [10, 15]"
Generate a python program to generate a random list of N elements.,N = 5,"import random

def generate_random_list(n):
    res = []
    for _ in range(n):
        res.append(random.randint(1, 100))
    return res",Data Structure,3818,"import random

def generate_random_list___:
    res = []
    for _ in range___:
        res___random.randint(1, 100))
    return res"
"Create a Python function that takes two lists as parameters, and returns the first list with each element doubled.","list1: [1, 2, 3] 
list2: [4, 5, 6]","def double_list(list1,list2):
  for i in range(len(list1)):
    list1[i] *= 2
  return list1

list1 = [1, 2, 3] 
list2 = [4, 5, 6]

print(double_list(list1,list2))",Data Structure,3827,"def double_list___:
  for i in range___):
    list1[i] *= 2
  return list1

list1 = ___ 
list2 = ___

print___)"
Generate a list of all possible subsets of a list of size n in Python,"list = [1,2,3]","def all_subsets(lst):
    
    res = [[]]
    
    for elem in lst:
        res += [subset + [elem] for subset in res]
        
    return res
all_subsets([1,2,3])",Data Structure,3831,"def all_subsets___:
    
    res = [[]]
    
    for elem in lst:
        res += [subset + [elem] for subset in res]
        
    return res
all_subsets___"
Write a Python program to sort a given list of numbers using QuickSort.,"[3, 8, 6, 10, 11, 4]","def quickSort(arr): 
	if len(arr) <= 1:
	return arr 
	else: 
		pivot = arr[0] 
		lessThanPivot = [number for number in arr[1:] if number <= pivot] 
		moreThanPivot = [number for number in arr[1:] if number > pivot] 
		return quickSort(lessThanPivot) + [pivot] + quickSort(moreThanPivot)

arr = [3, 8, 6, 10, 11, 4] 
print(quickSort(arr))",Data Structure,3832,"def quickSort___: 
	if len___ <= 1:
	return arr 
	else: 
		pivot = arr___ 
		lessThanPivot = [number for number in arr[1:] if number <= pivot] 
		moreThanPivot = [number for number in arr[1:] if number > pivot] 
		return quickSort___ + [pivot] + quickSort___

arr = ___ 
print___)"
"Write a function in Python that takes in two parameters, an array of integers and a target, and returns the indices of the two numbers in the array that add up to the target.","arr = [3, 5, 7, 9, 10]
target = 12","def two_sum(arr, target):
 for i in range(len(arr)):
 for j in range(i+1, len(arr)):
 if arr[i] + arr[j] == target:
 return (i, j)

# Usage
arr = [3, 5, 7, 9, 10]
target = 12

print(two_sum(arr, target))
# Output: (0, 4)",Data Structure,3833,"def two_sum___:
 for i in range___):
 for j in range___):
 if arr[i] + arr[j] == target:
 return ___

# Usage
arr = ___
target = 12

print___)
# Output: ___"
Write a function in Python to convert a list of strings to an array of integers.,"list = ['12','14','17','25','99','168']","def convert_list_integers(str_list):
    return list(map(int, str_list))

list = ['12','14','17','25','99','168']
arr = convert_list_integers(list)
print(arr) # [12, 14, 17, 25, 99, 168]",Data Structure,3834,"def convert_list_integers___:
    return list___)

list = ['12','14','17','25','99','168']
arr = convert_list_integers___
print___ # [12, 14, 17, 25, 99, 168]"
Write a Python function to convert an array of strings to a dictionary.,"[""John"", ""James"", ""Bubby"", ""Mary""]","def string_to_dict(strings):
    return {string: len(string) for string in strings}",Data Structure,3837,"def string_to_dict___:
    return ___"
Generate a Python program to convert a list of strings to a list of integers.,"['1', '3', '2', '6']","def str_to_int(lst):
  int_lst = []
  for i in lst:
    int_lst.append(int(i))
  return int_lst",Data Structure,3839,"def str_to_int___:
  int_lst = []
  for i in lst:
    int_lst___int(i))
  return int_lst"
Transform the following nested for loop into a list comprehension statement in Python.,"for i in range(2, 5): 
    for j in range(3): 
        print(i, j)","[(i,j)  for i in range(2,5) for j in range(3)]",Data Structure,3841,[___  for i in range___ for j in range___]
Write a Python program to identify the count of the largest contiguous subarray of numbers in a given array.,"arr=[-2, -3, 4, -1, -2, 1, 5, -3]","def max_contiguous_subarray(arr):
 max_end = 0
 max_so_far = 0

 for i in range(len(arr)):
 max_end = max(max_end + arr[i], 0)
 max_so_far = max(max_end, max_so_far)

 if max_so_far > 0:
 return len(arr) - max_so_far
 else:
 return 0",Data Structure,3842,"def max_contiguous_subarray___:
 max_end = 0
 max_so_far = 0

 for i in range___):
 max_end = max___
 max_so_far = max___

 if max_so_far > 0:
 return len___ - max_so_far
 else:
 return 0"
Write a Python code snippet to check if a list contains duplicated elements.,"[3, 6, 8, 9, 10, 3]","""""""
Python code snippet to check if a list contains duplicated elements
""""""

def has_duplicates(arr):
    seen_elements = set()
    for elem in arr:
        if elem in seen_elements:
            return True
        seen_elements.add(elem)
    return False

if __name__ == '__main__':
    arr = [3, 6, 8, 9, 10, 3]
    print(has_duplicates(arr)) # True",Data Structure,3845,"""""""
Python code snippet to check if a list contains duplicated elements
""""""

def has_duplicates___:
    seen_elements = set()
    for elem in arr:
        if elem in seen_elements:
            return True
        seen_elements.add___
    return False

if __name__ == '__main__':
    arr = ___
    print___) # True"
Fill in the blanks to create a Python program to calculate the total number of words in a list.,"words = [""Hello"", ""World"", ""!""]","words = [""Hello"", ""World"", ""!""]

total_words = 0
for word in words:
____ total_words = total_words + ____

print(total_words)

# Output: 3

total_words = 0
for word in words:
    length = len(word)
    total_words = total_words + length

print(total_words)

# Output: 3",Data Structure,3846,"words = [""Hello"", ""World"", ""!""]

total_words = 0
for word in words:
____ total_words = total_words + ____

print___

# Output: 3

total_words = 0
for word in words:
    length = len___
    total_words = total_words + length

print___

# Output: 3"
Create a searching algorithm in Python to find a target element in a list of integers.,"target = 7
elements = [1, 2, 3, 4, 5, 6, 7, 8]","def search(target, elements):
  start = 0 
  end = len(elements) - 1

  while start <= end:
    mid = (start + end) // 2 
      
    if target == elements[mid]: 
      return True 
  
    elif target < elements[mid]: 
      end = mid - 1

    else: 
      start = mid + 1
    
  return False",Data Structure,3849,"def search___:
  start = 0 
  end = len___ - 1

  while start <= end:
    mid = ___ // 2 
      
    if target == elements[mid]: 
      return True 
  
    elif target < elements[mid]: 
      end = mid - 1

    else: 
      start = mid + 1
    
  return False"
Refactor the following Python function to use list comprehensions.,"def square_numbers(nums):
  result = []
  for num in nums:
    result.append(num ** 2)
  return result","def square_numbers(nums):
  return [num ** 2 for num in nums]",Data Structure,3855,"def square_numbers___:
  return [num ** 2 for num in nums]"
Create a Python class that takes a list as input and returns a sorted list as output.,"[5, 2, 7, 3]","class SortList:
    def __init__(self, lst):
        self.lst = lst
        
    def sort_list(self):
        self.lst.sort()
        return self.lst",Data Structure,3857,"class SortList:
    def __init_____:
        self.lst = lst
        
    def sort_list___:
        self.lst.sort()
        return self.lst"
Generate a new Python list that contains only the even values from a given list.,"list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def get_even_list(list):
    even_list = []
    for num in list:
        if num % 2 == 0:
            even_list.append(num)
    return even_list

list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(get_even_list(list))",Data Structure,3858,"def get_even_list___:
    even_list = []
    for num in list:
        if num % 2 == 0:
            even_list___num)
    return even_list

list = ___
print___)"
Write a Python program to group a list of numbers based on their modulo with a given number.,"list_numbers = [2, 6, 8, 10, 3, 7] 
num = 3","def group_modulo(list_numbers, num):
    result = {i:[] for i in range(num)}
    for number in list_numbers:
        result[number % num].append(number)
    
    return result
    
result = group_modulo(list_numbers, num)
print(result)",Data Structure,3859,"def group_modulo___:
    result = ___
    for number in list_numbers:
        result[number % num]___number)
    
    return result
    
result = group_modulo___
print___"
Write a function in Python to sort the given list of strings based on the length of the words in ascending order.,"[""apple"", ""mango"", ""banana"", ""cherry""]","def sort_by_word_length(word_list):
	""""""
	Function to sort a given list of strings 
	based on the length of the words in ascending order.
	@param word_list: list
	@return: list
	""""""
    return sorted(word_list, key=lambda x: len(x))",Data Structure,3863,"def sort_by_word_length___:
	""""""
	Function to sort a given list of strings 
	based on the length of the words in ascending order.
	@param word_list: list
	@return: list
	""""""
    return sorted___)"
Create a Python program that reads an input list and replaces all occurrences of 0 with -1.,"[1, 0, 2, 4, 0, 5]","def replace_zeros(lst):
  for i in range(len(lst)):
    if lst[i] == 0:
      lst[i] = -1
  return lst

# Main
input_list = [1, 0, 2, 4, 0, 5]
new_list = replace_zeros(input_list)

print('List after replacement:', new_list)",Data Structure,3865,"def replace_zeros___:
  for i in range___):
    if lst[i] == 0:
      lst[i] = -1
  return lst

# Main
input_list = ___
new_list = replace_zeros___

print___"
"Write a Python code that finds the maximum value of a list, given a list of numbers as input.","[1, 4, 8, 2, 6]","max_value = max([1, 4, 8, 2, 6])
print(max_value)",Data Structure,3867,"max_value = max___
print___"
Write a Python function that takes a list of names as an input and generates a dictionary of people’s names as keys and their scores as values.,"names = [""John"", ""Mary"", ""Jack"", ""Sarah""]","def names_scores(names):
    scores = {}
    for name in names:
        scores[name] = random.randint(1, 10)
    return scores",Data Structure,3870,"def names_scores___:
    scores = {}
    for name in names:
        scores[name] = random.randint___
    return scores"
Write a Python algorithm to convert the following text into a list of integers.,"""3, 17, 2, 9, 11""","# convert a string to list of numbers
def convert_to_list(s):
    numbers = s.split(',')
    return [int(num) for num in numbers]

text = ""3, 17, 2, 9, 11""
int_list = convert_to_list(text)
print(int_list)",Data Structure,3873,"# convert a string to list of numbers
def convert_to_list___:
    numbers = s.split___
    return [int___ for num in numbers]

text = ""3, 17, 2, 9, 11""
int_list = convert_to_list___
print___"
Optimize a Python function that returns the value at the index of an array (list) of size n.,"[20, 30, 50, 70, 90]","def getValueAtIndex(arr, index):
    return arr[index] if index >= 0 and index < len(arr) else 0

print(getValueAtIndex([20, 30, 50, 70, 90], 3)) # 70",Data Structure,3876,"def getValueAtIndex___:
    return arr[index] if index >= 0 and index < len___ else 0

print___) # 70"
Develop a Python 3 program that takes a list of integers as an argument and returns the mean of the list.,"[1,2,3,4,5]","def mean(list):
 total = 0
 for num in list:
 total+=num
 return total/len(list)

list = [1,2,3,4,5]
mean = mean(list)
print(mean) # prints 3.0",Data Structure,3878,"def mean___:
 total = 0
 for num in list:
 total+=num
 return total/len___

list = ___
mean = mean___
print___ # prints 3.0"
Create a Python code snippet to return the index of a given item from a list.,"list_of_numbers = [3, 6, 8, 4, 9, 2]
item = 6","item_index = list_of_numbers.index(item)
print(item_index) # Prints 1",Data Structure,3881,"item_index = list_of_numbers.index___
print___ # Prints 1"
Create a function in Python to return the largest number in a list.,"[50, 30, 65, 80]","""""""
Return the largest number in a list
""""""

def largest_num(nums):
    largest = nums[0]
    for num in nums:
        if num > largest:
            largest = num
    return largest

if __name__ == '__main__':
    nums = [50, 30, 65, 80]
    print(largest_num(nums))",Data Structure,3882,"""""""
Return the largest number in a list
""""""

def largest_num___:
    largest = nums___
    for num in nums:
        if num > largest:
            largest = num
    return largest

if __name__ == '__main__':
    nums = ___
    print___)"
Generate a Python program that implements Linear Search with a list of integers as input.,"sampleList = [5, 2, 3, 8, 0]","def linearSearch(sampleList, x):
 for i in range(len(sampleList)):
 if sampleList[i] == x:
 return i 

return -1

# Driver code
x = 5
result = linearSearch(sampleList, x)

if result == -1:
 print(""Element not found"")
else:
 print(""Element found at index"", result)",Data Structure,3883,"def linearSearch___:
 for i in range___):
 if sampleList[i] == x:
 return i 

return -1

# Driver code
x = 5
result = linearSearch___

if result == -1:
 print___
else:
 print___"
Develop a Python script to find the element that appears most often in a given list.,"mylist = [2, 3, 4, 5, 2, 3, 2, 5, 6, 7]","from collections import Counter

mylist = [2, 3, 4, 5, 2, 3, 2, 5, 6, 7]
freq = Counter(mylist)
most_common_element = freq.most_common(1)[0][0]
print(""The most common element is %d"" %most_common_element)",Data Structure,3885,"from collections import Counter

mylist = ___
freq = Counter___
most_common_element = freq.most_common___[0][0]
print___"
Create a Python program that takes a list and replaces all negative numbers in the list with zeros.,"[-1, 2, -3, 4, -5]","def replace_negative_with_zero(numbers):
    new_list = []

    for num in numbers:
        if num < 0:
            new_list.append(0)
        else:
            new_list.append(num)
    return new_list",Data Structure,3888,"def replace_negative_with_zero___:
    new_list = []

    for num in numbers:
        if num < 0:
            new_list___0)
        else:
            new_list___num)
    return new_list"
Generate a program in python that searches for an element in the given list and returns its index.,"mylist = [1, 4, 5, 8, 9]
element = 5","def search_list(mylist, element):
  
  for i in range(len(mylist)):
    if mylist[i] == element:
      return i
  
  return -1

mylist = [1, 4, 5, 8, 9]
element = 5

index = search_list(mylist, element)

if index == -1:
  print(""Element not found."")
else:
  print(""Element found at index:"", index)",Data Structure,3890,"def search_list___:
  
  for i in range___):
    if mylist[i] == element:
      return i
  
  return -1

mylist = ___
element = 5

index = search_list___

if index == -1:
  print___
else:
  print___"
Write a Python script which iterates over a list of numbers and prints them out in reverse order.,"[1, 2, 3, 4]","numbers = [1, 2, 3, 4]
 
for i in range(len(numbers)-1, -1, -1):
    print(numbers[i])",Data Structure,3891,"numbers = ___
 
for i in range___-1, -1, -1):
    print___"
Write a Python program to create a new list that contains the common elements of two other lists.,"[1, 2, 3, 4], [2, 4, 6, 8]","def common_elements(list1, list2):
    common_list = []
    for element in list1:
        if element in list2:
            common_list.append(element)
    return common_list

list1 = [1, 2, 3, 4]
list2 = [2, 4, 6, 8]
print(common_elements(list1, list2))",Data Structure,3894,"def common_elements___:
    common_list = []
    for element in list1:
        if element in list2:
            common_list___element)
    return common_list

list1 = ___
list2 = ___
print___)"
Create a program in Python which can calculate the median of an array of integers.,"[3, 5, 7, 4, 8, 1, 9]","def median(arr):
    arr.sort()

    if len(arr) % 2 != 0:
        return arr[len(arr)//2]
    else: 
        return (arr[len(arr)//2 - 1] + arr[len(arr)//2]) / 2

arr = [3, 5, 7, 4, 8, 1, 9]

med = median(arr)
print('Median of the given array is:', med)",Data Structure,3897,"def median___:
    arr.sort()

    if len___ % 2 != 0:
        return arr[len___//2]
    else: 
        return ___//2 - 1] + arr[len___//2]) / 2

arr = ___

med = median___
print___"
Create an algorithm in Python that takes an array of strings and sorts them in alphabetical order.,"['Jan', 'June', 'Raju', 'April']","def alphabeticalSort(arr):
    arr.sort()
    return arr

result = alphabeticalSort(['Jan', 'June', 'Raju', 'April'])
print(result)",Data Structure,3904,"def alphabeticalSort___:
    arr.sort()
    return arr

result = alphabeticalSort___
print___"
Create a command line application in Python which takes a list of numbers and returns whether the list is sorted.,"[1, 4, 5, 6, 7, 9]","import sys

def is_sorted(nums):
 for i in range(len(nums) - 1):
  if nums[i] > nums[i + 1]:
   return False
 return True

nums = [int(x) for x in sys.argv[1:]]

if is_sorted(nums):
 print('The list is sorted')
else:
 print('The list is not sorted')",Data Structure,3905,"import sys

def is_sorted___:
 for i in range___ - 1):
  if nums[i] > nums[i + 1]:
   return False
 return True

nums = [int___ for x in sys.argv[1:]]

if is_sorted___:
 print___
else:
 print___"
Write a Python program to sort a list of integers in ascending order.,"list=[4,2,3,5,1]","list = [4, 2, 3, 5, 1]
list.sort()
print(list)",Data Structure,3908,"list = ___
list.sort()
print___"
"Design a REST API endpoint in Python Flask to return a list of users, sorted by last name.",No input,"@app.route(""/users"", methods=[""GET""])
def get_users():
    users = User.query.order_by(User.last_name).all()
    return jsonify([user.serialize() for user in users]), 200",Data Structure,3909,"@app.route___
def get_users():
    users = User.query.order_by___.all()
    return jsonify___ for user in users]), 200"
"Given a list of strings, write a Python program to sort the strings in alphabetical order.","strings = ['Python', 'Java', 'C++', 'C#']","def sort_strings(strings):
	return sorted(strings)

if __name__ == '__main__':
	strings = ['Python', 'Java', 'C++', 'C#']
	sorted_strings = sort_strings(strings)
	print(sorted_strings)",Data Structure,3910,"def sort_strings___:
	return sorted___

if __name__ == '__main__':
	strings = ['Python', 'Java', 'C++', 'C#']
	sorted_strings = sort_strings___
	print___"
"Create a Python program that takes a list of numbers, sorts them in descending order, calculates the average of the numbers, and prints the result.","[3, 7, 9, 4, 5]","# Calculating average of [3, 7, 9, 4, 5]
sorted_nums = sorted([3, 7, 9, 4, 5], reverse=True)
sum_nums = sum(sorted_nums)

# Calculating average
average = sum_nums/len(sorted_nums)

# Printing the average
print('The average of the list is: ', average)",Data Structure,3915,"# Calculating average of ___
sorted_nums = sorted___
sum_nums = sum___

# Calculating average
average = sum_nums/len___

# Printing the average
print___"
Write a function in Python that takes two lists of integers and returns a single merged list with unique elements sorted in ascending order.,"list1 = [1, 2, 3, 4] 
list2 = [2, 4, 5, 6]","def merge_unique_sorted_lists(list1, list2):
	merged_list = list1+list2
	unique_list = list(set(merged_list))
	unique_list.sort()
	return unique_list",Data Structure,3918,"def merge_unique_sorted_lists___:
	merged_list = list1+list2
	unique_list = list___)
	unique_list.sort()
	return unique_list"
Write a Python program to find the largest and smallest number from a given list of numbers.,"[7, 4, 2, 9, 0, 5]","def find_num(input_list):
    """"""Finds the largest and smallest number from a given list of numbers.""""""
    max_num = max(input_list)
    min_num = min(input_list)
    return max_num, min_num

largest, smallest = find_num([7, 4, 2, 9, 0, 5])
print('The largest number is', largest)
print('The smallest number is', smallest)",Data Structure,3933,"def find_num___:
    """"""Finds the largest and smallest number from a given list of numbers.""""""
    max_num = max___
    min_num = min___
    return max_num, min_num

largest, smallest = find_num___
print___
print___"
Write a Python program to sort a list of lists of integers by the first element of the sublists. The list should be sorted in ascending order.,"[[2, 4, 6], [1, 9, 8], [3, 7, 5]]","def sortList(lst): 
    lst.sort(key = lambda x: x[0]) 
    return lst 
  
result = sortList([[2, 4, 6], [1, 9, 8], [3, 7, 5]]) 
print(result)",Data Structure,3936,"def sortList___: 
    lst.sort___ 
    return lst 
  
result = sortList___ 
print___"
Implement a function in Python to remove all instances of an item from a list.,"[1, 2, 1, 3, 4, 1], 1","def remove_item(list, item):
    while item in list:
        list.remove(item)
    return list

result = remove_item([1, 2, 1, 3, 4, 1], 1)
print(result)",Data Structure,3943,"def remove_item___:
    while item in list:
        list___item)
    return list

result = remove_item___
print___"
"Utilizing the list comprehension, create a python program that removes all multiples of 3 from the input list.","[3,4,6,8,9,12]","res = [x for x in [3,4,6,8,9,12] if x % 3 != 0] 
print(res)",Data Structure,3947,"res = [x for x in ___ if x % 3 != 0] 
print___"
Create a React component for displaying a list of strings.,"[ ""javascript"",""java"",""python""]","const List = ({ items }) => { 
  return ( 
    <ul> 
      {items.map(item => ( 
        <li> 
          {item} 
        </li> 
      ))} 
    </ul> 
  ) 
};

ReactDOM.render( 
  <List items={[ ""javascript"",""java"",""python""]} />, 
  document.getElementById('root') 
);",Data Structure,3948,"const List = (___) => { 
  return ( 
    <ul> 
      {items.map(item => ( 
        <li> 
          ___ 
        </li> 
      ))} 
    </ul> 
  ) 
};

ReactDOM.render( 
  <List items=___ />, 
  document.getElementById___ 
);"
Create a search algorithm in Python to find a target element in a given array.,"[1, 4, 6, 8, 10], target = 8","def search(arr, target): 
  for idx, num in enumerate(arr): 
    if num == target:
      return idx
  return -1

idx = search([1, 4, 6, 8, 10], 8)
print(idx)",Data Structure,3950,"def search___: 
  for idx, num in enumerate___: 
    if num == target:
      return idx
  return -1

idx = search___
print___"
Write a Python program that takes an integer and prints a set of stairs with that many levels.,Number of levels: 5,"def staircase(n):
    for i in range(1, n+1):
        for j in range(1, n+1):
            if j <= n-i:
                print(' ', end='')
            else:
                print('#', end='')
        print('')

n = 5
staircase(n)",Data Structure,3951,"def staircase___:
    for i in range___:
        for j in range___:
            if j <= n-i:
                print___
            else:
                print___
        print___

n = 5
staircase___"
Generate all permutations of a given list of numbers with Python.,"[1, 2, 3]","import itertools

list_nums = [1, 2, 3]

perms = itertools.permutations(list_nums)
for perm in perms:
  print(perm)",Data Structure,3952,"import itertools

list_nums = ___

perms = itertools.permutations___
for perm in perms:
  print___"
Design a method in Python to deduplicate a given list of elements.,"[4, 5, 1, 9, 5, 4, 3]","# store the given list
my_list = [4, 5, 1, 9, 5, 4, 3]

# remove the duplicates
deduplicated_list = list(set(my_list))

# print the result
print(""Deduplicated list:"", deduplicated_list)",Data Structure,3956,"# store the given list
my_list = ___

# remove the duplicates
deduplicated_list = list___)

# print the result
print___"
Output a program in Python to find the most frequent occurring item in an array,"arr = [1,3,3,3,4,4,4,4,5,5]","from collections import Counter

arr = [1,3,3,3,4,4,4,4,5,5]
data = Counter(arr)
get_mode = dict(data)
mode = [k for k, v in get_mode.items() if v == max(list(data.values()))]

print(f""Mode of the given list is {mode}"")",Data Structure,3959,"from collections import Counter

arr = ___
data = Counter___
get_mode = dict___
mode = [k for k, v in get_mode.items() if v == max___))]

print(f""Mode of the given list is ___"")"
Write a Python program to optimize a given array of integers such that each element is greater than or equal to the previous element in the array.,"[7, 2, 5, 8, 4, 0]","def optimize_array(array):
    optimized_array = []
    prev = -float(""inf"")
    for n in array:
        if(n>=prev):
            optimized_array.append(n)
            prev = n
    return optimized_array

array = [7, 2, 5, 8, 4, 0]
print(optimize_array(array))
# Output: [7, 5, 8, 4]",Data Structure,3961,"def optimize_array___:
    optimized_array = []
    prev = -float___
    for n in array:
        if___:
            optimized_array___n)
            prev = n
    return optimized_array

array = ___
print___)
# Output: ___"
"Using the input, generate a Python program that prints out the frequency of each item in the list.","[""apple"", ""banana"", ""apple"", ""banana"", ""orange""]","def item_freq(list_input):
    freq = {} 
  
    for item in list_input: 
        if (item in freq): 
            freq[item] += 1
        else: 
            freq[item] = 1
  
    for key, value in freq.items(): 
        print (""% s : % d""%(key, value))",Data Structure,3964,"def item_freq___:
    freq = {} 
  
    for item in list_input: 
        if ___: 
            freq[item] += 1
        else: 
            freq[item] = 1
  
    for key, value in freq.items(): 
        print ___)"
Prepare a python program that displays a decoded message given in a list.,"code = [1,2,3,2,2,3,1,3]","code = [1,2,3,2,2,3,1,3]

message = """"
for d in code:
    if d == 1:
        message += ""A""
    elif d == 2:
        message += ""B""
    elif d == 3:
        message += ""C""
print(message)",Data Structure,3965,"code = ___

message = """"
for d in code:
    if d == 1:
        message += ""A""
    elif d == 2:
        message += ""B""
    elif d == 3:
        message += ""C""
print___"
Develop a Python program to show the product of all odd number components in an array.,"[3,4,5,6,7]","""""""
Python program to show the product of all odd numbers in an array
""""""

def product_of_odds(arr):
    product = 1
    for num in arr:
        if num % 2 != 0:
            product *= num
    return product

if __name__ == '__main__':
    arr = [3, 4, 5, 6, 7]
    print(product_of_odds(arr)) # 105",Data Structure,3969,"""""""
Python program to show the product of all odd numbers in an array
""""""

def product_of_odds___:
    product = 1
    for num in arr:
        if num % 2 != 0:
            product *= num
    return product

if __name__ == '__main__':
    arr = ___
    print___) # 105"
Write a valid Python program that takes a list and outputs the sum of the elements.,"[1, 2, 3]","def sumListElements(arr):
    sum = 0
    for num in arr:
        sum += num
    return sum

result = sumListElements([1,2,3]) 
print(result)",Data Structure,3970,"def sumListElements___:
    sum = 0
    for num in arr:
        sum += num
    return sum

result = sumListElements___ 
print___"
Create a web crawler in Python that takes a given URL and prints out a list of links.,https://www.example.com,"from bs4 import BeautifulSoup
import requests

url = 'https://www.example.com'
response = requests.get(url)

soup = BeautifulSoup(response.text, 'lxml')
for link in soup.find_all('a'):
    print(link.get('href'))",Data Structure,3971,"from bs4 import BeautifulSoup
import requests

url = 'https://www.example.com'
response = requests.get___

soup = BeautifulSoup___
for link in soup.find_all___:
    print___)"
Write a Python program to find the list of words that are longer than given length,"word_list = [""Red"", ""Green"", ""Blue"", ""Yellow"", ""Orange""]
length = 5","# Create a list to store the result
long_words_list = []

# Iterate the list to find words longer than the given length
for word in word_list:
    if len(word) > length:
        long_words_list.append(word)

# Print the result
print(long_words_list)",Data Structure,3973,"# Create a list to store the result
long_words_list = []

# Iterate the list to find words longer than the given length
for word in word_list:
    if len___ > length:
        long_words_list___word)

# Print the result
print___"
Write a Python program to extract the last two digits of the given array of integers.,"arr = [30, 2993, 10056]","res = []
for num in arr:
    res.append(num%100)
print(res) # [30, 93, 56]",Data Structure,3974,"res = []
for num in arr:
    res___num%100)
print___ # [30, 93, 56]"
Create a Python function called add_marks which takes two parameters: marks(a list) and mark(an integer). The function should add the mark to each value in the marks list.,"marks = [87, 56, 99, 54]
mark = 4","def add_marks(marks, mark):
 return [m + mark for m in marks]",Data Structure,3978,"def add_marks___:
 return [m + mark for m in marks]"
Develop Python code to reverse an array.,"arr = [1, 2, 3, 4, 5]","def reverse_array(arr): 
    start = 0
    end = len(arr) - 1
      
    while start < end: 
        arr[start], arr[end] = arr[end], arr[start] 
        start += 1
        end -= 1
    return arr 
  
# Driver code 
arr = [1, 2, 3, 4, 5] 
print(reverse_array(arr))",Data Structure,3985,"def reverse_array___: 
    start = 0
    end = len___ - 1
      
    while start < end: 
        arr[start], arr[end] = arr[end], arr[start] 
        start += 1
        end -= 1
    return arr 
  
# Driver code 
arr = ___ 
print___)"
Write a python program to split a list into two halves,"data = [1, 2, 3, 4, 5]","def split_list(data):
    # Calculate the length of data
    length = len(data)
    # calculate the midpoint of the list 
    midpoint = length//2
    
    # split the data into two halves 
    first_half = data[:midpoint]
    second_half = data[midpoint:]
    
    return first_half, second_half
    
split_list([1, 2, 3, 4, 5]) # Returns ([1, 2], [3, 4, 5])",Data Structure,3987,"def split_list___:
    # Calculate the length of data
    length = len___
    # calculate the midpoint of the list 
    midpoint = length//2
    
    # split the data into two halves 
    first_half = data[:midpoint]
    second_half = data[midpoint:]
    
    return first_half, second_half
    
split_list___ # Returns ___"
"Write a Python program to sum the list of integers in ""input_list"".","input_list = [1, 2, 3, 4, 5]","def sum_list(input_list):
    total = 0
    for item in input_list:
        total += item
    return total",Data Structure,3995,"def sum_list___:
    total = 0
    for item in input_list:
        total += item
    return total"
Modify the given function to sort a list of tuples based on the second index of each tuple in Python.,"def sort_list_of_tuples(input_list):
    pass","def sort_list_of_tuples(input_list):
    sorted_list = sorted(input_list, key=lambda tup: tup[1])
    return sorted_list",Data Structure,3997,"def sort_list_of_tuples___:
    sorted_list = sorted___
    return sorted_list"
Write a code snippet in Python for sorting a given array of numbers in ascending order.,"[3, 7, 1, 5]","def sort_array(arr): 
    arr.sort() 
    return arr 

sort = sort_array([3, 7, 1, 5])

print(sort)",Data Structure,4000,"def sort_array___: 
    arr.sort() 
    return arr 

sort = sort_array___

print___"
Sort a list in descending order using a lambda function in Python.,"Input list : [1, 5, -9, 8, 21]","list = [1, 5, -9, 8, 21]
sorted_list = sorted(list, reverse=True, key= lambda x:x)
print(sorted_list)",Data Structure,4007,"list = [1, 5, -9, 8, 21]
sorted_list = sorted___
print___"
Create a machine learning algorithm in Python that takes a set of data points and classifies them into two distinct classes.,"Examples [[1,2], [-2,3], [-1,-4], [0,0]]","import numpy as np
from sklearn.svm import LinearSVC

X = np.array([[1, 2], [-2, 3], [-1, -4], [0, 0]])
# y = [1, -1, -1, 0]
y = np.array([1, -1, -1, 0])

clf = LinearSVC()
clf.fit(X, y)

# Predict the class of the points [[3, -1], [-2, 0]]
predictions = clf.predict([[3, -1], [-2, 0]])
# Output -> [1, -1]",Data Structure,4011,"import numpy as np
from sklearn.svm import LinearSVC

X = np.array___
# y = [1, -1, -1, 0]
y = np.array___

clf = LinearSVC()
clf.fit___

# Predict the class of the points [[3, -1], [-2, 0]]
predictions = clf.predict___
# Output -> [1, -1]"
Generate a Python function which takes an array and a value and returns the index at which this value is present in the array.,"arr = [2, 5, 9, 15], x = 5","def find_index(arr, x):
    for i in range(len(arr)):
        if arr[i] == x:
            return i
    return -1

print(find_index(arr, x))",Data Structure,4013,"def find_index___:
    for i in range___):
        if arr[i] == x:
            return i
    return -1

print___)"
Construct a python function that sorts a list of tuples containing the names of the keys and values of a dictionary.,"dictionary = {'a': 4, 'b': 2, 'c': 3, 'd': 1}","def sort_dictionary(dictionary):
    return sorted(dictionary.items(), key=lambda x: x[1])",Data Structure,4016,"def sort_dictionary___:
    return sorted___, key=lambda x: x[1])"
Write a Python program to arrange the following list in descending order,"[4,7,1,10,3]","arr = [4,7,1,10,3]

arr.sort(reverse=True)

print(arr)
# Output: [10, 7, 4, 3, 1]",Data Structure,4019,"arr = ___

arr.sort___

print___
# Output: ___"
Create a function in Python that takes a list of strings as an argument and sorts the strings in alphabetical order.,"[""Hello"", ""World"", ""Foo"", ""Bar""]","def sort_strings(strings):
    strings.sort()
    return strings",Data Structure,4021,"def sort_strings___:
    strings.sort()
    return strings"
"Given a set of data, develop a Python program to classify the data into two categories: low and high.","[8, 5, 9, 1, 3, 10]","# Define the threshold
threshold = 5

def classify(data):
  result = []
  for item in data:
    if item <= threshold:
      result.append('low')
    else:
      result.append('high')
  return result

print(classify([8, 5, 9, 1, 3, 10]))
# Output: ['high', 'low', 'high', 'low', 'low', 'high']",Data Structure,4022,"# Define the threshold
threshold = 5

def classify___:
  result = []
  for item in data:
    if item <= threshold:
      result___'low')
    else:
      result___'high')
  return result

print___)
# Output: ['high', 'low', 'high', 'low', 'low', 'high']"
Write a Python program that takes a list of integers and returns a list of their squares.,"[1, 2, 3, 4]","def square_list(l):
 return [i**2 for i in l]

print(square_list([1, 2, 3, 4]))
# Output: [1, 4, 9, 16]",Data Structure,4024,"def square_list___:
 return [i**2 for i in l]

print___)
# Output: ___"
Write a Python program to get a slice of elements from a list.,"mylist = [1,2,3,4,5,6]","def get_slice(mylist, start, end):
    return mylist[start:end]

result = get_slice([1,2,3,4,5,6], 2, 5)
print(result)",Data Structure,4026,"def get_slice___:
    return mylist[start:end]

result = get_slice___
print___"
"Write a function in Python that takes a list of numbers as an input, and returns the largest of them.","[1, 2, 3, 4, 5]","def largest(list):
 largest = 0
 for number in list:
 if number > largest:
 largest = number
 return largest

print(largest([1, 2, 3, 4, 5]))
# Outputs 5",Data Structure,4027,"def largest___:
 largest = 0
 for number in list:
 if number > largest:
 largest = number
 return largest

print___)
# Outputs 5"
Develop an algorithm in Python that takes an array of integers and finds two numbers whose sum is the given target.,"The array : [1, 3, 5, 7, 9]
The target : 12","def two_sum(arr, target):
 for num1 in arr:
 for num2 in arr:
 if num1 + num2 == target:
 return (num1, num2)

result = two_sum([1, 3, 5, 7, 9], 12)
print(result)
# Output -> (5, 7)",Data Structure,4031,"def two_sum___:
 for num1 in arr:
 for num2 in arr:
 if num1 + num2 == target:
 return ___

result = two_sum___
print___
# Output -> ___"
Create a list in Python from a given list of numbers.,"[1, 2, 4, 8, 16]","myList = [1, 2, 4, 8, 16]",Data Structure,4032,myList = ___
Write a python program to search through a list of integers and find the smallest number.,"int_list = [25, 64, 11, 43, 7]","def find_smallest(int_list):
    # set the minimum value to the first item in the list initially
    min_val = int_list[0]
    # loop over the list and compare each item to the minimum value
    for num in int_list:
        if num < min_val:
            min_val = num
    # return the minimum value
    return min_val",Data Structure,4038,"def find_smallest___:
    # set the minimum value to the first item in the list initially
    min_val = int_list___
    # loop over the list and compare each item to the minimum value
    for num in int_list:
        if num < min_val:
            min_val = num
    # return the minimum value
    return min_val"
"Write a Python program to edit this list of lists and remove any empty lists from the beginning, middle and end of the list.","[[], [2, 3], [], [4, 5], [], [6]]","def remove_empty_lists(lst):
  new_lst = []
  for li in lst:
    if li:
      new_lst.append(li)
  return new_lst

# call the function  
modified_list = remove_empty_lists([[], [2, 3], [], [4, 5], [], [6]])

print(modified_list)  
# Output: [[2, 3], [4, 5], [6]]",Data Structure,4039,"def remove_empty_lists___:
  new_lst = []
  for li in lst:
    if li:
      new_lst___li)
  return new_lst

# call the function  
modified_list = remove_empty_lists___

print___  
# Output: [___, ___, ___]"
Write Python code to normalize the values of a list of numbers by subtracting each number from the maximum value in the list and dividing it by the maximum value.,"[7, 8, 10],","def normalize(lst): 
    max_num = max(lst)
    normalized_lst = [(num-max_num)/max_num for num in lst]
    return normalized_lst

lst = [7,8,10]
normalized_values = normalize(lst)
print(normalized_values)",Data Structure,4040,"def normalize___: 
    max_num = max___
    normalized_lst = [___/max_num for num in lst]
    return normalized_lst

lst = ___
normalized_values = normalize___
print___"
Write a python program that prints a greeting for each name in the given list,"names = ['John', 'Mary', 'James']","for name in names:
    print('Hello ' + name + '!')",Data Structure,4042,"for name in names:
    print___"
Write a Python program to combine two lists of dictionaries into one list.,"list1: [{'a','b', 'c'}, {'d' : 'e', 'f': 'g'}]
list2: [{'h' : 'i', 'j': 'k'}, {'l': 'm'}]","combined = [{'a': 'b', 'c'}, {'d': 'e', 'f': 'g'}, {'h': 'i', 'j' : 'k'}, {'l': 'm'}]",Data Structure,4046,"combined = [___, ___, ___, ___]"
Create a sorting algorithm in Python for evaluating and sorting a list of tuples with two elements.,"Input List: [('a', 3), ('b', 2), ('c', 1)]","def sort_list_tuples(tuples):
  # sort by the second element in each tuple
  return sorted(tuples, key=lambda x: x[1])

# test code
tuples = [('a', 3), ('b', 2), ('c', 1)] 
print(sort_list_tuples(tuples))",Data Structure,4047,"def sort_list_tuples___:
  # sort by the second element in each tuple
  return sorted___

# test code
tuples = [___, ___, ___] 
print___)"
Write a function in Python that takes a list of names as the parameter and returns the longest name in the list.,"Names = ['John', 'Michael', 'Scott', 'Steve']","def longest_name(names):
 longest_name = ''

 for name in names:
  if len(name) > len(longest_name):
   longest_name = name
 
 return longest_name

Names = ['John', 'Michael', 'Scott', 'Steve']

longest = longest_name(Names)

print(longest) # Michael",Data Structure,4048,"def longest_name___:
 longest_name = ''

 for name in names:
  if len___ > len___:
   longest_name = name
 
 return longest_name

Names = ['John', 'Michael', 'Scott', 'Steve']

longest = longest_name___

print___ # Michael"
Create a Python program to sort the list of colors in alphabetical order.,"[""red"", ""green"", ""blue""]","colors = [""red"", ""green"", ""blue""]

#sorting in ascending order
desc_colors = sorted(colors)

print(""Colors in alphabetical order:"", desc_colors)",Data Structure,4050,"colors = [""red"", ""green"", ""blue""]

#sorting in ascending order
desc_colors = sorted___

print___"
Write a Python program to find the missing number in a list of integers.,"[1,2,4,5,6,7,8]","def find_missing_num(lst):
 expected_num = sum(range(lst[0],lst[-1]+1))
 actual_sum = sum(lst)
 return expected_num - actual_sum

lst = [1,2,4,5,6,7,8]
missing_num = find_missing_num(lst)
print(""The missing number is"", missing_num)",Data Structure,4052,"def find_missing_num___:
 expected_num = sum___)
 actual_sum = sum___
 return expected_num - actual_sum

lst = ___
missing_num = find_missing_num___
print___"
Write a function in Python that takes a list of objects and returns a list of those objects sorted by one of their attributes.,"[{""name"": ""Alice"", ""age"": 20}, {""name"": ""Bob"", ""age"": 21}]","def sort_by_attr(objects, attr):
 return sorted(objects, key=lambda item: item[attr])
 
sort_by_attr([{""name"": ""Alice"", ""age"": 20}, {""name"": ""Bob"", ""age"": 21}], ""age"")",Data Structure,4054,"def sort_by_attr___:
 return sorted___
 
sort_by_attr([___, ___], ""age"")"
Generate Python code for printing the average of a list of numbers.,"[2, 5, 6, 7]","list = [2, 5, 6, 7]

sum = 0

for num in list:
 sum += num
 
average = sum / len(list)
print(""Average:"", average)",Data Structure,4058,"list = ___

sum = 0

for num in list:
 sum += num
 
average = sum / len___
print___"
Write a Python Script to find all pairs of numbers in a list that have a sum equal to the target value.,"list = [2, 4, 6, 8], target = 10","def findPair(lst, target): 
    for i in range(0, len(lst)): 
        for j in range(i + 1, len(lst)): 
            if lst[i] + lst[j] == target: 
               return print(lst[i],"","", lst[j]) 
    
list = [2, 4, 6, 8] 
target = 10
findPair(list, target)",Data Structure,4059,"def findPair___: 
    for i in range___): 
        for j in range___): 
            if lst[i] + lst[j] == target: 
               return print___ 
    
list = ___ 
target = 10
findPair___"
Write a Python program to filter a list of words by their length.,"word_list = [""apple"", ""banana"", ""pear"", ""grape"", ""mango""]","def filter_by_length(word_list, length):
    filtered_list = []
    for word in word_list:
        if len(word) == length:
            filtered_list.append(word)
    return filtered_list

result = filter_by_length(word_list, 5)
print(result)",Data Structure,4065,"def filter_by_length___:
    filtered_list = []
    for word in word_list:
        if len___ == length:
            filtered_list___word)
    return filtered_list

result = filter_by_length___
print___"
Write a Python code to normalize a list of numbers.,"list_numbers = [1, 4, 4, 5, 7]","""""""
Normalize a list of numbers using Python
""""""

def normalize_list(list_numbers):
  max_val = max(list_numbers)
  normalized = [n/max_val for n in list_numbers]
  return normalized

if __name__ == '__main__':
  list_numbers = [1, 4, 4, 5, 7]
  print(normalize_list(list_numbers))",Data Structure,4066,"""""""
Normalize a list of numbers using Python
""""""

def normalize_list___:
  max_val = max___
  normalized = [n/max_val for n in list_numbers]
  return normalized

if __name__ == '__main__':
  list_numbers = ___
  print___)"
Create a Python program that randomly shuffles the values in an array,"my_arr = [1,2,3,4,5]","import random

def shuffle(my_arr):
    shuffled_arr = my_arr[:]
    random.shuffle(shuffled_arr)
    return shuffled_arr

shuffled_arr = shuffle(my_arr)
print(shuffled_arr)",Data Structure,4068,"import random

def shuffle___:
    shuffled_arr = my_arr[:]
    random.shuffle___
    return shuffled_arr

shuffled_arr = shuffle___
print___"
Create an algorithm in Python to remove duplicates from an array of integers while preserving the order of the elements.,"[1, 8, 10, 4, 1, 8, 8]","def remove_duplicates(arr):
  seen = set()
  result = []

  for item in arr:
    if item not in seen:
      seen.add(item)
      result.append(item)

  return result

arr = [1, 8, 10, 4, 1, 8, 8]

print(remove_duplicates(arr)) # Output: [1, 8, 10, 4]",Data Structure,4071,"def remove_duplicates___:
  seen = set()
  result = []

  for item in arr:
    if item not in seen:
      seen.add___
      result___item)

  return result

arr = ___

print___) # Output: [1, 8, 10, 4]"
Create a Python program that uses a given list of words to construct a poem.,"""Sleep"", ""Dream"", ""Reality"", ""Beauty"", ""Life""","def create_poem(words):
    poem = """"
    for word in words:
        poem += word + ""\n""

    poem += ""\nSleep, dream and beauty\nReality shatters in life\nWhere dreams forevermore dwell""
    return poem

print(create_poem([""Sleep"", ""Dream"", ""Reality"", ""Beauty"", ""Life""]))",Data Structure,4072,"def create_poem___:
    poem = """"
    for word in words:
        poem += word + ""\n""

    poem += ""\nSleep, dream and beauty\nReality shatters in life\nWhere dreams forevermore dwell""
    return poem

print___)"
"Given a list of numbers, write a program in Python to select only the elements divisible by 5.","[23, 12, 64, 39, 52]","def divisible_five(nums):
    result = []
    for num in nums:
        if num % 5 == 0:
            result.append(num)
    return result",Data Structure,4073,"def divisible_five___:
    result = []
    for num in nums:
        if num % 5 == 0:
            result___num)
    return result"
Generate Python code to add 1 to every element of an array.,"[5, 6, 8, 9, 10]","def add_one(arr): 
    for i in range(len(arr)): 
        arr[i] += 1 
    return arr",Data Structure,4074,"def add_one___: 
    for i in range___): 
        arr[i] += 1 
    return arr"
Create a Python program to group elements of a list based on their length.,"['cat', 'dog', 'apple']","def groupByLength(arr):
    result = {}
    for word in arr:
        if len(word) in result:
            result[len(word)].append(word)
        else:
            result[len(word)] = [word]
    return result

groupedByLength = groupByLength(['cat', 'dog', 'apple'])
print(groupedByLength)",Data Structure,4075,"def groupByLength___:
    result = {}
    for word in arr:
        if len___ in result:
            result[len(word)]___word)
        else:
            result[len___] = [word]
    return result

groupedByLength = groupByLength___
print___"
Create a Python function to find the maximum number in an array. The function should accept a single argument and return the maximum value in the array.,"array = [5, 8, 0, 1, 3, 9]","def find_maximum(arr):
  max_val = arr[0]
  for value in arr:
    if value > max_val:
      max_val = value
  return max_val

# Usage
max_num = find_maximum([5, 8, 0, 1, 3, 9])
print(max_num)
# prints 9",Data Structure,4076,"def find_maximum___:
  max_val = arr___
  for value in arr:
    if value > max_val:
      max_val = value
  return max_val

# Usage
max_num = find_maximum___
print___
# prints 9"
Generate code to remove any duplicates from a list of integers in Python.,"[1, 1, 2, 3, 4, 4, 5]","def remove_duplicates(lst): 
    final_list = [] 
    for num in lst: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list 
    
lst = [1, 1, 2, 3, 4, 4, 5] 
print(remove_duplicates(lst))",Data Structure,4077,"def remove_duplicates___: 
    final_list = [] 
    for num in lst: 
        if num not in final_list: 
            final_list___num) 
    return final_list 
    
lst = ___ 
print___)"
Create a loop in Python that prints each item of the following list with a message:,"my_list = ['A', 'B', 'C', 'D']","my_list = ['A', 'B', 'C', 'D']

for item in my_list:
    print(""The item is: {}"".format(item))",Data Structure,4078,"my_list = ['A', 'B', 'C', 'D']

for item in my_list:
    print___)"
Write a Python program to generate random passwords from a list of strings.,"strings = [""random"",""password"",""security"",""codes"",""aaa"",""bbb"",""ccc"", ""ddd""]","import random

strings = [""random"",""password"",""security"",""codes"",""aaa"",""bbb"",""ccc"", ""ddd""]
password = """"

for i in range(len(strings)):
 randomIndex = random.randint(0,len(strings) -1)
 password += strings[randomIndex]

print(""Generated Password:"", password)",Data Structure,4083,"import random

strings = [""random"",""password"",""security"",""codes"",""aaa"",""bbb"",""ccc"", ""ddd""]
password = """"

for i in range___):
 randomIndex = random.randint___ -1)
 password += strings[randomIndex]

print___"
Construct a Python function to calculate the sum of all elements of a given array.,"[3,2,1,6,5,7,4]","def array_sum(arr):
    s = 0
    for i in arr:
        s += i
    return s

print(array_sum([3,2,1,6,5,7,4]))",Data Structure,4092,"def array_sum___:
    s = 0
    for i in arr:
        s += i
    return s

print___)"
Implement a sorting algorithm in Python that sorts a given array of numbers in descending order.,"[2, 5, 7, 3, 1, 8]","def sort_descending(list):
    sorted_list = sorted(list, reverse=True)
    return sorted_list",Data Structure,4094,"def sort_descending___:
    sorted_list = sorted___
    return sorted_list"
Can you provide a code snippet in Python that takes a list of strings as input and sorts them based on their length?,"[""Hello"",""World!"",""Good"",""Morning""]","words = [""Hello"",""World!"",""Good"",""Morning""]

words.sort(key=len)

print(words)",Data Structure,4095,"words = [""Hello"",""World!"",""Good"",""Morning""]

words.sort___

print___"
Construct a function in Python that will take a list as an argument and prompt the user to delete elements from that list.,"my_list = [1, 2, 3, 4, 5]","def delete_element(list): 
    print(""Original list: "" + str(list)) 
    element = int(input(""Please enter the element which you want to delete: ""))
    list.remove(element) 
    print(""List after deletion of element: "" + str(list))",Data Structure,4096,"def delete_element___: 
    print___) 
    element = int___)
    list___element) 
    print___)"
Suggest a Python program to compute the sum of pairs of elements in a given array,"[2, 4, 5, 10]","def sum_pairs(input_list):
    output_list = []
    for i in range(len(input_list)-1):
        sum = input_list[i] + input_list[i+1]
        output_list.append(sum)
    return output_list

input_list = [2, 4, 5, 10]
result = sum_pairs(input_list)
print(result)",Data Structure,4099,"def sum_pairs___:
    output_list = []
    for i in range___-1):
        sum = input_list[i] + input_list[i+1]
        output_list___sum)
    return output_list

input_list = ___
result = sum_pairs___
print___"
Write an algorithm in Python to find the maximum element of a given array.,"[2, 7, 1, 6, 5]","def find_max_element(arr):
  
  max = arr[0]
  
  for i in range(1, len(arr)):
    # compare current max with the next array element
    if arr[i] > max:
      max = arr[i]
  
  return max

arr = [2, 7, 1, 6, 5]
max_element = find_max_element(arr)
print(""Max element in the array:"", max_element)",Data Structure,4100,"def find_max_element___:
  
  max = arr___
  
  for i in range___):
    # compare current max with the next array element
    if arr[i] > max:
      max = arr[i]
  
  return max

arr = ___
max_element = find_max_element___
print___"
Write a function in Python that takes an array of integer values and reverses the order of the values.,"[1, 2, 3, 4, 5]","def reverse_array(arr):
  return arr[::-1]  # Returns a slice of the list in reverse order",Data Structure,4103,"def reverse_array___:
  return arr[::-1]  # Returns a slice of the list in reverse order"
Create a program to generate a frequency table from a given list,a list of elements,"# Python3 program to find frequency table 
from collections import Counter 
def freq_table(arr):
    return dict(Counter(arr))",Data Structure,4104,"# Python3 program to find frequency table 
from collections import Counter 
def freq_table___:
    return dict___)"
Write a Python function that takes a list of strings as input and returns a new list containing all the strings that start with 'A',"List = [""Apple"", ""Banana"", ""Ant"", ""Dog"", ""Aardvark""]","def startWithA(list): 
	new_list = [] 
	for el in list: 
		if el[0] == 'A': 
			new_list.append(el) 
	return new_list",Data Structure,4107,"def startWithA___: 
	new_list = [] 
	for el in list: 
		if el___ == 'A': 
			new_list___el) 
	return new_list"
Write a Python code to sort the given array.,"array : [ 2, 4, 1, 3, 7, 5]","# Bubble sort algorithm
def sort_array(array):
    for i in range(len(array)):
        for j in range(len(array)-i-1):
            if array[j] > array[j+1]:
               array[j], array[j+1] = array[j+1], array[j]
    return array

# Sample array
array = [2, 4, 1, 3, 7, 5]

# Function call
sorted_array = sort_array(array)

# Print sorted output
print(sorted_array)",Data Structure,4108,"# Bubble sort algorithm
def sort_array___:
    for i in range___):
        for j in range___-i-1):
            if array[j] > array[j+1]:
               array[j], array[j+1] = array[j+1], array[j]
    return array

# Sample array
array = ___

# Function call
sorted_array = sort_array___

# Print sorted output
print___"
Design an algorithm in Python to count all unique elements in a list.,"[1, 1, 2, 3, 3, 4, 5, 6]","def count_unique(lst):
    unique_count = 0
    seen = set()
    for element in lst:
        if element not in seen:
            unique_count += 1
            seen.add(element)
    return unique_count",Data Structure,4119,"def count_unique___:
    unique_count = 0
    seen = set()
    for element in lst:
        if element not in seen:
            unique_count += 1
            seen.add___
    return unique_count"
Provide a Python program that sorts a list of strings based on the length of the strings.,"[""banana"", ""apple"", ""watermelon""]","my_list = [""banana"", ""apple"", ""watermelon""]
my_list.sort(key=len)

# my_list is now [""apple"", ""banana"", ""watermelon""]",Data Structure,4124,"my_list = [""banana"", ""apple"", ""watermelon""]
my_list.sort___

# my_list is now [""apple"", ""banana"", ""watermelon""]"
Write a Python program to create a histogram of the data in the given array.,"Array: [2, 3, 5, 6, 8, 4, 2, 4, 6, 9]","import matplotlib.pyplot as plt

data = [2, 3, 5, 6, 8, 4, 2, 4, 6, 9]

plt.hist(data)
plt.title(""Histogram of Data"")
plt.xlabel(""Data Values"")
plt.ylabel(""Frequency"")
plt.show()",Data Structure,4128,"import matplotlib.pyplot as plt

data = ___

plt.hist___
plt.title___
plt.xlabel___
plt.ylabel___
plt.show()"
Write a python program to transform input set of numbers into a list of tuples.,"1, 2, 3, 4, 5","[(1, 2), (3, 4), (5, None)]",Data Structure,4130,"[___, ___, ___]"
Produce a Python code section to calculate the average value for all elements of a given array.,"[2, 7, 5, 4]","array = [2, 7, 5, 4]

total = 0
for num in array:
 total += num
average = total/len(array)

print(""The average of the array is:"", average)",Data Structure,4132,"array = ___

total = 0
for num in array:
 total += num
average = total/len___

print___"
Design a Python program for finding the median of a given list of numbers.,"[7, 4, 5, 2, 10]","def find_median(lst):
    lst.sort()
    if len(lst)%2 == 0:
        median1 = lst[len(lst)//2]
        median2 = lst[len(lst)//2 - 1]
        median = float(median1 + median2) / 2
    else:
        median = lst[len(lst)//2]
    return median

result = find_median([7, 4, 5, 2, 10])
print(result)",Data Structure,4134,"def find_median___:
    lst.sort()
    if len___%2 == 0:
        median1 = lst[len___//2]
        median2 = lst[len___//2 - 1]
        median = float___ / 2
    else:
        median = lst[len___//2]
    return median

result = find_median___
print___"
Write a Python program to check if a given array contains a pair of elements whose sum is equal to a given number.,"[2, 4, 6, 5], 8","def check_pair(arr, sum):
    s = set()
    for item in arr:
        target = sum - item
        if(target in s):
            return True
        s.add(item)
    return False

print(check_pair([2, 4, 6, 5], 8))",Data Structure,4137,"def check_pair___:
    s = set()
    for item in arr:
        target = sum - item
        if___:
            return True
        s.add___
    return False

print___)"
Modify the following Python code to remove any duplicate elements in an array.,"myList = [1, 2, 3, 2, 1]",myList = list(set(myList)),Data Structure,4141,myList = list___)
Create a Python 3 program that filters a list of numbers. The program should filter out any numbers greater than 10.,"[20, 5, 2, 15, 7, 10]","numbers = [20, 5, 2, 15, 7, 10]
numbers = [x for x in numbers if x <= 10]
print(numbers)",Data Structure,4143,"numbers = ___
numbers = [x for x in numbers if x <= 10]
print___"
Construct a python program that randomly swaps two elements within a list of numbers.,"[1, 2, 3, 4, 5]","import random

# input list
data_list = [1, 2, 3, 4, 5]

# choose two random indices
i, j = random.sample(range(len(data_list)), 2)

# store the values before swapping
a = data_list[i]
b = data_list[j]

# swap two elements in a list
data_list[i] = b
data_list[j] = a

# print the list after swapping
print(data_list)",Data Structure,4146,"import random

# input list
data_list = ___

# choose two random indices
i, j = random.sample___), 2)

# store the values before swapping
a = data_list[i]
b = data_list[j]

# swap two elements in a list
data_list[i] = b
data_list[j] = a

# print the list after swapping
print___"
Create a Python program that takes a list of integers as an input and returns a dictionary with keys being the numbers and values being the frequency of those numbers in the list.,"[1, 3, 5, 6, 1, 2, 5, 3]","def counting(nums):
    result={}
    for num in nums:
        if num in result:
            result[num]+=1
        else:
            result[num]=1
    return result

nums=[1, 3, 5, 6, 1, 2, 5, 3]
result=counting(nums)
print(result)
# Output: {1: 2, 3: 2, 5: 2, 6: 1, 2: 1}",Data Structure,4147,"def counting___:
    result={}
    for num in nums:
        if num in result:
            result[num]+=1
        else:
            result[num]=1
    return result

nums=___
result=counting___
print___
# Output: ___"
Generate Python code to calculate the sum of the elements in a given list.,"[1, 4, 8, 10]","list = [1,4,8,10]

def calculate_sum(list):
 sum = 0
 for number in list:
 sum += number
 return sum

sum = calculate_sum(list)
print(sum) # Output: 23",Data Structure,4152,"list = ___

def calculate_sum___:
 sum = 0
 for number in list:
 sum += number
 return sum

sum = calculate_sum___
print___ # Output: 23"
"Write a Python program to split a list into two parts, where the size of the first part is determined by the user.","[1, 2, 3, 4, 5, 6, 7]","def split_list(lst, size):
    part1 = lst[:size]
    part2 = lst[size:]
    return part1, part2

# example
my_list = [1, 2, 3, 4, 5, 6, 7]
part1, part2 = split_list(my_list, 3)
print(part1) # [1, 2, 3]
print(part2) # [4, 5, 6, 7]",Data Structure,4154,"def split_list___:
    part1 = lst[:size]
    part2 = lst[size:]
    return part1, part2

# example
my_list = ___
part1, part2 = split_list___
print___ # [1, 2, 3]
print___ # [4, 5, 6, 7]"
Write a python program that selects five random elements from a list and prints them.,"my_list = [1, 3, 5, 8, 7, 2, 10, 4, 6, 9]","import random

my_list = [1, 3, 5, 8, 7, 2, 10, 4, 6, 9]
random.shuffle(my_list)

for i in range(5):
    print(my_list[i])",Data Structure,4166,"import random

my_list = ___
random.shuffle___

for i in range___:
    print___"
Create a program in Python to find the number of occurrences of an element x in a list y.,"[3, 5, 2, 7, 4, 3, 2], x = 2","def count_x(x, y):
    count = 0
    for i in y:
        if i == x:
            count += 1
    return count",Data Structure,4169,"def count_x___:
    count = 0
    for i in y:
        if i == x:
            count += 1
    return count"
Create a Python program which returns the difference between the two largest numbers in a given list,"[3, 8, 9, 6, 4, 10]","def maxDifference(arr): 
    n = len(arr) 
    max_diff = arr[1] - arr[0] 
  
    for i in range(0, n): 
        for j in range(i + 1, n): 
            if (arr[j] - arr[i] > max_diff): 
                max_diff = arr[j] - arr[i] 
    return max_diff 
  
arr = [3, 8, 9, 6, 4, 10] 
print( maxDifference(arr))",Data Structure,4172,"def maxDifference___: 
    n = len___ 
    max_diff = arr___ - arr___ 
  
    for i in range___: 
        for j in range___: 
            if ___: 
                max_diff = arr[j] - arr[i] 
    return max_diff 
  
arr = ___ 
print___)"
Write a Python program to classify a given array of numbers into even number and odd number arrays.,"my_array = [1, 2, 3, 4, 5, 6, 7, 8, 9]","# Create empty lists to store odd and even elements
odd_elements = []
even_elements = []

# Iterate through the array
for element in my_array:
    # Check if the element is even or odd
    if element % 2 == 0:
        even_elements.append(element)
    else:
        odd_elements.append(element)

print(odd_elements)
print(even_elements)",Data Structure,4174,"# Create empty lists to store odd and even elements
odd_elements = []
even_elements = []

# Iterate through the array
for element in my_array:
    # Check if the element is even or odd
    if element % 2 == 0:
        even_elements___element)
    else:
        odd_elements___element)

print___
print___"
Develop a Python function that takes a list of numbers and returns the minimum value.,"[10, 5, 20, -20, 30]","def findMinValue(numlist): 

    minVal = numlist[0] 
  
    for i in numlist: 
        if i < minVal: 
            minVal = i 
  
    return minVal 

numlist = [10, 5, 20, -20, 30] 
print(findMinValue(numlist))",Data Structure,4176,"def findMinValue___: 

    minVal = numlist___ 
  
    for i in numlist: 
        if i < minVal: 
            minVal = i 
  
    return minVal 

numlist = [10, 5, 20, -20, 30] 
print___)"
Write a Python function to flatten a nested list of lists into a single list containing all elements.,"nested_list = [[1, 2], [3, 4], [5, 6]]","def flatten_list(nested_list):
    return [item for sublist in nested_list for item in sublist]",Data Structure,4179,"def flatten_list___:
    return [item for sublist in nested_list for item in sublist]"
Implement a linear search algorithm in Python to search for an element in an array.,"arr = [2, 3, 4, 10, 40]
x = 10","def linear_search(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i 
    return -1
  
arr = [2, 3, 4, 10, 40] 
x = 10

result = linear_search(arr, x) 
if result == -1: 
    print(""Element is not present in array"") 
else: 
    print(""Element is present at index"", result)",Data Structure,4180,"def linear_search___: 
    for i in range___): 
        if arr[i] == x: 
            return i 
    return -1
  
arr = ___ 
x = 10

result = linear_search___ 
if result == -1: 
    print___ 
else: 
    print___"
Create a function in Python that takes an array of numbers and prints out its maximum value.,"[1, 4, 8, 9, 10]","def print_max(arr):
 max_val = max(arr)
 print(max_val)
 
print_max([1, 4, 8, 9, 10])",Data Structure,4182,"def print_max___:
 max_val = max___
 print___
 
print_max___"
Find the frequency of elements in a given list in Python.,"List: [1, 1, 2, 3, 3, 3, 4, 4, 5]","from collections import Counter

given_list = [1, 1, 2, 3, 3, 3, 4, 4, 5]

my_dict = Counter(given_list)

print(my_dict) # output: Counter({3: 3, 4: 2, 1: 2, 2: 1, 5: 1})",Data Structure,4186,"from collections import Counter

given_list = ___

my_dict = Counter___

print(my_dict) # output: Counter(___)"
Develop a function in Python to find the largest two numbers in a given array.,"input_array = [1, 9, 5, 2, 4, 7]","def find_largest_two(input_array):
    largest1, largest2 = -float(""inf""), -float(""inf"")
    if len(input_array)<2:
        return
    for el in input_array:
        if el > largest1:
            largest2 = largest1
            largest1 = el
        elif el > largest2:
            largest2 = el
    return largest1,largest2",Data Structure,4187,"def find_largest_two___:
    largest1, largest2 = -float___, -float___
    if len___<2:
        return
    for el in input_array:
        if el > largest1:
            largest2 = largest1
            largest1 = el
        elif el > largest2:
            largest2 = el
    return largest1,largest2"
Write a function in Python that returns the maximum element in the given list.,"[1, -2, 3, 4]","def get_max_elem(arr):
    max_elem = arr[0]
    for elem in arr:
        if elem > max_elem:
            max_elem = elem
    return max_elem
 
arr = [1, -2, 3, 4]
max_elem = get_max_elem(arr)
print(max_elem) # Output: 4",Data Structure,4195,"def get_max_elem___:
    max_elem = arr___
    for elem in arr:
        if elem > max_elem:
            max_elem = elem
    return max_elem
 
arr = [1, -2, 3, 4]
max_elem = get_max_elem___
print___ # Output: 4"
Contruct a python program that sorts an array of strings using BubbleSort algorithm.,"[""Hello"", ""World"", ""Boo"", ""Yay""]","def bubbleSort(arr): 
    n = len(arr) 
  
    for i in range(n):      
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 
  
    return arr",Data Structure,4209,"def bubbleSort___: 
    n = len___ 
  
    for i in range___:      
        for j in range___: 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 
  
    return arr"
"Given a list of strings, write a Python snippet to sort the strings in ascending order according to word length.","[ ""Code"", ""Python"", ""JavaScript"", ""Java""]","strings = [""Code"", ""Python"", ""JavaScript"", ""Java""]

# sort the list by word length
strings.sort(key = lambda x: len(x))

print(strings)
# Output: [""Code"", ""Java"", ""Python"", ""JavaScript""]",Data Structure,4212,"strings = [""Code"", ""Python"", ""JavaScript"", ""Java""]

# sort the list by word length
strings.sort___)

print___
# Output: [""Code"", ""Java"", ""Python"", ""JavaScript""]"
Create a function in Python that takes a list of words as an argument and returns a new list without duplicates.,"['apple', 'banana', 'apple', 'orange']","def remove_duplicates(words):
  seen = set()
  unique_words = []
  for word in words:
    if word not in seen:
      seen.add(word)
      unique_words.append(word)
  return unique_words

arr = ['apple', 'banana', 'apple', 'orange']
result = remove_duplicates(arr)
print(result)",Data Structure,4215,"def remove_duplicates___:
  seen = set()
  unique_words = []
  for word in words:
    if word not in seen:
      seen.add___
      unique_words___word)
  return unique_words

arr = ['apple', 'banana', 'apple', 'orange']
result = remove_duplicates___
print___"
Develop a program in Python to rotate the elements of an array to the right by K times.,"my_list = [1,2,3,4,5]","def rotate_k_times(my_list, k):
    rotated_list = my_list.copy()
    for i in range(k):
        rotated_list = [rotated_list[-1]] + rotated_list[:-1]
    return rotated_list

if __name__ == '__main__':
    print(rotate_k_times(my_list, 3))",Data Structure,4218,"def rotate_k_times___:
    rotated_list = my_list.copy()
    for i in range___:
        rotated_list = [rotated_list[-1]] + rotated_list[:-1]
    return rotated_list

if __name__ == '__main__':
    print___)"
Generate a Python code to sort a list of numbers.,"[100, 50, 30, 10, 7]","list = [100, 50, 30, 10, 7]
list.sort()
print(list) # Output: [7, 10, 30, 50, 100]",Data Structure,4219,"list = ___
list.sort()
print___ # Output: [7, 10, 30, 50, 100]"
Develop a Python program to reverse a list of numbers.,"[1, 2, 3, 4, 5]","def reverse_list(nums):
    """"""Function to reverse a list of numbers.

    Parameters
    ----------
    nums : list
        List of numbers to be reversed.

    Returns
    -------
    reversed_list : list
        Reversed list of numbers.
    """"""

    reversed_list = nums[::-1]

    return reversed_list",Data Structure,4231,"def reverse_list___:
    """"""Function to reverse a list of numbers.

    Parameters
    ----------
    nums : list
        List of numbers to be reversed.

    Returns
    -------
    reversed_list : list
        Reversed list of numbers.
    """"""

    reversed_list = nums[::-1]

    return reversed_list"
Create a sorting algorithm in Python to sort a given array in ascending order.,"[9, 8, 7, 6, 5, 4, 3, 2, 1]","def quicksort(arr): 
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort(left) + middle + quicksort(right)

print(quicksort([9, 8, 7, 6, 5, 4, 3, 2, 1]))",Data Structure,4234,"def quicksort___: 
    if len___ <= 1:
        return arr
    pivot = arr[len___ // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort___ + middle + quicksort___

print___)"
Write a Python program to compute the sum of the absolute difference of all pairs of numbers in a given array.,"[5, 8, 10, 15]","arr = [5, 8, 10, 15]
Sum = 0

for i in range(len(arr)):
    for j in range(len(arr)):
        if(i != j):
            Sum += abs(arr[i] - arr[j])
            
print(Sum)",Data Structure,4239,"arr = ___
Sum = 0

for i in range___):
    for j in range___):
        if___:
            Sum += abs___
            
print___"
Output the sum of numbers in a list in Python.,"[1, 2, 3, 4, 5]","def list_sum(inpList):
    sum = 0
    for num in inpList:
        sum += num
    return sum

print(list_sum([1, 2, 3, 4, 5]))",Data Structure,4241,"def list_sum___:
    sum = 0
    for num in inpList:
        sum += num
    return sum

print___)"
Create a Python program to remove any items from a given list that are less than 5.,"[1, 4, 6, 8, 10, 15, 20]","my_list = [1, 4, 6, 8, 10, 15, 20]

filtered_list = [item for item in my_list if item >= 5]

print(filtered_list)  # Output: [6, 8, 10, 15, 20]",Data Structure,4248,"my_list = ___

filtered_list = [item for item in my_list if item >= 5]

print___  # Output: [6, 8, 10, 15, 20]"
Build a Python program to take a given list and create a dictionary with the elements and their corresponding indices.,"L=[""a"",""b"",""c""]","def create_dict(L):
    dict = {}
    for i in range(len(L)): 
        dict[L[i]] = i
    return dict

dict_list = dict(create_dict([""a"",""b"",""c""]))
print(dict_list)",Data Structure,4253,"def create_dict___:
    dict = {}
    for i in range___): 
        dict[L[i]] = i
    return dict

dict_list = dict___)
print___"
Optimize the above Python program to calculate the sum of a given array of numbers for better performance.,"[1, 2, 3, 4]","import numpy as np

def sum(arr):
 return np.sum(arr)

sum([1,2,3,4]) # 10",Data Structure,4256,"import numpy as np

def sum___:
 return np.sum___

sum___ # 10"
Edit the given Python code to convert a list of temperatures in Fahrenheit to a list of temperatures in Celsius.,"temperatures_fahrenheit = [32, 64, 78, -10]","temperatures_fahrenheit = [32, 64, 78, -10]

temperatures_celsius = [((temp-32)*5)/9 for temp in temperatures_fahrenheit]
print(temperatures_celsius)",Data Structure,4257,"temperatures_fahrenheit = [32, 64, 78, -10]

temperatures_celsius = [___*5)/9 for temp in temperatures_fahrenheit]
print___"
Design an algorithm in Python that will accept an array of integers and return an array with alternate elements removed starting from the even indices.,"[1, 2, 3, 4, 5, 6]","def alternating_elements(arr):
    new_arr = [arr[i] for i in range(0, len(arr), 2)]
    return new_arr

result = alternating_elements([1, 2, 3, 4, 5, 6])
print(result) #[2, 4, 6]",Data Structure,4260,"def alternating_elements___:
    new_arr = [arr[i] for i in range___, 2)]
    return new_arr

result = alternating_elements___
print___ #[2, 4, 6]"
Create a Python program that takes a list of integers and prints out the total number of times that the number 7 appears in the list.,"[1, 2, 3, 4, 5, 7, 7, 8, 9]","def count_7(nums):
  count = 0
  for num in nums:
    if num == 7:
      count += 1
  return count",Data Structure,4264,"def count_7___:
  count = 0
  for num in nums:
    if num == 7:
      count += 1
  return count"
Generate a Python program to partition a given array into two parts such that every element in first part is less or equal than the elements in the second part.,"[1, 9, 0, 5, 2]","def partition(arr):
  pivot = arr[0]
  i = 0
  j = len(arr) - 1

  while i <= j:
   while arr[i] < pivot:
    i += 1
   while arr[j] > pivot:
    j -= 1

   if i <= j:
    arr[i], arr[j] = arr[j], arr[i] 
    i +=1
    j -= 1

  return arr

print(partition([1, 9, 0, 5, 2]))",Data Structure,4266,"def partition___:
  pivot = arr___
  i = 0
  j = len___ - 1

  while i <= j:
   while arr[i] < pivot:
    i += 1
   while arr[j] > pivot:
    j -= 1

   if i <= j:
    arr[i], arr[j] = arr[j], arr[i] 
    i +=1
    j -= 1

  return arr

print___)"
Write a Python function to remove a specific element from a list.,"list = [10,20,30,40]","def remove_element(list, element):
    for i in range(len(list)):
        if list[i] == element:
            del list[i]
            break
    return list

list = remove_element(list,40)",Data Structure,4269,"def remove_element___:
    for i in range___):
        if list[i] == element:
            del list[i]
            break
    return list

list = remove_element___"
Classify a list of words into their corresponding part of speech using Python.,"[""happy"", ""run"", ""went"", ""like""]","pos_tags = nltk.pos_tag([""happy"", ""run"", ""went"", ""like""])
for tag in pos_tags:
    print(f'{tag[0]}: {tag[1]}')

# Output 
# happy: JJ
# run: VB
# went: VBD
# like: IN",Data Structure,4271,"pos_tags = nltk.pos_tag___
for tag in pos_tags:
    print(f'___: ___')

# Output 
# happy: JJ
# run: VB
# went: VBD
# like: IN"
Create a binary search algorithm in Python that searches an input array for a certain number.,"A = [1,2,3,4,5,6,7,8,9]","def binarySearch(A, x):
 start = 0
 end = len(A) - 1

 while start <= end:
  mid = (start + end) // 2

  if A[mid] == x:
   return mid
  elif A[mid] > x:
   end = mid - 1
  else:
   start = mid + 1

return -1",Data Structure,4283,"def binarySearch___:
 start = 0
 end = len___ - 1

 while start <= end:
  mid = ___ // 2

  if A[mid] == x:
   return mid
  elif A[mid] > x:
   end = mid - 1
  else:
   start = mid + 1

return -1"
Develop a program in Python to find the second largest element in a given array.,"[10, 11, 8, 9, 20]","def second_largest(arr):
    first = max(arr[0], arr[1])
    second = min(arr[0], arr[1])
 
    for i in range(2, len(arr)):
        if arr[i] > first:
            second = first
            first = arr[i]
        elif arr[i] > second and arr[i] != first:
            second = arr[i]
 
    return second",Data Structure,4290,"def second_largest___:
    first = max___
    second = min___
 
    for i in range___):
        if arr[i] > first:
            second = first
            first = arr[i]
        elif arr[i] > second and arr[i] != first:
            second = arr[i]
 
    return second"
"Create a Python program that takes a list and returns a dictionary with the elements from the list as keys, and their frequency as values.","my_list = [1,1,2,3,4,4,4,4,5,6]","my_dict = {}

for item in my_list:
    if item not in my_dict:
        my_dict[item] = 0
    my_dict[item] += 1

print(my_dict) # {1: 2, 2: 1, 3: 1, 4: 4, 5: 1, 6: 1}",Data Structure,4292,"my_dict = {}

for item in my_list:
    if item not in my_dict:
        my_dict[item] = 0
    my_dict[item] += 1

print(my_dict) # ___"
"Given a list and an integer, write a Python function to return a sublist of the list with the given integer.","[1, 2, 3, 4, 5, 6, 7], 2","def get_sublist(lst, n):
    return [lst[i:i+n] for i in range(0,len(lst),n)]",Data Structure,4293,"def get_sublist___:
    return [lst[i:i+n] for i in range___,n)]"
Build a Python function that takes a single list of numbers and performs an insertion sort. The function should return a sorted list.,"[4, 1, 8, 11, 15]","def insertion_sort(arr):  
    for i in range(1, len(arr)): 
    
        key = arr[i] 

        j = i-1
        while j >= 0 and key < arr[j] : 
                arr[j + 1] = arr[j] 
                j -= 1
        arr[j + 1] = key 

    return arr

insertion_sort([4,1,8,11,15])

# Output  [1, 4, 8, 11, 15]",Data Structure,4295,"def insertion_sort___:  
    for i in range___): 
    
        key = arr[i] 

        j = i-1
        while j >= 0 and key < arr[j] : 
                arr[j + 1] = arr[j] 
                j -= 1
        arr[j + 1] = key 

    return arr

insertion_sort___

# Output  ___"
Create a program in Python to find all pairs of elements in a list with the given difference.,"[9, 4, 7, 5], 4","def find_pair_with_difference(list, difference):
    result = []
    for i in range(len(list)):
        for j in range(i+1, len(list)):
            if list[j] - list[i] == difference:
                result.append((list[i], list[j]))
    return result

list=[9, 4, 7, 5]
difference = 4
result = find_pair_with_difference(list, difference)
print(result)",Data Structure,4300,"def find_pair_with_difference___:
    result = []
    for i in range___):
        for j in range___):
            if list[j] - list[i] == difference:
                result___(list[i], list[j]))
    return result

list=___
difference = 4
result = find_pair_with_difference___
print___"
Generate a program in Python to convert a list of integers into a single integer.,"list = [1, 2, 3, 4]","def list_to_int(list_of_ints):
 number = 0
 for int in list_of_ints:
  number = number*10 + int
 return number",Data Structure,4302,"def list_to_int___:
 number = 0
 for int in list_of_ints:
  number = number*10 + int
 return number"
Perform set theory operations using Python.,"A = {1, 2, 3}
B = {2, 3, 4}","A = {1, 2, 3}
B = {2, 3, 4}

# Union of Sets
C = A.union(B) 
print(C) 

# Intersection of Sets 
C = A.intersection(B) 
print(C) 

# Difference of Sets 
C = A.difference(B) 
print(C)",Data Structure,4303,"A = ___
B = ___

# Union of Sets
C = A.union___ 
print___ 

# Intersection of Sets 
C = A.intersection___ 
print___ 

# Difference of Sets 
C = A.difference___ 
print___"
Design an API for a Python script that returns the average of any given list of numbers.,"[1, 4, 5, 7, 8]","# Create API endpoint
@app.route('/api/average', methods=['POST'])
def average():
    # Get data from request
    data = request.get_json()

    # Calculate average
    avg = np.mean(data)

    # Return result
    return jsonify({'result': avg})",Data Structure,4304,"# Create API endpoint
@app.route___
def average():
    # Get data from request
    data = request.get_json()

    # Calculate average
    avg = np.mean___

    # Return result
    return jsonify(___)"
Edit a given Python code to return the maximum number in the given array.,"arr = [7, 8, 2, 4]","def findMax(arr):
    max = arr[0]
    for num in arr:
        if num > max:
            max = num
    return max

print(findMax(arr))",Data Structure,4307,"def findMax___:
    max = arr___
    for num in arr:
        if num > max:
            max = num
    return max

print___)"
Write a Python script to search through a list of strings and find if any of the strings contain a substring.,"list = [""who"", “are”, “you”, “looking”, “for”]
substring = ""you""","def search_for_substring(list, substring):
    for item in list:
        if substring in item:
            return True
    return False

result = search_for_substring(list, substring)
print(result) # True",Data Structure,4312,"def search_for_substring___:
    for item in list:
        if substring in item:
            return True
    return False

result = search_for_substring___
print___ # True"
Modify the given code such that a python list of strings is created based on the input.,"lst = [1, 2, 3]","lst_strs = []
for i in lst:
    lst_strs.append(str(i))",Data Structure,4313,"lst_strs = []
for i in lst:
    lst_strs___str(i))"
Write Python code snippets that will convert comma separated values to a list of dictionaries.,"name,age
Albert,22
Bob,24
Charles,20","csv_data = [
 {'name': 'Albert', 'age': 22},
 {'name': 'Bob', 'age': 24},
 {'name': 'Charles', 'age': 20}
]",Data Structure,4317,"csv_data = [
 ___,
 ___,
 ___
]"
"Given a 2D array of integers, write a Python function that returns the sum of all values in the array.","[[1, 2], [3, 4], [5, 6]]","def sum2dArray(arr):
    two_d_sum = 0
    for sub_arr in arr:
        for elem in sub_arr:
            two_d_sum += elem
    return two_d_sum

arr = [[1,2], [3,4], [5,6]]
result = sum2dArray(arr)
print(result) # 21",Data Structure,4318,"def sum2dArray___:
    two_d_sum = 0
    for sub_arr in arr:
        for elem in sub_arr:
            two_d_sum += elem
    return two_d_sum

arr = [___, ___, ___]
result = sum2dArray___
print___ # 21"
Design a Python script to remove duplicate elements of an array.,"[10, 1, 2, 5, 1, 10, 3]","def remove_duplicates(list):
    result = []
    for value in list:
        if value not in result:
            result.append(value)
    return result

list = [10, 1, 2, 5, 1, 10, 3]
result = remove_duplicates(list) 
print(result) # Output: [10, 1, 2, 5, 3]",Data Structure,4324,"def remove_duplicates___:
    result = []
    for value in list:
        if value not in result:
            result___value)
    return result

list = ___
result = remove_duplicates___ 
print___ # Output: [10, 1, 2, 5, 3]"
Write a Python program to randomly select an item from a list.,"list_of_names = [""John"", ""Anna"", ""Bill"", ""Kim"", ""Claire""]","import random

list_of_names = [""John"", ""Anna"", ""Bill"", ""Kim"", ""Claire""]
random_name = random.choice(list_of_names)

print(f'Randomly selected name from the list: {random_name}')",Data Structure,4331,"import random

list_of_names = [""John"", ""Anna"", ""Bill"", ""Kim"", ""Claire""]
random_name = random.choice___

print(f'Randomly selected name from the list: ___')"
Write a Python program to determine the number of elements in a given array before the return value is -1.,"Array = [2, 3, -1, 5, 4, 7]","def countElements(Array): 
    count = 0
    for i in Array: 
        if i != -1: 
            count = count + 1
        else: 
            break
    return count",Data Structure,4336,"def countElements___: 
    count = 0
    for i in Array: 
        if i != -1: 
            count = count + 1
        else: 
            break
    return count"
"Create a Python program to read in a list of numbers and output a list that contains, for every even number, the list of odd numbers that sum up to it.","inputList = [4, 6, 10, 8]","def sumOfOdds(inputList):
 result = []
 for num in inputList: 
  if (num % 2 == 0): 
   for i in range(1, num): 
    if (i % 2 != 0): 
     if (num == i + (num - i)):
      result.append([i, num - i])
 
 return result
 
# Driver code
inputList = [4, 6, 10, 8]
 
print(sumOfOdds(inputList))",Data Structure,4337,"def sumOfOdds___:
 result = []
 for num in inputList: 
  if ___: 
   for i in range___: 
    if ___: 
     if ___):
      result___[i, num - i])
 
 return result
 
# Driver code
inputList = ___
 
print___)"
Write a function in Python to return the indices of all occurrences of a given item in a list.,"list = [1,2,3,4,5,1,2,3,4,5]
item = 3","def find_all_occurrence_indices(list, item):
result = []
for index, number in enumerate(list):
if number == item:
result.append(index)
return result",Data Structure,4339,"def find_all_occurrence_indices___:
result = []
for index, number in enumerate___:
if number == item:
result___index)
return result"
Create a Python program that can convert a list of strings into their corresponding encoded values.,"list of strings = [""hello"",""world"",""how"",""are"",""you""]","def encode_list_of_strings(list_of_strings):
  encoded = []
  for string in list_of_strings:
    encoded.append(string.encode(""utf-8""))
  return encoded

list_of_strings = [""hello"",""world"",""how"",""are"",""you""]
encoded = encode_list_of_strings(list_of_strings)

# Output: [b'hello', b'world', b'how', b'are', b'you']",Data Structure,4342,"def encode_list_of_strings___:
  encoded = []
  for string in list_of_strings:
    encoded___string.encode(""utf-8""))
  return encoded

list_of_strings = [""hello"",""world"",""how"",""are"",""you""]
encoded = encode_list_of_strings___

# Output: [b'hello', b'world', b'how', b'are', b'you']"
Create a program in Python that adds a given list of numbers.,"[2, 5, 9]","def add_list(list_of_numbers):
    sum = 0
    for i in list_of_numbers:
        sum += i
    return sum

list = [2, 5, 9]
result = add_list(list)
print(result)",Data Structure,4350,"def add_list___:
    sum = 0
    for i in list_of_numbers:
        sum += i
    return sum

list = ___
result = add_list___
print___"
Write an algorithm in Python that takes a list of elements and determines if the list is sorted or not.,"[4, 3, 1, 2, 5]","def is_sorted(lst):
 # base case: if the list is empty then it is sorted
 if not lst:
  return True
 # compare the first two element
 if lst[0] > lst[1]:
  return False
 # recursively call the function with the remaining elements in the list
 return is_sorted(lst[1:])",Data Structure,4352,"def is_sorted___:
 # base case: if the list is empty then it is sorted
 if not lst:
  return True
 # compare the first two element
 if lst___ > lst___:
  return False
 # recursively call the function with the remaining elements in the list
 return is_sorted___"
Design a Python program to find the position of the maximum element in a list of numbers.,"nums = [1, 5, 8, -3, 0]","def find_max_position(nums):
    max_num = nums[0]
    max_pos = 0

    for i in range(len(nums)):
        if nums[i] > max_num:
            max_num = nums[i]
            max_pos = i

    return max_pos

nums = [1, 5, 8, -3, 0]
max_pos = find_max_position(nums)
print(f""The maximum element is at position {max_pos}"")",Data Structure,4353,"def find_max_position___:
    max_num = nums___
    max_pos = 0

    for i in range___):
        if nums[i] > max_num:
            max_num = nums[i]
            max_pos = i

    return max_pos

nums = [1, 5, 8, -3, 0]
max_pos = find_max_position___
print(f""The maximum element is at position ___"")"
Create a function in Python to find the maximum value in a list.,"List of values: [13, 25, 37, 49, 61]","def find_max(list):
    max_value = list[0]
    for value in list:
        if value > max_value:
            max_value = value
    return max_value",Data Structure,4356,"def find_max___:
    max_value = list___
    for value in list:
        if value > max_value:
            max_value = value
    return max_value"
Develop a Python program to delete the third element of a given list.,"list = [""A"", ""B"", ""C"", ""D"", ""E""]","# Input list
list = [""A"", ""B"", ""C"", ""D"", ""E""]

# Deleting the third element
list.pop(2)

# Printing the list after deletion
print(list)
# Output: ['A', 'B', 'D', 'E']",Data Structure,4357,"# Input list
list = [""A"", ""B"", ""C"", ""D"", ""E""]

# Deleting the third element
list___2)

# Printing the list after deletion
print___
# Output: ['A', 'B', 'D', 'E']"
Develop a Python program to find all possible words from a set of characters,The set of characters is 'abcd',"def findWords(string):
    results = []
    for i in range(len(string)):
        for j in range(i+1, len(string)+1):
            results.append(string[i:j])
    return results

string = ""abcd""
print(findWords(string))",Data Structure,4358,"def findWords___:
    results = []
    for i in range___):
        for j in range___+1):
            results___string[i:j])
    return results

string = ""abcd""
print___)"
Generate a solution for finding all possible subsets of a given set in Python.,"[1, 2, 3]","""""""
Generate a solution for finding all possible subsets of a given set in Python.
""""""

def find_subsets(nums):
  subsets = [[]]

  for current_num in nums:
    for i in range(len(subsets)):
      set_to_add = subsets[i] + [current_num]
      subsets.append(set_to_add)

  return subsets

nums = [1, 2, 3]
print(find_subsets(nums))",Data Structure,4359,"""""""
Generate a solution for finding all possible subsets of a given set in Python.
""""""

def find_subsets___:
  subsets = [[]]

  for current_num in nums:
    for i in range___):
      set_to_add = subsets[i] + [current_num]
      subsets___set_to_add)

  return subsets

nums = ___
print___)"
Create a program in Python to sort a given list of numbers in ascending order.,"[9, 5, 7, 4, 1]","def sort_asc(lst):
    return sorted(lst)",Data Structure,4360,"def sort_asc___:
    return sorted___"
Give a Python program to extract a given number of random items from a given list.,"list = [1, 2, 3, 4, 5, 6]","import random

def extract_random_items(lst, num):
q = random.sample(lst, num)
return q",Data Structure,4366,"import random

def extract_random_items___:
q = random.sample___
return q"
Create a Python program to sort a list of strings by the descending length of the strings and alphabetically in case of ties.,"[""hello"", ""world"", ""from"", ""code""]","unsorted_list = [""hello"", ""world"", ""from"", ""code""]

sorted_list = sorted(unsorted_list, key=lambda s: (-len(s), s))

print(sorted_list)
# Output: [""world"", ""hello"", ""from"", ""code""]",Data Structure,4367,"unsorted_list = [""hello"", ""world"", ""from"", ""code""]

sorted_list = sorted___, s))

print___
# Output: [""world"", ""hello"", ""from"", ""code""]"
"Using Python, write a program that takes a list of strings as input and returns a dictionary where the keys are the strings and the values are the lengths of the strings.","['apple', 'banana', 'orange']","def length_dict(strings):
    length_dict = {}
    for string in strings:
        length_dict[string] = len(string)
    return length_dict

print(length_dict(['apple', 'banana', 'orange'])) # {'apple': 5, 'banana': 6, 'orange': 6}",Data Structure,4371,"def length_dict___:
    length_dict = {}
    for string in strings:
        length_dict[string] = len___
    return length_dict

print(length_dict(['apple', 'banana', 'orange'])) # ___"
Create a Python script to append a list to another list.,"List: [1, 2, 3]","def append_list(list_to_append, list_to_add):
    return list_to_append + list_to_add",Data Structure,4372,"def append_list___:
    return list_to_append + list_to_add"
Write a Python script to generate all possible permutations of a set of input strings.,"['a', 'b', 'c']","def permute(input):
 res = []
 for i in range(len(input)):
 for result in permute(input[:i] + input[i + 1:]):
 res.append([input[i]] + result)    
 return res

inputValues = ['a', 'b', 'c']
permutations = permute(inputValues)

for perm in permutations:
 print(perm)",Data Structure,4379,"def permute___:
 res = []
 for i in range___):
 for result in permute___:
 res___[input[i]] + result)    
 return res

inputValues = ['a', 'b', 'c']
permutations = permute___

for perm in permutations:
 print___"
"Given a list of phone numbers, extract only the ones that start with 08 using Python.","['0834567', '0945678', '07123456', '08901234', '07890123']","phone_numbers = ['0834567', '0945678', '07123456', '08901234', '07890123']
result = [number for number in phone_numbers if number.startswith('08')]
print(result)",Data Structure,4386,"phone_numbers = ['0834567', '0945678', '07123456', '08901234', '07890123']
result = [number for number in phone_numbers if number.startswith___]
print___"
"Slice and dice a given list in Python to filter out elements starting with the letter ""a"".","List: [""apple"", ""banana"", ""orange"", ""apricot""]","lst = [""apple"", ""banana"", ""orange"", ""apricot""]
  
filtered_list = [ele for ele in lst if ele[0] == 'a'] 
  
# printing filtered elements 
print(""filtered list: "", filtered_list)",Data Structure,4388,"lst = [""apple"", ""banana"", ""orange"", ""apricot""]
  
filtered_list = [ele for ele in lst if ele___ == 'a'] 
  
# printing filtered elements 
print___"
Can you create a loop in Python to find the highest value in an array?,"arr = [2, 3, 9, 1, 4, 5]","max_val = arr[0]
for num in arr:
    if num > max_val:
        max_val = num
print(max_val)",Data Structure,4389,"max_val = arr___
for num in arr:
    if num > max_val:
        max_val = num
print___"
Create a Python program to generate a list of prime numbers up to a certain number.,The program should generate primes up to the number 100,"primes = []

for num in range(2,101):
 for i in range(2,num):
 if (num % i) == 0:
 break
 else:
 primes.append(num)

print(primes)",Data Structure,4397,"primes = []

for num in range___:
 for i in range___:
 if ___ == 0:
 break
 else:
 primes___num)

print___"
Write a Python code snippet to obtain the average of the elements in a given list.,"list = [2, 3, 5, 4]","def average(list):
 total = 0
 for num in list:
 total += num
 return total / len(list)

print(average([2, 3, 5, 4]))",Data Structure,4403,"def average___:
 total = 0
 for num in list:
 total += num
 return total / len___

print___)"
Replace the element 'apple' in a given array with 'pear' using python code.,"Array: A = ['apple', 'banana', 'orange', 'grape']","A = ['apple', 'banana', 'orange', 'grape']
A[0] = 'pear'
print(A) # Output:  ['pear', 'banana', 'orange', 'grape']",Data Structure,4404,"A = ['apple', 'banana', 'orange', 'grape']
A___ = 'pear'
print___ # Output:  ['pear', 'banana', 'orange', 'grape']"
Create a function in Python that removes duplicates from a list of items.,"[1, 2, 3, 2, 4, 1]","def remove_duplicates(items):
  no_duplicates = []
  for item in items:
    if item not in no_duplicates:
      no_duplicates.append(item)
  return no_duplicates

items = [1, 2, 3, 2, 4, 1]

result = remove_duplicates(items)

print(result) # [1, 2, 3, 4]",Data Structure,4405,"def remove_duplicates___:
  no_duplicates = []
  for item in items:
    if item not in no_duplicates:
      no_duplicates___item)
  return no_duplicates

items = ___

result = remove_duplicates___

print___ # [1, 2, 3, 4]"
Create a Python script to remove the item 'Apple' from the given array.,"[""Banana"", ""Orange"", ""Apple""]","def remove(arr):
    result = []
    for item in arr:
        if item != ""Apple"":
            result.append(item)
    return result

print(remove([""Banana"", ""Orange"", ""Apple""])) # Output: [""Banana"", ""Orange""]",Data Structure,4406,"def remove___:
    result = []
    for item in arr:
        if item != ""Apple"":
            result___item)
    return result

print___) # Output: [""Banana"", ""Orange""]"
Write a Python program to classify a given set of integers depending on the parity of the remainder when they are divided by 2.,"[1, 8, 4, 120]","def classifyIntegersByOddEven(arr):
    evens = []
    odds = []
    
    for num in arr:
        if num % 2 == 0:
            evens.append(num)
        else:
            odds.append(num)
    
    return evens, odds

evens, odds = classifyIntegersByOddEven([1, 8, 4, 120])
print('Evens: ', evens)
print('Odds: ', odds)",Data Structure,4408,"def classifyIntegersByOddEven___:
    evens = []
    odds = []
    
    for num in arr:
        if num % 2 == 0:
            evens___num)
        else:
            odds___num)
    
    return evens, odds

evens, odds = classifyIntegersByOddEven___
print___
print___"
Construct a Python program that reverses an array.,"[1, 5, 3, 10, 4, 8]","def reverse_array(arr): 
    low = 0
    high = len(arr) - 1
    
    while low < high: 
        arr[low], arr[high] = arr[high], arr[low] 
        low += 1
        high -= 1
  
    return arr",Data Structure,4409,"def reverse_array___: 
    low = 0
    high = len___ - 1
    
    while low < high: 
        arr[low], arr[high] = arr[high], arr[low] 
        low += 1
        high -= 1
  
    return arr"
Generate a Python program that takes in a list of strings and outputs a new list containing only those that are between 3 and 7 characters long.,"['apple', 'banana', 'strawberry', 'orange']","def filterList(lst):
  result = []

  for s in lst:
    if 3 <= len(s) <= 7:
      result.append(s)
  
  return result

print(filterList(['apple', 'banana', 'strawberry', 'orange'])) # ['apple', 'banana', 'orange']",Data Structure,4412,"def filterList___:
  result = []

  for s in lst:
    if 3 <= len___ <= 7:
      result___s)
  
  return result

print___) # ['apple', 'banana', 'orange']"
Write a Python program to detect duplicate numbers in a given array.,"arr = [10,20,15,20,30,10]","duplicate_numbers = []
for i in range(len(arr)):
  for j in range(i + 1, len(arr)):
    if arr[i] == arr[j]:
      duplicate_numbers.append(arr[i])

print(duplicate_numbers) # Output: [10, 20]",Data Structure,4413,"duplicate_numbers = []
for i in range___):
  for j in range___):
    if arr[i] == arr[j]:
      duplicate_numbers___arr[i])

print___ # Output: [10, 20]"
Write a Python program to extract odd elements from a list.,"mylist = [2, 3, 4, 5, 6, 7, 8]","mylist = [2, 3, 4, 5, 6, 7, 8]

odd_list = []
for num in mylist:
    if num % 2 != 0:
        odd_list.append(num)

print(odd_list) #[3, 5, 7]",Data Structure,4414,"mylist = ___

odd_list = []
for num in mylist:
    if num % 2 != 0:
        odd_list___num)

print___ #[3, 5, 7]"
Generate a lambda function in Python to find the average of all the elements in a list.,"[1, 2, 3, 4, 5]","list_nums = [1, 2, 3, 4, 5]

average = lambda list_nums: sum(list_nums) / len(list_nums)

print(average(list_nums))",Data Structure,4427,"list_nums = ___

average = lambda list_nums: sum___ / len___

print___)"
Provide a Python program to find the average number of elements in the nested list.,"[[1, 2, 3], [4, 5], [6, 7, 8, 9]]","def avg_elements(list_of_lists):
    total_elements = 0
    for sublist in list_of_lists:
        total_elements += len(sublist)
    return total_elements / len(list_of_lists)",Data Structure,4428,"def avg_elements___:
    total_elements = 0
    for sublist in list_of_lists:
        total_elements += len___
    return total_elements / len___"
Create a Python program to search a given list of strings to find any matches to a given substring.,"list_of_strings = ['Tesla', 'Apple', 'Microsoft', 'Google', 'Amazon']
substring = 'go'","matches = []

for string in list_of_strings:
 if substring.lower() in string.lower():
 matches.append(string)

print(""Matches: "", matches)
# Output: Matches: ['Google', 'Amazon']",Data Structure,4433,"matches = []

for string in list_of_strings:
 if substring.lower() in string.lower():
 matches___string)

print___
# Output: Matches: ['Google', 'Amazon']"
Create a function in Python that takes in an integer and returns an array containing its prime factors.,38,"def prime_factors(num):
    res = []
    while num%2 == 0:
        num = num/2
        res.append(2)
    for i in range(3, int(num**0.5)+1,2):
        while num%i == 0:
            num = num//i
            res.append(i)
    if num > 2 :
        res.append(int(num))
    return res

print(prime_factors(38))",Data Structure,4440,"def prime_factors___:
    res = []
    while num%2 == 0:
        num = num/2
        res___2)
    for i in range___+1,2):
        while num%i == 0:
            num = num//i
            res___i)
    if num > 2 :
        res___int(num))
    return res

print___)"
Write a Python program to create a histogram representing the frequency distribution of a set of data.,"[1, 2, 3, 4, 5, 5]","import matplotlib.pyplot as plt 

data = [1, 2, 3, 4, 5, 5]

plt.hist(data, bins=5) 
plt.title(""Frequency Distribution"")
plt.show()",Data Structure,4444,"import matplotlib.pyplot as plt 

data = ___

plt.hist___ 
plt.title___
plt.show()"
Devise a python code which will generate a new list with each element of the list squared.,"data = [2, 3, 5, 6, 20, 9]","def square_list(arr):
    result = [num**2 for num in arr]
    return result",Data Structure,4445,"def square_list___:
    result = [num**2 for num in arr]
    return result"
Create a python program which appends a new item to a given list.,"list_data = [1, 3, 5]
new_item = 7","def append_to_list (list_data, new_item):
    list_data.append(new_item)
    return list_data",Data Structure,4446,"def append_to_list ___:
    list_data___new_item)
    return list_data"
Generate a python program to alphabetically sort the following list.,"[""Paul"", ""John"", ""George"", ""Ringo""]","my_list = [""Paul"", ""John"", ""George"", ""Ringo""]
my_list.sort() 
print(my_list)",Data Structure,4447,"my_list = [""Paul"", ""John"", ""George"", ""Ringo""]
my_list.sort() 
print___"
"Implement a function in Python that given an array of integers, returns the largest number in the array.","[1, 2, -4, 8, 3, 7]","def get_largest_number(arr):
  max_val = arr[0]
  for n in arr:
    if n > max_val:
      max_val = n
  return max_val

arr = [1, 2, -4, 8, 3, 7]
ans = get_largest_number(arr)
print(ans) # Output 8",Data Structure,4448,"def get_largest_number___:
  max_val = arr___
  for n in arr:
    if n > max_val:
      max_val = n
  return max_val

arr = [1, 2, -4, 8, 3, 7]
ans = get_largest_number___
print___ # Output 8"
Write a python script to compute the mean of a list of integers.,"X = [2,4,6,8,10]","def find_mean(X):
    # Compute the sum of all the elements in the list
    sum_x = 0
    for x in X:
        sum_x += x
    
    # Compute the mean
    mean = sum_x / len(X)
    
    return mean

if __name__ == '__main__':
    X = [2,4,6,8,10]
    print(find_mean(X))",Data Structure,4449,"def find_mean___:
    # Compute the sum of all the elements in the list
    sum_x = 0
    for x in X:
        sum_x += x
    
    # Compute the mean
    mean = sum_x / len___
    
    return mean

if __name__ == '__main__':
    X = ___
    print___)"
Create a Python program to determine the missing elements from a given list.,"[2, 4, 6, 8, 10]","def find_missing_elements(list):
    missing_elements = []
    for i in range(min(list), max(list)):
        if i not in list:
            missing_elements.append(i)
    return missing_elements",Data Structure,4450,"def find_missing_elements___:
    missing_elements = []
    for i in range___, max___):
        if i not in list:
            missing_elements___i)
    return missing_elements"
Design a Python script to output all values in a given list that are factors of a given integer.,"list = [1, 2, 3, 4, 5, 6] 
integer = 6","def factors(list,integer):
    factors_list = []
    for num in list:
        if integer % num == 0:
            factors_list.append(num)
    return factors_list

print(factors([1,2,3,4,5,6], 6))  # [1, 2, 3, 6]",Data Structure,4451,"def factors___:
    factors_list = []
    for num in list:
        if integer % num == 0:
            factors_list___num)
    return factors_list

print___)  # [1, 2, 3, 6]"
Write a Python script that takes in two lists of length n and outputs a set of combinations of the two lists such that the resulting list is of length n^2.,"list1 = [1,2,3]
list2 = [4,5,6]","combinations = []

for i in range(len(list1)):
for j in range(len(list2)):
combinations.append((list1[i], list2[j]))

print(combinations)
# Output: [(1,4), (1,5), (1,6), (2,4), (2,5), (2,6), (3,4), (3,5), (3,6)]",Data Structure,4453,"combinations = []

for i in range___):
for j in range___):
combinations___(list1[i], list2[j]))

print___
# Output: [___, ___, ___, ___, ___, ___, ___, ___, ___]"
Write an algorithm in Python that searches for a given keyword in a list of strings.,"string_list = [""hello"", ""goodbye"", ""apple"", ""world""]
keyword = ""apple""","def keyword_search(string_list, keyword):
  found = False
  for string in string_list:
    if keyword in string:
      found = True
      break
  return found

result = keyword_search(string_list, keyword)

if result:
  print(""The keyword was found"")
else:
  print(""The keyword was not found"")",Data Structure,4455,"def keyword_search___:
  found = False
  for string in string_list:
    if keyword in string:
      found = True
      break
  return found

result = keyword_search___

if result:
  print___
else:
  print___"
Improve the Python method provided so that it checks whether the given array is a palindrome or not.,"arr = [1, 2, 3, 2, 1]","def is_palindrome(arr):
    mid = len(arr) // 2
    for i in range(mid):
        if arr[i] != arr[len(arr) - 1 - i]:
            return False
    return True

arr = [1, 2, 3, 2, 1]
print(is_palindrome(arr))",Data Structure,4459,"def is_palindrome___:
    mid = len___ // 2
    for i in range___:
        if arr[i] != arr[len___ - 1 - i]:
            return False
    return True

arr = ___
print___)"
Create a Python function to create a dictionary from a given list of tuples with the first elements of each tuple as the key.,"tuples = [(""a"", ""b""), (""c"", ""d""), (""e"", ""f"")]","def create_dict(tuples): 
  dictionary = {} 
  
  for item in tuples: 
    dictionary[item[0]] = item[1]
  
  return dictionary 
  
tuples = [(""a"", ""b""), (""c"", ""d""), (""e"", ""f"")]
print(create_dict(tuples)) 

# Output
{'a': 'b', 'c': 'd', 'e': 'f'}",Data Structure,4461,"def create_dict___: 
  dictionary = {} 
  
  for item in tuples: 
    dictionary[item___] = item___
  
  return dictionary 
  
tuples = [___, ___, ___]
print___) 

# Output
___"
Write an algorithm in Python to calculate the sum of the numbers of a list and store the result in a dictionary.,"list = [1, 4, 8, 10]","sum_dict = {}

def sum_list(list):
 total = 0
 for num in list:
 total += num
 sum_dict[""sum""] = total
 return sum_dict

sum_dict = sum_list(list)",Data Structure,4464,"sum_dict = {}

def sum_list___:
 total = 0
 for num in list:
 total += num
 sum_dict[""sum""] = total
 return sum_dict

sum_dict = sum_list___"
Implement a Python function to search for an item in an array.,"arr = [15, 20, 25, 30, 35]
item = 25","def search(arr, item):
    for i in range(len(arr)):
        if item == arr[i]:
            return i
    return -1

arr = [15, 20, 25, 30, 35]
item = 25
index = search(arr, item)
if index == -1:
    print(""Element not found"")
else:
    print(""Element found at index"", index)

# Output:
# Element found at index 2",Data Structure,4467,"def search___:
    for i in range___):
        if item == arr[i]:
            return i
    return -1

arr = ___
item = 25
index = search___
if index == -1:
    print___
else:
    print___

# Output:
# Element found at index 2"
Do you know how to write a recursive Python program to delete a given element from a list?,"[1, 2, 3, 4], 3","def delete_from_list(my_list, element):
    if element in my_list:
        my_list.remove(element)
    else:
        return
      
    delete_from_list(my_list, element)",Data Structure,4472,"def delete_from_list___:
    if element in my_list:
        my_list___element)
    else:
        return
      
    delete_from_list___"
Write an algorithm in Python that takes as input an array of numbers and returns the maximum element.,"[15, 25, 7, 1]","def maxElement(arr): 
    maxElement = arr[0]; 
  
    for i in range(1, len(arr)): 
        if maxElement < arr[i]: 
            maxElement = arr[i]; 
  
    return maxElement; 
  
arr = [15, 25, 7, 1];
maxElement = maxElement(arr); 
print (""Maximum element in the array is:"", maxElement);",Data Structure,4474,"def maxElement___: 
    maxElement = arr___; 
  
    for i in range___): 
        if maxElement < arr[i]: 
            maxElement = arr[i]; 
  
    return maxElement; 
  
arr = ___;
maxElement = maxElement___; 
print ___;"
Create a Python program that combines two lists and returns a single list that contains a combination of elements from both.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","def combine_lists(list1, list2):
 return list1 + list2

list1 = [1, 2, 3]
list2 = [4, 5, 6]
print(combine_lists(list1, list2)) # [1, 2, 3, 4, 5, 6]",Data Structure,4480,"def combine_lists___:
 return list1 + list2

list1 = ___
list2 = ___
print___) # [1, 2, 3, 4, 5, 6]"
Write a function in Python that normalizes a list of numbers by subtracting their average and dividing by the standard deviation.,"[4,2,7,8,2]","def normalize(numbers):
 avg = sum(numbers) / len(numbers)
 variance = sum((x - avg) ** 2 for x in numbers) / len(numbers)
 stdev = variance ** 0.5
 return [(x - avg) / stdev for x in numbers]",Data Structure,4485,"def normalize___:
 avg = sum___ / len___
 variance = sum___ ** 2 for x in numbers) / len___
 stdev = variance ** 0.5
 return [___ / stdev for x in numbers]"
Generate a Python program to remove all elements of given list present in other list.,"list1 = [1, 2, 3, 4, 5, 6], list2 = [2, 4, 6]","def remove_from_list(list1, list2):
    for i in list2: 
        list1.remove(i) 
        
    return list1

list1 = [1, 2, 3, 4, 5, 6]
list2 = [2, 4, 6]
       
print(remove_from_list(list1, list2))",Data Structure,4487,"def remove_from_list___:
    for i in list2: 
        list1___i) 
        
    return list1

list1 = ___
list2 = ___
       
print___)"
Write a function in Python to remove duplicates in a list and return the modified list,"list := [1, 2, 2, 3]","def remove_duplicates(items):
  unique = []
  for item in items:
    if item not in unique:
      unique.append(item)
  return unique

list = [1, 2, 2, 3]
result = remove_duplicates(list)
print(result) # Output: [1, 2, 3]",Data Structure,4494,"def remove_duplicates___:
  unique = []
  for item in items:
    if item not in unique:
      unique___item)
  return unique

list = ___
result = remove_duplicates___
print___ # Output: [1, 2, 3]"
Write a Python program to sort a list in ascending order with respect to a particular key.,"lst = [{‘name’:’joe’, ‘score’:90}, {‘name’:’bob’, ‘score’:50}, {‘name’:’alice’, ‘score’:80}]
key = 'score'","sorted_lst = sorted(lst, key=lambda x: x[key])",Data Structure,4497,sorted_lst = sorted___
Generate a python program which prints a formatted list containing the elements from two input lists.,"list_1 = [1, 2, 3] 
list_2 = [4, 5, 6]","def print_list(list_1, list_2): 
    formatted_list = [list_1 + list_2 for i in range(len(list_1))] 
    for x in formatted_list: 
        for y in x: 
            print(y) 
    
list_1 = [1, 2, 3] 
list_2 = [4, 5, 6]
print_list(list_1, list_2)

# Output:
# 1
# 2
# 3
# 4
# 5
# 6",Data Structure,4498,"def print_list___: 
    formatted_list = [list_1 + list_2 for i in range___)] 
    for x in formatted_list: 
        for y in x: 
            print___ 
    
list_1 = ___ 
list_2 = ___
print_list___

# Output:
# 1
# 2
# 3
# 4
# 5
# 6"
"Given two lists, write a Python program to return a list that contains the elements from both the lists, except for the elements that are duplicated.","List1: [1,2,3,4,5] 
List2: [4,5,6,7,8]","new_list = [1,2,3,6,7,8]",Data Structure,4500,new_list = ___
Create an optimization algorithm written in Python which takes a list of tuples as input and returns the pair with the smallest value.,"[(2, 3), (4, 1), (6, 4), (5, 8)]","def smallest_pair(lst): 
  return min(lst, key = lambda x: x[1]) 

lst = [(2, 3), (4, 1), (6, 4), (5, 8)] 
  
print(smallest_pair(lst)) 

# Output: (4, 1)",Data Structure,4501,"def smallest_pair___: 
  return min___ 

lst = [___, ___, ___, ___] 
  
print___) 

# Output: ___"
Build a Python program that sorts a list of numbers from highest to lowest.,"[28, 5, 17, 10, 43]","def sort_numbers(numbers):
    numbers.sort(reverse=True)
    return numbers

numbers = [28, 5, 17, 10, 43]

sorted_numbers = sort_numbers(numbers)
print(sorted_numbers)",Data Structure,4503,"def sort_numbers___:
    numbers.sort___
    return numbers

numbers = ___

sorted_numbers = sort_numbers___
print___"
Create an algorithm in Python to sort a given list of integers from smallest to largest.,"[10, 7, 3, 5, 8]","def sort_list(numbers):
    numbers.sort()
    return numbers",Data Structure,4504,"def sort_list___:
    numbers.sort()
    return numbers"
Write a Python script that takes a list as an argument and prints each element of the list in a new line.,"[1, 2, 3, 4]","for item in [1, 2, 3, 4]:
    print(item)",Data Structure,4508,"for item in ___:
    print___"
Optimize this Python code to count the number of occurrences of an element in an array.,"[2, 3, 3, 10, 12]","def countOccurrences(arr, x): 
  
    count = 0
    n = len(arr) 
    for i in range(0, n): 
        if (x == arr[i]): 
            count = count + 1
  
    return count 
  
# Driver code 
arr = [2, 3, 3, 10, 12] 
x = 3
assert countOccurrences(arr, x) == 2",Data Structure,4509,"def countOccurrences___: 
  
    count = 0
    n = len___ 
    for i in range___: 
        if ___: 
            count = count + 1
  
    return count 
  
# Driver code 
arr = ___ 
x = 3
assert countOccurrences___ == 2"
"Write a Python function to remove elements from a given list of integers, if the integer is a multiple of 3","list = [3, 6, 9, 11, 12, 15]","def remove_multiple_of_three(list):
  new_list = []
  for item in list:
    if item % 3 != 0:
      new_list.append(item)
  return new_list",Data Structure,4513,"def remove_multiple_of_three___:
  new_list = []
  for item in list:
    if item % 3 != 0:
      new_list___item)
  return new_list"
Generate a Python code that calculates the mean of a data set given as a list of integers.,"[1, 2, 3, 4, 5, 6]","def calculate_mean(data): 
    # Initialize the sum and length of data 
    sum = 0 
    length = len(data) 
  
    # Calculating the sum  
    for x in data: 
        sum += x   
    # Calculating the mean  
    mean = sum / length 
  
    return mean 
  
# Test the function 
data = [1, 2, 3, 4, 5, 6] 
print('Mean of data is:', calculate_mean(data))",Data Structure,4518,"def calculate_mean___: 
    # Initialize the sum and length of data 
    sum = 0 
    length = len___ 
  
    # Calculating the sum  
    for x in data: 
        sum += x   
    # Calculating the mean  
    mean = sum / length 
  
    return mean 
  
# Test the function 
data = ___ 
print___)"
"In Python, write a program that reads in an unsorted array of integers and returns it in sorted order.","A = [5, 2, 9, 1, 8]","def sort_array(A):
    for i in range(len(A) - 1):
        min = A[i]
        min_index = i
        for j in range(i + 1, len(A)):
            if A[j] < min:
                min = A[j]
                min_index = j
        if min_index != i:
            A[i], A[min_index] = A[min_index], A[i]
    return A",Data Structure,4519,"def sort_array___:
    for i in range___ - 1):
        min = A[i]
        min_index = i
        for j in range___):
            if A[j] < min:
                min = A[j]
                min_index = j
        if min_index != i:
            A[i], A[min_index] = A[min_index], A[i]
    return A"
Implement a function in Python that takes a number n and generates a random list of integers between 0 and n.,n = 10,"import random

def randomList(n):
 list = []
 
 for i in range(n):
 list.append(random.randint(0, n))
 
 return list

print(randomList(10))",Data Structure,4523,"import random

def randomList___:
 list = []
 
 for i in range___:
 list___random.randint(0, n))
 
 return list

print___)"
Can you write a Python program to take a list and create a new list with unique elements of the first list?,"list=[1,2,2,3,3,3]","def unique_list(list):
    unique_list = []
    for element in list:
        if element not in unique_list:
            unique_list.append(element)
    return unique_list

unique_elements = unique_list([1,2,2,3,3,3])
print(unique_elements)",Data Structure,4524,"def unique_list___:
    unique_list = []
    for element in list:
        if element not in unique_list:
            unique_list___element)
    return unique_list

unique_elements = unique_list___
print___"
You have a list of temperature values. Write a python program to find the day which has the highest temperature.,"[58, 59, 61, 63, 66, 68, 71, 72, 75]","def highest_temp(temp_list):
    highest_temp_day = 0 
    highest_temp_val = temp_list[0]

    for i in range(1, len(temp_list)):
        if temp_list[i] > highest_temp_val:
            highest_temp_day = i
            highest_temp_val = temp_list[i]
            
    return highest_temp_day",Data Structure,4527,"def highest_temp___:
    highest_temp_day = 0 
    highest_temp_val = temp_list___

    for i in range___):
        if temp_list[i] > highest_temp_val:
            highest_temp_day = i
            highest_temp_val = temp_list[i]
            
    return highest_temp_day"
Create a Python function which takes in two lists and returns a list that contains the elements from both lists.,"list1 = [1, 2, 3] 
list2 = [4, 5, 6]","def combine_lists(list1, list2):
    return list1 + list2",Data Structure,4529,"def combine_lists___:
    return list1 + list2"
Write a simple Python function that takes a list of integers and returns the sum of all elements divisible by 3.,"li = [4, 6, 17, 24, 5, 9]","def divisibleBy3(li):
 total = 0
 for num in li:
  if num % 3 == 0:
   total += num
 return total
# Output: 24",Data Structure,4533,"def divisibleBy3___:
 total = 0
 for num in li:
  if num % 3 == 0:
   total += num
 return total
# Output: 24"
Construct an algorithm in Python that takes an array of numbers and removes all duplicates while maintaining the original order of the array.,"[1, 3, 2, 1, 5, 4, 8, 6, 7, 5]","def remove_duplicates(arr):
    seen = set()
    seen_add = seen.add
    return [x for x in arr if not (x in seen or seen_add(x))]

arr = [1, 3, 2, 1, 5, 4, 8, 6, 7, 5]
result = remove_duplicates(arr)

print(result)
# Output: [1, 3, 2, 5, 4, 8, 6, 7]",Data Structure,4534,"def remove_duplicates___:
    seen = set()
    seen_add = seen.add
    return [x for x in arr if not ___)]

arr = ___
result = remove_duplicates___

print___
# Output: ___"
Write an efficient Python program to remove all the duplicate items from a list.,"[1,1,2,2,3,4,5,5]","def removeDuplicates(arr):
  output = []
  for ele in arr:
    if ele not in output:
      output.append(ele)
  return output
  
output = removeDuplicates([1,1,2,2,3,4,5,5]);
print(output) // outputs: [1, 2, 3, 4, 5]",Data Structure,4543,"def removeDuplicates___:
  output = []
  for ele in arr:
    if ele not in output:
      output___ele)
  return output
  
output = removeDuplicates___;
print___ // outputs: [1, 2, 3, 4, 5]"
Create a program in Python to remove duplicates from a list and return the new list.,"arr = [1, 2, 3, 1, 4]","def remove_duplicates(arr):
    new_list = []
    for item in arr:
        if item not in new_list:
            new_list.append(item)
    return new_list",Data Structure,4544,"def remove_duplicates___:
    new_list = []
    for item in arr:
        if item not in new_list:
            new_list___item)
    return new_list"
Generate an algorithm in Python that returns the kth smallest number in a given array.,"Input Array: [3, 2, 4, 1, 5]
Input k: 3","def kthSmallest(arr, k):
 # sort the array
 arr.sort()
 
 # return the kth element
 return arr[k-1]
 
# Driver Code
arr = [3,2,4,1,5]
k = 3

print(kthSmallest(arr, k)) # 3",Data Structure,4545,"def kthSmallest___:
 # sort the array
 arr.sort()
 
 # return the kth element
 return arr[k-1]
 
# Driver Code
arr = ___
k = 3

print___) # 3"
Write a Python script that takes in a Python list and returns every other element as a sublist.,"[1,2,3,4,5]","def every_other_sublist(input_list):
 sublist = []
 for i in range(len(input_list)):
 if i % 2 == 0:
 sublist.append(input_list[i])
 return sublist",Data Structure,4549,"def every_other_sublist___:
 sublist = []
 for i in range___):
 if i % 2 == 0:
 sublist___input_list[i])
 return sublist"
Write a Python function to convert a list of multiple integers into a single integer.,"my_list = [1, 2, 3, 4]","def convert_list_to_integer(my_list):
    result = 0
    multiplier = 1
 
    for i in range(len(my_list)-1, -1, -1):
        result += my_list[i]*multiplier
        multiplier *= 10
 
    return result
 
print(convert_list_to_integer(my_list))",Data Structure,4552,"def convert_list_to_integer___:
    result = 0
    multiplier = 1
 
    for i in range___-1, -1, -1):
        result += my_list[i]*multiplier
        multiplier *= 10
 
    return result
 
print___)"
Create a program in Python that takes an array of integers and returns a new array with each element multiplied by its index.,"[6, 3, 10, 4]","def multiply_by_index(numbers):
    for i in range(len(numbers)):
        numbers[i] *= i
    return numbers",Data Structure,4564,"def multiply_by_index___:
    for i in range___):
        numbers[i] *= i
    return numbers"
Create a Python function to sort a list of strings alphabetically.,"my_list = [""apple"", ""orange"", ""banana""]","def sort_list(list):
    list.sort()
    return list
    
sort_list(my_list)",Data Structure,4570,"def sort_list___:
    list.sort()
    return list
    
sort_list___"
Design a Python program to replace all e with @ in an array of strings,"['abc', 'xyz', '111']","def replace_e(arr): 
    return [i.replace('e','@') for i in arr] 
  
arr = ['abc','xyz','111']
print(replace_e(arr))",Data Structure,4571,"def replace_e___: 
    return [i.replace___ for i in arr] 
  
arr = ['abc','xyz','111']
print___)"
Write a Python program to flatten a list of lists into a single list.,"List of lists: [[1,2], [3], [4,5,6]]","import itertools

# flatten a list of lists
list_of_lists = [[1,2], [3], [4,5,6]]
flattened_list = list(itertools.chain.from_iterable(list_of_lists))

# print the flattened list
print(flattened_list)  # Output: [1, 2, 3, 4, 5, 6]",Data Structure,4572,"import itertools

# flatten a list of lists
list_of_lists = [___, ___, ___]
flattened_list = list___)

# print the flattened list
print___  # Output: [1, 2, 3, 4, 5, 6]"
Generate a Python program that takes two lists as input and returns a new list containing only the common elements.,"[1, 2, 3, 4, 8], [2, 6, 8, 10]","def common_elements(list1, list2): 
    common_list=[]
    for element in list1: 
        if element in list2: 
            common_list.append(element) 
    return common_list
  
list1 = [1, 2, 3, 4, 8] 
list2 = [2, 6, 8, 10]

common_list = common_elements(list1, list2) 

print(common_list)",Data Structure,4575,"def common_elements___: 
    common_list=[]
    for element in list1: 
        if element in list2: 
            common_list___element) 
    return common_list
  
list1 = ___ 
list2 = ___

common_list = common_elements___ 

print___"
Write a Python program to sort a list of tuples by the second item in each tuple.,"[(3, 4), (5, 6), (1, 2)]","def sort_list(tuples):
    return sorted(tuples, key = lambda x: x[1])
 
tuples = [(3, 4), (5, 6), (1, 2)]
 
print(sort_list(tuples))",Data Structure,4578,"def sort_list___:
    return sorted___
 
tuples = [___, ___, ___]
 
print___)"
Create a Python function for calculating the mode (most frequently occuring item) in a list of numbers.,"List of numbers: [1, 2, 3, 2, 4, 2]","import collections

def mode(numbers):
 counts = collections.Counter(numbers)
 max_count = max(counts.values())
 return [item for item, count in counts.items() if count == max_count]

numbers = [1, 2, 3, 2, 4, 2]
mode = mode(numbers)
print(mode)
# Output: [2]",Data Structure,4579,"import collections

def mode___:
 counts = collections.Counter___
 max_count = max___)
 return [item for item, count in counts.items() if count == max_count]

numbers = ___
mode = mode___
print___
# Output: ___"
Can you create a Python program that returns the largest number in a list of numbers?,"[4, 8, 2, 6, 9]","def largestNumber(list): 
    maximum = list[0] 
      
    for num in list: 
        if num > maximum: 
            maximum = num 
    return maximum 
  
list = [4, 8, 2, 6, 9] 
largestNumber = largestNumber(list) 
  
print(""Largest number in the given list is:"", largestNumber)",Data Structure,4582,"def largestNumber___: 
    maximum = list___ 
      
    for num in list: 
        if num > maximum: 
            maximum = num 
    return maximum 
  
list = ___ 
largestNumber = largestNumber___ 
  
print___"
Generate a Python code snippet to sum all numbers from a list of integers.,"[2, 7, 8, 4, 5]","sum = 0
for num in [2, 7, 8, 4, 5]:
    sum += num
print(sum)",Data Structure,4583,"sum = 0
for num in ___:
    sum += num
print___"
"Create a function in Python which takes 3 arrays as input, and returns the arrays merged together into a single array.","[1, 2, 3], [4, 5, 6], [7, 8, 9]","def merge_arrays(arr1, arr2, arr3):
    combined_arr = arr1 + arr2 + arr3
    return combined_arr

result = merge_arrays([1, 2, 3], [4, 5, 6], [7, 8, 9])
print(result)",Data Structure,4584,"def merge_arrays___:
    combined_arr = arr1 + arr2 + arr3
    return combined_arr

result = merge_arrays___
print___"
Find the most frequent element in an array in Python.,"[1, 3, 3, 3, 5, 4, 4, 6]","from collections import Counter 

def most_frequent(arr): 
 c = Counter(arr) 
 return c.most_common(1)[0][0]

arr = [1, 3, 3, 3, 5, 4, 4, 6] 
print(most_frequent(arr)) 
# Output: 3",Data Structure,4591,"from collections import Counter 

def most_frequent___: 
 c = Counter___ 
 return c.most_common___[0][0]

arr = ___ 
print___) 
# Output: 3"
Optimize the performance of a function in Python that calculates the total of a list of numbers.,"nums = [1, 2, 3, 4, 5]","def sum_list(nums):
 total = 0
 for num in nums:
 total += num
 return total

def sum_list_optimized(nums):
 total = 0
 length = len(nums)
 while length > 0:
 total += nums[length - 1]
 length -= 1
 return total

nums = [1, 2, 3, 4, 5]
print(sum_list_optimized(nums))  # Output: 15",Data Structure,4597,"def sum_list___:
 total = 0
 for num in nums:
 total += num
 return total

def sum_list_optimized___:
 total = 0
 length = len___
 while length > 0:
 total += nums[length - 1]
 length -= 1
 return total

nums = ___
print___)  # Output: 15"
Write a Python program to sort a list of words in ascending order based on their length.,"words = [""I"", ""am"", ""all"", ""ears""]","words = [""I"", ""am"", ""all"", ""ears""]

#sort the words by length
words.sort(key = len)

#print the sorted words
for word in words:
 print(word)

# Output
I
am
all
ears",Data Structure,4598,"words = [""I"", ""am"", ""all"", ""ears""]

#sort the words by length
words.sort___

#print the sorted words
for word in words:
 print___

# Output
I
am
all
ears"
Create a python program that finds the number of elements between two given indices in a given list.,"list = [0, 4, 5, 8, 9]
start = 2
end = 4","def count_elements(list, start, end):
    elements_count = 0
    start_index = list.index(start)
    end_index = list.index(end)
    for i in range(start_index + 1, end_index):
        elements_count += 1
    return elements_count",Data Structure,4599,"def count_elements___:
    elements_count = 0
    start_index = list.index___
    end_index = list.index___
    for i in range___:
        elements_count += 1
    return elements_count"
Write a short Python script to compute the average temperature of a given set of temperatures.,"temperatures = [71,77,82,81,75,72,78]","def average(temperatures):
    total = 0
    for temp in temperatures:
        total += temp
    return total/len(temperatures)

print(average(temperatures))",Data Structure,4608,"def average___:
    total = 0
    for temp in temperatures:
        total += temp
    return total/len___

print___)"
Change the following python code so that the loop only iterates through the even numbers in the list.,"for num in range(16):
    print(num)","for num in range(16):
    if num % 2 == 0:
        print(num)",Data Structure,4612,"for num in range___:
    if num % 2 == 0:
        print___"
Design an algorithm in Python to get the largest number in a list.,"[2, 5, 3, 7]","def getMax(list):
    max = 0
    for num in list:
        if num > max:
            max = num
    return max

list = [2, 5, 3, 7]
print(getMax(list))",Data Structure,4617,"def getMax___:
    max = 0
    for num in list:
        if num > max:
            max = num
    return max

list = ___
print___)"
Write a Python function that takes an integer n and n numbers and returns an array containing the largest n numbers.,"3, 8, 5, 7, 2, 10","def largest_n_numbers(n, *nums):
    nums_sorted = sorted(nums, reverse=True)
    return nums_sorted[:n]

result = largest_n_numbers(3, 8, 5, 7, 2, 10)
print(result)",Data Structure,4629,"def largest_n_numbers___:
    nums_sorted = sorted___
    return nums_sorted[:n]

result = largest_n_numbers___
print___"
Can you create a python program that returns the index of an item in a given array of numbers?,"arr = [1,2,3,4,5,6]
item = 5","def getIndex(arr, item):
    for i in range(len(arr)):
        if arr[i] == item:
            return i
    return -1

arr = [1,2,3,4,5,6]
item = 5
index = getIndex(arr, item)
print('Index of', item, 'is', index) # index is 4",Data Structure,4635,"def getIndex___:
    for i in range___):
        if arr[i] == item:
            return i
    return -1

arr = ___
item = 5
index = getIndex___
print___ # index is 4"
Generate a method in Python that takes an array of strings and selects strings that contain more than 6 characters.,"[""apple"", ""banana"", ""grape"", ""strawberry"", ""mango""]","def filter_long_words(words):
    return [word for word in words if len(word) > 6]",Data Structure,4638,"def filter_long_words___:
    return [word for word in words if len___ > 6]"
Generate a valid Python program to create an alphabetically sorted list of all the words in a sentence.,"""This is a great day""","def sortSentence(sentence):
    words = sentence.split("" "")
    words.sort()
    return words

result = sortSentence(""This is a great day"")
print(result)",Data Structure,4639,"def sortSentence___:
    words = sentence.split___
    words.sort()
    return words

result = sortSentence___
print___"
Create an algorithm in Python to detect duplicate numbers in a given array.,"[3, 7, 4, 3, 6, 7]","def find_duplicates(numbers):
    seen = set()
    duplicates = set()

    for number in numbers:
        if number in seen:
            duplicates.add(number)
        else:
            seen.add(number)
    
    return duplicates",Data Structure,4649,"def find_duplicates___:
    seen = set()
    duplicates = set()

    for number in numbers:
        if number in seen:
            duplicates.add___
        else:
            seen.add___
    
    return duplicates"
Give an algorithm and implement it in Python to sort the following array,"[9, 8, 2, 4, 5, 7, 0]","def sortArray(arr):
    n = len(arr)
    for i in range(n):
        min_idx = i
        for j in range(i+1, n):
            if arr[min_idx] > arr[j]:
                min_idx = j
        arr[i], arr[min_idx] = arr[min_idx], arr[i]
    return arr 
   
sortArray([9, 8, 2, 4, 5, 7, 0])",Data Structure,4659,"def sortArray___:
    n = len___
    for i in range___:
        min_idx = i
        for j in range___:
            if arr[min_idx] > arr[j]:
                min_idx = j
        arr[i], arr[min_idx] = arr[min_idx], arr[i]
    return arr 
   
sortArray___"
Write a Python program to sort a given array in ascending order.,"array = [3, 1, 5, 4, 2]","def sort_ascending(array):
    n = len(array)
    for i in range(n):
        for j in range(0, n-i-1):
            if array[j] > array[j+1]:
                array[j], array[j+1] = array[j+1], array[j]
    return array

array = [3, 1, 5, 4, 2]
print(sort_ascending(array))",Data Structure,4663,"def sort_ascending___:
    n = len___
    for i in range___:
        for j in range___:
            if array[j] > array[j+1]:
                array[j], array[j+1] = array[j+1], array[j]
    return array

array = ___
print___)"
Write a Python program to find the maximum number in an unsorted array without using linear search.,"arr = [5, 6, 4, 9, 1, 8, 2, 7, 3]","def find_max_unsorted(arr):
    max_value = arr[0]
    for i in range(1, len(arr)):
        if arr[i] > max_value:
            max_value = arr[i]
    return max_value",Data Structure,4664,"def find_max_unsorted___:
    max_value = arr___
    for i in range___):
        if arr[i] > max_value:
            max_value = arr[i]
    return max_value"
Write a python script to generate an array of random numbers between two specified values.,"min = 0
max = 50","import random

# Generate an array of random numbers between two specified values
def generate_array(min, max):
 array = []
 
 for i in range(min, max):
  array.append(random.randint(min, max))
 
 return array
 
min = 0
max = 50
print(generate_array(min, max))",Data Structure,4666,"import random

# Generate an array of random numbers between two specified values
def generate_array___:
 array = []
 
 for i in range___:
  array___random.randint(min, max))
 
 return array
 
min = 0
max = 50
print___)"
Design an algorithm in Python for sorting a given array of numbers in descending order.,"An array of integers [3, 5, 7, 2, 4, 1]","def bubble_sort(arr):
 length = len(arr)
 
 for i in range(length - 1, 0, -1):
 for j in range(0, i):
 if arr[j] < arr[j + 1]:
 arr[j], arr[j + 1] = arr[j + 1], arr[j]
 
 return arr
 
a = [3, 5, 7, 2, 4, 1]
print(bubble_sort(a)) # [7, 5, 4, 3, 2, 1]",Data Structure,4668,"def bubble_sort___:
 length = len___
 
 for i in range___:
 for j in range___:
 if arr[j] < arr[j + 1]:
 arr[j], arr[j + 1] = arr[j + 1], arr[j]
 
 return arr
 
a = ___
print___) # [7, 5, 4, 3, 2, 1]"
Create a Python function that takes in a list of numbers and returns the first occurrence of a prime number.,"[2, 4, 6, 8]","def findPrime(nums):
 for num in nums:
 if isPrime(num):
 return num

def isPrime(num):
 if num <= 1:
 return False
 for i in range(2, num):
 if (num % i == 0):
 return False
 return True",Data Structure,4673,"def findPrime___:
 for num in nums:
 if isPrime___:
 return num

def isPrime___:
 if num <= 1:
 return False
 for i in range___:
 if ___:
 return False
 return True"
Implement a Python function that takes an array of strings as the input and returns a list of distinct strings sorted lexicographically.,"['hello', 'world', 'hello', 'again']","def distinct_strings_sort(arr):
 result = []
 
 for s in arr:
 if s not in result:
 result.append(s)
 
 return sorted(result)

# Example:
arr = ['hello', 'world', 'hello', 'again']
distinct_sorted = distinct_strings_sort(arr)
print(distinct_sorted)  # Prints: ['again', 'hello', 'world']",Data Structure,4676,"def distinct_strings_sort___:
 result = []
 
 for s in arr:
 if s not in result:
 result___s)
 
 return sorted___

# Example:
arr = ['hello', 'world', 'hello', 'again']
distinct_sorted = distinct_strings_sort___
print___  # Prints: ['again', 'hello', 'world']"
Create a python program that checks if a given array is sorted in ascending order,"array = [1, 5, 3, 9, 4]","def check_sorted(array):
    return all(array[i] <= array[i+1] for i in range(len(array)-1))",Data Structure,4680,"def check_sorted___:
    return all___-1))"
Write a python program that takes a list of strings and returns a sorted copy of the list.,"l1 = ['cat', 'dog', 'bird', 'elephant'","def sort_list(l):
    l.sort()
    return l

sorted_list = sort_list(['cat', 'dog', 'bird', 'elephant'])

print(sorted_list) # Output: ['bird', 'cat', 'dog', 'elephant']",Data Structure,4683,"def sort_list___:
    l.sort()
    return l

sorted_list = sort_list___

print___ # Output: ['bird', 'cat', 'dog', 'elephant']"
Write an algorithm in Python for finding the minimum element in an array.,"[3, 4, 12, 19, 5, 17]","def findMin(arr): 
    min = arr[0] 
    for i in range(1, len(arr)): 
        if arr[i] < min: 
            min = arr[i] 
    return min

arr = [3, 4, 12, 19, 5, 17]
print(findMin(arr))",Data Structure,4685,"def findMin___: 
    min = arr___ 
    for i in range___): 
        if arr[i] < min: 
            min = arr[i] 
    return min

arr = ___
print___)"
Create a Python program to compute the frequency of each element in a given array.,"[1, 2, 3, 2, 1, 3]","def compute_frequency(arr):
    frequency_map = {}
    
    for num in arr:
        if num not in frequency_map:
            frequency_map[num] = 1
        else:
            frequency_map[num] += 1
            
    return frequency_map

result = compute_frequency([1, 2, 3, 2, 1, 3])
print(result)",Data Structure,4688,"def compute_frequency___:
    frequency_map = {}
    
    for num in arr:
        if num not in frequency_map:
            frequency_map[num] = 1
        else:
            frequency_map[num] += 1
            
    return frequency_map

result = compute_frequency___
print___"
Generate an algorithm in Python that finds the smallest positive number not present in an array.,"[1, 10, 5, 3, 8]","def findSmallestMissingPositiveInteger(arr): 
	positiveIntegers = set(i for i in range(1, len(arr) + 2)) 
	arrSet = set(arr) 
	res = positiveIntegers - arrSet 
	return res.pop() 
  
arr = [1, 10, 5, 3, 8] 
print(findSmallestMissingPositiveInteger(arr))",Data Structure,4692,"def findSmallestMissingPositiveInteger___: 
	positiveIntegers = set___ + 2)) 
	arrSet = set___ 
	res = positiveIntegers - arrSet 
	return res___) 
  
arr = ___ 
print___)"
Write a Python program to randomly split a list into two parts.,"[1, 2, 3, 4, 5, 6, 7, 8]","import random

def split_list(input_list):
    index = random.randint(0, len(input_list)-1)
    part1 = input_list[:index]
    part2 = input_list[index:]
    return part1, part2

input_list = [1, 2, 3, 4, 5, 6, 7, 8]
print(""Original list :"", input_list)
result1, result2 = split_list(input_list)
print(""\nPart 1 :"", result1)
print(""Part 2 :"", result2)",Data Structure,4694,"import random

def split_list___:
    index = random.randint___-1)
    part1 = input_list[:index]
    part2 = input_list[index:]
    return part1, part2

input_list = ___
print___
result1, result2 = split_list___
print___
print___"
Develop a function in python to find the index of an element in a list.,"a = [2, 3, 4, 5, 2]
x = 2","def find_index(a, x):
    indices = []
    if x not in a:
        return -1
    else:
        for i in range(len(a)):
            if a[i] == x:
                indices.append(i)
    return indices

indices = find_index(a, x)
print(""The index of element 2 in the list is"", indices)",Data Structure,4696,"def find_index___:
    indices = []
    if x not in a:
        return -1
    else:
        for i in range___):
            if a[i] == x:
                indices___i)
    return indices

indices = find_index___
print___"
Write a Python program to take a list of numbers and ensure that each element in the list is either the minimum or maximum value in the list.,"[5, 4, 3, 4, 8, 6, 7]","def normalize(nums):
  min_num = min(nums)
  max_num = max(nums)

  for i, n in enumerate(nums):
    if n > min_num and n < max_num:
      if n - min_num > max_num - n:
        nums[i] = max_num
      else:
        nums[i] = min_num

  return nums

print(normalize([5, 4, 3, 4, 8, 6, 7]))
# [5, 4, 3, 5, 8, 6, 7]",Data Structure,4697,"def normalize___:
  min_num = min___
  max_num = max___

  for i, n in enumerate___:
    if n > min_num and n < max_num:
      if n - min_num > max_num - n:
        nums[i] = max_num
      else:
        nums[i] = min_num

  return nums

print___)
# ___"
Create a Python program to remove all duplicate numbers from a list.,"[1, 2, 3, 2, 4, 3, 5]","def remove_duplicates(nums):
    new_list = []
    for num in nums:
        if num not in new_list:
            new_list.append(num)
    return new_list

if __name__ == '__main__':
	nums = [1,2,3,2,4,3,5]
	new_list = remove_duplicates(nums)
	print(new_list)",Data Structure,4699,"def remove_duplicates___:
    new_list = []
    for num in nums:
        if num not in new_list:
            new_list___num)
    return new_list

if __name__ == '__main__':
	nums = ___
	new_list = remove_duplicates___
	print___"
Generate a python script to calculate the standard deviation of a given data set.,"data_set = [2,4,4,4,5,5,7,9]","import statistics

data_set = [2,4,4,4,5,5,7,9]
print(round(statistics.stdev(data_set),2))",Data Structure,4702,"import statistics

data_set = ___
print___,2))"
Create a program in Python to determine all possible combinations of words from an array.,"words = [""cat"", ""dog"", ""pizza"", ""coffee""]","import itertools

words = [""cat"", ""dog"", ""pizza"", ""coffee""]
combinations = list(itertools.combinations(words, 2))

for i in range(len(combinations)):
    print(combinations[i])",Data Structure,4703,"import itertools

words = [""cat"", ""dog"", ""pizza"", ""coffee""]
combinations = list___)

for i in range___):
    print___"
Reorder the elements of an array in ascending order using Python.,"[5, 3, 6, 1, 7]","def sort_ascending(arr):
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            if arr[i] > arr[j]:
                arr[i], arr[j] = arr[j], arr[i]
    return arr

arr = [5, 3, 6, 1, 7]
arr = sort_ascending(arr)
print(arr)",Data Structure,4704,"def sort_ascending___:
    for i in range___):
        for j in range___):
            if arr[i] > arr[j]:
                arr[i], arr[j] = arr[j], arr[i]
    return arr

arr = ___
arr = sort_ascending___
print___"
Write a Python function to randomize a given list of integers.,"[1, 2, 3, 4, 5]","import random

def randomize(arr):
  random.shuffle(arr)
  return arr",Data Structure,4707,"import random

def randomize___:
  random.shuffle___
  return arr"
Create a Python program to sort a list of strings according to the length of the strings in ascending order.,"['Python', 'JS', 'C++', 'Java', 'PHP']","# Function to sort the list according to string length
def sort_string_list(string_list):
    return sorted(string_list, key=len)

if __name__ == '__main__':
    string_list = ['Python', 'JS', 'C++', 'Java', 'PHP']
    sorted_string_list = sort_string_list(string_list)
    print(sorted_string_list)",Data Structure,4711,"# Function to sort the list according to string length
def sort_string_list___:
    return sorted___

if __name__ == '__main__':
    string_list = ['Python', 'JS', 'C++', 'Java', 'PHP']
    sorted_string_list = sort_string_list___
    print___"
Modify the Python code below to create a function for finding the sum of a list of numbers.,"list=[1,2,3,4,5]","def sum_list(nums):
    total = 0
    for num in nums:
        total += num
    return total
    
my_list = [1,2,3,4,5]

print(sum_list(my_list))",Data Structure,4716,"def sum_list___:
    total = 0
    for num in nums:
        total += num
    return total
    
my_list = ___

print___)"
Write a python program to get all possible subset combinations of a given set.,"[1,2,3]","def subset_combinations(arr):
    result = [[]]
    for ele in arr:
        for i in range(len(result)):
            tmp = list(result[i])
            tmp.append(ele)
            result.append(tmp)

    return result

if __name__ == '__main__':
    arr = [1,2,3]
    print(""All possible combinations:"", subset_combinations(arr))",Data Structure,4717,"def subset_combinations___:
    result = [[]]
    for ele in arr:
        for i in range___):
            tmp = list___
            tmp___ele)
            result___tmp)

    return result

if __name__ == '__main__':
    arr = ___
    print___)"
Create a Python program to find the most frequent item in a list.,"[1, 3, 1, 3, 2, 1]","def most_frequent(list): 
    counter = 0
    num = list[0] 
    
    for i in list: 
        curr_frequency = list.count(i) 
        if(curr_frequency> counter): 
            counter = curr_frequency 
            num = i 
  
    return num 
  
list = [1, 3, 1, 3, 2, 1]
print(most_frequent(list))",Data Structure,4720,"def most_frequent___: 
    counter = 0
    num = list___ 
    
    for i in list: 
        curr_frequency = list.count___ 
        if___: 
            counter = curr_frequency 
            num = i 
  
    return num 
  
list = ___
print___)"
Create a Python program to sort a list of tuples in ascending order by their second element.,"[(4, 2), (3, 7), (2, 3)]","def sort_tuples(tup): 
  
    # reverse = None (Sorts in Ascending order) 
    # key is set to sort using second element of  
    # sublist lambda has been used 
    tup.sort(key = lambda x: x[1])  
    return tup  
  
# Driver Code 
tuple1 = [(4, 2), (3, 7), (2, 3)]  
print(sort_tuples(tuple1))",Data Structure,4724,"def sort_tuples___: 
  
    # reverse = None ___ 
    # key is set to sort using second element of  
    # sublist lambda has been used 
    tup.sort___  
    return tup  
  
# Driver Code 
tuple1 = [___, ___, ___]  
print___)"
"Given an array of strings, write a Python function to remove all duplicates and return the resulting array.","Example array: ['a', 'b', 'a', 'c', 'c', 'd']","def removeDuplicates(arr):
 result = [] 
  
 # traverse for all elements 
 for i in arr: 
  
  # check if exists in result 
  if i not in result: 
   result.append(i) 
  
 # return result 
 return result",Data Structure,4726,"def removeDuplicates___:
 result = [] 
  
 # traverse for all elements 
 for i in arr: 
  
  # check if exists in result 
  if i not in result: 
   result___i) 
  
 # return result 
 return result"
Create a Python program that takes in a 2D array and returns the sum of all the elements.,"[[1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]]","def sum_2D_array(arr):
    """"""Return the sum of all the elements in a 2D array.""""""
    sum_arr = 0
    for row in arr:
        for elem in row:
            sum_arr += elem
    return sum_arr",Data Structure,4727,"def sum_2D_array___:
    """"""Return the sum of all the elements in a 2D array.""""""
    sum_arr = 0
    for row in arr:
        for elem in row:
            sum_arr += elem
    return sum_arr"
Generate a Python program which takes two lists and returns a list which contain only the items which are shared between the two lists,"[1, 2, 3], [3, 4, 5]","def find_intersection(list1, list2):
    intersection = []
    for item1 in list1:
        for item2 in list2:
            if item1 == item2:
                intersection.append(item1)
    return intersection

list1 = [1, 2, 3]
list2 = [3, 4, 5]
result = find_intersection(list1, list2)
print(result)",Data Structure,4732,"def find_intersection___:
    intersection = []
    for item1 in list1:
        for item2 in list2:
            if item1 == item2:
                intersection___item1)
    return intersection

list1 = ___
list2 = ___
result = find_intersection___
print___"
Rewrite the following Python code using for loop instead of list comprehensions.,"list_of_nums = [1, 2, 3, 4, 5] 
list_of_squares = [num**2 for num in list_of_nums]","list_of_nums = [1, 2, 3, 4, 5] 
list_of_squares = []

for num in list_of_nums: 
 list_of_squares.append(num**2)",Data Structure,4733,"list_of_nums = ___ 
list_of_squares = []

for num in list_of_nums: 
 list_of_squares___num**2)"
Can you provide a Python program that prints the largest element in the given list?,"[1, 3, 4, 5, 19, 13, 7]","def get_largest(nums):
    max_num = nums[0]
    for num in nums:
        if num > max_num:
            max_num = num
    return max_num

print(get_largest([1, 3, 4, 5, 19, 13, 7]))",Data Structure,4739,"def get_largest___:
    max_num = nums___
    for num in nums:
        if num > max_num:
            max_num = num
    return max_num

print___)"
Create a Python script that detects a cycle in a linked list.,head -> 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 3,"def detect_cycle(head):
 # Use two pointers, one slow and one fast, to detect a cycle
 slow = fast = head # Init with head
 while slow and fast and fast.next:
 slow = slow.next  # Move slow one node ahead
 fast = fast.next.next  # Move fast two node ahead
 if slow == fast:  # Detect cycle
 return True
 return False",Data Structure,4744,"def detect_cycle___:
 # Use two pointers, one slow and one fast, to detect a cycle
 slow = fast = head # Init with head
 while slow and fast and fast.next:
 slow = slow.next  # Move slow one node ahead
 fast = fast.next.next  # Move fast two node ahead
 if slow == fast:  # Detect cycle
 return True
 return False"
Write a Python program to filter out all the even numbers from a list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def filter_even(numbers):
    return [n for n in numbers if n %2 == 0]",Data Structure,4751,"def filter_even___:
    return [n for n in numbers if n %2 == 0]"
Design an algorithm using Python to select the kth largest element from a list.,"[5, 10, 15, 20, 25]","def getKthLargest(arr, k): 
    arr.sort() 
  
    # Return the k'th largest element
    return arr[len(arr)-k]",Data Structure,4753,"def getKthLargest___: 
    arr.sort() 
  
    # Return the k'th largest element
    return arr[len___-k]"
Write a Python program to convert a given list of numbers into their corresponding binary representation.,"[3,8,6]","def list_to_binary(nums):
    binary = []
    for num in nums:
        binary.append(bin(num))
    return binary

result = list_to_binary([3, 8, 6])
print(result)",Data Structure,4755,"def list_to_binary___:
    binary = []
    for num in nums:
        binary___bin(num))
    return binary

result = list_to_binary___
print___"
Convert the following C code that takes a list and adds each number to the list to Python.,"int arr[] = {1, 2, 3, 4};
int result = 0;

for (int i = 0; i < sizeof(arr) / sizeof(arr[0]); i++){
  result += arr[i];
}","arr = [1, 2, 3, 4]
result = 0

for i in range(len(arr)):
  result += arr[i]",Data Structure,4758,"arr = ___
result = 0

for i in range___):
  result += arr[i]"
Write a Python program to find the most frequent item in a given list of data.,"data = [0,0,1,1,2,3,3,3,3,3,0,0]","max_count = 0
max_element = None
for element in data:
  count = data.count(element)
  if count > max_count:
    max_element = element
    max_count = count
print(max_element)",Data Structure,4761,"max_count = 0
max_element = None
for element in data:
  count = data.count___
  if count > max_count:
    max_element = element
    max_count = count
print___"
Optimize the python code that finds the sum of the elements in a given array.,"def sum(arr): 
    s = 0
    for i in range(len(arr)): 
        s += arr[i] 
    return s","def sum(arr): 
    s = 0
    for number in arr: 
        s += number 
    return s",Data Structure,4763,"def sum___: 
    s = 0
    for number in arr: 
        s += number 
    return s"
Develop an algorithm in Python for deletion of an element from an array.,"[1, 2, 3, 4], 3","def deleteElement(arr, element):
    index = -1
    for i in range(len(arr)):
        if arr[i] == element:
            index = i
            break
    if index != -1:
        arr.pop(index)
        return arr
    else:
        return -1

arr = [1, 2, 3, 4]
element = 3
new_arr = deleteElement(arr, element)
print(new_arr)",Data Structure,4764,"def deleteElement___:
    index = -1
    for i in range___):
        if arr[i] == element:
            index = i
            break
    if index != -1:
        arr___index)
        return arr
    else:
        return -1

arr = ___
element = 3
new_arr = deleteElement___
print___"
Design a Python algorithm that takes a list of numbers and returns a list of all the pairs of numbers whose sum is equal to a specified number.,"[1, 2, 3, 4, 5], 4","def find_pairs_with_sum(nums, target):
    result = []
    seen = set()
    
    for num in nums:
        if (target - num) in seen:
            result.append([num, target-num])
        seen.add(num)

    return result

nums = [1,2,3,4,5]
target = 4

result = find_pairs_with_sum(nums, target)
print(result)",Data Structure,4766,"def find_pairs_with_sum___:
    result = []
    seen = set()
    
    for num in nums:
        if ___ in seen:
            result___[num, target-num])
        seen.add___

    return result

nums = ___
target = 4

result = find_pairs_with_sum___
print___"
Write a Python program to filter a list of strings and only return the strings which follow a certain pattern.,"strings = [""hello"", ""hell"", ""world"", ""word"", ""hello_world""]","filtered_strings = [string for string in strings if re.match(r""^hello.*world$"", string)] 
# filtered_strings = [""hello_world""]",Data Structure,4768,"filtered_strings = [string for string in strings if re.match___] 
# filtered_strings = [""hello_world""]"
Write a Python script to reduce an array of integers by their GCD.,"[30, 20, 45]","def gcd(a, b):
   while a != 0:
       a, b = b % a, a
   return b

def reduce_by_gcd(arr):
    gcd_val = arr[0]
    for i in range(len(arr)):
        gcd_val = gcd(gcd_val, arr[i])
    return [a // gcd_val for a in arr]

reduced_arr = reduce_by_gcd([30, 20, 45])
print(reduced_arr) # [2, 3, 5]",Data Structure,4769,"def gcd___:
   while a != 0:
       a, b = b % a, a
   return b

def reduce_by_gcd___:
    gcd_val = arr___
    for i in range___):
        gcd_val = gcd___
    return [a // gcd_val for a in arr]

reduced_arr = reduce_by_gcd___
print___ # [2, 3, 5]"
Create a function in Python that will sort a list of tuples based on the second elements in the tuples.,"[(2, 1), (3, 7), (6, 5)]","def sort_by_second_element(tuples):
    return sorted(tuples, key=lambda element: element[1])

// testing
tuples_list = [(2, 1), (3, 7), (6, 5)]
print(""Original list of tuples:"")
print(tuples_list)
print(""Sorted list of tuples based on the second element of tuples:"")
print(sort_by_second_element(tuples_list))",Data Structure,4771,"def sort_by_second_element___:
    return sorted___

// testing
tuples_list = [___, ___, ___]
print___
print___
print___
print___)"
Make a Python program to create a rolling average over a list. Rolling average means return the average of the last 3 items of the list.,"mylist = [10, 20, 30, 40, 50]","def rolling_average(arr):
    last_three = arr[-3:]
    return sum(last_three) / len(last_three)

mylist = [10, 20, 30, 40, 50]
rolling_avg = rolling_average(mylist)
print(""Rolling average:"", rolling_avg)

# Output:
# Rolling average: 33.333333333333336",Data Structure,4776,"def rolling_average___:
    last_three = arr[-3:]
    return sum___ / len___

mylist = ___
rolling_avg = rolling_average___
print___

# Output:
# Rolling average: 33.333333333333336"
Write a function to find all the possible subset sums of a given array.,"arr = [1,2,3]","# Python program to find all possible subset sums

def find_subset_sums(arr):
    sums = set()
    for i in range(2**len(arr)):
        csum = 0
        for j in range(len(arr)):
            if i & (1<<j):
                csum += arr[j]
        sums.add(csum)
    return sums",Data Structure,4780,"# Python program to find all possible subset sums

def find_subset_sums___:
    sums = set()
    for i in range___):
        csum = 0
        for j in range___):
            if i & ___:
                csum += arr[j]
        sums.add___
    return sums"
Edit the following code snippet in Python to remove the duplicates from a list.,"my_list = [1,2,2,3,4,5,5,5]",my_list = list(dict.fromkeys(my_list)),Data Structure,4781,my_list = list___)
Create a python function that randomly selects three numbers from a given list and sort them in descending order.,"[4, 7, 9, 11, 33, 2]","import random

def sort_numbers(lst):
    nums = random.sample(lst, 3)
    nums.sort(reverse=True)

    return nums

nums = [4, 7, 9, 11, 33, 2]
sorted_nums = sort_numbers(nums)

print(sorted_nums) # [33, 11, 9]",Data Structure,4782,"import random

def sort_numbers___:
    nums = random.sample___
    nums.sort___

    return nums

nums = ___
sorted_nums = sort_numbers___

print___ # [33, 11, 9]"
Create a python program to display a histogram of the list items.,"[1, 2, 3, 3, 3, 4, 4, 4, 4, 5, 6, 7, 8, 9]","import matplotlib.pyplot as plt

list_data = [1, 2, 3, 3, 3, 4, 4, 4, 4, 5, 6, 7, 8, 9] 
plt.hist(list_data, bins=6) 
plt.title(""Histogram"") 
plt.show()",Data Structure,4787,"import matplotlib.pyplot as plt

list_data = ___ 
plt.hist___ 
plt.title___ 
plt.show()"
Create a function in Python to return the maximum value in a given array.,"The given array is [4, 5, 9, 1, 0, 5, 7]","def findMaxValue(arr):
    max_value = None
    for element in arr:
        if max_value == None or element > max_value:
            max_value = element
    return max_value",Data Structure,4788,"def findMaxValue___:
    max_value = None
    for element in arr:
        if max_value == None or element > max_value:
            max_value = element
    return max_value"
Write a Python program to create a list containing all the possible combinations of two or more lists.,"list1 = [1, 2, 3]
list2 = ['a', 'b', 'c']
list3 = [7, 8]","combined_list = [[1, 'a', 7], [1, 'a', 8], [1, 'b', 7], [1, 'b', 8], [1, 'c', 7], [1, 'c', 8], [2, 'a', 7], [2, 'a', 8], [2, 'b', 7], [2, 'b', 8], [2, 'c', 7], [2, 'c', 8], [3, 'a', 7], [3, 'a', 8], [3, 'b', 7], [3, 'b', 8], [3, 'c', 7], [3, 'c', 8]]

combined_list = list(itertools.product(list1, list2, list3))",Data Structure,4791,"combined_list = [[1, 'a', 7], [1, 'a', 8], [1, 'b', 7], [1, 'b', 8], [1, 'c', 7], [1, 'c', 8], [2, 'a', 7], [2, 'a', 8], [2, 'b', 7], [2, 'b', 8], [2, 'c', 7], [2, 'c', 8], [3, 'a', 7], [3, 'a', 8], [3, 'b', 7], [3, 'b', 8], [3, 'c', 7], [3, 'c', 8]]

combined_list = list___)"
Create a Python program to take a list of numbers and set any negative numbers to 0.,"[2, 5, -8, 0, 1, -6]","def set_negative_to_zero(arr):
    new_arr = []
    for num in arr:
        if num < 0:
            new_arr.append(0)
        else:
            new_arr.append(num)
    return new_arr

result = set_negative_to_zero([2, 5, -8, 0, 1, -6])
print(result)",Data Structure,4793,"def set_negative_to_zero___:
    new_arr = []
    for num in arr:
        if num < 0:
            new_arr___0)
        else:
            new_arr___num)
    return new_arr

result = set_negative_to_zero___
print___"
Formulate a python expression to determine the average of a given list of numbers.,"[1,2,3,4]",sum(lst)/len(lst) # This is equivalent to (1+2+3+4)/4 = 2.5,Data Structure,4797,sum___/len___ # This is equivalent to ___/4 = 2.5
Write a Python script that takes a list of words as input and calculates the average length of the words.,"[""Hello"",""World"",""Beautiful"",""Day""]","words = [""Hello"",""World"",""Beautiful"",""Day""]

lengths = [len(word) for word in words]
avg_length = sum(lengths) / len(lengths)

print(""Average word length is {:.2f}"".format(avg_length))",Data Structure,4806,"words = [""Hello"",""World"",""Beautiful"",""Day""]

lengths = [len___ for word in words]
avg_length = sum___ / len___

print(""Average word length is ___"".format(avg_length))"
What is the best way to sort an array of integers in descending order using Python?,"[99, 65, 43, 87, 21]","def sortDesc(arr):
    arr.sort(reverse=True)
    return arr

arr = [99, 65, 43, 87, 21]
print(sortDesc(arr)) // Output: [99, 87, 65, 43, 21]",Data Structure,4807,"def sortDesc___:
    arr.sort___
    return arr

arr = ___
print___) // Output: [99, 87, 65, 43, 21]"
Create a function in Python that takes two arrays as arguments and returns a new array that contains the elements of both arguments.,"arr_1 = [1, 2, 3];
arr_2 = [4, 5, 6];","def merge_arrays(arr_1, arr_2):
  return arr_1 + arr_2
  
result = merge_arrays(arr_1, arr_2)
print(result) #[1, 2, 3, 4, 5, 6]",Data Structure,4811,"def merge_arrays___:
  return arr_1 + arr_2
  
result = merge_arrays___
print___ #[1, 2, 3, 4, 5, 6]"
Write a Python program to generate the Fibonacci sequence up to a given number and store it in a list.,int num = 10,"def generateFibonacciSequence(num):
    a = 0
    b = 1
    fib = []
    for i in range(num):
        fib.append(a)
        c = a + b
        a = b
        b = c
    return fib

num = 10
print(generateFibonacciSequence(num))",Data Structure,4816,"def generateFibonacciSequence___:
    a = 0
    b = 1
    fib = []
    for i in range___:
        fib___a)
        c = a + b
        a = b
        b = c
    return fib

num = 10
print___)"
Edit the following python code such that it can take a list of elements and return the distinct elements in the list,"def unique_elements(lst): 
    elements = []  
    for num in lst: 
        if num not in elements: 
            elements.append(num) 
    return elements","def unique_elements(lst): 
    elements = []  
    for num in lst: 
        if num not in elements: 
            elements.append(num) 
    return list(set(elements))",Data Structure,4822,"def unique_elements___: 
    elements = []  
    for num in lst: 
        if num not in elements: 
            elements___num) 
    return list___)"
Write an algorithm in Python that takes an input of positive integers and for each element in the list multiplies it by 2 if it is even and divide it by 3 if it is odd.,"[2, 3, 4, 6, 8, 10]","def multiplyOddDivideEven(lst):
  new_list = []
  for element in lst:
    if element % 2 == 0:
      new_list.append(element / 3)
    else:
      new_list.append(element * 2)
  return new_list

print(multiplyOddDivideEven([2, 3, 4, 6, 8, 10])) # prints [1.0, 6, 2.0, 4.0, 4.0, 5.0]",Data Structure,4829,"def multiplyOddDivideEven___:
  new_list = []
  for element in lst:
    if element % 2 == 0:
      new_list___element / 3)
    else:
      new_list___element * 2)
  return new_list

print___) # prints [1.0, 6, 2.0, 4.0, 4.0, 5.0]"
"Given an array and a number, write a Python function that will determine if the number is present in the array.","arr=[1,2,3]
number = 4","def is_present(arr, number):
    for i in range(len(arr)):
        if arr[i] == number:
            return True
    return False",Data Structure,4830,"def is_present___:
    for i in range___):
        if arr[i] == number:
            return True
    return False"
Design an automated system in Python to remove all even numbers from a list.,"list = [3, 8, 10, 11, 12, 15]","def remove_even(list):
    return [i for i in list if i%2 != 0]",Data Structure,4833,"def remove_even___:
    return [i for i in list if i%2 != 0]"
Write a Python program to sort the list using the bubble sort algorithm,"unsorted_list = [5, 4, 3, 2, 1]","def bubble_sort(arr):
    n = len(arr)
    for i in range(n - 1):
        for j in range(0, n - i - 1):
            if arr[j] > arr[j + 1]: 
                arr[j], arr[j + 1] = arr[j + 1], arr[j]

# Driver code to test above
numbers = [5, 4, 3, 2, 1]
bubble_sort(numbers)",Data Structure,4836,"def bubble_sort___:
    n = len___
    for i in range___:
        for j in range___:
            if arr[j] > arr[j + 1]: 
                arr[j], arr[j + 1] = arr[j + 1], arr[j]

# Driver code to test above
numbers = ___
bubble_sort___"
Write an algorithm in Python to calculate the sum of even numbers in an array between a given range.,"arr = [2, 4, 6, 8, 10, 11, 12, 15, 18]","def sumEvensInRange(arr, lower, upper):
    evens_sum = 0
    for num in arr:
        if num >= lower and num <= upper and num % 2 == 0:
            evens_sum += num
    return evens_sum",Data Structure,4837,"def sumEvensInRange___:
    evens_sum = 0
    for num in arr:
        if num >= lower and num <= upper and num % 2 == 0:
            evens_sum += num
    return evens_sum"
Write a Python program to remove all duplicates from a given list.,"[2, 3, 4, 5, 2, 3, 6]","def remove_duplicates(lst):
    seen = set()
    result = []
    for item in lst:
        if item not in seen:
            seen.add(item)
            result.append(item)
    return result",Data Structure,4838,"def remove_duplicates___:
    seen = set()
    result = []
    for item in lst:
        if item not in seen:
            seen.add___
            result___item)
    return result"
Suggest a completion for the following python code to randomly select an element from a given list.,"import random

def random_element(lst):","import random

def random_element(lst):
 return random.choice(lst)",Data Structure,4841,"import random

def random_element___:
 return random.choice___"
Write a Python program to modify a given list such that each element is equal to the square of the original element minus 2.,"sample_list = [3, 5, 7, 9]","modified_list = [7, 15, 23, 31]

# Python code
sample_list = [3, 5, 7, 9]

modified_list = [x**2 - 2 for x in sample_list]",Data Structure,4845,"modified_list = ___

# Python code
sample_list = ___

modified_list = [x**2 - 2 for x in sample_list]"
Construct a Python program to find the difference between the maximum and minimum values in a given array of integers.,"[1, 8, 4, 5, 9]","def diffMaxMin(arr):
    maxVal = arr[0]
    minVal = arr[0]
    
    for num in arr:
        if num > maxVal:
            maxVal = num
        elif num < minVal:
            minVal = num
            
    return maxVal - minVal

arr = [1, 8, 4, 5, 9]
result = diffMaxMin(arr)
print(result)",Data Structure,4851,"def diffMaxMin___:
    maxVal = arr___
    minVal = arr___
    
    for num in arr:
        if num > maxVal:
            maxVal = num
        elif num < minVal:
            minVal = num
            
    return maxVal - minVal

arr = ___
result = diffMaxMin___
print___"
Write a Python function to generate an array of numbers from 1 to n in random order.,7,"import random

def generate_random_array(n):
    array = [i for i in range(1, n + 1)]
    random.shuffle(array)
    return array

result = generate_random_array(7)
print(result)",Data Structure,4853,"import random

def generate_random_array___:
    array = [i for i in range___]
    random.shuffle___
    return array

result = generate_random_array___
print___"
Write a Python program that implements a search algorithm on a given list of numbers.,"numbers = [2, 8, 9, 5, 15, 12, 4]
key = 12","def linearSearch(numbers, key):
    for i in range(len(numbers)):
        if numbers[i] == key: 
            return i
    return -1

numbers = [2, 8, 9, 5, 15, 12, 4]
key = 12
index = linearSearch(numbers, key)
if index == -1:
    print(""Element not found"")
else:
    print(""Element found at index"", index) # output: Element found at index 5",Data Structure,4856,"def linearSearch___:
    for i in range___):
        if numbers[i] == key: 
            return i
    return -1

numbers = ___
key = 12
index = linearSearch___
if index == -1:
    print___
else:
    print___ # output: Element found at index 5"
"Given a list of integers, write a Python program to calculate the average of all the numbers.","[2, 4, 6, 8, 10]","def average(lst):
 sum = 0
 for num in lst:
  sum += num

 return sum/len(lst)

nums = [2, 4, 6, 8, 10]
result = average(nums)
print(result) # 6.0",Data Structure,4861,"def average___:
 sum = 0
 for num in lst:
  sum += num

 return sum/len___

nums = ___
result = average___
print___ # 6.0"
Develop a code generator that can generate a specified code given a language and a set of instructions.,"Language: Python
Instructions: print a ""Hello World!""","def code_generator(language, instructions): 
    if language == 'Python': 
        code_string = 'print(""Hello World!"")' 
    elif language == 'Java': 
        code_string = 'System.out.println(""Hello World!"");' 
 
    return code_string",Data Structure,4863,"def code_generator___: 
    if language == 'Python': 
        code_string = 'print___' 
    elif language == 'Java': 
        code_string = 'System.out.println___;' 
 
    return code_string"
Write a Python script to find the unique elements of a given list.,"List: [1, 1, 2, 3, 4, 5, 5]","list_x = [1, 1, 2, 3, 4, 5, 5]
unique_elements = set(list_x)
print(unique_elements) #output: {1, 2, 3, 4, 5}",Data Structure,4866,"list_x = ___
unique_elements = set___
print(unique_elements) #output: ___"
Construct an algorithm in Python that sorts an array using quick sort.,"myList = [3, 8, 10, 2, 4]","def quick_sort(input_list):
    if len(input_list) <= 1:
        return input_list
    pivot = input_list[0]
    left = [x for x in input_list[1:] if x < pivot]
    right = [x for x in input_list[1:] if x >= pivot]
    return quick_sort(left) + [pivot] + quick_sort(right)

myList = [3, 8, 10, 2, 4]

sortedList = quick_sort(myList)
print(sortedList)",Data Structure,4868,"def quick_sort___:
    if len___ <= 1:
        return input_list
    pivot = input_list___
    left = [x for x in input_list[1:] if x < pivot]
    right = [x for x in input_list[1:] if x >= pivot]
    return quick_sort___ + [pivot] + quick_sort___

myList = ___

sortedList = quick_sort___
print___"
Write a Python function to find the maximum product of three integers from a given list.,"[-10, 6, 7, 8, 2]","def max_product_three(numbers):
 numbers.sort()
 return max(
  numbers[0] * numbers[1] * numbers[-1], 
  numbers[-1] * numbers[-2] * numbers[-3]
 )",Data Structure,4871,"def max_product_three___:
 numbers.sort()
 return max(
  numbers___ * numbers___ * numbers[-1], 
  numbers[-1] * numbers[-2] * numbers[-3]
 )"
Develop a program in Python that sums up all the numbers of a list.,"[1, 2, 3, 4, 5]","# define the list
my_list = [1, 2, 3, 4, 5]

# compute the total
total = 0
for num in my_list:
 total += num

# print the result
print(""The sum of all numbers in the list is: "" + str(total))",Data Structure,4872,"# define the list
my_list = ___

# compute the total
total = 0
for num in my_list:
 total += num

# print the result
print___)"
Write a function in Python to remove all numbers from an array.,"[3, 1, 4, 5, 6, 2]","def remove_numbers(arr):
  new_arr = []
  for el in arr:
    if not isinstance(el, int):
      new_arr.append(el)
  return new_arr

a = [3, 1, 4, 5, 6, 2]

print(remove_numbers(a))",Data Structure,4875,"def remove_numbers___:
  new_arr = []
  for el in arr:
    if not isinstance___:
      new_arr___el)
  return new_arr

a = ___

print___)"
Create a python program to sort list elements in ascending order using the selection sort method.,"unsortedList = [4,3,2,1]","unsortedList = [4,3,2,1]
 
for i in range(len(unsortedList)): 
    min_idx = i
    for j in range(i+1, len(unsortedList)):
        if unsortedList[min_idx] > unsortedList[j]: 
            min_idx = j 
    unsortedList[i], unsortedList[min_idx] = unsortedList[min_idx], unsortedList[i]
    
print(""Sorted list:"", unsortedList)",Data Structure,4877,"unsortedList = ___
 
for i in range___): 
    min_idx = i
    for j in range___):
        if unsortedList[min_idx] > unsortedList[j]: 
            min_idx = j 
    unsortedList[i], unsortedList[min_idx] = unsortedList[min_idx], unsortedList[i]
    
print___"
Write an algorithm in Python that finds the minimal number in an array.,"arr = [1, 5, 4, 12, 8]","def find_min(arr):
    min_num = arr[0]
    for num in arr:
        if num < min_num:
            min_num = num
    return min_num

min_num = find_min(arr)
print(min_num)",Data Structure,4888,"def find_min___:
    min_num = arr___
    for num in arr:
        if num < min_num:
            min_num = num
    return min_num

min_num = find_min___
print___"
Design a function in Python to search for a given number in a list.,"List: [1, 2, 3, 4, 5]
Number: 4","def search_list(lst, num):
    for i in range(len(lst)):
        if lst[i] == num:
            return i
    return -1",Data Structure,4891,"def search_list___:
    for i in range___):
        if lst[i] == num:
            return i
    return -1"
Write a Python function that takes in a 2D array of integers and return the sum of all elements in the array.,"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]","def sumArray(arr):
  sum = 0
  for i in range(len(arr)):
    for j in range(len(arr[i])):
      sum += arr[i][j]
      
  return sum

sumArray([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) # returns 45",Data Structure,4895,"def sumArray___:
  sum = 0
  for i in range___):
    for j in range___):
      sum += arr[i][j]
      
  return sum

sumArray___ # returns 45"
Write a Python program to search for a specific value in a list.,"my_list = [2, 4, 6, 8, 10]","def search_list(search_term, my_list):
 for item in my_list:
 if item == search_term:
 return True
return False

my_list = [2, 4, 6, 8, 10]
search_term = 8

if search_list(search_term, my_list):
 print(""Value found"")
else:
 print(""Value not found"")",Data Structure,4896,"def search_list___:
 for item in my_list:
 if item == search_term:
 return True
return False

my_list = ___
search_term = 8

if search_list___:
 print___
else:
 print___"
Optimize a Python algorithm to find the greatest 2 numbers from a 10000 integers list.,"myList = [1, 5, 3, 7, 4, 7, 8, 9, 2, 10, 6, 8]","def get_greatest_2(items):
 max1 = max2 = float('-inf')
 for item in items:
 if item > max1:
 max1, max2 = item, max1
 elif item > max2:
 max2 = item
 return max1, max2

myList = [1, 5, 3, 7, 4, 7, 8, 9, 2, 10, 6, 8]
print('The greatest 2 numbers from the array:', get_greatest_2(myList))

Output:
The greatest 2 numbers from the array: (9, 8)",Data Structure,4897,"def get_greatest_2___:
 max1 = max2 = float___
 for item in items:
 if item > max1:
 max1, max2 = item, max1
 elif item > max2:
 max2 = item
 return max1, max2

myList = ___
print___)

Output:
The greatest 2 numbers from the array: ___"
Design an algorithm in Python which takes an array as an input and sorts them in ascending order using selection sort.,"[76, 25, 16, 15, 88]","def selection_sort(arr): 
	for i in range(len(arr)):   
		min_idx = i 
		for j in range(i+1, len(arr)): 
			if arr[min_idx] > arr[j]: 
				min_idx = j 
		arr[i], arr[min_idx] = arr[min_idx], arr[i]

arr = [76, 25, 16, 15, 88]
selection_sort(arr)
print(""Sorted array:"", arr) # [15, 16, 25, 76, 88]",Data Structure,4899,"def selection_sort___: 
	for i in range___):   
		min_idx = i 
		for j in range___): 
			if arr[min_idx] > arr[j]: 
				min_idx = j 
		arr[i], arr[min_idx] = arr[min_idx], arr[i]

arr = ___
selection_sort___
print___ # [15, 16, 25, 76, 88]"
Develop a Python program to generate all possible strings of length 'n' using characters from a given array.,"characters = [""A"", ""B"", ""C""]
length = 3","def generate_strings(characters, length):
    if length == 0:
        return [""""]

    result = []
    for char in characters:
        for string in generate_strings(characters, length-1):
            result.append(char + string)

    return result

strings = generate_strings([""A"", ""B"", ""C""], 3)
print(""Strings:"", strings)",Data Structure,4906,"def generate_strings___:
    if length == 0:
        return [""""]

    result = []
    for char in characters:
        for string in generate_strings___:
            result___char + string)

    return result

strings = generate_strings___
print___"
Create a function to find the mean of a given array in Python.,"[2, 4, 5, 7]","def mean(arr): 
  return sum(arr)/len(arr)

arr = [2, 4, 5, 7]
mean_val = mean(arr)
print(""Mean of the array is"", mean_val)
# Output: Mean of the array is 4.5",Data Structure,4907,"def mean___: 
  return sum___/len___

arr = ___
mean_val = mean___
print___
# Output: Mean of the array is 4.5"
"Given a Python list of numbers (max 10 elements) transform the list to a dictionary with the following rules: if the element is even, the key is 'even' and the value is the list of even numbers; if the element is odd, the key is 'odd' and the value is the list of odd numbers.","[4, 8, 3, 12, 15, 7]","{
 'even': [4, 8, 12],
 'odd': [3, 15, 7]    
}",Data Structure,4909,"{
 'even': ___,
 'odd': ___    
}"
Create a Python program to search a list for a particular value and return its index.,"list = [2, 3, 5, 9], value = 5","def search_list(list, value): 
    i = 0
    while(i < len(list)): 
        if list[i] == value: 
            return i 
        i = i + 1
  
    return -1
  
list = [2, 3, 5, 9] 
value = 5
result = search_list(list, value) 
  
if result != -1: 
    print(""Element is present at index"", result) 
else: 
    print(""Element is not present in list"")",Data Structure,4912,"def search_list___: 
    i = 0
    while___): 
        if list[i] == value: 
            return i 
        i = i + 1
  
    return -1
  
list = ___ 
value = 5
result = search_list___ 
  
if result != -1: 
    print___ 
else: 
    print___"
Write a Python program to perform linear search on a given array of numbers.,"[2, 3, 4, 6, 1]","def linearSearch(arr, x): 
  
    for i in range (len(arr)): 
  
        if arr[i] == x: 
            return i 
  
    return -1
  
arr = [2, 3, 4, 6, 1] 
x = 4
  
result = linearSearch(arr, x) 
  
if(result == -1): 
    print(""Element is not present in array"") 
else: 
    print(""Element is present at index"", result)",Data Structure,4913,"def linearSearch___: 
  
    for i in range ___): 
  
        if arr[i] == x: 
            return i 
  
    return -1
  
arr = ___ 
x = 4
  
result = linearSearch___ 
  
if___: 
    print___ 
else: 
    print___"
Create a program in Python that finds the index of the first occurrence of a target number in a given array.,"arr = [1, 3, 5, 3, 7, 3, 6], target = 3","arr = [1, 3, 5, 3, 7, 3, 6]
target = 3

def findIndex(arr, target): 
    for i in range(len(arr)): 
        if arr[i] == target: 
            return i 
  
    return -1
  
# Driver Code 
index = findIndex(arr, target) 
print(""Index of"", target, ""is"", index) 

// Output: Index of 3 is 1",Data Structure,4915,"arr = ___
target = 3

def findIndex___: 
    for i in range___): 
        if arr[i] == target: 
            return i 
  
    return -1
  
# Driver Code 
index = findIndex___ 
print___ 

// Output: Index of 3 is 1"
Generate a python program to find the minimum element of a list.,"[1, 7, 4, 8, 2]","def find_min(input_list):
    min_ele = input_list[0]
    for ele in input_list:
        if ele < min_ele:
            min_ele = ele
    return min_ele",Data Structure,4918,"def find_min___:
    min_ele = input_list___
    for ele in input_list:
        if ele < min_ele:
            min_ele = ele
    return min_ele"
Write a Python program to find the closest match of a given list of integers in another.,"arr1 = [1, 5, 12, 36]
arr2 = [2, 4, 5, 6, 8, 9, 11, 12, 15, 21]","def closest_match(arr1, arr2):
    
    closest_match = None
    min_diff = float('inf')
    
    for x in arr1:
        for y in arr2:
            diff = abs(x - y)
            if diff < min_diff:
                min_diff = diff
                closest_match = y
    
    return closest_match",Data Structure,4921,"def closest_match___:
    
    closest_match = None
    min_diff = float___
    
    for x in arr1:
        for y in arr2:
            diff = abs___
            if diff < min_diff:
                min_diff = diff
                closest_match = y
    
    return closest_match"
"Given a list of integer values, write a Python program to find the number of consecutive values that are increasing.","numbers = [1, 2, 3, 4, 9, 8, 7, 6]","count = 0

for i in range(len(numbers) - 1):
    if numbers[i] < numbers[i + 1]:
        count += 1

print(count)",Data Structure,4922,"count = 0

for i in range___ - 1):
    if numbers[i] < numbers[i + 1]:
        count += 1

print___"
Write a function in Python to find the sum of all elements of a given list.,"inputList = [1, 2, 3, 4, 5]","def sum_list(inputList): 
    sum_list = 0
    for num in inputList: 
        sum_list += num 
    return sum_list",Data Structure,4925,"def sum_list___: 
    sum_list = 0
    for num in inputList: 
        sum_list += num 
    return sum_list"
"Create a function in Python that receives a word as input, searches for synonyms in a dictionary and returns a list of synonyms.","word = ""happy""","import json

def get_synonyms(word):
 synonyms = []
 with open('dictionary.json') as dictionary_file:
 dictionary = json.load(dictionary_file)
 if word in dictionary.keys():
 for syn in dictionary[word]:
 synonyms.append(syn)
 return synonyms

print(get_synonyms('happy'))",Data Structure,4933,"import json

def get_synonyms___:
 synonyms = []
 with open___ as dictionary_file:
 dictionary = json.load___
 if word in dictionary.keys():
 for syn in dictionary[word]:
 synonyms___syn)
 return synonyms

print___)"
Create a function in Python to perform linear regression looking for the best correlation for a set of data.,"x = [1, 2, 4, 3, 5]
y = [1, 3, 3, 2, 5]","import numpy as np

def linear_regression(x, y):
    x_mean = np.mean(x)
    y_mean = np.mean(y)
    
    num = 0
    den = 0
    for i in range(len(x)):
        num += (x[i] - x_mean)*(y[i] - y_mean)
        den += (x[i] - x_mean)**2
    m = num / den
    c = y_mean - m*x_mean
    return m, c",Data Structure,4934,"import numpy as np

def linear_regression___:
    x_mean = np.mean___
    y_mean = np.mean___
    
    num = 0
    den = 0
    for i in range___):
        num += ___*___
        den += ___**2
    m = num / den
    c = y_mean - m*x_mean
    return m, c"
Create a Python program to identify anagrams in a given list of strings.,"[""ab"",""ba"",""dog"",""god""]","def anagrams(words):
    anagram_list = []
    for word1 in words:
        for word2 in words:
            if word1 != word2 and sorted(word1) == sorted(word2):
                anagram_list.append([word1,word2])
    return anagram_list

list_of_words = [""ab"",""ba"",""dog"",""god""]
print(anagrams(list_of_words))",Data Structure,4937,"def anagrams___:
    anagram_list = []
    for word1 in words:
        for word2 in words:
            if word1 != word2 and sorted___ == sorted___:
                anagram_list___[word1,word2])
    return anagram_list

list_of_words = [""ab"",""ba"",""dog"",""god""]
print___)"
"Create a Python program that takes a list of strings as input, removes any duplicate strings, and prints out the resulting unique list.","[""a"", ""b"", ""c"", ""d"", ""a"", ""e""]","input_list = [""a"", ""b"", ""c"", ""d"", ""a"", ""e""]
unique_list = set(input_list)

print(unique_list)
# Output: {'a', 'c', 'b', 'e', 'd'}",Data Structure,4938,"input_list = [""a"", ""b"", ""c"", ""d"", ""a"", ""e""]
unique_list = set___

print___
# Output: ___"
Develop a Python program that takes a list of words in variable ‘words’ and creates a new variable with the length of each word.,"words = [""Hello"", ""World"", ""I"", ""Love"", ""You""]","word_lengths = [len(word) for word in words]

print(word_lengths) # [5, 5, 1, 4, 3]",Data Structure,4945,"word_lengths = [len___ for word in words]

print___ # [5, 5, 1, 4, 3]"
Edit this Python code to raise an error if the length of the list less than 3,"def check_list_length(lists):
    if len(lists) > 3:
        return True
    else:
        return False","def check_list_length(lists):
    if len(lists) > 3:
        return True
    else:
        raise ValueError(""list length should be more than 3"")",Data Structure,4951,"def check_list_length___:
    if len___ > 3:
        return True
    else:
        raise ValueError___"
Write a Python program to optimize the given array such that its elements are in the range of 0 to 100.,"[3, 105, -10, 35, 120]","def optimize_array(arr):
    for i in range(len(arr)):
        # If the element is less than 0
        if arr[i] < 0:
            arr[i] = 0
        # If the element is greater than 100
        if arr[i] > 100:
            arr[i] = 100
    return arr

arr = [3, 105, -10, 35, 120]
print(optimize_array(arr))",Data Structure,4956,"def optimize_array___:
    for i in range___):
        # If the element is less than 0
        if arr[i] < 0:
            arr[i] = 0
        # If the element is greater than 100
        if arr[i] > 100:
            arr[i] = 100
    return arr

arr = [3, 105, -10, 35, 120]
print___)"
Write a Python program that takes in a list of integerNums and returns a new list with elements which are divisible by 3.,"[3,4,6,9,10]","def divisible_by_3(intNums):
    result = []
    for i in intNums:
        if i % 3 == 0:
            result.append(i)
    return result

intNums = [3,4,6,9,10]
print(divisible_by_3(intNums)) # Output: [3, 6, 9]",Data Structure,4958,"def divisible_by_3___:
    result = []
    for i in intNums:
        if i % 3 == 0:
            result___i)
    return result

intNums = ___
print___) # Output: [3, 6, 9]"
Produce a program in Python to search for an element in a list,"[2, 3, 4, 5, 6]","# function to search an element  
# in a list 
def linear_search(list, x): 
    for index, element in enumerate(list): 
        if element == x: 
            return index 
    return -1",Data Structure,4966,"# function to search an element  
# in a list 
def linear_search___: 
    for index, element in enumerate___: 
        if element == x: 
            return index 
    return -1"
Create a Python program which takes a list of integers and prints a list containing only those integers which have more than 2 occurrences in the input list.,"list = [1, 2, 3, 4, 5, 2, 3, 1, 6, 3]","list = [1, 2, 3, 4, 5, 2, 3, 1, 6, 3]

def findDuplicates(list):
 result = []
 seen = set()
 
 for num in list:
 if num not in seen:
 seen.add(num)
 else:
 result.append(num)
 
 return result

print(findDuplicates(list))",Data Structure,4967,"list = ___

def findDuplicates___:
 result = []
 seen = set()
 
 for num in list:
 if num not in seen:
 seen.add___
 else:
 result___num)
 
 return result

print___)"
Write a Python program to create a new list with only odd numbers.,"[1,2,3,4,5,6,7,8,9]","def get_odd_numbers(nums):
    odd_nums = []
    for num in nums:
        if num % 2 == 1:
            odd_nums.append(num)
    return odd_nums

nums = [1,2,3,4,5,6,7,8,9]
print(get_odd_numbers(nums))",Data Structure,4971,"def get_odd_numbers___:
    odd_nums = []
    for num in nums:
        if num % 2 == 1:
            odd_nums___num)
    return odd_nums

nums = ___
print___)"
Code a Python program that takes an array of integers and forms them into subarrays of length k.,"array = [2, 3, 4, 5, 6, 7, 8], k = 3","def form_subarrays(array, k):
    subarrays = []
    start = 0
    end = k
   
    # loop until all of the elements are placed in 
    # subarrays
    while start < len(array):
        subarrays.append(array[start:end])
        start += k
        end += k
    
    return subarrays",Data Structure,4972,"def form_subarrays___:
    subarrays = []
    start = 0
    end = k
   
    # loop until all of the elements are placed in 
    # subarrays
    while start < len___:
        subarrays___array[start:end])
        start += k
        end += k
    
    return subarrays"
Write a Python program to find the length of the longest increasing subsequence in a given array.,"[3, 4, 2, 1, 7]","def longest_increasing_subsequence(arr):
    length = len(arr)
    lis = [1] * length
    for i in range(1, length):
        for j in range(0, i):
            if arr[i] > arr[j] and lis[i] < lis[j] + 1:
                lis[i] = lis[j] + 1
    return max(lis)

result = longest_increasing_subsequence([3, 4, 2, 1, 7])
print(result)",Data Structure,4974,"def longest_increasing_subsequence___:
    length = len___
    lis = ___ * length
    for i in range___:
        for j in range___:
            if arr[i] > arr[j] and lis[i] < lis[j] + 1:
                lis[i] = lis[j] + 1
    return max___

result = longest_increasing_subsequence___
print___"
Implement a Python script to flatten a list of lists.,"list_of_lists = [[1, 2, 3], [4, 5], [6, 7, 8, 9]]","def flatten_list(list_of_lists):
    flattened = []
    for sub_list in list_of_lists:
        for item in sub_list:
            flattened.append(item)
    return flattened",Data Structure,4980,"def flatten_list___:
    flattened = []
    for sub_list in list_of_lists:
        for item in sub_list:
            flattened___item)
    return flattened"
Generate a Python program that will take two lists of integers as input and return a new list with the pairwise sums of the two inputs.,"List 1: 1,2,3,4
List 2: 4,5,6,7","def pairwise_sum(l1, l2):
    result = []
    for x, y in zip(l1, l2):
        result.append(x + y)
    return result

#Example Usage
list_1 = [1,2,3,4]
list_2 = [4,5,6,7]

sums = pairwise_sum(list_1, list_2)
print(sums) # [5,7,9,11]",Data Structure,4986,"def pairwise_sum___:
    result = []
    for x, y in zip___:
        result___x + y)
    return result

#Example Usage
list_1 = ___
list_2 = ___

sums = pairwise_sum___
print___ # [5,7,9,11]"
Modify the following python program to create a new list whose elements are a tuple with the values of both lists?,"list1 = [1, 2, 3, 4] 
list2 = [5, 6, 7, 8]","list1 = [1, 2, 3, 4] 
list2 = [5, 6, 7, 8] 

#create an empty list
list3 = []

#iterate through each item in the two lists
for x, y in zip(list1, list2):
    #append each tuple as a single element in the new list
    list3.append((x, y))

print(list3)",Data Structure,4991,"list1 = ___ 
list2 = ___ 

#create an empty list
list3 = []

#iterate through each item in the two lists
for x, y in zip___:
    #append each tuple as a single element in the new list
    list3___(x, y))

print___"
"Create a function in Python to calculate the average of a given list [9, 8, 7].","[9, 8, 7]","def calculate_average(lst): 
 sum = 0
 for el in lst: 
  sum += el
 return sum / len(lst) 
 
 avg = calculate_average([9, 8, 7]) 
 print(avg) 
# Output: 8.0",Data Structure,4992,"def calculate_average___: 
 sum = 0
 for el in lst: 
  sum += el
 return sum / len___ 
 
 avg = calculate_average___ 
 print___ 
# Output: 8.0"
Generate a Python code snippet for sorting an array of strings in ascending alphabetical order.,"[""apple"", ""banana"", ""orange"", ""kiwi""]","def sort_words(words):
    # Sort the list in ascending alphabetical order.
    sorted_words = sorted(words)
    # Return the sorted list.
    return sorted_words
    
words = [""apple"", ""banana"", ""orange"", ""kiwi""]

sorted_words = sort_words(words)

print(sorted_words)",Data Structure,4995,"def sort_words___:
    # Sort the list in ascending alphabetical order.
    sorted_words = sorted___
    # Return the sorted list.
    return sorted_words
    
words = [""apple"", ""banana"", ""orange"", ""kiwi""]

sorted_words = sort_words___

print___"
Develop a solution in Python for combining two sorted arrays into a third sorted array.,"arr1 = [1, 2, 5]
arr2 = [2, 4, 6]","def combine_sorted_arrays(arr1, arr2):
    arr3 = arr1 + arr2
    arr3.sort()
    return arr3

arr1 = [1, 2, 5]
arr2 = [2, 4, 6]

arr3 = combine_sorted_arrays(arr1, arr2)
print(arr3)",Data Structure,5000,"def combine_sorted_arrays___:
    arr3 = arr1 + arr2
    arr3.sort()
    return arr3

arr1 = ___
arr2 = ___

arr3 = combine_sorted_arrays___
print___"
Create a program in Python to flatten a given array of arrays.,"[[1,2,[3]],4]","def flatten_list(arr):
  result = []
  for element in arr:
    if type(element) == list:
      result += flatten_list(element)
    else:
      result.append(element)
  return result

arr = [[1,2,[3]],4]

print(flatten_list(arr)) # [1, 2, 3, 4]",Data Structure,5005,"def flatten_list___:
  result = []
  for element in arr:
    if type___ == list:
      result += flatten_list___
    else:
      result___element)
  return result

arr = [[1,2,___],4]

print___) # [1, 2, 3, 4]"
Write a Python program that prints a table of contents from a given list of headings.,"headings = [""Introduction"", ""Fundamentals"", ""Algorithms"", ""Design Patterns"", ""Conclusion""]","headings = [""Introduction"", ""Fundamentals"", ""Algorithms"", ""Design Patterns"", ""Conclusion""]

print(""Table of Contents"")
for i, heading in enumerate(headings):
  print(f""{i+1}.{heading}"")",Data Structure,5007,"headings = [""Introduction"", ""Fundamentals"", ""Algorithms"", ""Design Patterns"", ""Conclusion""]

print___
for i, heading in enumerate___:
  print(f""___.___"")"
Write a Python program to remove all duplicate elements in a given list.,"given_list = [1, 2, 3, 4, 3, 2, 1]","def remove_duplicates(given_list):
    output = []
    for num in given_list:
        if num not in output:
            output.append(num)
    return output",Data Structure,5009,"def remove_duplicates___:
    output = []
    for num in given_list:
        if num not in output:
            output___num)
    return output"
Create a function in Python to check if a given list of numbers is in ascending or descending order.,"[5, 3, 8, 6, 1]","def check_order(lst):
  ascending = all(lst[i] < lst[i+1] for i in range(len(lst)-1))
  descending = all(lst[i] > lst[i+1] for i in range(len(lst)-1))
  if ascending:
    return 'ascending'
  elif descending:
    return 'descending'
  else:
    return 'not ordered'",Data Structure,5010,"def check_order___:
  ascending = all___-1))
  descending = all___-1))
  if ascending:
    return 'ascending'
  elif descending:
    return 'descending'
  else:
    return 'not ordered'"
"Design an algorithm in Python, that takes an array and sort it in ascending order.","[10, 3, 9, 1, 15, 2]","def sort_ascending(array):
  array.sort()
  return array

sort_ascending([10, 3, 9, 1, 15, 2])  # [1, 2, 3, 9, 10, 15]",Data Structure,5011,"def sort_ascending___:
  array.sort()
  return array

sort_ascending___  # [1, 2, 3, 9, 10, 15]"
Edit an existing Python program to remove a specific element from the list.,"my_list = ['abc', '123', 'def', '345'] 
element = 'def'","my_list = ['abc', '123', '345']

if element in my_list:
    my_list.remove(element)",Data Structure,5017,"my_list = ['abc', '123', '345']

if element in my_list:
    my_list___element)"
Write a Python program that takes in a list of values and returns the maximum value.,"[1, 5, 2, 9, -2]","def get_maximum_value(lst):
    return max(lst)

print(get_maximum_value([1, 5, 2, 9, -2]))",Data Structure,5023,"def get_maximum_value___:
    return max___

print___)"
Create a code snippet in Python to sort the following array in ascending order.,"[5, 8, 2, 6]","def sort_ascending(arr):
    arr.sort()
    return arr

result = sort_ascending([5, 8, 2, 6])
print(result)",Data Structure,5025,"def sort_ascending___:
    arr.sort()
    return arr

result = sort_ascending___
print___"
Write a function in Python to remove the last element from a given array.,"[1, 6, 7, 3, 4]","def remove_last_element(arr):
  return arr[:-1]",Data Structure,5028,"def remove_last_element___:
  return arr[:-1]"
Write a Python program that processes a given list and returns a new list with all its duplicate elements removed.,"a = [1, 1, 2, 3, 3, 5]","def remove_duplicates(a):
    new_list = []
    for i in a:
        if i not in new_list:
            new_list.append(i)
    return new_list

a = [1, 1, 2, 3, 3, 5]
b = remove_duplicates(a)
print(b) 

# Output: [1, 2, 3, 5]",Data Structure,5038,"def remove_duplicates___:
    new_list = []
    for i in a:
        if i not in new_list:
            new_list___i)
    return new_list

a = ___
b = remove_duplicates___
print___ 

# Output: ___"
Write a Python function to convert a list of characters to their corresponding ASCII codes.,"[‘a’, ‘b’, ‘c’, ‘d’]","def to_ascii(arr):
    res = []
    for c in arr:
        res.append(ord(c))
    return res

print(to_ascii(['a', 'b', 'c', 'd']))",Data Structure,5043,"def to_ascii___:
    res = []
    for c in arr:
        res___ord(c))
    return res

print___)"
Generate a Python script to shuffle the elements in a list.,"Sample list [5, 2, 7, 1, 8]","import random

list = [5, 2, 7, 1, 8]
random.shuffle(list)

print(list) # Output -> [1, 8, 5, 2, 7]",Data Structure,5045,"import random

list = ___
random.shuffle___

print___ # Output -> [1, 8, 5, 2, 7]"
Write a Python function to insert an element in a given list after a given index.,"list = [1, 2, 3, 4, 5]
index = 2
element = 6","def insert_element(list, index, element):
    list.insert(index + 1, element)
    return list",Data Structure,5046,"def insert_element___:
    list___index + 1, element)
    return list"
Generate a function that can be used to sort a given Python list in ascending order,<No Input>,"def sort_asc(lis):
    for i in range(len(lis)):
        for j in range(i + 1, len(lis)):
            if lis[i] > lis[j]:
                lis[i], lis[j] = lis[j], lis[i] 
    return lis",Data Structure,5050,"def sort_asc___:
    for i in range___):
        for j in range___):
            if lis[i] > lis[j]:
                lis[i], lis[j] = lis[j], lis[i] 
    return lis"
"Given a list of numbers, write a Python program to check if any two numbers in the list add up to a given target number.","nums = [1, 4, -5, 3]
target = 2","def find_two_add_up_to_target(nums, target): 
    for num1 in nums:
        for num2 in nums:
            if num1 + num2 == target:
                return True
    return False",Data Structure,5051,"def find_two_add_up_to_target___: 
    for num1 in nums:
        for num2 in nums:
            if num1 + num2 == target:
                return True
    return False"
Develop a method in Python for removing all duplicate elements from an array.,"[1, 3, 5, 4, 6, 3, 5, 4]","def removeDuplicates(arr): 
    newArr = []
    for i in arr: 
        if i not in newArr: 
            newArr.append(i) 
    return newArr

arr = [1, 3, 5, 4, 6, 3, 5, 4]
result = removeDuplicates(arr)
print(result)",Data Structure,5055,"def removeDuplicates___: 
    newArr = []
    for i in arr: 
        if i not in newArr: 
            newArr___i) 
    return newArr

arr = ___
result = removeDuplicates___
print___"
Create a Python program to calculate the average of all the ratings in the given list of tuple.,"[(3, 4), (5, 5), (7, 3)]","def avg_rating(ratings):
    total = 0
    for rating in ratings:
        total += rating[0] + rating[1]
    return total / (len(ratings)*2)",Data Structure,5056,"def avg_rating___:
    total = 0
    for rating in ratings:
        total += rating___ + rating___
    return total / ___*2)"
Develop a function in Python that takes in a list and sorts the elements alphabetically.,"my_list = [""word"", ""translate"", ""language"", ""computer""]","def sort_list(my_list):
  my_list.sort()
  return my_list 

print(sort_list(my_list))",Data Structure,5057,"def sort_list___:
  my_list.sort()
  return my_list 

print___)"
Take the following Python code and refactor it using list comprehensions.,"arr = [1, 2, 3, 4, 5, 6] 
new_arr = [] 

for i in arr: 
    if i % 2 == 0: 
        new_arr.append(i**2)","arr = [1, 2, 3, 4, 5, 6] 
new_arr = [i**2 for i in arr if i % 2 == 0]",Data Structure,5058,"arr = ___ 
new_arr = [i**2 for i in arr if i % 2 == 0]"
"Create a Python script that given a list of numbers, multiplies each number by two and prints out the resulting list.","List: [1, 5, 8, 10]","def multiply_by_two(numbers):
result = []
for num in numbers:
 result.append(num * 2)
return result

numbers = [1, 5, 8, 10]
print(multiply_by_two(numbers))
# Outputs: [2, 10, 16, 20]",Data Structure,5063,"def multiply_by_two___:
result = []
for num in numbers:
 result___num * 2)
return result

numbers = ___
print___)
# Outputs: ___"
Design an algorithm in Python that takes in a list of numbers and prints out the first and last element in the list.,"lst=[5,3,1,7,9]","def first_last(lst):
    first_element = lst[0]
    last_element = lst[-1]
    return [first_element, last_element]

print(first_last([5,3,1,7,9]))",Data Structure,5065,"def first_last___:
    first_element = lst___
    last_element = lst[-1]
    return [first_element, last_element]

print___)"
Create a Python program that takes a list of strings and filters out strings that do not contain the letter 'a'.,"words = [""apple"", ""banana"", ""grape"", ""pear"", ""kiwi""]","# Filtering out strings without letter 'a'
filtered_words = [word for word in words if 'a' in word]

# Print the filtered list
print(filtered_words)
# Output: ['apple', 'banana', 'grape']",Data Structure,5068,"# Filtering out strings without letter 'a'
filtered_words = [word for word in words if 'a' in word]

# Print the filtered list
print___
# Output: ['apple', 'banana', 'grape']"
Generate code in Python to find all unique elements in a list.,"[1, 2, 5, 2, 4, 1]","original_list = [1, 2, 5, 2, 4, 1]
unique_list = []

for item in original_list:
    if item not in unique_list:
        unique_list.append(item)

print(unique_list)",Data Structure,5072,"original_list = ___
unique_list = []

for item in original_list:
    if item not in unique_list:
        unique_list___item)

print___"
Create a Python program that searches a list of words for a given pattern.,"words = [""cat"", ""dog"", ""mouse"", ""camel""]
pattern = ""ca*""","pattern = ""ca*""

found_words = []

for word in words:
    if fnmatch.fnmatch(word, pattern):
        found_words.append(word)

print(found_words)

# Output: [""cat"", ""camel""]",Data Structure,5078,"pattern = ""ca*""

found_words = []

for word in words:
    if fnmatch.fnmatch___:
        found_words___word)

print___

# Output: [""cat"", ""camel""]"
Write a Python program to detect duplicate values in a list.,"my_list = [1, 3, 5, 6, 3, 4, 7, 5]","seen = set()
duplicates = []
for item in my_list:
 if item in seen:
 duplicates.append(item)
 else:
 seen.add(item)

print(duplicates)
# Output: [3, 5]",Data Structure,5087,"seen = set()
duplicates = []
for item in my_list:
 if item in seen:
 duplicates___item)
 else:
 seen.add___

print___
# Output: ___"
Develop a function in Python which takes an input array of strings and returns a dictionary with the strings stored in their reverse order.,"[""Hello"", ""World""]","def reverseStrings(arr):
  revDict = {};
  for str in arr:
    revDict[str[::-1]] = str;
  return revDict;

reverseStrings([""Hello"", ""World""]); // Outputs: {'olleH': 'Hello', 'dlroW': 'World'}",Data Structure,5091,"def reverseStrings___:
  revDict = {};
  for str in arr:
    revDict[str[::-1]] = str;
  return revDict;

reverseStrings([""Hello"", ""World""]); // Outputs: ___"
Generate Python code to filter a given list of numbers such that only the odd numbers are removed.,"[1, 2, 3, 4, 5]","def filter_odd(list):
    return [num for num in list if num % 2 == 0]",Data Structure,5093,"def filter_odd___:
    return [num for num in list if num % 2 == 0]"
"Write a function in Python that takes a single argument, a list of numbers, and returns a single number - the sum of all the numbers in the list.","[1, 2, 3, 4, 5]","def add_list(numbers):
  total = 0
  for number in numbers:
      total += number
  return total",Data Structure,5094,"def add_list___:
  total = 0
  for number in numbers:
      total += number
  return total"
Create a Python script that finds the longest word in a given array of words.,"['Python', 'JavaScript', 'C++', 'Java', 'Kotlin']","#  find the longest word
def findLongestWord(arr):
  
 longestWord = """"
 
 for word in arr:
 if(len(word) > len(longestWord)):
 longestWord = word
 
 return longestWord

# Driver code
words = ['Python', 'JavaScript', 'C++', 'Java', 'Kotlin']
print(""Longest word in the array is ""+ findLongestWord(words))",Data Structure,5096,"#  find the longest word
def findLongestWord___:
  
 longestWord = """"
 
 for word in arr:
 if___ > len___):
 longestWord = word
 
 return longestWord

# Driver code
words = ['Python', 'JavaScript', 'C++', 'Java', 'Kotlin']
print___)"
Write a Python program to flatten a nested list.,"lst = [[1,2,3], [4,5], [6]]","def flatten_list(lst):
    return [item for sublist in lst for item in sublist]",Data Structure,5099,"def flatten_list___:
    return [item for sublist in lst for item in sublist]"
Create a python loop to reduce a list of data points to their averages.,"[1, 2, 3, 4]","def averageList(arr):
    '''This function takes in an array and returns the average of all elements'''
    # initialize sum
    s = 0
    # traverse the array
    for i in arr:
        s += i
    # calculate average
    avg = s / len(arr)
    # return the average
    return avg

# Test
arr = [1, 2, 3, 4]
print(averageList(arr))
# Output 2.5",Data Structure,5100,"def averageList___:
    '''This function takes in an array and returns the average of all elements'''
    # initialize sum
    s = 0
    # traverse the array
    for i in arr:
        s += i
    # calculate average
    avg = s / len___
    # return the average
    return avg

# Test
arr = ___
print___)
# Output 2.5"
Create a Python script to sort a list of integers from lowest to highest.,"[3, 5, 1, 7, 4, 2]","def sort_list(list):
  # loop through the list
  for i in range(len(list)):
    # find the smallest number in the list
    lowest = min(list[i:])
    # find its index
    lowest_index = list.index(lowest)
    # swap the numbers
    list[i], list[lowest_index] = list[lowest_index], list[i]
  # return the sorted list  
  return list

print(sort_list([3, 5, 1, 7, 4, 2]))",Data Structure,5104,"def sort_list___:
  # loop through the list
  for i in range___):
    # find the smallest number in the list
    lowest = min___
    # find its index
    lowest_index = list.index___
    # swap the numbers
    list[i], list[lowest_index] = list[lowest_index], list[i]
  # return the sorted list  
  return list

print___)"
Create a Python program that takes an array of numbers and returns the index of the first number that is the duplicate of an earlier encountered number.,"[5, 7, 9, 3, 1, 3]","def find_first_duplicate(arr):
    seen = dict()

    for i, n in enumerate(arr):
        if n in seen:
            return i
        else:
            seen[n] = True

    return -1

arr = [5, 7, 9, 3, 1, 3]
print(find_first_duplicate(arr))
# Output: 4",Data Structure,5115,"def find_first_duplicate___:
    seen = dict()

    for i, n in enumerate___:
        if n in seen:
            return i
        else:
            seen[n] = True

    return -1

arr = ___
print___)
# Output: 4"
Generate a python program to delete duplicate elements from the given array.,"Input: [1, 2, 3, 4, 4, 5, 6, 7, 8, 8]","def delete_duplicates(array):
    seen = set()
    non_duplicates = []
    for val in array:
        if val not in seen:
            non_duplicates.append(val)
            seen.add(val)
    return non_duplicates",Data Structure,5118,"def delete_duplicates___:
    seen = set()
    non_duplicates = []
    for val in array:
        if val not in seen:
            non_duplicates___val)
            seen.add___
    return non_duplicates"
Create a Python program to detect cycles in a given array.,"array = [2, 4, 5, -1, 7, -1, 5]","def is_cycle_detected(array):
    # create a set to store visited indices
    visited = set()
    for i, num in enumerate(array):
        # check if num has been visited
        if i in visited or num not in visited:
            return False
        # mark the index as visited
        visited.add(i)
    return True",Data Structure,5120,"def is_cycle_detected___:
    # create a set to store visited indices
    visited = set()
    for i, num in enumerate___:
        # check if num has been visited
        if i in visited or num not in visited:
            return False
        # mark the index as visited
        visited.add___
    return True"
Develop a Python script to sort a given list of names alphabetically.,"[John, Harry, Robert]","def sort_names(names):
    names.sort()
    return names

names = [""John"", ""Harry"", ""Robert""]
result = sort_names(names)
print(result)",Data Structure,5127,"def sort_names___:
    names.sort()
    return names

names = [""John"", ""Harry"", ""Robert""]
result = sort_names___
print___"
Create an Python program that takes a list of words as input and prints out the longest word.,"words = [""cat"", ""dog"", ""elephant"", ""rhinoceros""]","words = [""cat"", ""dog"", ""elephant"", ""rhinoceros""]

def longest_word(words):
 longest_word = """"
 
 for word in words:
 if len(longest_word) < len(word):
 longest_word = word

 print(longest_word)

longest_word(words)",Data Structure,5130,"words = [""cat"", ""dog"", ""elephant"", ""rhinoceros""]

def longest_word___:
 longest_word = """"
 
 for word in words:
 if len___ < len___:
 longest_word = word

 print___

longest_word___"
Write a python program to sort a list of dictionaries based on a particular key.,"list_of_dicts = [{'name': 'Ajay', 'age': 15}, 
                 {'name': 'Bhavna', 'age': 10}, 
                 {'name': 'Cathy', 'age': 12}]","def sort_list_of_dicts(list_of_dicts, key):
    sorted_list = sorted(list_of_dicts, key=lambda i: i[key])
    return sorted_list",Data Structure,5131,"def sort_list_of_dicts___:
    sorted_list = sorted___
    return sorted_list"
Develop a function in Python to convert a given list to a dictionary.,"list = [1,2,3,4,5,6]","def convert_list_to_dict(list):
    final_dict = {}

    for index, value in enumerate(list):
        final_dict.update({index: value})

    return final_dict

list = [1,2,3,4,5,6]
list_dict = convert_list_to_dict(list)
print(list_dict)",Data Structure,5132,"def convert_list_to_dict___:
    final_dict = {}

    for index, value in enumerate___:
        final_dict.update(___)

    return final_dict

list = ___
list_dict = convert_list_to_dict___
print___"
"Using Python, find the mean of a randomly generated array of integers of size 10.","array = [61, 28, 79, 75, 73, 89, 81, 92, 83, 10]","import numpy as np

def get_mean(array):
    '''This function returns the mean of the given array of integers.'''
    array = np.array(array)
    return np.mean(array)

if __name__ == '__main__':
    array = [61, 28, 79, 75, 73, 89, 81, 92, 83, 10]
    mean = get_mean(array)
    print(mean) # 63.2",Data Structure,5138,"import numpy as np

def get_mean___:
    '''This function returns the mean of the given array of integers.'''
    array = np.array___
    return np.mean___

if __name__ == '__main__':
    array = ___
    mean = get_mean___
    print___ # 63.2"
"Using the data structure provided below, create a Python program to sort a list of numbers in descending order.","numbers = [23, 45, 56, 78, 33, 19, 20]","def sort_descending(numbers): 
    numbers.sort(reverse=True) 
    return numbers 

print(sort_descending(numbers))",Data Structure,5139,"def sort_descending___: 
    numbers.sort___ 
    return numbers 

print___)"
Write an efficient Python program to find the second largest element in an array.,"[14, 46, 47, 86, 92, 52, 48, 36, 66, 85]","def secondLargestElement(arr):
  # Sort the array in ascending order 
  arr.sort() 
    
  # Return the second last element 
  return arr[-2] 

# Driver code 
arr = [14, 46, 47, 86, 92, 52, 48, 36, 66, 85] 

print(secondLargestElement(arr))",Data Structure,5140,"def secondLargestElement___:
  # Sort the array in ascending order 
  arr.sort() 
    
  # Return the second last element 
  return arr[-2] 

# Driver code 
arr = ___ 

print___)"
Create a function in Python for calculating the maximum value in an array.,example array,"def get_max(arr):
 m = arr[0]
 for val in arr:
 if val > m:
 m = val
 return m

# example
arr = [1, 2, 3, 4]
print(get_max(arr)) # 4",Data Structure,5143,"def get_max___:
 m = arr___
 for val in arr:
 if val > m:
 m = val
 return m

# example
arr = ___
print___) # 4"
Generate a function in Python to determine the largest element in an array.,"[3, 2, 1, 4, 5]","def find_max(arr):
 max_val = arr[0]
 for num in arr:
 if num > max_val:
 max_val = num
 return max_val

array = [3, 2, 1, 4, 5]
print(find_max(array))",Data Structure,5150,"def find_max___:
 max_val = arr___
 for num in arr:
 if num > max_val:
 max_val = num
 return max_val

array = ___
print___)"
Create a Python script that finds the median value in an unsorted list of numbers.,"[3, 4, 1, 2, 5]","def median(nums):
 sorted_list = sorted(nums)
 if len(sorted_list) % 2 == 0:
 mid = int(len(sorted_list) / 2)
 return (sorted_list[mid] + sorted_list[mid-1]) / 2
 else:
 return sorted_list[int(len(sorted_list)/2)]

median([3, 4, 1, 2, 5]) # Output: 3.0",Data Structure,5153,"def median___:
 sorted_list = sorted___
 if len___ % 2 == 0:
 mid = int___ / 2)
 return ___ / 2
 else:
 return sorted_list[int___/2)]

median___ # Output: 3.0"
Create Python code to sum all the values in a list?,"[1,2,3,4,5]","def sum_list(l):
    '''This function returns the sum of all the values in a list'''
    sum = 0
    for val in l:
        sum = sum + val
    return sum",Data Structure,5154,"def sum_list___:
    '''This function returns the sum of all the values in a list'''
    sum = 0
    for val in l:
        sum = sum + val
    return sum"
Create a Python program to find the longest element in the list.,"[1, 5, 4, 3, 9, 8]","def find_longest(arr): 
    longest = 0
    for item in arr: 
        longest = max(len(str(item)), longest) 
    return longest
    
if __name__ == ""__main__"": 
    list = [1, 5, 4, 3, 9, 8]
    print(find_longest(list))",Data Structure,5158,"def find_longest___: 
    longest = 0
    for item in arr: 
        longest = max___), longest) 
    return longest
    
if __name__ == ""__main__"": 
    list = ___
    print___)"
Produce a unit test report in Python for a program to find the mean of an array.,"Sample array: [1, 2, 3, 4, 5]","import unittest

def calculate_mean(numbers):
    return sum(numbers)/len(numbers)

class MeanCalculationTest(unittest.TestCase):
    def setUp(self):
        self.sample_array = [1, 2, 3, 4, 5]

    def test_mean_calculation(self):
        self.assertEqual(calculate_mean(self.sample_array), 3)

if __name__ == '__main__':
    unittest.main()",Data Structure,5161,"import unittest

def calculate_mean___:
    return sum___/len___

class MeanCalculationTest___:
    def setUp___:
        self.sample_array = ___

    def test_mean_calculation___:
        self.assertEqual___, 3)

if __name__ == '__main__':
    unittest.main()"
"Given an array of integers, sort the array in ascending order using a Python program.","[5,3,7,1,9]","def sort_asc(arr):
    for i in range(len(arr)):
        for j in range(i+1,len(arr)):
            if arr[i] > arr[j]:
                arr[i], arr[j] = arr[j], arr[i]
    return arr

print(sort_asc([5,3,7,1,9]))",Data Structure,5163,"def sort_asc___:
    for i in range___):
        for j in range___):
            if arr[i] > arr[j]:
                arr[i], arr[j] = arr[j], arr[i]
    return arr

print___)"
Write a Python program to find the maximum number in a list of numbers.,"[1, 9, 5, 18, 21, 2]","def find_max(nums):
  max_num = nums[0]
  for x in nums:
    if x > max_num:
      max_num = x
  return max_num

print(find_max([1,9,5,18,21,2]))",Data Structure,5165,"def find_max___:
  max_num = nums___
  for x in nums:
    if x > max_num:
      max_num = x
  return max_num

print___)"
Write a python program that finds a maximum subarray from a given list of integers.,"numbers=[-2,1,-3,4,-1,2,1,-5,4]","def max_subarray(numbers): 
    max_so_far = max_ending_here = numbers[0] 
    for i in range(1,len(numbers)): 
        max_ending_here = max(numbers[i], max_ending_here + numbers[i]) 
        max_so_far = max(max_so_far, max_ending_here) 
    return max_so_far",Data Structure,5168,"def max_subarray___: 
    max_so_far = max_ending_here = numbers___ 
    for i in range___): 
        max_ending_here = max___ 
        max_so_far = max___ 
    return max_so_far"
Sort a given array of integers in Python.,"arr = [1, 10, 5, 8, 7]","arr.sort() 
# arr is now [1, 5, 7, 8, 10]",Data Structure,5169,"arr.sort() 
# arr is now ___"
Write a python program to check if a given array A is a subset of another array B,"A = [4, 6, 8]
B = [1, 4, 6, 8, 9, 10]","def is_subset(A, B):
    # Iterate through A
    for elem in A:
        # Check if the element is in B 
        if elem not in B:
            # If not, return False
            return False

    # If we reach here, all the elements of A
    # were present in B, so return True 
    return True",Data Structure,5170,"def is_subset___:
    # Iterate through A
    for elem in A:
        # Check if the element is in B 
        if elem not in B:
            # If not, return False
            return False

    # If we reach here, all the elements of A
    # were present in B, so return True 
    return True"
Generate a python function that computes the standard deviation of an array of numbers.,"[12,14,11,20,13]","def compute_std_dev(values):
  n = len(values)
  mean = 0
  for i in range(n):
    mean += values[i]
  mean /= n
  std_dev = 0
  for i in range(n):
    std_dev += (values[i] - mean)**2
  std_dev /= n
  return std_dev**(1/2)
#Example:
compute_std_dev([12,14,11,20,13])
#Output: 3.067",Data Structure,5175,"def compute_std_dev___:
  n = len___
  mean = 0
  for i in range___:
    mean += values[i]
  mean /= n
  std_dev = 0
  for i in range___:
    std_dev += ___**2
  std_dev /= n
  return std_dev**___
#Example:
compute_std_dev___
#Output: 3.067"
Generate a valid Python program that finds all the odd numbers in a given list of integers.,"[1, 2, 3, 4, 5, 6]","def find_odds(nums):
  result = []
  for num in nums:
    if num % 2 == 1:
      result.append(num)
  return result

odd_nums = find_odds([1, 2, 3, 4, 5, 6])
print(odd_nums)",Data Structure,5178,"def find_odds___:
  result = []
  for num in nums:
    if num % 2 == 1:
      result___num)
  return result

odd_nums = find_odds___
print___"
"Using the input provided, make a program to sort a given array in ascending order in Python.","arr = [9, 4, 7, 2, 3]","def insertionSort(arr): 
    for i in range(1, len(arr)): 
        key = arr[i] 
        j = i-1
        while j >=0 and key < arr[j] : 
                arr[j+1] = arr[j] 
                j -= 1
        arr[j+1] = key 

arr = [9, 4, 7, 2, 3]
insertionSort(arr) 
print (""Sorted array is:"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i]),",Data Structure,5182,"def insertionSort___: 
    for i in range___): 
        key = arr[i] 
        j = i-1
        while j >=0 and key < arr[j] : 
                arr[j+1] = arr[j] 
                j -= 1
        arr[j+1] = key 

arr = ___
insertionSort___ 
print ___ 
for i in range___): 
    print ___,"
Generate a Python script to randomly select k elements from a list.,"An array with 6 values: [11, 22, 7, 12, 3, 8] and k=3","import random

# Initialize the array
array = [11, 22, 7, 12, 3, 8]
k = 3

# Randomly select k elements from array
selected = random.sample(array, k)

# Output the result
print(f'Randomly selected {k} elements: {selected}')",Data Structure,5183,"import random

# Initialize the array
array = ___
k = 3

# Randomly select k elements from array
selected = random.sample___

# Output the result
print(f'Randomly selected ___ elements: ___')"
Write a Python script to organize a given list of data of students alphabetically.,"student_list = [""John"", ""Amy"", ""Robert"", ""Lisa"", ""Samantha""]","def sort_alphabetically(students):
   return sorted(students)",Data Structure,5184,"def sort_alphabetically___:
   return sorted___"
Write a Python program to convert a list of numbers into a single number by subtracting the sum of all numbers in the list from the first element.,"list1 = [5, 3, 2, 1]","def list_to_number(list1):
    result = list1[0]
    for i in range(1, len(list1)):
        result -= list1[i]
    return result",Data Structure,5185,"def list_to_number___:
    result = list1___
    for i in range___):
        result -= list1[i]
    return result"
"Write a python program to create an array of length n, where each element is a random number between 0 and 10.",n = 10,"import random

array_length = 10

my_array = [random.randint(0, 10) for _ in range(array_length)]

print(my_array)",Data Structure,5186,"import random

array_length = 10

my_array = [random.randint___ for _ in range___]

print___"
"Create a program in Python which takes a list of tuples as an input, and prints true if it contains two elements that sum to 10.","[(2, 8), (4, 6), (7, 3)]","def checkSum(arr):
    for (a, b) in arr:
        if a + b == 10:
            return True
    return False

arr = [(2, 8), (4, 6), (7, 3)]

print(checkSum(arr)) # True",Data Structure,5189,"def checkSum___:
    for ___ in arr:
        if a + b == 10:
            return True
    return False

arr = [___, ___, ___]

print___) # True"
Write a Python program to remove consecutive sequences of duplicates from the given list,"list = [0, 0, 0, 1, 2, 0, 2, 0]","def remove_duplicates(list):
    new_list = []
    previous_item = None
    for item in list:
        if item != previous_item:
            new_list.append(item)
        previous_item = item
    return new_list

new_list = remove_duplicates(list)
print(new_list)",Data Structure,5194,"def remove_duplicates___:
    new_list = []
    previous_item = None
    for item in list:
        if item != previous_item:
            new_list___item)
        previous_item = item
    return new_list

new_list = remove_duplicates___
print___"
"Given an email list, write a python program to sort the list alphabetically","['bob@example.com', 'alice@example.com', 'jane@google.com', 'mary@example.com']","def sort_list(list_of_emails):
    list_of_emails.sort()
    return list_of_emails

print(sort_list(['bob@example.com', 'alice@example.com', 'jane@google.com', 'mary@example.com']))",Data Structure,5197,"def sort_list___:
    list_of_emails.sort()
    return list_of_emails

print___)"
Build a Python code to convert a list to a dictionary using the list values as the keys.,"my_list = [""This"", ""is"", ""a"", ""list""]","my_dict = {}
for item in my_list:
    my_dict[item] = None

print(my_dict)",Data Structure,5198,"my_dict = {}
for item in my_list:
    my_dict[item] = None

print___"
Use a recursive algorithm in Python to calculate the sum of a given array.,"array1 = [1, 2, 3, 4, 5]","def array_sum(arr):
  if len(arr) == 1:
    return arr[0]
  else:
    return arr[0] + array_sum(arr[1:])

#Driver code
print(array_sum(array1)) #prints 15",Data Structure,5199,"def array_sum___:
  if len___ == 1:
    return arr___
  else:
    return arr[0] + array_sum___

#Driver code
print___) #prints 15"
Write a python script that calculate the sum of an array,"The array is [-3,9,2,1].","def array_sum(arr):
  sum_arr = 0
  for _ in range(len(arr)):
    sum_arr += arr[_]
  return sum_arr

print(array_sum([-3,9,2,1]))",Data Structure,5203,"def array_sum___:
  sum_arr = 0
  for _ in range___):
    sum_arr += arr[_]
  return sum_arr

print___)"
Rewrite the following Python code by introducing list comprehensions.,"even_numbers = []
for i in range(1,21):
    if i % 2 == 0:
        even_numbers.append(i)","even_numbers = [i for i in range(1, 21) if i % 2 == 0]",Data Structure,5204,even_numbers = [i for i in range___ if i % 2 == 0]
Write a Python program that takes a list of numbers as an argument and prints the count of all even and odd numbers.,"[2, 9, 4, 8, 0, 7, 1]","def countNumbers(nums):
 evenCount = 0
 oddCount = 0
 
 for num in nums:
 if num % 2 == 0:
 evenCount += 1
 else:
 oddCount += 1
 
 return (evenCount, oddCount)

nums = [2, 9, 4, 8, 0, 7, 1]
evenCount, oddCount = countNumbers(nums)

print(""Even numbers:"", evenCount)
print(""Odd numbers:"", oddCount) 
# Even numbers: 4
# Odd numbers: 3",Data Structure,5208,"def countNumbers___:
 evenCount = 0
 oddCount = 0
 
 for num in nums:
 if num % 2 == 0:
 evenCount += 1
 else:
 oddCount += 1
 
 return ___

nums = ___
evenCount, oddCount = countNumbers___

print___
print___ 
# Even numbers: 4
# Odd numbers: 3"
"Given a 2D array of integers, write a Python code snippet to rotate the array by 90 degrees.","arr = [[0, 1, 2], 
       [3, 4, 5],
       [6, 7, 8]]","def rotate90(arr):
    N = len(arr[0])
    rotate_matrix = [[0 for x in range(N)] for y in range(N)]

    for x in range(N):
        for y in range(N):
            rotate_matrix[y][N-1-x] = arr[x][y]
    return rotate_matrix",Data Structure,5210,"def rotate90___:
    N = len___
    rotate_matrix = [[0 for x in range___] for y in range___]

    for x in range___:
        for y in range___:
            rotate_matrix[y][N-1-x] = arr[x][y]
    return rotate_matrix"
Write an efficient algorithm in Python to find the second smallest number in an array.,"[9, 7, 4, 8, 2]","def find_second_smallest(arr):
    smallest = arr[0]
    second_smallest = None
    for i in range(1, len(arr)):
        if arr[i] < smallest:
            second_smallest = smallest
            smallest = arr[i]
    return second_smallest

arr = [9, 7, 4, 8, 2]

second_smallest = find_second_smallest(arr)

print(""Second smallest number is:"", second_smallest) # Output is 7",Data Structure,5212,"def find_second_smallest___:
    smallest = arr___
    second_smallest = None
    for i in range___):
        if arr[i] < smallest:
            second_smallest = smallest
            smallest = arr[i]
    return second_smallest

arr = ___

second_smallest = find_second_smallest___

print___ # Output is 7"
Write a python program to filter a list of numbers by removing duplicate items.,"A list of numbers: [1,2,3,4,5,2,3]","# Create an empty set
result = set()
nums = [1,2,3,4,5,2,3]

# Iterate over the list
for num in nums:
 # Add each item to the set if it is not already present
 if num not in result:
  result.add(num)

# Print the resulting list
print(list(result)) #[1, 2, 3, 4, 5]",Data Structure,5213,"# Create an empty set
result = set()
nums = ___

# Iterate over the list
for num in nums:
 # Add each item to the set if it is not already present
 if num not in result:
  result.add___

# Print the resulting list
print___) #[1, 2, 3, 4, 5]"
Design a program in Python to sort a list of tuples based on the value the tuples contain.,"tuples = [('a', 4), ('c', 2), ('b', 3)]","def sort_tuples(tuples):
    return sorted(tuples, key=lambda x: x[1])

sorted_tuples = sort_tuples(tuples)
print(sorted_tuples) # Outputs [('c', 2), ('b', 3), ('a', 4)]",Data Structure,5216,"def sort_tuples___:
    return sorted___

sorted_tuples = sort_tuples___
print___ # Outputs [___, ___, ___]"
Write a function in Python to compute the sum of the given list of numbers.,"[1, 24, 47, 98, 22, 45]","def sum_list(nums):
 sum = 0
 for n in nums:
  sum += n
 return sum

result = sum_list([1, 24, 47, 98, 22, 45])
print(""Sum of the list is"", result)",Data Structure,5219,"def sum_list___:
 sum = 0
 for n in nums:
  sum += n
 return sum

result = sum_list___
print___"
Construct a Python program that computes the maximum of a given list of numbers.,"[5, 6, 7, -2, 3]","def max_number(num_list):
 max = num_list[0]
 for num in num_list:
 if num > max:
   max = num
 return max

print(max_number([5, 6, 7, -2, 3]))",Data Structure,5220,"def max_number___:
 max = num_list___
 for num in num_list:
 if num > max:
   max = num
 return max

print___)"
Construct a python program to create a unique list from a given one,"list = [2, 3, 3, 5, 6, 7]","result = [] 
for x in list: 
    if x not in result: 
        result.append(x) 
print(result)",Data Structure,5227,"result = [] 
for x in list: 
    if x not in result: 
        result___x) 
print___"
Generate a program in Python that takes as input an array of numbers and returns the sum of all numbers in the array.,"[2, 3, 4]","def sum_elements(nums):
    """"""Given an array of number, return the sum of all elements in the array """"""
    result = 0
    for num in nums:
        result += num
    return result

print(sum_elements([2,3,4]))",Data Structure,5228,"def sum_elements___:
    """"""Given an array of number, return the sum of all elements in the array """"""
    result = 0
    for num in nums:
        result += num
    return result

print___)"
Create a Python program to calculate the median value of an array.,"nums = [1, 5, 9, 11, 16, 21]","def median(nums): 
    if len(nums)%2 == 0: 
        median1 = nums[int((len(nums)-1)/2)] 
        median2 = nums[int((len(nums))/2)] 
        median = (median1 + median2)/2
    else: 
        median = nums[int((len(nums))/2)]
    return median 
  
nums = [1, 5, 9, 11, 16, 21]
 print(median(nums))",Data Structure,5235,"def median___: 
    if len___%2 == 0: 
        median1 = nums[int___-1)/2)] 
        median2 = nums[int___)/2)] 
        median = ___/2
    else: 
        median = nums[int___)/2)]
    return median 
  
nums = ___
 print___)"
Write a function in Python that chooses a random element from a list.,"[1, 2, 3, 4, 5]","import random 
  
def randomElement(list): 
    return random.choice(list) 

print(randomElement([1,2,3,4,5]))",Data Structure,5237,"import random 
  
def randomElement___: 
    return random.choice___ 

print___)"
Develop a Python program to remove duplicates from a list of integers.,"arr = [1, 4, 2, 1, 7, 4, 4, 5, 7]","def remove_duplicates(arr):
    seen = set()
    for elem in arr:
        if elem not in seen:
            seen.add(elem)
    return list(seen)",Data Structure,5238,"def remove_duplicates___:
    seen = set()
    for elem in arr:
        if elem not in seen:
            seen.add___
    return list___"
Create a function in Python to produce a list of all combinations of given elements from two different lists.,"list_1 = [1, 2 , 3] 
list_2 = [4, 5]","def get_combos(list1, list2):
    combo_list = []
    for i in list1:
        for j in list2:
            combo_list.append([i, j]) 
    return combo_list

list1 = [1, 2, 3] 
list2 = [4, 5]

combos = get_combos(list1, list2)  
print(combos)

# Output: [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]",Data Structure,5239,"def get_combos___:
    combo_list = []
    for i in list1:
        for j in list2:
            combo_list___[i, j]) 
    return combo_list

list1 = ___ 
list2 = ___

combos = get_combos___  
print___

# Output: [___, ___, ___, ___, ___, ___]"
Write a Python script to find the average of numbers stored in an array.,"[10, 20, 30]","def calculate_mean(numbers):
    total_sum = 0
    for num in numbers:
        total_sum += num
    mean = total_sum / len(numbers)
    return mean

print(calculate_mean([10, 20, 30]))",Data Structure,5241,"def calculate_mean___:
    total_sum = 0
    for num in numbers:
        total_sum += num
    mean = total_sum / len___
    return mean

print___)"
Generate a function in Python to sort a given list of strings by their length.,"['cat', 'dog', 'goat', 'tiger', 'bird']","def sortByLength(strings):
    return sorted(strings, key=len)

strings = ['cat', 'dog', 'goat', 'tiger', 'bird']

print(sortByLength(strings)) # Output: ['cat', 'dog', 'goat', 'bird', 'tiger']",Data Structure,5245,"def sortByLength___:
    return sorted___

strings = ['cat', 'dog', 'goat', 'tiger', 'bird']

print___) # Output: ['cat', 'dog', 'goat', 'bird', 'tiger']"
Generate Python code that uses a list comprehension to take a given list of numbers and multiple each by 10.,"[1,2,3,4]","[x * 10 for x in [1,2,3,4]]",Data Structure,5251,[x * 10 for x in ___]
Convert this Python list to a JSON object.,"['Apple', 'Banana', 'Coconut']","import json

inputList = ['Apple', 'Banana', 'Coconut']
jsonObj = json.dumps(inputList)
print(jsonObj)",Data Structure,5253,"import json

inputList = ['Apple', 'Banana', 'Coconut']
jsonObj = json.dumps___
print___"
Develop a Python program to create a frequency table for an array of integer elements.,"arr = [1,1,3,5,3,3,5]","from collections import Counter

def frequency(arr):
    """"""
    Develop a Python program to create a frequency table for an array of integer elements
    """"""
    return Counter(arr)

if __name__ == '__main__':
    arr = [1,1,3,5,3,3,5] 
    print(frequency(arr))",Data Structure,5258,"from collections import Counter

def frequency___:
    """"""
    Develop a Python program to create a frequency table for an array of integer elements
    """"""
    return Counter___

if __name__ == '__main__':
    arr = ___ 
    print___)"
Build a Python program that finds the smallest number divisible by all the numbers in a given list,"numbers in the list : 2, 4, 8","def smallest_multiple(arr):
  min_num = min(arr)
  multiple = min_num

  while True:
    for x in arr:
      if multiple % x != 0:
        break
    else:
      return multiple
    multiple += min_num",Data Structure,5260,"def smallest_multiple___:
  min_num = min___
  multiple = min_num

  while True:
    for x in arr:
      if multiple % x != 0:
        break
    else:
      return multiple
    multiple += min_num"
Create a Python function which takes a numerical list as an input and returns the list with each item multiplied by two.,"mylist = [1, 4, 5, 12]","def multiply_by_two(mylist):
    new_list = []
    for item in mylist:
        new_list.append(item * 2)
    return new_list",Data Structure,5261,"def multiply_by_two___:
    new_list = []
    for item in mylist:
        new_list___item * 2)
    return new_list"
Create an algorithm in Python that takes an array of strings and removes all duplicates,"['Apple', 'Orange', 'Apple', 'Mango', 'Banana', 'Mango']","input_array = ['Apple', 'Orange', 'Apple', 'Mango', 'Banana', 'Mango']

unique_array = []
for item in input_array:
 if item not in unique_array:
 unique_array.append(item)

print(unique_array) #['Apple', 'Orange', 'Mango', 'Banana']",Data Structure,5262,"input_array = ['Apple', 'Orange', 'Apple', 'Mango', 'Banana', 'Mango']

unique_array = []
for item in input_array:
 if item not in unique_array:
 unique_array___item)

print___ #['Apple', 'Orange', 'Mango', 'Banana']"
Write a Python program to split a list into different variables,"my_list = [""Hello"", ""World"", 42]","value1, value2, value3 = my_list
print(value1)
print(value2)
print(value3)",Data Structure,5263,"value1, value2, value3 = my_list
print___
print___
print___"
Write a Python program to sort a list of tuples by their second element.,"[(1, 3), (3, 2), (4, 1), (2, 4)]","def sortBySecondElement(lst):
    # Sort the list of tuples by their second elements
    return sorted(lst, key=lambda x : x[1])

# Testing
lst = [(1, 3), (3, 2), (4, 1), (2, 4)]

sortedLst = sortBySecondElement(lst)

print(sortedLst)

# Output
# [(4, 1), (3, 2), (1, 3), (2, 4)]",Data Structure,5267,"def sortBySecondElement___:
    # Sort the list of tuples by their second elements
    return sorted___

# Testing
lst = [___, ___, ___, ___]

sortedLst = sortBySecondElement___

print___

# Output
# [___, ___, ___, ___]"
Write a Python program to create a list of tuples from two lists of equal length with each element in the tuple being the sum of the two corresponding elements in the lists.,"list1 = [1, 2, 3, 4]
list2 = [4, 3, 2, 1]","tuple_list = list(zip(list1, list2)) 
sum_list = [(x + y) for (x, y) in tuple_list]",Data Structure,5268,"tuple_list = list___) 
sum_list = [___ for ___ in tuple_list]"
Create a Python script to detect any missing numbers in a given sorted array and return the missing numbers.,"[2, 3, 5, 6, 7, 8, 10]","def missingNumbers(arr):
        start = arr[0]
        end = arr[len(arr)-1]
        
        result = []
        
        for i in range(start, end+1):
            if i not in arr:
                result.append(i)
                
        return result

# Test Case
arr = [2, 3, 5, 6, 7, 8, 10]
print(missingNumbers(arr))

# Output:
# [4, 9]",Data Structure,5269,"def missingNumbers___:
        start = arr___
        end = arr[len___-1]
        
        result = []
        
        for i in range___:
            if i not in arr:
                result___i)
                
        return result

# Test Case
arr = ___
print___)

# Output:
# ___"
Create a Python script to extract all emails from a given list of web urls.,"urls: [""http://example.com"", ""http://example.org""]","import re
import requests

urls = [""http://example.com"", ""http://example.org""]

for url in urls:
 r = requests.get(url)
 emails = re.findall(r'[\w\.-]+@[\w\.-]+', r.text)
 print(emails)",Data Structure,5272,"import re
import requests

urls = [""http://example.com"", ""http://example.org""]

for url in urls:
 r = requests.get___
 emails = re.findall___
 print___"
Create a Python script which takes a list containing items and their prices and calculates the total cost.,"[('Bread', 5.99), ('Cheese', 4.99), ('Milk', 2.99)]","total = 0
items_with_price = [('Bread', 5.99), ('Cheese', 4.99), ('Milk', 2.99)]

for item, price in items_with_price:
 total += price

print(f'The total cost is ${total}')",Data Structure,5274,"total = 0
items_with_price = [___, ___, ___]

for item, price in items_with_price:
 total += price

print(f'The total cost is $___')"
Write a Python script to implement the quick sort algorithm on a list.,"[5, 4, 2, 1, 3]","def quick_sort(array):
    if len(array) < 2:
        return array
    pivot = array[0]
    less = [i for i in array[1:] if i <= pivot]
    greater = [i for i in array[1:] if i > pivot]
    return quick_sort(less) + [pivot] + quick_sort(greater)",Data Structure,5275,"def quick_sort___:
    if len___ < 2:
        return array
    pivot = array___
    less = [i for i in array[1:] if i <= pivot]
    greater = [i for i in array[1:] if i > pivot]
    return quick_sort___ + [pivot] + quick_sort___"
Develop a Python program that finds the maximum value in a given array.,"[1, 2, 7, 4, 5]","def findMax(arr):
  max = arr[0]
  for i in range(1, len(arr)):
    if max < arr[i]:
      max = arr[i]
  return max

max_num = findMax([1,2,7,4,5])
print(max_num)",Data Structure,5282,"def findMax___:
  max = arr___
  for i in range___):
    if max < arr[i]:
      max = arr[i]
  return max

max_num = findMax___
print___"
Write a Python script to calculate the sum of all the element of a given list.,"my_list = [3, 5, 6, 7]","def my_function(my_list):
    #code
    return sum(my_list)",Data Structure,5283,"def my_function___:
    #code
    return sum___"
Write a python script to compute the average value in an array.,"values = [2,4,6,8,10]","# Funciton to compute the average value in an array
def computeAverage(values):
 # Initialize sum
 sum = 0
 
 # Iterate through values
 for value in values:
 sum+=value
 
 # Compute average
 average = sum / len(values)
 
 # Return average
 return average
 
# Call function
computeAverage(values); // Returns 6.0",Data Structure,5285,"# Funciton to compute the average value in an array
def computeAverage___:
 # Initialize sum
 sum = 0
 
 # Iterate through values
 for value in values:
 sum+=value
 
 # Compute average
 average = sum / len___
 
 # Return average
 return average
 
# Call function
computeAverage___; // Returns 6.0"
Edit the following python class so that it is a singly linked list.,"class Node:
    def __init__(self, data):
        self.data = data
        self.prev = None
        self.next = None","class Node:
    def __init__(self, data):
        self.data = data
        self.next = None",Data Structure,5288,"class Node:
    def __init_____:
        self.data = data
        self.next = None"
Write a Python program that takes a list of words and returns a dictionary where the keys are the words and the values are the lengths of the words.,"words = ['cat', 'dog', 'kangaroo', 'tiger']","def word_lengths(words):
    lengths = {}
    for word in words:
        lengths[word] = len(word)
    return lengths

result = word_lengths(['cat', 'dog', 'kangaroo', 'tiger'])
print(result)",Data Structure,5290,"def word_lengths___:
    lengths = {}
    for word in words:
        lengths[word] = len___
    return lengths

result = word_lengths___
print___"
Create a Python program to find the the largest and smallest in a list,"numbers = [234, 534, 123, 42, 56, 1, 234]","def find_limits(numbers):
    largest = numbers[0]
    smallest = numbers[0]
    for num in numbers:
        if num > largest:
            largest = num
        if num < smallest:
            smallest = num
    
    return largest, smallest",Data Structure,5292,"def find_limits___:
    largest = numbers___
    smallest = numbers___
    for num in numbers:
        if num > largest:
            largest = num
        if num < smallest:
            smallest = num
    
    return largest, smallest"
Create an API in Python to list out all directories and subdirectories from a given path.,'C://Users/Username/Documents',"import os

def listDirectories(path):
    dirs = os.listdir(path)
    for dir in dirs:
        print(os.path.join(path, dir))
        if os.path.isdir(os.path.join(path, dir)):
            listDirectories(os.path.join(path, dir))",Data Structure,5295,"import os

def listDirectories___:
    dirs = os.listdir___
    for dir in dirs:
        print___)
        if os.path.isdir___):
            listDirectories___)"
Create a Python program that takes in a list of numbers and finds the closest number to a given number.,"[2, 4, 7, 8], 5","def find_closest(nums, target):
 closest_num = float('inf')
 for num in nums:
  if abs(target - num) < abs(target - closest_num):
   closest_num = num
 return closest_num

nums = [2, 4, 7, 8]
target = 5

print(find_closest(nums, target))",Data Structure,5296,"def find_closest___:
 closest_num = float___
 for num in nums:
  if abs___ < abs___:
   closest_num = num
 return closest_num

nums = ___
target = 5

print___)"
Write a function in Python which takes in a list of numbers and returns the most common element in the list.,"mylist = [3, 8, 8, 2, 4]","def most_common(mylist):
    return max(set(mylist), key = mylist.count)",Data Structure,5298,"def most_common___:
    return max___, key = mylist.count)"
Write a Python program to find the second highest number in the given list.,"[8,9,1,5,7]","def find_second_highest_num(nums):
    first_max = nums[0]
    second_max = float('-inf')
    for num in nums:
        if num > first_max:
            second_max = first_max
            first_max = num 
        if num < first_max and num > second_max:
            second_max = num
    return second_max

nums = [8,9,1,5,7]

print(find_second_highest_num(nums))",Data Structure,5300,"def find_second_highest_num___:
    first_max = nums___
    second_max = float___
    for num in nums:
        if num > first_max:
            second_max = first_max
            first_max = num 
        if num < first_max and num > second_max:
            second_max = num
    return second_max

nums = ___

print___)"
Compose a Python program to insert an element at a given position in an array.,"[1, 4, 5, 7], 2, 6","def insert_element(arr, position, element):
    arr.insert(position, element)

print(insert_element([1, 4, 5, 7], 2, 6)) # Output: [1, 4, 6, 5, 7]",Data Structure,5301,"def insert_element___:
    arr___position, element)

print___) # Output: [1, 4, 6, 5, 7]"
Write a Python function to retrieve the frequency of elements in a given list.,"[1, 1, 2, 3, 4, 4]","from collections import Counter

def get_frequencies(lst):
  return Counter(lst)

input_list = [1, 1, 2, 3, 4, 4]
frequencies = get_frequencies(input_list)

print(""Frequency of elements:"", frequencies)",Data Structure,5302,"from collections import Counter

def get_frequencies___:
  return Counter___

input_list = ___
frequencies = get_frequencies___

print___"
Create a function in Python to perform a binary search on a sorted array.,"A sorted array arr = [1, 3, 5, 7, 8, 9, 12]","def binary_search(arr, target):
  start = 0
  end = len(arr) -1
  while start <= end:
    mid = (start + end) // 2
    if arr[mid] == target:
      return mid
    elif arr[mid] > target:
      end = mid - 1
    else:
      start = mid + 1
  return -1",Data Structure,5304,"def binary_search___:
  start = 0
  end = len___ -1
  while start <= end:
    mid = ___ // 2
    if arr[mid] == target:
      return mid
    elif arr[mid] > target:
      end = mid - 1
    else:
      start = mid + 1
  return -1"
Rewrite the following Python code using list comprehensions.,"def divisible(x):
    out = []
    for i in range(1, x):
        if (i % 3 == 0) or (i % 5 == 0):
            out.append(i)
    return out","def divisible(x):
    return [i for i in range(1, x) if (i % 3 == 0) or (i % 5 == 0)]",Data Structure,5305,"def divisible___:
    return [i for i in range___ if ___ or ___]"
Write a Python script that generates a histogram given a list of numbers.,"[1,2,3,4,5,4,3,2,1]","import matplotlib.pyplot as plt 
  
# x-axis values 
x = [1,2,3,4,5,4,3,2,1] 
  
# Y-axis values 
y = [1,2,3,4,5,4,3,2,1] 
  
# Function to plot the histogram 
plt.hist(x, y, histtype = 'bar', rwidth = 0.8) 
  
# Deifne labels and titles 
plt.xlabel('x') 
plt.ylabel('y') 
plt.title('Histogram') 
  
# Function to show the plot 
plt.show()",Data Structure,5310,"import matplotlib.pyplot as plt 
  
# x-axis values 
x = ___ 
  
# Y-axis values 
y = ___ 
  
# Function to plot the histogram 
plt.hist___ 
  
# Deifne labels and titles 
plt.xlabel___ 
plt.ylabel___ 
plt.title___ 
  
# Function to show the plot 
plt.show()"
Create a Python function that takes two lists and returns a list of all elements in common between them.,"list1 = [1, 2, 3, 4, 5]
list2 = [2, 4, 6, 8]","def find_common_elements(list1, list2):
  common_elements = []
  for i in list1: 
    if i in list2: 
        common_elements.append(i) 
  return common_elements",Data Structure,5315,"def find_common_elements___:
  common_elements = []
  for i in list1: 
    if i in list2: 
        common_elements___i) 
  return common_elements"
Develop an algorithm in Python that takes a list of strings as an input and sorts them alphabetically.,"List of Strings: [""hello"", ""world"", ""good"", ""morning"", ""programming""]","def sortAlphabetically(strings): 
    strings.sort() 
    return strings 

#Test 
strings = [""hello"", ""world"", ""good"", ""morning"", ""programming""]
sorted_strings = sortAlphabetically(strings) 
print(*sorted_strings)",Data Structure,5317,"def sortAlphabetically___: 
    strings.sort() 
    return strings 

#Test 
strings = [""hello"", ""world"", ""good"", ""morning"", ""programming""]
sorted_strings = sortAlphabetically___ 
print___"
Write a Python code snippet that takes a list of numbers as argument and prints the average.,"[2, 3, 4, 5, 6]","def average(numbers: list):
    if numbers:
        return sum(numbers) / len(numbers)
    else:
        return 0
    
numbers = [2, 3, 4, 5, 6]
print(f""Average of {numbers} is {average(numbers)}"")",Data Structure,5318,"def average___:
    if numbers:
        return sum___ / len___
    else:
        return 0
    
numbers = ___
print(f""Average of ___ is ___"")"
Write a Python program that will create a histogram of a given set of data.,"[0, 4, 5, 10, 11, 15]","import matplotlib.pyplot as plt 

# Data to plot
data = [0, 4, 5, 10, 11, 15]

# Create a histogram 
plt.hist(data, bins = [0,5,10,15,20])

# Label the x and y axis 
plt.xlabel(""Value"") 
plt.ylabel(""Number of Occurrences"") 

# Show the plot 
plt.show()",Data Structure,5322,"import matplotlib.pyplot as plt 

# Data to plot
data = ___

# Create a histogram 
plt.hist___

# Label the x and y axis 
plt.xlabel___ 
plt.ylabel___ 

# Show the plot 
plt.show()"
"Create a Python program that will take a list of integers and output the sum, average, largest value, and smallest value of the list.","[-2, -4, 0, 5, 10]","list_input = [-2, -4, 0, 5, 10]

list_sum = sum(list_input)
print(""Sum: "" + str(list_sum))

list_average = sum(list_input) / len(list_input)
print(""Average: "" + str(list_average))

list_max = max(list_input)
print(""Largest value: "" + str(list_max))

list_min = min(list_input)
print(""Smallest value: "" + str(list_min))",Data Structure,5323,"list_input = [-2, -4, 0, 5, 10]

list_sum = sum___
print___)

list_average = sum___ / len___
print___)

list_max = max___
print___)

list_min = min___
print___)"
Create a Python program to remove the given item from a list.,"[1, 2, 3, 4], 2","def remove_item(lst, item):
    while item in lst:
        lst.remove(item)
    return lst

result = remove_item([1, 2, 3, 4], 2)
print(result)",Data Structure,5324,"def remove_item___:
    while item in lst:
        lst___item)
    return lst

result = remove_item___
print___"
Construct a Python program to check if a given array of numbers is sorted in ascending order or not.,"[1, 2, 3, 4]","def is_sorted(arr):
    return arr == sorted(arr)

print(is_sorted([1, 2, 3, 4]))",Data Structure,5326,"def is_sorted___:
    return arr == sorted___

print___)"
Can you find the smallest number in a given list using Python?,"[4, 5, 6, 7, 8, 1, 2]","def smallest_num(lst):
   min_num = lst[0]
   
   for num in lst:
       if num < min_num:
           min_num = num
           
   return min_num

lst = [4, 5, 6, 7, 8, 1, 2]

print(smallest_num(lst))",Data Structure,5329,"def smallest_num___:
   min_num = lst___
   
   for num in lst:
       if num < min_num:
           min_num = num
           
   return min_num

lst = ___

print___)"
Devise an algorithm in Python that takes an array and returns a histogram of the occurrences of each element in the array.,"[1, 2, 1, 2, 3, 1, 3, 3]","def histogram(arr):
    hist = {}
    for num in arr:
        if num in hist:
            hist[num] += 1
        else:
            hist[num] = 1
    return hist",Data Structure,5330,"def histogram___:
    hist = {}
    for num in arr:
        if num in hist:
            hist[num] += 1
        else:
            hist[num] = 1
    return hist"
Create an algorithm in Python to count the number of unique elements in a list.,"[1, 2, 3, 1, 2]","def countUnique(arr):
    # create a lookup to keep track of elements
    lookup = set()
    # loop over list to add elements to set
    for elem  in arr:
        if elem not in lookup:
            lookup.add(elem)
    # return the length of the lookup set
    return len(lookup)

# test program
arr = [1, 2, 3, 1, 2]
print(countUnique(arr))",Data Structure,5333,"def countUnique___:
    # create a lookup to keep track of elements
    lookup = set()
    # loop over list to add elements to set
    for elem  in arr:
        if elem not in lookup:
            lookup.add___
    # return the length of the lookup set
    return len___

# test program
arr = ___
print___)"
Relace a for loop with appropriate list comprehension in a Python program.,"list = [1, 2, 3, 4, 5, 6]","list = [x**2 for x in [1, 2, 3, 4, 5, 6]]",Data Structure,5335,list = [x**2 for x in ___]
Construct an algorithm in Python to sort the elements of an array in decreasing order.,"[4, 7, 1, 3, 5, 2]","def sortDecreasing(arr):
    for i in range(len(arr)): 
        for j in range(i+1, len(arr)): 
            if arr[i] < arr[j]: 
                arr[i], arr[j] = arr[j], arr[i] 
    return arr
arr = [4, 7, 1, 3, 5, 2]
print(sortDecreasing(arr))

# Output: [7, 5, 4, 3, 2, 1]",Data Structure,5337,"def sortDecreasing___:
    for i in range___): 
        for j in range___): 
            if arr[i] < arr[j]: 
                arr[i], arr[j] = arr[j], arr[i] 
    return arr
arr = ___
print___)

# Output: ___"
"Generate a Python program that take a list y and a number n, and rotate y by n.","[1, 2, 3, 4, 5] and n = 2","def rotate(y , n):
    temp = y[0:n]
    for i in range (len(y) - n):
        y[i] = y[n + i]
    for i in range (n):
        y[i + len(y) - n] = temp[i]
    return y",Data Structure,5341,"def rotate___:
    temp = y[0:n]
    for i in range ___ - n):
        y[i] = y[n + i]
    for i in range ___:
        y[i + len___ - n] = temp[i]
    return y"
Create a Python function which takes a list of strings as an input and determines if the list contains palindrome strings (i.e. strings that are the same forward and backwards).,"list_of_strings = [""racecar"", ""cat"", ""mom"", ""noon""]","def is_palindrome(list_of_strings):
  palindrome_list = [string for string in list_of_strings if string == string[::-1]]
  if palindrome_list:
    return True
  return False",Data Structure,5353,"def is_palindrome___:
  palindrome_list = [string for string in list_of_strings if string == string[::-1]]
  if palindrome_list:
    return True
  return False"
Construct a Python program to combine the elements of two lists into a list of tuples.,"[1, 2, 3], [4, 5, 6]","def combine_list(array1, array2):
    return list(zip(array1, array2))",Data Structure,5354,"def combine_list___:
    return list___)"
Write a Python function to multiply all the numbers in a list.,"[1, 2, 3, 4]","def multiplyList(numbers):
  result = 1
  for x in numbers:
    result = result * x
  return result",Data Structure,5363,"def multiplyList___:
  result = 1
  for x in numbers:
    result = result * x
  return result"
Write a Python program to create a dictionary from a given list of integers that contains elements from 1 to the given number.,number = 5,"def create_dict(number):
    dict_N = dict()
    for i in range(1, number+1):
        dict_N[i] = i

    return dict_N

dict_N = create_dict(5)
print(dict_N)",Data Structure,5368,"def create_dict___:
    dict_N = dict()
    for i in range___:
        dict_N[i] = i

    return dict_N

dict_N = create_dict___
print___"
Modify a python program so that it can sort the list of numbers in ascending order.,"numbers = [3, 5, 9, 1, 2]","numbers = [3, 5, 9, 1, 2] 

numbers.sort() 

print(numbers)",Data Structure,5371,"numbers = ___ 

numbers.sort() 

print___"
Write a Python script to fold a given array of integers into two halves.,"[1, 7, 3, 4, 9]","def foldArray(arr): 
    n = len(arr) 
    if n % 2 != 0: 
        mid = int(n / 2) + 1
    else: 
        mid = int(n / 2)
    left = arr[:mid] 
    right = arr[mid:] 
    newarr = list(map(lambda x,y:(x+y),left,right[::-1])) 
    return newarr 

arr = [1, 7, 3, 4, 9] 
print(foldArray(arr))",Data Structure,5374,"def foldArray___: 
    n = len___ 
    if n % 2 != 0: 
        mid = int___ + 1
    else: 
        mid = int___
    left = arr[:mid] 
    right = arr[mid:] 
    newarr = list___,left,right[::-1])) 
    return newarr 

arr = ___ 
print___)"
Create an algorithm in Python to group the numbers of an array in such a way that the total sum of each group is equal.,"[1, 2, 3, 4, 5, 6, 7, 8]","def group_equal_sum(arr):
    result = []
    arr.sort()

    while len(arr) > 0:
        group = [arr[0]]
        arr.remove(arr[0])

        sum_ = group[0]
        while sum_ in arr:
            group.append(sum_)
            arr.remove(sum_)
            sum_ += 1

        result.append(group)
    return result",Data Structure,5375,"def group_equal_sum___:
    result = []
    arr.sort()

    while len___ > 0:
        group = [arr___]
        arr___arr[0])

        sum_ = group___
        while sum_ in arr:
            group___sum_)
            arr___sum_)
            sum_ += 1

        result___group)
    return result"
Write a Python script that filters a list of integers and returns only even numbers.,"list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def filter_even_numbers(lst):
    # Filter out even numbers from the given list 
    even_numbers = [num for num in lst if num % 2 == 0]
    return even_numbers

list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
result = filter_even_numbers(list)
print(result)",Data Structure,5376,"def filter_even_numbers___:
    # Filter out even numbers from the given list 
    even_numbers = [num for num in lst if num % 2 == 0]
    return even_numbers

list = ___
result = filter_even_numbers___
print___"
Write a Python program to sort a list of tuples by the second item in each tuple.,"[(5, 5), (4, 4), (3, 3), (2, 2), (1, 1)]","# sort a list of tuples by the second item in each tuple
def sort_tuple(tuples):
    # sort in ascending order
    tuples.sort(key=lambda x: x[1])
    # return the list
    return tuples",Data Structure,5378,"# sort a list of tuples by the second item in each tuple
def sort_tuple___:
    # sort in ascending order
    tuples.sort___
    # return the list
    return tuples"
Implement a function in Python that takes an array of strings and returns a list of all strings that have length greater than 6,"[""testing"", ""this"",""array""]","def getStringsWithLength(array):
    output = []
    for x in array:
        if len(x) > 6:
            output.append(x)
    return output

print(getStringsWithLength([""testing"", ""this"",""array""]))",Data Structure,5380,"def getStringsWithLength___:
    output = []
    for x in array:
        if len___ > 6:
            output___x)
    return output

print___)"
Write a python function to parse a list of strings and extract the date that appears at the end of the strings?,"list_of_strings = [""April 11th, 2019"", ""July 2nd, 2018"", ""October 16th, 2012""]","def parse_list_of_strings(list_of_strings):
    date_list = []
    for string in list_of_strings:
        date_to_add = datetime.strptime(string, '%B %dth, %Y')
        date_list.append(date_to_add)
    return date_list",Data Structure,5383,"def parse_list_of_strings___:
    date_list = []
    for string in list_of_strings:
        date_to_add = datetime.strptime___
        date_list___date_to_add)
    return date_list"
Create a Python script to calculate the sum of the numbers in a list given as input.,"list = [1, 5, 10, 30]","def sum_list(list):
    total = 0
    for i in list:
        total += i
    return total

print sum_list(list)",Data Structure,5387,"def sum_list___:
    total = 0
    for i in list:
        total += i
    return total

print sum_list___"
Create a Python program for filtering a given list of numbers and returning the even numbers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","def filter_even_numbers(numbers):
  even_numbers = []
  for number in numbers:
    if number % 2 == 0:
      even_numbers.append(number)
  return even_numbers

numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]
print(filter_even_numbers(numbers))",Data Structure,5389,"def filter_even_numbers___:
  even_numbers = []
  for number in numbers:
    if number % 2 == 0:
      even_numbers___number)
  return even_numbers

numbers = ___
print___)"
Create a program in Python that will filter a list of numbers by removing any number divisible by 3.,"[2, 4, 7, 8, 10, 12, 15, 20]","def filter_by_three(numbers):
    filtered_numbers = []
    for num in numbers:
        if num % 3 != 0:
            filtered_numbers.append(num)
    return filtered_numbers

print(filter_by_three([2, 4, 7, 8, 10, 12, 15, 20]))",Data Structure,5392,"def filter_by_three___:
    filtered_numbers = []
    for num in numbers:
        if num % 3 != 0:
            filtered_numbers___num)
    return filtered_numbers

print___)"
Write a Python program to get the index of the largest item in a given list.,"[4, 3, 5, 7, 6]","# get the index of the largest item in a list
def get_max_index(arr):
    max_index = 0
    for i in range(1, len(arr)):
        if arr[i] > arr[max_index]:
            max_index = i
    return max_index

result = get_max_index([4, 3, 5, 7, 6])
print(result) # 3",Data Structure,5396,"# get the index of the largest item in a list
def get_max_index___:
    max_index = 0
    for i in range___):
        if arr[i] > arr[max_index]:
            max_index = i
    return max_index

result = get_max_index___
print___ # 3"
Can you write a code snippet to flatten a 2D array in Python?,"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]","def flatten_2d_array(arr):
    flattened_arr = []
    for row in arr:
        for item in row:
            flattened_arr.append(item)
    return flattened_arr

arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
flattened_arr = flatten_2d_array(arr)
print(flattened_arr)",Data Structure,5397,"def flatten_2d_array___:
    flattened_arr = []
    for row in arr:
        for item in row:
            flattened_arr___item)
    return flattened_arr

arr = [___, ___, ___]
flattened_arr = flatten_2d_array___
print___"
Write a python program to convert a number into a list of its digits,235,"def number_to_digits(number):
  digits = []
  while (number>0):
    digits.append(number % 10)
    number = number // 10
  
  digits.reverse()
  return digits",Data Structure,5399,"def number_to_digits___:
  digits = []
  while ___:
    digits___number % 10)
    number = number // 10
  
  digits.reverse()
  return digits"
Construct a decision tree in Python using the given data set.,"import pandas as pd

data = { 
    'Skewness': ['low', 'high', 'medium'], 
    'Target': ['yes', 'no', 'yes'] 
}

df = pd.DataFrame(data)","from sklearn import tree

features = ['Skewness']
X = df[features]
y = df['Target']

clf = tree.DecisionTreeClassifier(random_state=0)
clf = clf.fit(X, y)",Data Structure,5400,"from sklearn import tree

features = ['Skewness']
X = df[features]
y = df['Target']

clf = tree.DecisionTreeClassifier___
clf = clf.fit___"
Write a Python code snippet to search for a given number in the given array.,"arr = [5, 8, 2, 10, 48, 41], number = 8","def search(arr, number): 
    for i in range(len(arr)): 
        if arr[i] == number: 
            return True
    return False
  
arr = [5, 8, 2, 10, 48, 41] 
number = 8
if search(arr, number): 
    print(""Number found"") 
else: 
    print(""Number not found"")",Data Structure,5401,"def search___: 
    for i in range___): 
        if arr[i] == number: 
            return True
    return False
  
arr = ___ 
number = 8
if search___: 
    print___ 
else: 
    print___"
Calculate the sum of the numbers in this list in Python.,"lst = [3, 5, 8, 9]","# Calculate the sum of the numbers in the list
total = sum(lst)

# Print the result
print(total) # prints 25",Data Structure,5408,"# Calculate the sum of the numbers in the list
total = sum___

# Print the result
print___ # prints 25"
Create a function in Python to find all unique combinations of numbers from a given list.,"[1, 2, 3, 4]","def find_unique_combos(lst):
    combos = []
    for i in range(len(lst)):
        for j in range(i+1, len(lst)+1):
            combos.append(lst[i:j])
    return list(set(tuple(x) for x in combos))

print(find_unique_combos([1,2,3,4]))",Data Structure,5409,"def find_unique_combos___:
    combos = []
    for i in range___):
        for j in range___+1):
            combos___lst[i:j])
    return list___ for x in combos))

print___)"
Generate a Python program to find the index of an item in the given list.,"arr = [3,7,2,5]","def find_index(arr, item):
    for i, value in enumerate(arr):
        if item == value:
            return i
    return -1",Data Structure,5411,"def find_index___:
    for i, value in enumerate___:
        if item == value:
            return i
    return -1"
Design a Python code to detect and remove duplicate elements from a given array.,"[12, 34, 11, 12, 23, 11]","def remove_duplicates(arr): 
    result = [] 
    for i in arr: 
        if i not in result: 
            result.append(i) 
    return result

arr = [12, 34, 11, 12, 23, 11]
result = remove_duplicates(arr)
print(result) // Prints [12, 34, 11, 23]",Data Structure,5412,"def remove_duplicates___: 
    result = [] 
    for i in arr: 
        if i not in result: 
            result___i) 
    return result

arr = ___
result = remove_duplicates___
print___ // Prints [12, 34, 11, 23]"
Create a Python code to delete the last element in a list.,"[1, 2, 2, 4, 4]","def delete_last(lst):
    return lst[:-1]

result = delete_last([1, 2, 2, 4, 4])
print(result)",Data Structure,5415,"def delete_last___:
    return lst[:-1]

result = delete_last___
print___"
Implement a function in Python to reverse a given list of numbers.,"List: [1, 2, 4, 7, 9]","def reverseList(list):
    start = 0
    end = len(list) - 1
  
    while start < end:
        list[start], list[end] = list[end], list[start]
        start += 1
        end -= 1
  
    return list

list = [1, 2, 4, 7, 9]

reverseList(list)
# Output: [9, 7, 4, 2, 1]",Data Structure,5416,"def reverseList___:
    start = 0
    end = len___ - 1
  
    while start < end:
        list[start], list[end] = list[end], list[start]
        start += 1
        end -= 1
  
    return list

list = ___

reverseList___
# Output: ___"
Write a Python script that takes a list of integers and checks if any two numbers sum up to a given target.,"[3, 2, 5, 7], target = 9","def checkSum(arr, target): 
 for i in range(len(arr)): 
 for j in range(i + 1, len(arr)): 
 if arr[i] + arr[j] == target: 
 return True

 return False

nums = [3, 2, 5, 7]
target = 9

print(checkSum(nums, target)) # output: True",Data Structure,5418,"def checkSum___: 
 for i in range___): 
 for j in range___): 
 if arr[i] + arr[j] == target: 
 return True

 return False

nums = ___
target = 9

print___) # output: True"
Generate a program in Python which takes a list of integers as an argument and prints the odd numbers in ascending order.,"list = [1, 2, 3, 4, 5, 6, 7]","def print_odd_numbers(numbers):
    for num in sorted(numbers):
        if num % 2 != 0:
            print(num)

print_odd_numbers([1, 2, 3, 4, 5, 6, 7])
# Output: 1, 3, 5, 7",Data Structure,5422,"def print_odd_numbers___:
    for num in sorted___:
        if num % 2 != 0:
            print___

print_odd_numbers___
# Output: 1, 3, 5, 7"
Write a Python function to calculate the average grade for a given list of student grades.,"[90, 99, 75, 72, 85]","def average_grade(grades):
 total = 0
 for grade in grades:
 total += grade
 return total / len(grades)

>>> average_grade([90, 99, 75, 72, 85])
84.2",Data Structure,5423,"def average_grade___:
 total = 0
 for grade in grades:
 total += grade
 return total / len___

>>> average_grade___
84.2"
"Given a sample data set, write a Python program to remove all rows that have missing values.","name  age	nationality
John  22	Nigerian
Steve	null	American
Harry	25	British","import pandas as pd

data = {
   'name': ['John', 'Steve', 'Harry'],
   'age': [22, None, 25],
   'nationality': ['Nigerian', 'American', 'British']
}

df = pd.DataFrame(data)
df = df.dropna()

print(df)",Data Structure,5425,"import pandas as pd

data = {
   'name': ['John', 'Steve', 'Harry'],
   'age': [22, None, 25],
   'nationality': ['Nigerian', 'American', 'British']
}

df = pd.DataFrame___
df = df.dropna()

print___"
Write a python program to sort a list of tuples based on their second element.,"list = [('dog', 6), ('cat', 4), ('rabbit', 2)]","list = [('dog', 6), ('cat', 4), ('rabbit', 2)]

list.sort(key=lambda x: x[1])

print(list)",Data Structure,5427,"list = [___, ___, ___]

list.sort___

print___"
Write a Python code snippet to display all the items stored in a list given below.,"list_items = ['Apple', 'Mango', 'Banana']","for item in list_items:
    print(item)",Data Structure,5432,"for item in list_items:
    print___"
"In Python, create a function that takes an list of numbers and returns the list with any duplicate values removed.","[1,2,3,3,2,1,4,5]","def remove_duplicates(list_num):
    return list(dict.fromkeys(list_num))

list_num = [1,2,3,3,2,1,4,5]
list_num = remove_duplicates(list_num)
print(list_num)  // [1, 2, 3, 4, 5]",Data Structure,5434,"def remove_duplicates___:
    return list___)

list_num = ___
list_num = remove_duplicates___
print___  // [1, 2, 3, 4, 5]"
Generate a Python program to filter out any words containing a given letter from a list.,"words = [""apple"", ""banana"", ""orange"", ""peach""]
letter = ""e""","def filter_words(words, letter):
    filtered_words = []
    
    for word in words:
        if letter not in word:
            filtered_words.append(word)
    
    return filtered_words",Data Structure,5438,"def filter_words___:
    filtered_words = []
    
    for word in words:
        if letter not in word:
            filtered_words___word)
    
    return filtered_words"
Write a Python program to add a prefix and suffix to all strings in a list.,"list = ['abc', 'def', 'ghi']","pre = ""PRE-""
suf = ""-SUF""

enriched_list = [ pre + s + suf for s in list]

print(enriched_list)",Data Structure,5441,"pre = ""PRE-""
suf = ""-SUF""

enriched_list = [ pre + s + suf for s in list]

print___"
Create a Python function that takes a list of strings as an argument and returns a new sorted list with no duplicates.,"['cat', 'dog', 'cat', 'mouse', 'lion', 'dog']","def remove_duplicates(strings):
  new_list = []
  for s in strings:
    if s not in new_list:
      new_list.append(s)
  new_list.sort()
  return new_list

strings = [""cat"", ""dog"", ""cat"", ""mouse"", ""lion"", ""dog""]
unique_list = remove_duplicates(strings)

print(unique_list)",Data Structure,5444,"def remove_duplicates___:
  new_list = []
  for s in strings:
    if s not in new_list:
      new_list___s)
  new_list.sort()
  return new_list

strings = [""cat"", ""dog"", ""cat"", ""mouse"", ""lion"", ""dog""]
unique_list = remove_duplicates___

print___"
Find the minimum element in a Python list called 'nums',"nums = [2, 3, 4, 1, 7, 8, 5]","""""""
Find the minimum element in a Python list called 'nums'
""""""

def find_min(nums):
    min = nums[0]
    for num in nums:
        if num < min:
            min = num
    return min
    
if __name__ == '__main__':
    nums = [2, 3, 4, 1, 7, 8, 5]
    print(find_min(nums))",Data Structure,5445,"""""""
Find the minimum element in a Python list called 'nums'
""""""

def find_min___:
    min = nums___
    for num in nums:
        if num < min:
            min = num
    return min
    
if __name__ == '__main__':
    nums = ___
    print___)"
Create a function in Python to filter out elements in a list that share the same value.,"mylist = [1, 2, 2, 3, 3, 3]","def filter_same_value_elements(mylist):
 seen = set()
 for item in mylist:
 if item not in seen:
 yield item
 seen.add(item)

filtered_list = list(filter_same_value_elements(mylist))
print(filtered_list) # [1, 2, 3]",Data Structure,5448,"def filter_same_value_elements___:
 seen = set()
 for item in mylist:
 if item not in seen:
 yield item
 seen.add___

filtered_list = list___)
print___ # [1, 2, 3]"
Suggest a correction for the following python code to return the average of a given list of numbers.,"def avg(numbers):
 sum = 0
 for n in numbers:
 sum = sum + n
 return sum","def avg(numbers):
 sum = 0
 for n in numbers:
 sum = sum + n
 return sum / len(numbers)",Data Structure,5453,"def avg___:
 sum = 0
 for n in numbers:
 sum = sum + n
 return sum / len___"
Write a Python function that gets a list of numbers and returns the sum of the elements.,"List = [1, 2, 3, 4, 5]","def get_sum(list):
    total = 0
    for num in list:
        total += num
    return total",Data Structure,5456,"def get_sum___:
    total = 0
    for num in list:
        total += num
    return total"
Construct an algorithm in Python to compute the sum of a array of numbers.,"[3,5,1,2]","def compute_sum(arr):
    
    # Initialize sum
    sum = 0
    
    # Compute sum
    for num in arr:
        sum += num
    
    # Return the sum
    return sum

# Testing
arr = [3,5,1,2]

print(compute_sum(arr))",Data Structure,5457,"def compute_sum___:
    
    # Initialize sum
    sum = 0
    
    # Compute sum
    for num in arr:
        sum += num
    
    # Return the sum
    return sum

# Testing
arr = ___

print___)"
Create an efficient sorting algorithm in Python to sort a given array.,"[9, 4, 6, 1, 3, 7]","def sort_arr(arr):
    n = len(arr)
    for i in range(n): 
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]  
    return arr

result = sort_arr([9, 4, 6, 1, 3, 7])
print(result)",Data Structure,5458,"def sort_arr___:
    n = len___
    for i in range___: 
        for j in range___: 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]  
    return arr

result = sort_arr___
print___"
Create a Python program that takes a given list of numbers and remove any duplicate numbers.,"sample input: [1, 2, 2, 3, 3, 4]","def remove_duplicates(arr):
 result = []
 
 for num in arr:
 if num not in result:
 result.append(num)
 
 return result

# testing 
arr = [1, 2, 2, 3, 3, 4]
print(remove_duplicates(arr)) # Output: [1, 2, 3, 4]",Data Structure,5460,"def remove_duplicates___:
 result = []
 
 for num in arr:
 if num not in result:
 result___num)
 
 return result

# testing 
arr = ___
print___) # Output: [1, 2, 3, 4]"
Design a program in Python to filter the elements from a list which are not divisible by 3.,"[2, 3, 4, 5, 6, 7, 8, 9]","def filter_list(arr):
    filtered_list = []
    for num in arr:
        if num % 3 != 0:
            filtered_list.append(num)
    return filtered_list

print(filter_list([2, 3, 4, 5, 6, 7, 8, 9]))",Data Structure,5461,"def filter_list___:
    filtered_list = []
    for num in arr:
        if num % 3 != 0:
            filtered_list___num)
    return filtered_list

print___)"
Write a Python program that removes duplicates from a list.,"Input List: [1, 2, 3, 4, 3, 2, 1]","def remove_duplicates(my_list):
 return list(dict.fromkeys(my_list))

my_list = [1, 2, 3, 4, 3, 2, 1]

print(remove_duplicates(my_list)) # output [1, 2, 3, 4]",Data Structure,5463,"def remove_duplicates___:
 return list___)

my_list = ___

print___) # output [1, 2, 3, 4]"
You are given a 2D list that needs to be flattened into a single dimensional list. Write some python code to achieve this transformation.,"[[1, 2], [3, 4], [5, 6]]","def flatten_list(input_list): 
    flattened_list = [] 
      
    # traversing the 2d list  
    for row in input_list: 
        # traversing the row 
        for column in row: 
            flattened_list.append(column) 
    return flattened_list",Data Structure,5465,"def flatten_list___: 
    flattened_list = [] 
      
    # traversing the 2d list  
    for row in input_list: 
        # traversing the row 
        for column in row: 
            flattened_list___column) 
    return flattened_list"
"Generate a Python program that given a list of numbers, finds the largest pair sum.","[7, 8, 12, 10]","def max_pair_sum(arr):
    if len(arr) == 0:
        return 0

    max_sum = 0

    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            max_sum = max(max_sum, arr[i] + arr[j])
    
    return max_sum",Data Structure,5470,"def max_pair_sum___:
    if len___ == 0:
        return 0

    max_sum = 0

    for i in range___):
        for j in range___):
            max_sum = max___
    
    return max_sum"
Generate an optimized Python program that sorts a list of integers using bubble sort.,"[3, 5, 1, 4, 7]","def bubble_sort(nums):
    n = len(nums)
    for i in range(n):
        swaped = False
        for j in range(0, n-i-1):
            if nums[j] > nums[j+1]:
                nums[j], nums[j+1] = nums[j+1], nums[j]
                swaped = True
 
        if swaped == False:
            break

# Driver code
nums = [3, 5, 1, 4, 7]
bubble_sort(nums)
print(nums)",Data Structure,5473,"def bubble_sort___:
    n = len___
    for i in range___:
        swaped = False
        for j in range___:
            if nums[j] > nums[j+1]:
                nums[j], nums[j+1] = nums[j+1], nums[j]
                swaped = True
 
        if swaped == False:
            break

# Driver code
nums = ___
bubble_sort___
print___"
Develop an algorithm in Python to find the median of a list of numbers.,"[1, 4, 6, 12, 24, 36]","def get_median(nums): 
    nums.sort()
    if len(nums) % 2 == 0:
        return (nums[int(len(nums)/2)] + nums[int(len(nums)/2-1)])/2
    else:
        return nums[int((len(nums)-1)/2)]
    
result = get_median([1, 4, 6, 12, 24, 36])
print(result)",Data Structure,5478,"def get_median___: 
    nums.sort()
    if len___ % 2 == 0:
        return ___/2)] + nums[int___/2-1)])/2
    else:
        return nums[int___-1)/2)]
    
result = get_median___
print___"
Create a function in Python that takes an array of integers as input and outputs the number of unique values in the array.,"[1,5,5,4,4,6,7,7]","def get_unique_values(arr):
    # convert to set 
    unique_arr = set(arr) 
  
    # return length 
    return len(unique_arr) 
  
# driver code 
arr = [1, 5, 5, 4, 4, 6, 7, 7] 
  
# function call 
unique_values = get_unique_values(arr) 
  
# print unique values 
print(unique_values)",Data Structure,5481,"def get_unique_values___:
    # convert to set 
    unique_arr = set___ 
  
    # return length 
    return len___ 
  
# driver code 
arr = ___ 
  
# function call 
unique_values = get_unique_values___ 
  
# print unique values 
print___"
Append a number to each element of a list in Python.,"[1, 2, 3]","def append_nums(lst):
    new_list = [x + 10 for x in lst]
    return new_list

print(append_nums([1, 2, 3]))",Data Structure,5483,"def append_nums___:
    new_list = [x + 10 for x in lst]
    return new_list

print___)"
Design a Python algorithm to perform a Prefix Sum operation on an array.,"[1, 2, 3, 4]","def prefix_sum(arr):
result = []
s = 0
for x in arr:
    s += x
    result.append(s)
return result

arr = [1, 2, 3, 4]
prefix_sum(arr)",Data Structure,5484,"def prefix_sum___:
result = []
s = 0
for x in arr:
    s += x
    result___s)
return result

arr = ___
prefix_sum___"
Create a function in Python that takes two lists of integers and return a list which contains elements present in both the lists.,"list1 = [1, 2, 3 ,4 ,5]
list2 = [3, 4, 5, 6 ,7]","def intersection(list1, list2):
    return [value for value in list1 if value in list2]

list1 = [1, 2, 3 ,4 ,5]
list2 = [3, 4, 5, 6 ,7]

print (intersection(list1, list2))",Data Structure,5488,"def intersection___:
    return [value for value in list1 if value in list2]

list1 = ___
list2 = ___

print ___)"
Generate an algorithm in Python that takes an array of strings and returns all strings which are palindromes.,"['racecar', 'level', 'toronto', 'bob', 'noon']","def palindrome_checker(string_list):
    result = []
    for string in string_list:
        rev_string = string[::-1]
        if rev_string == string:
            result.append(string)
    return result

palindromes = palindrome_checker(['racecar', 'level', 'toronto', 'bob', 'noon'])
print(palindromes)",Data Structure,5491,"def palindrome_checker___:
    result = []
    for string in string_list:
        rev_string = string[::-1]
        if rev_string == string:
            result___string)
    return result

palindromes = palindrome_checker___
print___"
Edit the following Python program to use a dictionary instead of a list.,"items = [1, 2, 3, 4]

for item in items:
 print(item)","items = {1: 'one', 2: 'two', 3: 'three', 4: 'four'}

for key, value in items.items():
 print(value)",Data Structure,5494,"items = ___

for key, value in items.items():
 print___"
Create a program in Python to remove the duplicates from a given array.,"[1, 2, 5, 7, 1, 8, 5, 9, 8]","def remove_duplicates(arr):
  res = []
  for i in arr: 
    if i not in res: 
      res.append(i)
  return res",Data Structure,5499,"def remove_duplicates___:
  res = []
  for i in arr: 
    if i not in res: 
      res___i)
  return res"
Create a program in Python to find the minimum value in a list.,"[30, 10, 40, 20]","def findMinValue(list):
    minValue = list[0]
    for i in range(1, len(list)):
        if list[i] < minValue:
            minValue = list[i]
    return minValue

list1 = [30, 10, 40, 20]
minValue = findMinValue(list1)
print(minValue)",Data Structure,5500,"def findMinValue___:
    minValue = list___
    for i in range___):
        if list[i] < minValue:
            minValue = list[i]
    return minValue

list1 = ___
minValue = findMinValue___
print___"
Develop a Python function to calculate the summed weighted average from a given set of values and weight.,"values = [90, 50, 70], weights = [0.4, 0.2, 0.4]","def weightedAverage(values, weights):
    sum = 0.0
    for i in range(len(values)):
        sum += values[i] * weights[i]
    return sum/len(values)

values = [90, 50, 70]
weights = [0.4, 0.2, 0.4]

print(weightedAverage(values, weights))",Data Structure,5503,"def weightedAverage___:
    sum = 0.0
    for i in range___):
        sum += values[i] * weights[i]
    return sum/len___

values = ___
weights = [0.4, 0.2, 0.4]

print___)"
Generate a Python script to find the top 5 most popular items in a given list.,"[1, 3, 5, 3, 6, 2, 4, 6, 8, 4]","from collections import Counter

# Get the input list
list = [1, 3, 5, 3, 6, 2, 4, 6, 8, 4]

# Use Counter library to get a dictionary of the top 5 items
top_five = Counter(list).most_common(5)

# Print the top five items
print(""Top five items in the list:"")
for key, val in top_five:
    print(key, "":"", val, ""occurrences"")",Data Structure,5505,"from collections import Counter

# Get the input list
list = ___

# Use Counter library to get a dictionary of the top 5 items
top_five = Counter___.most_common___

# Print the top five items
print___
for key, val in top_five:
    print___"
Write a Python program to calculate the average of a list of positive integers and output the result.,"List of positive integers: [1, 5, 6, 7, 8]","list_of_positive_integers = [1, 5, 6, 7, 8]
total = sum(list_of_positive_integers)

avg = total/len(list_of_positive_integers)

print(""The average of the list of positive integers is {}"".format(avg))",Data Structure,5507,"list_of_positive_integers = ___
total = sum___

avg = total/len___

print___)"
Write a Python program to find the longest common prefix among all strings in the list.,"strings = [""code"", ""coder"", ""coding""]","def find_longest_common_prefix(strings):
 first_str = strings[0]
 longest_prefix = """"
 for i in range(len(first_str)):
  current_prefix = first_str[:i]
  flag = True
  for string in strings[1:]:
   if not string.startswith(current_prefix):
    flag = False
    break
  if flag:
   longest_prefix = current_prefix
 return longest_prefix",Data Structure,5508,"def find_longest_common_prefix___:
 first_str = strings___
 longest_prefix = """"
 for i in range___):
  current_prefix = first_str[:i]
  flag = True
  for string in strings[1:]:
   if not string.startswith___:
    flag = False
    break
  if flag:
   longest_prefix = current_prefix
 return longest_prefix"
Create a Python program that removes duplicate elements from a list.,"[1,2,3,4,4,2,7,8,8,1]","def remove_duplicates(nums): 
  
    # A list for storing final output 
    new_list = [] 
  
    # Looping over the elements 
    for num in nums: 
        # If num is not in new_list, then add it 
        if num not in new_list: 
            new_list.append(num) 
  
    return new_list 

# Main code 
input_list = [1,2,3,4,4,2,7,8,8,1]
print(remove_duplicates(input_list))",Data Structure,5509,"def remove_duplicates___: 
  
    # A list for storing final output 
    new_list = [] 
  
    # Looping over the elements 
    for num in nums: 
        # If num is not in new_list, then add it 
        if num not in new_list: 
            new_list___num) 
  
    return new_list 

# Main code 
input_list = ___
print___)"
Develop a function in Python to identify the courses in a list of courses that need prerequisites.,"[ [""Calculus I"",""none""], [""Calculus II"", ""Calculus I""], [""Algebra I"", ""none""], [""Algebra II"", ""Algebra I""] ]","def prerequisitesCourses(courses):
    requiredCourses = []
    for course in courses:
        if course[1] != ""none"":
            requiredCourses.append(course[1])
    return requiredCourses",Data Structure,5510,"def prerequisitesCourses___:
    requiredCourses = []
    for course in courses:
        if course___ != ""none"":
            requiredCourses___course[1])
    return requiredCourses"
Create an algorithm in Python for sorting an array of integers with the bubble sort method.,"[12, 3, 10, 7, 5, 11]","def bubble_sort(arr):
    for i in range(len(arr)):
        for j in range(len(arr) - 1):
            if arr[j] > arr[j+1]:
                temp = arr[j]
                arr[j] = arr[j+1]
                arr[j+1] = temp
    return arr

result = bubble_sort([12, 3, 10, 7, 5, 11])
print(result)",Data Structure,5511,"def bubble_sort___:
    for i in range___):
        for j in range___ - 1):
            if arr[j] > arr[j+1]:
                temp = arr[j]
                arr[j] = arr[j+1]
                arr[j+1] = temp
    return arr

result = bubble_sort___
print___"
Design a Python script to remove all numerical elements from a list.,"[1, 2, 3, ""a"", ""b"", ""c"", 4, 5]","lst = [1, 2, 3, ""a"", ""b"", ""c"", 4, 5]

new_lst = []

for item in lst:
    if not isinstance(item, int):
        new_lst.append(item)

print(new_lst)",Data Structure,5513,"lst = [1, 2, 3, ""a"", ""b"", ""c"", 4, 5]

new_lst = []

for item in lst:
    if not isinstance___:
        new_lst___item)

print___"
Generate a Python dictionary from a given list of strings.,"[""Apple"", ""Banana"", ""Carrot""]","# Create a dictionary from a list
my_dict = {key: value for key, value in enumerate([""Apple"", ""Banana"", ""Carrot""])}

# Print dictionary
print(my_dict)",Data Structure,5515,"# Create a dictionary from a list
my_dict = ___

# Print dictionary
print___"
Write a short python script to get the average of numbers stored in the list.,"[1, 2, 3, 4, 5]","# Compute the average of the numbers
numbers = [1, 2, 3, 4, 5]
total = 0
for number in numbers:
    total += number

# Divide the total by the number of elements in the list
average = total / len(numbers)

# Print the average
print(average)",Data Structure,5518,"# Compute the average of the numbers
numbers = ___
total = 0
for number in numbers:
    total += number

# Divide the total by the number of elements in the list
average = total / len___

# Print the average
print___"
Write a Python program to sort a list of numbers from lowest to highest.,"[7, 3, 5, 8, 4]","[3, 4, 5, 7, 8]",Data Structure,5524,___
Create a Python dictionary with keys based on the given list of data and assign a default value to them.,"[1,2,3]","dictionary = {1: 'default', 2: 'default', 3: 'default'}",Data Structure,5526,dictionary = ___
Write a Python function to compute the length of each element in the given list.,"list = [5, 10, 15]","def list_length(list):
  for element in list:
    print(len(element))

list_length(list)",Data Structure,5529,"def list_length___:
  for element in list:
    print___)

list_length___"
Generate a Python program to sort a given list of integers in descending order.,"[6, 4, 7, 2, 1, 3]","def descending_order_sort(arr): 
    n = len(arr)  
    for i in range(n): 
        for j in range(0, n-i-1): 
            if arr[j] < arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 

arr = [6, 4, 7, 2, 1, 3] 
descending_order_sort(arr)
print(arr)",Data Structure,5532,"def descending_order_sort___: 
    n = len___  
    for i in range___: 
        for j in range___: 
            if arr[j] < arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 

arr = ___ 
descending_order_sort___
print___"
Create a function in Python which finds the minimum of the list of given numbers.,"[2, 4, 6, 3, 5, 8]","def min_list(list1): 
    min_value = min(list1) 
  
    return min_value",Data Structure,5535,"def min_list___: 
    min_value = min___ 
  
    return min_value"
Write a Python program to get the two smallest numbers in a list of numbers.,"[1, 3, 7, 4, 5]","list = [1, 3, 7, 4, 5]
small1 = min(list)
list.remove(small1)
small2 = min(list)

print(small1, small2) # 1, 3",Data Structure,5537,"list = ___
small1 = min___
list___small1)
small2 = min___

print___ # 1, 3"
Write a Python program to optimize an existing array using Bubble sort.,"arr = [2,3,1,4,5]","def bubble_sort(arr):
    for i in range(len(arr)):
        for j in range(len(arr) - 1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr

if __name__ == '__main__':
    arr = [2,3,1,4,5]
    print(""Optimized array:"", bubble_sort(arr))",Data Structure,5543,"def bubble_sort___:
    for i in range___):
        for j in range___ - 1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr

if __name__ == '__main__':
    arr = ___
    print___)"
Write a Python program to sort a list of tuples using a lambda expression,"tuple_list = [(1, 3), (2, 2), (3, 1), (2, 3)]","sorted_list = sorted(tuple_list, key=lambda x: (x[1], x[0]))
print(sorted_list)

# Output: [(3, 1), (2, 2), (1, 3), (2, 3)]",Data Structure,5555,"sorted_list = sorted___)
print___

# Output: [___, ___, ___, ___]"
Create a Python function to generate an array of random numbers that follows a binomial distribution.,"n = 100 
p = 0.5","import numpy as np

def binomial(n, p):
  return np.random.binomial(n, p)

dist = binomial(n, p)",Data Structure,5558,"import numpy as np

def binomial___:
  return np.random.binomial___

dist = binomial___"
Write a Python program that takes a list as input and returns a list that contains only the unique elements.,"list_items = [2, 3, 3, 4, 4, 5, 6, 7, 7]","list_items = [2, 3, 3, 4, 4, 5, 6, 7, 7]

def find_unique_items(input_list):
    result = []
    for elem in input_list:
        if elem not in result:
            result.append(elem)
    return result

print(find_unique_items(list_items))",Data Structure,5559,"list_items = ___

def find_unique_items___:
    result = []
    for elem in input_list:
        if elem not in result:
            result___elem)
    return result

print___)"
Write a Python script to calculate the sum of the elements of a list.,"[1, 2, 3, 4, 5]","nums = [1, 2, 3, 4, 5]

sum_val = 0
for n in nums:
    sum_val += n

print(f""Sum of the elements in the list: {sum_val}"")",Data Structure,5562,"nums = ___

sum_val = 0
for n in nums:
    sum_val += n

print(f""Sum of the elements in the list: ___"")"
Implement a search algorithm in Python that finds a given element in an array.,"[2, 4, 6, 3, 1], target 4","def search(array, target):
  for i in range(len(array)):
    if array[i] == target:
      return i
   
  return -1

array = [2, 4, 6, 3, 1]
target = 4

result = search(array, target)

if result != -1:
  print(""Element found at index "" + str(result))
else:
  print(""Element not found"")",Data Structure,5563,"def search___:
  for i in range___):
    if array[i] == target:
      return i
   
  return -1

array = ___
target = 4

result = search___

if result != -1:
  print___)
else:
  print___"
Create a sorting algorithm in Python that sorts a list of numbers from smallest to largest.,"[5, 4, 3, 2, 1]","def sort_nums(nums):
    for i in range(len(nums)):
        for j in range(len(nums)-i-1):
            if nums[j] > nums[j+1]:
                nums[j], nums[j+1] = nums[j+1], nums[j]
    return nums",Data Structure,5566,"def sort_nums___:
    for i in range___):
        for j in range___-i-1):
            if nums[j] > nums[j+1]:
                nums[j], nums[j+1] = nums[j+1], nums[j]
    return nums"
Create a list of codes to store product data in Python.,"<Product information:
product code (string), product name (string), quantity (integer)>","product_data = [
    ('code', 'str'),
    ('name', 'str'),
    ('quantity', 'int')
]",Data Structure,5567,"product_data = [
    ___,
    ___,
    ___
]"
Propose and implement a method to sort a list of varied size nested lists in Python.,"Sample input: [[2,6],[1],[3,4,5]]","def sortList(lists):
 sortedList = [sorted(lst) for lst in lists]
 sortedList.sort(key = len)
 return sortedList

lists = [[2,6],[1],[3,4,5]]
print(sortList(lists)) // prints [[1],[2,6],[3,4,5]]",Data Structure,5574,"def sortList___:
 sortedList = [sorted___ for lst in lists]
 sortedList.sort___
 return sortedList

lists = [___,___,___]
print___) // prints [[1],[2,6],[3,4,5]]"
Generate a python program to swap the first and last element of a list,"list_of_numbers = [4, 5, 7, 8, 6]","def swap(list_of_numbers):
    list_of_numbers[0], list_of_numbers[-1] = list_of_numbers[-1], list_of_numbers[0]
    return list_of_numbers",Data Structure,5576,"def swap___:
    list_of_numbers___, list_of_numbers[-1] = list_of_numbers[-1], list_of_numbers___
    return list_of_numbers"
Generate a correct Python program to copy a list.,"list_x = [1,2,3,4]","def copy_list(list_x):
	list_y = list_x [:]
	return list_y",Data Structure,5577,"def copy_list___:
	list_y = list_x [:]
	return list_y"
Design a web scraper using Python that gathers all the phone numbers from a set of webpages?,URLs to scrape,"import requests
import re

def scrape_phone_numbers(urls):
    phone_numbers = []
    for url in urls:
        response = requests.get(url)
        numbers = re.findall(""([+]\d{2}\s?0?\d{10})"", response.text)
        phone_numbers.extend(numbers)
    return phone_numbers",Data Structure,5578,"import requests
import re

def scrape_phone_numbers___:
    phone_numbers = []
    for url in urls:
        response = requests.get___
        numbers = re.findall(""([+]\d___\s?0?\d___)"", response.text)
        phone_numbers.extend___
    return phone_numbers"
Generate a Python program that computes and prints the sum of the even numbers in a given list.,"[2, 3, 6, 7, 13, 14]","def get_even_sum(nums):
    even_sum = 0
    for num in nums:
        if num % 2 == 0:
            even_sum += num
    return even_sum

nums = [2, 3, 6, 7, 13, 14]  
even_sum = get_even_sum(nums)
print(even_sum)",Data Structure,5581,"def get_even_sum___:
    even_sum = 0
    for num in nums:
        if num % 2 == 0:
            even_sum += num
    return even_sum

nums = ___  
even_sum = get_even_sum___
print___"
Write a python code snippet to append a new item to a given list.,"list = [1, 2, 4, 8]",list.append(16),Data Structure,5585,list___16)
"Implement a 'closest to zero' algorithm in Python, which returns the closest to 0 value from a given array.","[-2, 4, -5, - 1]","def closest_to_zero(arr):
    closest_val = 0
    closest_diff = float('inf')
    
    for val in arr:
        if abs(val) < abs(closest_diff):
            closest_diff = val
            closest_val = val

    return closest_val

arr1 = [-2, 4, -5, -1]
result = closest_to_zero(arr1)
print(result)",Data Structure,5588,"def closest_to_zero___:
    closest_val = 0
    closest_diff = float___
    
    for val in arr:
        if abs___ < abs___:
            closest_diff = val
            closest_val = val

    return closest_val

arr1 = [-2, 4, -5, -1]
result = closest_to_zero___
print___"
Create a Python program to implement a linear search algorithm to find an element in a list.,"x = [1, 5, 8, 3], n = 8","def linear_search(x, n):
    found = False
    for i in range(len(x)):
        if x[i] == n:
            found = True
            break

    if found == True:
        print('Element', n, 'found at position', i)
    else:
        print('Element', n, 'not found')

x = [1, 5, 8, 3]
n = 8

linear_search(x, n)",Data Structure,5595,"def linear_search___:
    found = False
    for i in range___):
        if x[i] == n:
            found = True
            break

    if found == True:
        print___
    else:
        print___

x = ___
n = 8

linear_search___"
Improve this Python function to double the input array.,"def double_array(arr):
    return arr","def double_array(arr):
    return [element * 2 for element in arr]",Data Structure,5597,"def double_array___:
    return [element * 2 for element in arr]"
Create a program in Python that takes a list as input and returns a new list with every element doubled.,"[1, 2, 3, 4]","def double_list(numbers):
    doubled_list = []
    for num in numbers:
        doubled_list.append(num*2)
    return doubled_list",Data Structure,5598,"def double_list___:
    doubled_list = []
    for num in numbers:
        doubled_list___num*2)
    return doubled_list"
Create a Python program to search for a given item in a list of strings.,"[""hello"", ""world"", ""foo"", ""bar""], ""bar""","def search_for_item(strings, item):
    for string in strings:
        if string == item:
            return True
    return False",Data Structure,5601,"def search_for_item___:
    for string in strings:
        if string == item:
            return True
    return False"
Create a sorting algorithm in Python to sort an unsorted set of names.,"[""John"", ""Jack"", ""Joan"", ""Adam"", ""Elena"", ""Mia""]","def sort_names(names):
    # sorted() returns an alphabetically sorted list
    return sorted(names)

unsorted_names = [""John"", ""Jack"", ""Joan"", ""Adam"", ""Elena"", ""Mia""]

print(sort_names(unsorted_names)) # ['Adam', 'Elena', 'Jack', 'Joan', 'John', 'Mia']",Data Structure,5604,"def sort_names___:
    # sorted() returns an alphabetically sorted list
    return sorted___

unsorted_names = [""John"", ""Jack"", ""Joan"", ""Adam"", ""Elena"", ""Mia""]

print___) # ['Adam', 'Elena', 'Jack', 'Joan', 'John', 'Mia']"
Create an algorithm in Python for calculating the standard deviation of a given set of numbers.,"Numbers: 3, 7, 12, 22, 35","import numpy as np

def calculate_std_dev(nums):
    n = len(nums) 
    std_dev = np.std(nums, axis=0) 
    return std_dev

nums = [3, 7, 12, 22, 35]
print(""Standard Deviation: {:.3f}"".format(calculate_std_dev(nums)))
# Output: Standard Deviation: 11.106",Data Structure,5609,"import numpy as np

def calculate_std_dev___:
    n = len___ 
    std_dev = np.std___ 
    return std_dev

nums = ___
print(""Standard Deviation: ___"".format(calculate_std_dev(nums)))
# Output: Standard Deviation: 11.106"
Create a list comprehension in Python that takes a list of numbers and squares each number in the list.,"[1, 2, 3, 4, 5]","[x**2 for x in [1, 2, 3, 4, 5]]",Data Structure,5610,[x**2 for x in ___]
Generate a program in Python to convert a list of strings to a dictionary where all the values are 1.,"words = [""Hello"", ""World"", ""Welcome""]","def to_dict(words):
    result = {}
    for word in words:
        result[word] = 1
    return result

result = to_dict([""Hello"", ""World"", ""Welcome""])
print(result)",Data Structure,5611,"def to_dict___:
    result = {}
    for word in words:
        result[word] = 1
    return result

result = to_dict___
print___"
Write a function to display a given number of random items from a list in Python.,"<List: [""dog"", ""cat"", ""bird"", ""fish""]
Number of items: 3>","import random

def display_random_items(lst, num):
 random.shuffle(lst)
 return lst[:num]

lst = [""dog"", ""cat"", ""bird"", ""fish""]
num = 3

random_items = display_random_items(lst, num)
print(random_items)",Data Structure,5616,"import random

def display_random_items___:
 random.shuffle___
 return lst[:num]

lst = [""dog"", ""cat"", ""bird"", ""fish""]
num = 3

random_items = display_random_items___
print___"
Generate Python code to find the pair of numbers from an array whose sum is closest to a given number.,"array: [10, 2, 3, 4, 5], target: 8","def closest_sum(array, target):
  diff = float('inf')
  for i in range(len(array) - 1):
    for j in range(i + 1, len(array)):
      pair_sum = array[i] + array[j]
      if abs(target - pair_sum) < diff:
        diff = abs(target - pair_sum)
        result = [array[i], array[j]]
  return result",Data Structure,5617,"def closest_sum___:
  diff = float___
  for i in range___ - 1):
    for j in range___):
      pair_sum = array[i] + array[j]
      if abs___ < diff:
        diff = abs___
        result = [array[i], array[j]]
  return result"
"Create a Python program to calculate the average value of an array and store the result in the variable ""average"".","Input array: [1, 2, 3, 4, 5]","input_array = [1, 2, 3, 4, 5]

# calculate the average value
average = sum(input_array) / len(input_array)

# print result
print(""Average:"", average)

# Output:
Average: 3.0",Data Structure,5618,"input_array = ___

# calculate the average value
average = sum___ / len___

# print result
print___

# Output:
Average: 3.0"
Edit the Python code to store the maximum value of a list in a variable called max_value,"list_values = [21, 15, 11, 17, 12, 29]","list_values = [21, 15, 11, 17, 12, 29]
max_value = max(list_values)",Data Structure,5619,"list_values = ___
max_value = max___"
Create a Python class that sums up the results of a given array of numbers.,"[3, 4, 5, 6, 7]","class SumArray:
    def __init__(self, numbers):
        self.numbers = numbers
    
    def get_sum(self):
        sum = 0 
        for number in self.numbers:
            sum += number
        return sum",Data Structure,5622,"class SumArray:
    def __init_____:
        self.numbers = numbers
    
    def get_sum___:
        sum = 0 
        for number in self.numbers:
            sum += number
        return sum"
"Given a list of directions, create a Python program to find the maximum cumulative sum of the list.","[3, 8, -2, 10, -6]","def max_sum(arr):
 max_sum = 0
 sum = 0
 for num in arr:
 sum += num
 max_sum = max(max_sum, sum)
 return max_sum

max_sum([3, 8, -2, 10, -6])  # 17",Data Structure,5625,"def max_sum___:
 max_sum = 0
 sum = 0
 for num in arr:
 sum += num
 max_sum = max___
 return max_sum

max_sum___  # 17"
Write a function in Python that returns the longest word from a list.,"[""Hello"", ""how"", ""are"", ""you""]","def longest_word(word_list):
    longest = word_list[0]
    for word in word_list[1:]:
        if len(word) > len(longest):
            longest = word
    return longest

words = [""Hello"", ""how"", ""are"", ""you""]

longest_word = longest_word(words)
print(longest_word)",Data Structure,5633,"def longest_word___:
    longest = word_list___
    for word in word_list[1:]:
        if len___ > len___:
            longest = word
    return longest

words = [""Hello"", ""how"", ""are"", ""you""]

longest_word = longest_word___
print___"
Write a Python function to generate all permutations of a given list.,"[1,2,3]","def permutations(input_list):
 if len(input_list) == 0:
 yield []
 else:
 for i in range(len(input_list)):
 first_el = [input_list[i]]
 remainder_list = input_list[:i] + input_list[i+1:]
 for perm in permutations(remainder_list):
 yield first_el + perm",Data Structure,5634,"def permutations___:
 if len___ == 0:
 yield []
 else:
 for i in range___):
 first_el = [input_list[i]]
 remainder_list = input_list[:i] + input_list[i+1:]
 for perm in permutations___:
 yield first_el + perm"
Develop a Python program that prints an alphabetically sorted list of unique words from a given sentence.,"""This sentence contains a handful of words""","sentence = ""This sentence contains a handful of words""
word_list = sentence.split()
unique_words = set(word_list)
sorted_words = sorted(unique_words)

print(sorted_words)

# Output: ['This', 'a', 'contains', 'handful', 'of', 'sentence', 'words']",Data Structure,5636,"sentence = ""This sentence contains a handful of words""
word_list = sentence.split()
unique_words = set___
sorted_words = sorted___

print___

# Output: ['This', 'a', 'contains', 'handful', 'of', 'sentence', 'words']"
Create a sorting algorithm in Python that takes a list of numbers as an input and prints the sorted output.,"[10, 5, 1, 8, 9, 6]","def sort(numbers):
    for i in range(len(numbers)):
        for j in range(i + 1, len(numbers)):
            if numbers[i] > numbers[j]:
                numbers[i], numbers[j] = numbers[j], numbers[i]
    return numbers",Data Structure,5639,"def sort___:
    for i in range___):
        for j in range___):
            if numbers[i] > numbers[j]:
                numbers[i], numbers[j] = numbers[j], numbers[i]
    return numbers"
Write a Python program to create two separate lists containing the even and odd elements of the given list.,"[1, 2, 3, 4, 5, 6, 7, 8]","# Program to create two separate lists containing the even and odd elements of the given list 
given_list = [1, 2, 3, 4, 5, 6, 7, 8] 

even_list = [] 
odd_list = [] 

for element in given_list: 
    if element % 2 == 0 : 
        even_list.append(element) 
    else: 
        odd_list.append(element) 

print(even_list)
print(odd_list)",Data Structure,5646,"# Program to create two separate lists containing the even and odd elements of the given list 
given_list = ___ 

even_list = [] 
odd_list = [] 

for element in given_list: 
    if element % 2 == 0 : 
        even_list___element) 
    else: 
        odd_list___element) 

print___
print___"
Write a function in Python to convert a dictionary into a list and then sort the list alphabetically.,"Example Dictionary: {'a':1, 'b':2, 'c':3}","def dict_to_sorted_list(d):
 # Convert Dictionary to List
 lst = list(d.items())
 
 # Sort List Alphabetically
 lst.sort(key=lambda x: x[0])
 
 return lst
 
example_dict = {'a':1, 'b':2, 'c':3}
sorted_list = dict_to_sorted_list(example_dict)
print(sorted_list)

# Output:
# [('a', 1), ('b', 2), ('c', 3)]",Data Structure,5648,"def dict_to_sorted_list___:
 # Convert Dictionary to List
 lst = list___)
 
 # Sort List Alphabetically
 lst.sort___
 
 return lst
 
example_dict = ___
sorted_list = dict_to_sorted_list___
print___

# Output:
# [___, ___, ___]"
"Write a Python program to determine the sum of the elements of an array, after applying a given function to each array element.","def func(x):
  return x * x

arr = [1, 2, 3, 4]","def element_wise_sum(func, arr):
    sum = 0 
    for elem in arr:
        sum += func(elem)
    return sum

sum = element_wise_sum(func, arr)",Data Structure,5658,"def element_wise_sum___:
    sum = 0 
    for elem in arr:
        sum += func___
    return sum

sum = element_wise_sum___"
Simplify and optimize the following Python code for computing the mean of a list of numbers.,"def mean(numbers):
    total = 0
    for n in numbers:
        total = total + n
    return total / len(numbers)","def mean(numbers):
    return sum(numbers) / len(numbers)",Data Structure,5659,"def mean___:
    return sum___ / len___"
Write a Python program to find the largest three numbers in a list.,"1, 6, 3, 8, 7, 4","my_list = [1, 6, 3, 8, 7, 4]
largest_three = sorted(my_list)[-3:]
print(largest_three)",Data Structure,5660,"my_list = ___
largest_three = sorted___[-3:]
print___"
Create a Python program to sort a list of numbers using the quicksort algorithm.,"[10, 5, 6, 3, 2, 8, 9, 4, 7, 1]","def quicksort(arr):
 if len(arr) <= 1:
  return arr
 pivot = arr[len(arr) // 2]
 left = [x for x in arr if x < pivot]
 middle = [x for x in arr if x == pivot]
 right = [x for x in arr if x > pivot]
 return quicksort(left) + middle + quicksort(right)

arr = [10, 5, 6, 3, 2, 8, 9, 4, 7, 1]
result = quicksort(arr)
print(result)",Data Structure,5661,"def quicksort___:
 if len___ <= 1:
  return arr
 pivot = arr[len___ // 2]
 left = [x for x in arr if x < pivot]
 middle = [x for x in arr if x == pivot]
 right = [x for x in arr if x > pivot]
 return quicksort___ + middle + quicksort___

arr = ___
result = quicksort___
print___"
Write a Python function that finds the maximum element in an array.,"[3, 4, 6, 5, 9, 1, 2]","def find_max(nums):
    max_val = nums[0]
    for num in nums:
        if num > max_val:
            max_val = num
    return max_val

nums = [3, 4, 6, 5, 9, 1, 2]
max_val = find_max(nums)
print(max_val)",Data Structure,5664,"def find_max___:
    max_val = nums___
    for num in nums:
        if num > max_val:
            max_val = num
    return max_val

nums = ___
max_val = find_max___
print___"
Create a script to list the content of a given directory in Linux.,Path: /usr,"#!/usr/bin/env python

import os

path = ""/usr""

for root, dirs, files in os.walk(path):
 for file in files:
 print(os.path.join(root, file))",Data Structure,5665,"#!/usr/bin/env python

import os

path = ""/usr""

for root, dirs, files in os.walk___:
 for file in files:
 print___)"
Write a Python program to find the index of an element in an array.,"array = [3, 7, 9, 10] 
 element = 7","def findIndex(array, element): 
  for i in range(len(array)): 
    if(array[i] == element): 
      return i 
  return -1
  
# Driver code 
print(findIndex([3, 7, 9, 10], 7))",Data Structure,5669,"def findIndex___: 
  for i in range___): 
    if___: 
      return i 
  return -1
  
# Driver code 
print___)"
Create a function in Python that takes a list as an argument and returns the list in reverse order.,"[1,2,3,4,5]","def reverse_list(lst):
  return lst[::-1]",Data Structure,5674,"def reverse_list___:
  return lst[::-1]"
You are given a data set. Compute the mean of the data set using Python.,"[1, 2, 5, 10, 20, 50]","def compute_mean(data):
    total = 0
    for num in data:
        total += num
    return total/len(data)

data = [1, 2, 5, 10, 20, 50]

result = compute_mean(data)
print(result)",Data Structure,5676,"def compute_mean___:
    total = 0
    for num in data:
        total += num
    return total/len___

data = ___

result = compute_mean___
print___"
Create a Python program to sort a list of tuples based on the second elements of the tuples.,"l = [(1, 3), (2, 5), (4, 1), (6, 4)]","def sortTuples(l): 
    l.sort(key = lambda x: x[1]) 
    return l
 
# Sample Output 
# [(4, 1), (1, 3), (6, 4), (2, 5)] 
print(sortTuples(l))",Data Structure,5678,"def sortTuples___: 
    l.sort___ 
    return l
 
# Sample Output 
# [___, ___, ___, ___] 
print___)"
Create a Python script for a sorting algorithm that can efficiently sort an array of integers.,"[8, 3, 5, 1, 4, 6]","def bubble_sort(lst):
 for i in range(len(lst)):
  for j in range(0, len(lst) - i - 1): 
   if lst[j] > lst[j + 1] : 
    lst[j], lst[j + 1] = lst[j + 1], lst[j]
 return lst
 
lst = [8, 3, 5, 1, 4, 6]
sorted_list = bubble_sort(lst)

print(""Sorted Array:"", sorted_list)",Data Structure,5679,"def bubble_sort___:
 for i in range___):
  for j in range___ - i - 1): 
   if lst[j] > lst[j + 1] : 
    lst[j], lst[j + 1] = lst[j + 1], lst[j]
 return lst
 
lst = ___
sorted_list = bubble_sort___

print___"
Optimize the following Python program to find the given number in a list.,"A list = [2, 4, 9, 8, 10]
Number = 8","def find_number(lst, num):
  for i, v in enumerate(lst):
    if v == num:
      return i
  
  return -1

list_of_numbers = [2, 4, 9, 8, 10]
number_to_find = 8

# Find the given number in the list
index = find_number(list_of_numbers, number_to_find)
if index != -1:
  print(f'Number {number_to_find} found at index {index}.')
else:
  print('Number not found.')",Data Structure,5681,"def find_number___:
  for i, v in enumerate___:
    if v == num:
      return i
  
  return -1

list_of_numbers = ___
number_to_find = 8

# Find the given number in the list
index = find_number___
if index != -1:
  print(f'Number ___ found at index ___.')
else:
  print___"
Write a function in Python to find the maximum two numbers in a list.,"List: [2, 4, 5, 9, 10, 11]","def max_two(list):
    #sort the list in ascending order
    list.sort()
    #return the last two elements
    return list[-2:]

#example
number_list = [2, 4, 5, 9, 10, 11]
result = max_two(number_list)

print(result)
# Output: [10, 11]",Data Structure,5682,"def max_two___:
    #sort the list in ascending order
    list.sort()
    #return the last two elements
    return list[-2:]

#example
number_list = ___
result = max_two___

print___
# Output: ___"
Compose a program in Python to iterate through a list of integers and creates a new list which contains the square of each number of the first list,"[1, 2, 3, 4]","def squared_list(input_list): 
    output_list = [x ** 2 for x in input_list] 
    return output_list 

input_list = [1, 2, 3, 4]
output_list = squared_list(input_list) 
print(output_list)",Data Structure,5683,"def squared_list___: 
    output_list = [x ** 2 for x in input_list] 
    return output_list 

input_list = ___
output_list = squared_list___ 
print___"
Create a Python program to scale the values of an array by adding a scalar value and then dividing each element of the new array by a scalar value.,"[1,2,3], scalar:2","def scaleArray(arr, s1, s2):
  scaledArr = []
  for x in arr:
    scaledArr.append((x + s1) / s2)
  return scaledArr

arr = [1,2,3] 
scaledArr = scaleArray(arr, 2, 2)
print(scaledArr)",Data Structure,5687,"def scaleArray___:
  scaledArr = []
  for x in arr:
    scaledArr___(x + s1) / s2)
  return scaledArr

arr = ___ 
scaledArr = scaleArray___
print___"
Create a python program to find all possible combination of arrangements of a list of words.,"['dog', 'cat', 'fish']","import itertools 
words = ['dog', 'cat', 'fish'] 
result = list(itertools.permutations(words)) 

for word in result: 
    print(word)",Data Structure,5690,"import itertools 
words = ['dog', 'cat', 'fish'] 
result = list___) 

for word in result: 
    print___"
Sort this list of numbers in ascending order using Python.,"[3, 1, 6, 9, 10, 5]","list = [3, 1, 6, 9, 10, 5]
list.sort()
print(list)  # prints [1, 3, 5, 6, 9, 10]",Data Structure,5691,"list = ___
list.sort()
print___  # prints [1, 3, 5, 6, 9, 10]"
Write a Python program to search a list of box ids for duplicates and return a list of all duplicated items.,"box_ids = [‘abc123’, ‘def456’, ‘ghi789’, ‘abc123’]","duplicates = []
 
for box_id in box_ids:
    if box_ids.count(box_id) > 1 and box_id not in duplicates:
        duplicates.append(box_id)
 
print(duplicates)",Data Structure,5695,"duplicates = []
 
for box_id in box_ids:
    if box_ids.count___ > 1 and box_id not in duplicates:
        duplicates___box_id)
 
print___"
Create a Python script to apply a log transformation to every element of a NumPy array.,"[0.1, 0.4, 0.9, 2.2]","import numpy as np

arr = np.array([0.1, 0.4, 0.9, 2.2])
# Applying log transformation
arr = np.log(arr)

print('After applying log transformation to every element of the array:')
print(arr)",Data Structure,5696,"import numpy as np

arr = np.array___
# Applying log transformation
arr = np.log___

print___
print___"
Create a program in Python to remove all the occurrences of an item from a list.,"List: [1, 2, 3, 4, 2, 5, 2]
Item to Remove: 2","def removeItem(list, item):
    # loop through the list
    for i in list:
        # check if the element is the item to remove
        if i == item:
            # remove the item
            list.remove(i)
    # return the list
    return list

#example
list = [1, 2, 3, 4, 2, 5, 2]
result = removeItem(list, 2)

print(result)
# Output: [1, 3, 4, 5]",Data Structure,5702,"def removeItem___:
    # loop through the list
    for i in list:
        # check if the element is the item to remove
        if i == item:
            # remove the item
            list___i)
    # return the list
    return list

#example
list = ___
result = removeItem___

print___
# Output: ___"
"Generate a Python program to solve the following problem: given an array of integers, find the number of pairs of integers whose sum is equal to zero.","[-5, -4, -2, 0, 2, 5]","def pairs_sum_to_zero(array):
  pairs = []
  for i in range(len(array)):
    for j in range(i+1, len(array)):
      if array[i] + array[j] == 0:
        pairs.append([array[i], array[j]])
  return len(pairs)",Data Structure,5703,"def pairs_sum_to_zero___:
  pairs = []
  for i in range___):
    for j in range___):
      if array[i] + array[j] == 0:
        pairs___[array[i], array[j]])
  return len___"
Write a Python function to add 5 to each of the numbers in a list.,"[1, 2, 3, 4, 5]","def add_five(nums):
    return [num + 5 for num in nums]

result = add_five([1, 2, 3, 4, 5])
print(result)",Data Structure,5705,"def add_five___:
    return [num + 5 for num in nums]

result = add_five___
print___"
Construct a Python program to remove duplicate values from a list.,"[1, 2, 1, 4, 6, 2]","def remove_duplicates(list):
    new_list = []
    for item in list:
        if item not in new_list:
            new_list.append(item)
    return new_list",Data Structure,5706,"def remove_duplicates___:
    new_list = []
    for item in list:
        if item not in new_list:
            new_list___item)
    return new_list"
Develop a Python program to calculate the sum of all the elements in a given 2D array.,"[[1, 2],
 [3, 4],
 [5, 6]]","def sum_2d_array(array):
  # Initialize sum
  _sum = 0
  # Iterate over array and add each element
  for row in array:
    for element in row:
      _sum += element
  # Return sum
  return _sum

arr = [[1, 2], [3, 4], [5, 6]]
print(sum_2d_array(arr))",Data Structure,5707,"def sum_2d_array___:
  # Initialize sum
  _sum = 0
  # Iterate over array and add each element
  for row in array:
    for element in row:
      _sum += element
  # Return sum
  return _sum

arr = [___, ___, ___]
print___)"
Write a python code that sorts the values of the given list.,"[52, 34, 12, 33, 16]","unsorted_list = [52, 34, 12, 33, 16]

sorted_list = sorted(unsorted_list)

print(sorted_list) # prints [12, 16, 33, 34, 52]",Data Structure,5709,"unsorted_list = ___

sorted_list = sorted___

print___ # prints [12, 16, 33, 34, 52]"
Generate a Python script to sort a list of strings in ascending alphabetical order.,"['cat', 'apple', 'elephant', 'dog']","list = ['cat', 'apple', 'elephant', 'dog']

list.sort()

print(list) # Output: ['apple', 'cat', 'dog', 'elephant']",Data Structure,5710,"list = ['cat', 'apple', 'elephant', 'dog']

list.sort()

print___ # Output: ['apple', 'cat', 'dog', 'elephant']"
Create a program in Python that will calculate the mean of a given set of numbers.,"[1, 2, 3, 4, 5]","nums = [1, 2, 3, 4, 5]

def mean(nums):
 total = 0
 for i in nums:
  total += i
 mean = total/len(nums)
 return mean

print(mean(nums)) # 3.0",Data Structure,5713,"nums = ___

def mean___:
 total = 0
 for i in nums:
  total += i
 mean = total/len___
 return mean

print___) # 3.0"
Write a Python program to generate the powerset of a given set.,"[1, 2, 3]","def powerset(s):
    x = len(s)
    powerset = []
    for i in range(1 << x):
        subset = [s[j] for j in range(x) if (i & (1 << j))]
        powerset.append(subset)
    return powerset",Data Structure,5715,"def powerset___:
    x = len___
    powerset = []
    for i in range___:
        subset = [s[j] for j in range___ if ___)]
        powerset___subset)
    return powerset"
Convert a set of Python functions to JavaScript.,"def say_hello(name):
    return ""Hello, {}!"".format(name)

def add_two(num):
    return num + 2","function say_hello(name) {
 return `Hello, ${name}!`;
}

function add_two(num) {
 return num + 2;
}",Data Structure,5716,"function say_hello___ {
 return `Hello, $___!`;
}

function add_two___ {
 return num + 2;
}"
Create a function in Python which gathers the maximum and minimum values from a list of numbers.,"[1, 4, 8, 3, 5, 9, 7]","def min_max(nums):
  min_val = min(nums)
  max_val = max(nums)
  return min_val, max_val

nums = [1, 4, 8, 3, 5, 9, 7]
min_val, max_val = min_max(nums)
print('Minimum value:', min_val)
print('Maximum value:', max_val)",Data Structure,5718,"def min_max___:
  min_val = min___
  max_val = max___
  return min_val, max_val

nums = ___
min_val, max_val = min_max___
print___
print___"
Create an algorithm in Python for removing all duplicates from an array.,"arr = [1, 2, 4, 4, 1, 5, 2]","def removeDuplicates(arr): 
    res = [] 
    seen = set() 
    for e in arr:
        if e not in seen: 
            res.append(e) 
            seen.add(e) 
      
    return res 
  
print(removeDuplicates([1, 2, 4, 4, 1, 5, 2]))",Data Structure,5720,"def removeDuplicates___: 
    res = [] 
    seen = set() 
    for e in arr:
        if e not in seen: 
            res___e) 
            seen.add___ 
      
    return res 
  
print___)"
Convert the following Python List into a Dictionary.,"lst = [[1, 2], [3, 4], [5, 6]]","dict_data = { lst[i][0] : lst[i][1] for i in range(len(lst)) }
 
print(dict_data)",Data Structure,5724,"dict_data = ___
 
print___"
Create a Python script to parse a list of IP addresses into readable fields.,"IPs = [""123.235.123.245"", ""54.72.56.14"", ""182.193.146.172""]","import re

IPs = [""123.235.123.245"", ""54.72.56.14"", ""182.193.146.172""]
for ip in IPs:
 ip_parts = ip.split('.')
 octet1 = ip_parts[0]
 octet2 = ip_parts[1]
 octet3 = ip_parts[2]
 octet4 = ip_parts[3]

 print(f'The first octet is {octet1}, the second is {octet2}, the third is {octet3}, and the fourth is {octet4}.')",Data Structure,5728,"import re

IPs = [""123.235.123.245"", ""54.72.56.14"", ""182.193.146.172""]
for ip in IPs:
 ip_parts = ip.split___
 octet1 = ip_parts___
 octet2 = ip_parts___
 octet3 = ip_parts___
 octet4 = ip_parts___

 print(f'The first octet is ___, the second is ___, the third is ___, and the fourth is ___.')"
Generate a function in Python that takes a list and returns an ordered list,"mylist = [5, 9, 1, 4]","def order_list(mylist):
    mylist.sort()
    return mylist

print(""Ordered list: "", order_list(mylist))",Data Structure,5731,"def order_list___:
    mylist.sort()
    return mylist

print___)"
Compose a Python function that sorts a list using insertion sort.,"[4, 1, 3, 6, 2, 5]","def insertion_sort(arr):
    for i in range(1, len(arr)):
        current_value = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > current_value:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = current_value
    return arr

arr = [4, 1, 3, 6, 2, 5]
print(insertion_sort(arr))",Data Structure,5732,"def insertion_sort___:
    for i in range___):
        current_value = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > current_value:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = current_value
    return arr

arr = ___
print___)"
Write a Python script to compare two lists of numbers. The output should be the elements in the first list that are not in the second list.,"listA = [1, 2, 3, 4, 5]
listB = [2, 4, 6, 8, 10]","listC = [x for x in listA if x not in listB]
print(listC) # prints [1, 3, 5]",Data Structure,5734,"listC = [x for x in listA if x not in listB]
print___ # prints [1, 3, 5]"
Can you design an algorithm in Python for finding the largest element in a list?,"[2, 4, 9, 1, 8]","def max_element(lst):
    max_element = lst[0]
    for element in lst:
        if element > max_element:
            max_element = element
    return max_element",Data Structure,5739,"def max_element___:
    max_element = lst___
    for element in lst:
        if element > max_element:
            max_element = element
    return max_element"
Create a class in Python that implements the count() method to count the number of elements in a given array.,"[1, 2, 3, 4]","class ArrayCounter:
 def __init__(self, array):
 self.array = array
 
 def count(self):
 return len(self.array)

arr_counter = ArrayCounter([1, 2, 3, 4])
print(arr_counter.count())",Data Structure,5743,"class ArrayCounter:
 def __init_____:
 self.array = array
 
 def count___:
 return len___

arr_counter = ArrayCounter___
print___)"
Write a Python program to fliter a list of strings and return a new list containing only the strings containing the letter 'a'.,"['ant', 'bar', 'cat', 'dog', 'eel']","list_strings = ['ant', 'bar', 'cat', 'dog', 'eel']

# using list comprehension
filtered_list = [x for x in list_strings if 'a' in x]
 
print(filtered_list)
# output: ['ant', 'bar', 'cat']",Data Structure,5744,"list_strings = ['ant', 'bar', 'cat', 'dog', 'eel']

# using list comprehension
filtered_list = [x for x in list_strings if 'a' in x]
 
print___
# output: ['ant', 'bar', 'cat']"
"Given an array of numbers, write a Python program to calculate the sum of the integers in the array.","[5, 2, 8, 4, 23]","def sum_integer(arr):
    """"""
    Args :
        arr (list): List of integer
    
    Returns :
        int : Sum of integers
    """"""
    
    res = 0
    
    for num in arr:
        res += num
    
    return res

sum_integer([5, 2, 8, 4, 23])
# output: 42",Data Structure,5745,"def sum_integer___:
    """"""
    Args :
        arr ___: List of integer
    
    Returns :
        int : Sum of integers
    """"""
    
    res = 0
    
    for num in arr:
        res += num
    
    return res

sum_integer___
# output: 42"
"Create a Python function that searches a given list of strings for a match. The function should return true if any of the strings match, and false if none of the strings match.","list = ['Hello', 'World', '!']","def search_list(lst, s):
 for item in lst:
  if item == s:
   return True
 return False",Data Structure,5746,"def search_list___:
 for item in lst:
  if item == s:
   return True
 return False"
Create a Python script that takes in two lists as inputs and generates a list containing all possible pairings between elements from both lists.,"Input 1: [1, 2, 3]
Input 2: ['a', 'b', 'c']","list1 = [1,2,3]
list2 = ['a', 'b', 'c']

pairs = []

for x in list1:
    for y in list2:
        pairs.append((x,y))

print(pairs) // Output: [(1, 'a'), (1, 'b'), (1, 'c'), (2, 'a'), (2, 'b'), (2, 'c'), (3, 'a'), (3, 'b'), (3, 'c')]",Data Structure,5749,"list1 = ___
list2 = ['a', 'b', 'c']

pairs = []

for x in list1:
    for y in list2:
        pairs___(x,y))

print___ // Output: [___, ___, ___, ___, ___, ___, ___, ___, ___]"
Generate a Python program to calculate the most common value in a list,"['a', 'a', 'b', 'd', 'e', 'a']","def most_common(list):
    dict = {}
    for item in list:
        dict[item] = dict.get(item,0) + 1
    max_count = 0
    max_item = list[0]
    for k,v in dict.items():
        if v > max_count:
            max_count = v
            max_item = k
    return max_item

list = ['a', 'a', 'b', 'd', 'e', 'a']
result = most_common(list)
print(result)",Data Structure,5750,"def most_common___:
    dict = {}
    for item in list:
        dict[item] = dict.get___ + 1
    max_count = 0
    max_item = list___
    for k,v in dict.items():
        if v > max_count:
            max_count = v
            max_item = k
    return max_item

list = ['a', 'a', 'b', 'd', 'e', 'a']
result = most_common___
print___"
Create a Python program to filter a list of words and keep only those words that are longer than 8 characters.,"['hello', 'world', 'this', 'is', 'a', 'test', 'foobar']","# Filter list 
words = ['hello', 'world', 'this', 'is', 'a', 'test', 'foobar']

# Keep only words longer than 8 characters
filtered_words = [word for word in words if len(word) > 8]

print(filtered_words)
# Output: ['foobar']",Data Structure,5754,"# Filter list 
words = ['hello', 'world', 'this', 'is', 'a', 'test', 'foobar']

# Keep only words longer than 8 characters
filtered_words = [word for word in words if len___ > 8]

print___
# Output: ['foobar']"
Generate a Python program to create a histogram from a data set.,"[2, 4, 5, 3, 5, 6, 8, 2]","import matplotlib.pyplot as plt
 
data = [2, 4, 5, 3, 5, 6, 8, 2]
plt.hist(data, bins = 5) 
 
plt.title(""Histogram"") 
plt.xlabel(""Values"")
plt.ylabel(""Frequency"")
plt.show()",Data Structure,5755,"import matplotlib.pyplot as plt
 
data = ___
plt.hist___ 
 
plt.title___ 
plt.xlabel___
plt.ylabel___
plt.show()"
Generate a list of zeros of length m using Python,m = 10,"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",Data Structure,5757,___
Write a function to remove all elements from a Python list that are divisible by a given number.,"mylist = [7, 8, 15, 21, 24]
num = 3","def remove_divisible(lst, n):
    new_list = []
    for item in lst:
        if item % n != 0:
            new_list.append(item)
    return new_list

mylist = [7, 8, 15, 21, 24]
num = 3

print(remove_divisible(mylist, num)) # [7, 8, 21]",Data Structure,5762,"def remove_divisible___:
    new_list = []
    for item in lst:
        if item % n != 0:
            new_list___item)
    return new_list

mylist = ___
num = 3

print___) # [7, 8, 21]"
Create a class in Python that can generate a new instance of itself given a list of arguments,"list = [""name"", ""age"", ""gender""]","class Student():
    def __init__(self, name, age, gender):
        self.name=name
        self.age=age
        self.gender=gender
    def generate(self, args):
        return Student(*args)",Data Structure,5764,"class Student():
    def __init_____:
        self.name=name
        self.age=age
        self.gender=gender
    def generate___:
        return Student___"
Write a Python program to check if an element exists within a list.,"my_list = [1, 3, 5 ,7, 9]","def find_elm(lst, elm):
  return elm in lst

print(find_elm(my_list, 7)) # True",Data Structure,5768,"def find_elm___:
  return elm in lst

print___) # True"
Generate an optimized code in Python to search an array and find the most frequent number.,"array = [3, 4, 6, 3, 2, 8, 6, 7, 3]","from collections import Counter

def find_most_frequent(array):
  c = Counter(array)
  return c.most_common(1)[0][0]

array = [3, 4, 6, 3, 2, 8, 6, 7, 3]

print(find_most_frequent(array)) # 3",Data Structure,5772,"from collections import Counter

def find_most_frequent___:
  c = Counter___
  return c.most_common___[0][0]

array = ___

print___) # 3"
Optimize an existing Python code snippet that sorts a list of integers in ascending order. The code should be optimized for speed and should not use any libraries.,"unsorted_list = [2, 4, 1, 5, 3]","def bubble_sort(lst):
 n = len(lst)
    
 for i in range(n-1):
 for j in range(0, n-i-1):
 if lst[j] > lst[j+1]:
 lst[j], lst[j+1] = lst[j], lst[j+1]
 
 sorted_list = bubble_sort(unsorted_list)",Data Structure,5773,"def bubble_sort___:
 n = len___
    
 for i in range___:
 for j in range___:
 if lst[j] > lst[j+1]:
 lst[j], lst[j+1] = lst[j], lst[j+1]
 
 sorted_list = bubble_sort___"
Write a Python program to sort the given list of lists by their third elements.,"my_list = [[1, 2, 5], [3, 4, 1], [7, 8, 9]]","def sort_by_third_elements(list_of_lists):
    return sorted(list_of_lists, key=lambda x: x[2])

my_list = [[1, 2, 5], [3, 4, 1], [7, 8, 9]]
print(sort_by_third_elements(my_list))
# Output: [[3, 4, 1], [1, 2, 5], [7, 8, 9]]",Data Structure,5776,"def sort_by_third_elements___:
    return sorted___

my_list = [___, ___, ___]
print___)
# Output: [___, ___, ___]"
Create a python program to calculate the mean of the given list.,"list = [1, 2, 3, 4, 5]","def mean(list):
    """"""Calculate the mean of the given list.""""""
    total = 0
    for i in list:
        total += i
    return total / len(list)

# Usage Example
list = [1, 2, 3, 4, 5]
mean = mean(list)
print(mean)  # 3.0",Data Structure,5778,"def mean___:
    """"""Calculate the mean of the given list.""""""
    total = 0
    for i in list:
        total += i
    return total / len___

# Usage Example
list = ___
mean = mean___
print___  # 3.0"
Convert the following Python loop into a list comprehension.,"for x in range(0, 5):
    if (x%2 == 0):
        print(x)","# Solution
[x for x in range(0,5) if (x%2 == 0)]",Data Structure,5779,"# Solution
[x for x in range___ if ___]"
Write a Python program to search for a given number in a sorted list using binary search,"[1, 2, 4, 8, 16, 32]","def binary_search(lst, num): 
    start = 0
    end = len(lst) - 1
    while start <= end: 
        mid = (start + end)//2
        if lst[mid] == num: 
            return mid 
        elif lst[mid] > num: 
            end = mid - 1
        else: 
            start = mid + 1
    return -1",Data Structure,5780,"def binary_search___: 
    start = 0
    end = len___ - 1
    while start <= end: 
        mid = ___//2
        if lst[mid] == num: 
            return mid 
        elif lst[mid] > num: 
            end = mid - 1
        else: 
            start = mid + 1
    return -1"
Write a Python program to calculate the difference between the lowest and highest value for an array of integers.,"[12, 24, 3, 8, -1]","def diffHighestLowest(arr):
    lowest = min(arr)
    highest = max(arr)
    return highest - lowest

arr = [12, 24, 3, 8, -1]
difference = diffHighestLowest(arr)
print(difference)  # 25",Data Structure,5782,"def diffHighestLowest___:
    lowest = min___
    highest = max___
    return highest - lowest

arr = [12, 24, 3, 8, -1]
difference = diffHighestLowest___
print___  # 25"
Create an optimization algorithm in Python which finds the smallest number in an array of integers.,"[20, 8, 7, 22, 32]","def find_smallest_int(arr):
    smallest_num = arr[0]
    for num in arr:
        if num < smallest_num:
            smallest_num = num
    return smallest_num
 
arr = [20, 8, 7, 22, 32]
smallest_num = find_smallest_int(arr)
 
print(""The smallest number is"", smallest_num)",Data Structure,5785,"def find_smallest_int___:
    smallest_num = arr___
    for num in arr:
        if num < smallest_num:
            smallest_num = num
    return smallest_num
 
arr = ___
smallest_num = find_smallest_int___
 
print___"
Generate a Python script for sorting a list of items alphabetically.,"items = [""Apple"", ""Banana"", ""Cherry"", ""Avocado""]","def sort_items(items):
  items.sort()
  return items

print(sort_items(items))

# Output
['Apple', 'Avocado', 'Banana', 'Cherry']",Data Structure,5792,"def sort_items___:
  items.sort()
  return items

print___)

# Output
['Apple', 'Avocado', 'Banana', 'Cherry']"
Create a python function that takes a list as an argument and returns a list with all the values doubled.,"lst = [2, 4, 6]","def double_list(lst):
    return [x*2 for x in lst]",Data Structure,5794,"def double_list___:
    return [x*2 for x in lst]"
"Create a python script that takes a list of numbers, shuffles them and prints the list.","[1, 2, 3, 4, 5]","import random

mylist = [1, 2, 3, 4, 5]
random.shuffle(mylist)

print(mylist)",Data Structure,5795,"import random

mylist = ___
random.shuffle___

print___"
"Create a Python program that given an array of strings, returns an array with all the strings that have a length of more than 10 characters.","[ ""example"", ""string"", ""webapp"", ""happiness"", ""testcase"", ""application"" ]","def getLongStrings(arr):
 return [s for s in arr if len(s) > 10]
 
long_strings = getLongStrings([""example"", ""string"", ""webapp"", ""happiness"", ""testcase"", ""application""]) 
print(long_strings)",Data Structure,5798,"def getLongStrings___:
 return [s for s in arr if len___ > 10]
 
long_strings = getLongStrings___ 
print___"
Write a Python program to normalize a list of words that contains upper and lowercase letters.,"List of words: [""HeLlO"", ""wOrlD""]","def normalize(lst):
 return [word.lower() for word in lst]",Data Structure,5799,"def normalize___:
 return [word.lower() for word in lst]"
"Given a list of numbers, write a function in Python that returns the average of the numbers.","[4, 2, 6, 8, 10]","def average_list(list):
 total = 0
 for item in list:
  total += item
 return total / len(list)

list = [4,2,6,8,10]
print(average_list(list)) # Output: 6.0",Data Structure,5801,"def average_list___:
 total = 0
 for item in list:
  total += item
 return total / len___

list = ___
print___) # Output: 6.0"
Create a script in any language to pass two arrays of different lengths and return a new array that is a combination of the two.,"array1 = [1, 2, 3, 4], array2 = [5, 6]","# Python
def combine_arrays(arr1, arr2):
  combined_arr = [x for x in arr1]
  for i in arr2:
    combined_arr.append(i)
  return combined_arr

# JavaScript 
function combineArrays(arr1, arr2) {
  let combinedArr = [...arr1];
  for (let i of arr2) {
    combinedArr.push(i);
  }
  return combinedArr;
}",Data Structure,5803,"# Python
def combine_arrays___:
  combined_arr = [x for x in arr1]
  for i in arr2:
    combined_arr___i)
  return combined_arr

# JavaScript 
function combineArrays___ {
  let combinedArr = [...arr1];
  for ___ {
    combinedArr.push___;
  }
  return combinedArr;
}"
Create an algorithm in Python to check whether an array has even or odd number of elements.,"[1, 2, 3, 4]","def is_array_even(arr): 
  if len(arr)%2 == 0:
    return True
  else:
    return False",Data Structure,5807,"def is_array_even___: 
  if len___%2 == 0:
    return True
  else:
    return False"
Create a function in Python that takes a list as an argument and removes any duplicate values in the list.,"[1, 2, 3, 4, 2]","def remove_duplicates(my_list):
  new_list = []
  for num in my_list:
    if num not in new_list:
      new_list.append(num)
  return new_list",Data Structure,5808,"def remove_duplicates___:
  new_list = []
  for num in my_list:
    if num not in new_list:
      new_list___num)
  return new_list"
Write a Python program to create multiple directories from the given list.,"[""dir1"", ""dir2"", ""dir3""]","import os

dirs_list = [""dir1"", ""dir2"", ""dir3""]

for d in dirs_list:
    os.makedirs(d)",Data Structure,5812,"import os

dirs_list = [""dir1"", ""dir2"", ""dir3""]

for d in dirs_list:
    os.makedirs___"
Generate a correct python program to return the second biggest element in a given list.,"[1, 5, 9, 4, 16, 11]","def second_biggest(lst):
 max1 = 0
 max2 = 0
 for num in lst:
 if num > max1:
 max1 = num
 elif num > max2:
 max2 = num
 return max2

second_largest_num = second_biggest([1, 5, 9, 4, 16, 11])
print(second_largest_num)",Data Structure,5814,"def second_biggest___:
 max1 = 0
 max2 = 0
 for num in lst:
 if num > max1:
 max1 = num
 elif num > max2:
 max2 = num
 return max2

second_largest_num = second_biggest___
print___"
Write a Python program to calculate the tax for an item given a set of tax rates.,"Tax Brackets: [0.01, 0.05, 0.1, 0.15, 0.2], Item Price: $110","def calculate_tax(brackets, price):
 taxamount = 0
 for i in range(len(brackets)):
 if price>=100*(i+1):
 taxamount += 100*brackets[i]
  else:
 taxamount += (price%100)*brackets[i]
  break
 return taxamount

tax_brackets = [0.01, 0.05, 0.1, 0.15, 0.2]
item_price = 110 

tax = calculate_tax(tax_brackets, item_price)
print(tax)",Data Structure,5816,"def calculate_tax___:
 taxamount = 0
 for i in range___):
 if price>=100*___:
 taxamount += 100*brackets[i]
  else:
 taxamount += ___*brackets[i]
  break
 return taxamount

tax_brackets = [0.01, 0.05, 0.1, 0.15, 0.2]
item_price = 110 

tax = calculate_tax___
print___"
Create a Python program that will take an array of integers as input and output a reversed version of the array.,"[1,2,3,4,5]","def reverseArray(arr): 
    return arr[::-1] 
  
arr = [1,2,3,4,5] 
reverseArr = reverseArray(arr) 
  
print(""Reversed array is"", reverseArr)",Data Structure,5817,"def reverseArray___: 
    return arr[::-1] 
  
arr = ___ 
reverseArr = reverseArray___ 
  
print___"
Write a Python expression that returns the element at index 2 of a list.,"[""Apple"", ""Banana"", ""Cherry"", ""Date""]","list[2] # returns ""Cherry""",Data Structure,5819,"list___ # returns ""Cherry"""
Write a Python script to convert a list of words into a dictionary that details the frequencies of each word.,"['word', 'word', 'words', 'python']","word_dict = {}

# Count frequency of each word
for word in input_list:
 if word in word_dict.keys():
 word_dict[word] += 1
 else:
 word_dict[word] = 1

print(word_dict)
# Output: {'word': 2, 'words': 1, 'python': 1}",Data Structure,5824,"word_dict = {}

# Count frequency of each word
for word in input_list:
 if word in word_dict.keys():
 word_dict[word] += 1
 else:
 word_dict[word] = 1

print___
# Output: ___"
Write a function in Python that uses an exponential function to calculate the number of steps needed for a particular sorting algorithm for a given array,"A=[1,2,3,4], sorting algorithm is Merge Sort","def merge_complexity(arr, sort):
    n = len(arr)

    # base case
    if (n <= 1): 
        return 0

    # Merge sort complexity calculation
    if (sort == ""Merge Sort""): 
        return (n * log(n, 2))

# Driver code 
A = [1, 2, 3, 4]
print(merge_complexity(A, 'Merge Sort'))",Data Structure,5825,"def merge_complexity___:
    n = len___

    # base case
    if ___: 
        return 0

    # Merge sort complexity calculation
    if ___: 
        return ___)

# Driver code 
A = ___
print___)"
Generate code for a function in Python for finding the sum of a given list of numbers.,"[4, 7, 6, 2]","def add_numbers(numbers):
    """"""
    Find the sum of a given list of numbers.
    Args:
        numbers: a list of numbers.
    Returns:
        The sum of the numbers.
    """"""
    sum = 0

    # Iterate over numbers
    for num in numbers:
        # Add number to total
        sum += num

    return sum

total = add_numbers([4, 7, 6, 2])

print(total)",Data Structure,5831,"def add_numbers___:
    """"""
    Find the sum of a given list of numbers.
    Args:
        numbers: a list of numbers.
    Returns:
        The sum of the numbers.
    """"""
    sum = 0

    # Iterate over numbers
    for num in numbers:
        # Add number to total
        sum += num

    return sum

total = add_numbers___

print___"
Design a computer program to sort the list according to alphabetical order.,"[""python"", ""javascript"", ""java"", ""ruby""]","def alphabetical_sort(words):
    return sorted(words)

list_of_words = [""python"", ""javascript"", ""java"", ""ruby""]
sorted_list = alphabetical_sort(list_of_words)
print(sorted_list)",Data Structure,5836,"def alphabetical_sort___:
    return sorted___

list_of_words = [""python"", ""javascript"", ""java"", ""ruby""]
sorted_list = alphabetical_sort___
print___"
Write a Python program to compute the sum of items in a given list and multiply it by a given number.,"{'list': [1, 3, 5, 7], 'num': 3}","#initialize variables
list = [1, 3, 5, 7]
num = 3

# compute sum
sum = 0
for i in list:
    sum = sum + i

# compute product
result = sum * num

# Print result
print(""Result: "", result)",Data Structure,5845,"#initialize variables
list = ___
num = 3

# compute sum
sum = 0
for i in list:
    sum = sum + i

# compute product
result = sum * num

# Print result
print___"
Generate a list of combinations of three numbers from a given array in Python.,"[1, 2, 3, 4, 5]","combinations = []
for i in range(len(arr)):
    for j in range(i+1, len(arr)):
        for k in range(j+1, len(arr)):
            combinations.append([arr[i], arr[j], arr[k]])",Data Structure,5847,"combinations = []
for i in range___):
    for j in range___):
        for k in range___):
            combinations___[arr[i], arr[j], arr[k]])"
Create a Python program to normalize a given data set.,"[2, 6, 25, -25, 9]","def normalize(nums):
    min_Num = min(nums)
    max_num = max(nums)
    
    for i in range(len(nums)):
        nums[i] = (nums[i] - min_Num)/ (max_num - min_Num)
    
    return nums",Data Structure,5848,"def normalize___:
    min_Num = min___
    max_num = max___
    
    for i in range___):
        nums[i] = ___/ ___
    
    return nums"
Create a Python script to return the first two elements of a list.,"[1,2,3,4,5]","def get_first_two(list):
    return list[:2]

list = [1,2,3,4,5] 
print(get_first_two(list)) # returns [1,2]",Data Structure,5849,"def get_first_two___:
    return list[:2]

list = ___ 
print___) # returns [1,2]"
Create a Python script to convert a given list of integers to a new list of strings.,"[1, 2, 3]","def to_string_list(lst):
    return [str(x) for x in lst]

int_list = [1, 2, 3]
string_list = to_string_list(int_list)
print(string_list)

## Output
['1', '2', '3']",Data Structure,5851,"def to_string_list___:
    return [str___ for x in lst]

int_list = ___
string_list = to_string_list___
print___

## Output
['1', '2', '3']"
"Write a python program that takes a list of strings, checks if any of them are palindromes, and returns 'True' if at least one of them is a palindrome.","['abc', 'bob', 'kayak']","def is_palindrome(strings):
    for string in strings:
        reversed_string = string[::-1]
        if string == reversed_string:
            return True
    return False

strings = ['abc', 'bob', 'kayak']
out = is_palindrome(strings)
print(out)",Data Structure,5858,"def is_palindrome___:
    for string in strings:
        reversed_string = string[::-1]
        if string == reversed_string:
            return True
    return False

strings = ['abc', 'bob', 'kayak']
out = is_palindrome___
print___"
Design an efficient algorithm to sort a list of integers in Python.,"[4, 2, 7, 1, 3, 8]","def sort_integers(arr):
 n = len(arr)
 for i in range(n):
  for j in range(0, n - i - 1):
   if arr[j] > arr[j + 1]:
    arr[j], arr[j + 1] = arr[j + 1], arr[j]
 return arr

unsorted_list = [4, 2, 7, 1, 3, 8]
print(sort_integers(unsorted_list))
# Output: [1,2,3,4,7,8]",Data Structure,5859,"def sort_integers___:
 n = len___
 for i in range___:
  for j in range___:
   if arr[j] > arr[j + 1]:
    arr[j], arr[j + 1] = arr[j + 1], arr[j]
 return arr

unsorted_list = ___
print___)
# Output: ___"
Design a Python program to filter out the odd numbers from a list.,"list1 = [1, 2, 3, 4, 5, 6]","def filter_odd_numbers(numbers):
    filtered_list = []
    for num in numbers:
        if num % 2 != 0:
            filtered_list.append(num)
    return filtered_list

list1 = [1,2,3,4,5,6]
filtered_list = filter_odd_numbers(list1)
print(filtered_list)  # [1, 3, 5]",Data Structure,5861,"def filter_odd_numbers___:
    filtered_list = []
    for num in numbers:
        if num % 2 != 0:
            filtered_list___num)
    return filtered_list

list1 = ___
filtered_list = filter_odd_numbers___
print___  # [1, 3, 5]"
Construct a new Python program for converting a given hashmap to a list.,"{ 'name': 'John', 'age': 44, 'job': 'Engineer' }","d = { 'name': 'John', 'age': 44, 'job': 'Engineer' }
l = list(d.items())
print(l)  // [('name', 'John'), ('age', 44), ('job', 'Engineer')]",Data Structure,5862,"d = ___
l = list___)
print___  // [___, ___, ___]"
Write a Python program to calculate the sum of the elements in a given matrix. Assume the matrix is a list of lists.,"matrix = [[1,2], [3,4], [5,6]]","def matrix_sum(matrix):
sum = 0
for row in matrix:
 for elem in row:
  sum += elem
return sum",Data Structure,5863,"def matrix_sum___:
sum = 0
for row in matrix:
 for elem in row:
  sum += elem
return sum"
Create a Python program to generate a 2D array of a defined size and fill it with random numbers.,Size of the array: 10x10,"import random

# define the size of the array
x, y = 10, 10

# create an empty array of the given size
arr = [[0 for j in range(x)] for i in range(y)]

# fill the array with random numbers
for i in range(x):
 for j in range(y):
 arr[i][j] = random.randint(0, 9)

# print the array
for i in range(x):
 print(arr[i])",Data Structure,5870,"import random

# define the size of the array
x, y = 10, 10

# create an empty array of the given size
arr = [[0 for j in range___] for i in range___]

# fill the array with random numbers
for i in range___:
 for j in range___:
 arr[i][j] = random.randint___

# print the array
for i in range___:
 print___"
Generate a program in Python which takes an input array and outputs the unique elements in the array.,"[1, 2, 5, 2, 6, 6, 1]","def uniqueValues(arr):
    uniqueVal = []
    for i in arr:
        if i not in uniqueVal:
            uniqueVal.append(i)
    return uniqueVal

arr = [1, 2, 5, 2, 6, 6, 1]
uniqueVal = uniqueValues(arr) 
print(uniqueVal)",Data Structure,5873,"def uniqueValues___:
    uniqueVal = []
    for i in arr:
        if i not in uniqueVal:
            uniqueVal___i)
    return uniqueVal

arr = ___
uniqueVal = uniqueValues___ 
print___"
Write a Python program that counts the number of even and odd numbers in a list.,"[2, 7, 3, 8, 12]","def count_odd_even(lst):
 even_count = 0
 odd_count = 0
 for num in lst:
 if num % 2 == 0:
 even_count += 1
 else:
 odd_count += 1
 return [even_count, odd_count]",Data Structure,5877,"def count_odd_even___:
 even_count = 0
 odd_count = 0
 for num in lst:
 if num % 2 == 0:
 even_count += 1
 else:
 odd_count += 1
 return [even_count, odd_count]"
Edit the following Python program to find the maximum number in a given list of numbers.,"numbers = [25, 12, 15, 32, 7]","numbers = [25, 12, 15, 32, 7]

# initialize maximum number
max = numbers[0]

# loop through list
for num in numbers:
    # compare each number to find the max
    if num > max:
        max = num

# print maximum number
print(max)",Data Structure,5881,"numbers = ___

# initialize maximum number
max = numbers___

# loop through list
for num in numbers:
    # compare each number to find the max
    if num > max:
        max = num

# print maximum number
print___"
Implement a Python program that returns the sum of the elements in an array.,"[4, 8, 12, 16]","def arraySum(arr):
    if len(arr) == 0:
        return 0
    else: 
        return arr[0] + arraySum(arr[1:])

print(arraySum([4, 8, 12, 16])) # 40",Data Structure,5883,"def arraySum___:
    if len___ == 0:
        return 0
    else: 
        return arr[0] + arraySum___

print___) # 40"
"Using Python, write a program that finds the most common word in a given set of text.","""This is an example sentence. The quick brown fox jumps over the lazy dog""","from collections import Counter

def most_common_word(text):
    words = text.split()
    cnt = Counter()
    for word in words:
        cnt[word] += 1
    return cnt.most_common(1)[0][0]

text = ""This is an example sentence. The quick brown fox jumps over the lazy dog""
print(most_common_word(text))",Data Structure,5888,"from collections import Counter

def most_common_word___:
    words = text.split()
    cnt = Counter()
    for word in words:
        cnt[word] += 1
    return cnt.most_common___[0][0]

text = ""This is an example sentence. The quick brown fox jumps over the lazy dog""
print___)"
Write a Python function to shift every element in a given array by k.,"[1, 2, 3, 4, 5]","def shift(arr, k):
    for i in range(len(arr)):
        arr[i] = arr[i] + k
    return arr

arr = [1, 2, 3, 4, 5]
shift(arr, 10)
print(arr)",Data Structure,5889,"def shift___:
    for i in range___):
        arr[i] = arr[i] + k
    return arr

arr = ___
shift___
print___"
Write Python code to generate a report of the total price of the items stored in a list?,"items = [('Milk', 1.99), ('Eggs', 3.40), ('Cereal', 4.75)]","total_price = 0
for item in items:
    total_price += item[1]

print(""The total price of the items is {:.2f}"".format(total_price))",Data Structure,5891,"total_price = 0
for item in items:
    total_price += item___

print(""The total price of the items is ___"".format(total_price))"
Write a Python program to create a list that represents the frequency of each word in a given sentence.,This is a sentence,"sentence = ""This is a sentence""
sentence_list = sentence.split()
frequency_list = []

for word in sentence_list:
    frequency_list.append(sentence_list.count(word))
    
frequency_dict = dict(zip(sentence_list, frequency_list))

print(frequency_dict)",Data Structure,5892,"sentence = ""This is a sentence""
sentence_list = sentence.split()
frequency_list = []

for word in sentence_list:
    frequency_list___sentence_list.count(word))
    
frequency_dict = dict___)

print___"
Create a python function that stores the elements of a list in a dictionary.,"list = ['apple', 'orange', 'banana']","def list_to_dict(list):
    dictionary = {}
    for item in list:
        dictionary[item] = 0

    return dictionary",Data Structure,5893,"def list_to_dict___:
    dictionary = {}
    for item in list:
        dictionary[item] = 0

    return dictionary"
Develop a loop that prints a python array from the end to the beginning.,"arr = [1, 2, 3, 4, 5]","def printArrayReverse(arr): 
    for i in range(len(arr) - 1, -1, -1): 
        print(arr[i], end = "" "")

printArrayReverse(arr)",Data Structure,5897,"def printArrayReverse___: 
    for i in range___ - 1, -1, -1): 
        print___

printArrayReverse___"
Design a function in Python to get the largest number in an array of numbers.,"[2, 11, 15, 9, 5]","def get_largest_number(arr):
    largest = arr[0]
    for num in arr:
       if num > largest:
           largest = num
    return largest

largest_num = get_largest_number([2, 11, 15, 9, 5])
print(largest_num)",Data Structure,5899,"def get_largest_number___:
    largest = arr___
    for num in arr:
       if num > largest:
           largest = num
    return largest

largest_num = get_largest_number___
print___"
"Given a list of numbers, write a python program that finds an index of an array element and its corresponding value.","my_list = [2,4,6,8,10]","def find_index_and_value(my_list):
    for i, num in enumerate(my_list):
        print(""Element with index %d has value %d"" % (i, num))

my_list = [2,4,6,8,10]
find_index_and_value(my_list)",Data Structure,5900,"def find_index_and_value___:
    for i, num in enumerate___:
        print___)

my_list = ___
find_index_and_value___"
Write an algorithm in Python to find the average value in an array of integers.,"[4, 10, 6, 8]","def avg(arr): 
  
    # calculating length of array 
    n = len(arr) 
    total_sum = 0

    for i in range(0, n): 
        total_sum += arr[i] 
  
    return total_sum / n 

# Driver code 
arr = [4, 10, 6, 8] 
assert avg(arr) == 7.0",Data Structure,5901,"def avg___: 
  
    # calculating length of array 
    n = len___ 
    total_sum = 0

    for i in range___: 
        total_sum += arr[i] 
  
    return total_sum / n 

# Driver code 
arr = ___ 
assert avg___ == 7.0"
Generate a method to remove all duplicates from a Python list.,"[4, 4, 5, 7, 8, 8, 1]","def removeDuplicates(in_list):
    out_list = []
    for item in in_list:
        if item not in out_list:
            out_list.append(item)
    return out_list

my_list = [4, 4, 5, 7, 8, 8, 1] 
print(removeDuplicates(my_list))",Data Structure,5904,"def removeDuplicates___:
    out_list = []
    for item in in_list:
        if item not in out_list:
            out_list___item)
    return out_list

my_list = ___ 
print___)"
Create a code in Python that takes two lists and returns a new list that contains the elements of both.,"list1 = [1, 2, 3]
list2 = [2, 3, 4]","def merge_lists(list1, list2):
  merged_list = list1 + list2
  return merged_list

merged_list = merge_lists(list1, list2)
print(merged_list)",Data Structure,5913,"def merge_lists___:
  merged_list = list1 + list2
  return merged_list

merged_list = merge_lists___
print___"
Create a program in Python to count the number of elements of a given list.,"list = ['This', 'is', 'a', 'list']","def element_count(list):
    return len(list)

list = ['This', 'is', 'a', 'list']
print(element_count(list))",Data Structure,5927,"def element_count___:
    return len___

list = ['This', 'is', 'a', 'list']
print___)"
Design a Python program to extract the duplicate elements from an integer array.,"[1, 2, 3, 2, 4, 5, 5]","def extractDuplicates(nums): 
    result = [] 

    for i in range(len(nums)): 
        k = i + 1 
        for j in range(k, len(nums)): 
            if nums[i] == nums[j] and nums[i] not in result: 
                result.append(nums[i]) 
  
    return result",Data Structure,5929,"def extractDuplicates___: 
    result = [] 

    for i in range___): 
        k = i + 1 
        for j in range___): 
            if nums[i] == nums[j] and nums[i] not in result: 
                result___nums[i]) 
  
    return result"
Create a program in Python that removes duplicates from a given array.,"[1,1,2,3,4,5,5,5]","def remove_duplicates(array):
    new_array = []
    for element in array:
        if element not in new_array:
            new_array.append(element)
    return new_array",Data Structure,5930,"def remove_duplicates___:
    new_array = []
    for element in array:
        if element not in new_array:
            new_array___element)
    return new_array"
Create a function in Python to return the length of the longest word in a list of words.,"words = [""cat"", ""longestword"", ""dog"", ""night""]","def findLongestWordLength(words):
  longest_length = 0
  for word in words:
    if len(word) > longest_length:
      longest_length = len(word)
  return longest_length

longest_word_length = findLongestWordLength([""cat"", ""longestword"", ""dog"", ""night""])
print(longest_word_length)",Data Structure,5932,"def findLongestWordLength___:
  longest_length = 0
  for word in words:
    if len___ > longest_length:
      longest_length = len___
  return longest_length

longest_word_length = findLongestWordLength___
print___"
Can you make a Python program to sort an array of integers from highest to lowest?,"[6, 2, 8, 3, 9]","def sort_highest_to_lowest(arr):
    sorted_arr = sorted(arr, reverse = True)
    return sorted_arr

arr = [6, 2, 8, 3, 9]
sorted_arr = sort_highest_to_lowest(arr)
print(sorted_arr)",Data Structure,5934,"def sort_highest_to_lowest___:
    sorted_arr = sorted___
    return sorted_arr

arr = ___
sorted_arr = sort_highest_to_lowest___
print___"
Enhance the following python function to rank elements of the given list in descending order.,"def my_sort(items):
    items.sort()","def my_sort(items):
    items.sort(reverse=True)",Data Structure,5935,"def my_sort___:
    items.sort___"
Create a sorting algorithm in Python that sorts a random list of integers in ascending order.,"[45, 33, 38, 10, 49]","def sort(lst): 
    for i in range(len(lst)): 
        min_index = i 
        for j in range(i+1, len(lst)): 
            if lst[min_index] > lst[j]: 
                min_index = j 
  
        lst[i], lst[min_index] = lst[min_index], lst[i] 
  
list = [45, 33, 38, 10, 49] 

sort(list) 

print(list)",Data Structure,5937,"def sort___: 
    for i in range___): 
        min_index = i 
        for j in range___): 
            if lst[min_index] > lst[j]: 
                min_index = j 
  
        lst[i], lst[min_index] = lst[min_index], lst[i] 
  
list = ___ 

sort___ 

print___"
Create an algorithm in Python to find the index of an element in an array.,"arr = [1, 2, 3, 4]
target = 3","def indexFinder(arr, target): 
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1

arr = [1, 2, 3, 4]
target = 3

print(""Index of % d is % d"" %(target, indexFinder(arr, target)))",Data Structure,5940,"def indexFinder___: 
    for i in range___):
        if arr[i] == target:
            return i
    return -1

arr = ___
target = 3

print___))"
Build an algorithm in Python for finding the sum of all the odd numbers in a given array.,"[1, 2, 3, 4, 5, 6]","def sumOddNumbers(arr):
    sum = 0
    for num in arr:
        if num % 2 != 0:
            sum += num
    return sum

arr = [1, 2, 3, 4, 5, 6]
print(sumOddNumbers(arr))",Data Structure,5942,"def sumOddNumbers___:
    sum = 0
    for num in arr:
        if num % 2 != 0:
            sum += num
    return sum

arr = ___
print___)"
Generate a python list of all prime numbers between m and n.,"m = 10, n = 20","def prime_range(m, n):
    primes = []
    for num in range(m, n+1):
        for i in range(2, num):
            if (num % i) == 0:
                break
        else:
            primes.append(num)
    return primes

prime_range(10, 20) # [11, 13, 17, 19]",Data Structure,5943,"def prime_range___:
    primes = []
    for num in range___:
        for i in range___:
            if ___ == 0:
                break
        else:
            primes___num)
    return primes

prime_range___ # [11, 13, 17, 19]"
Create a program in Python that will find the smallest number in a list of numbers.,"[5, 4, 12, 17, 9]","def find_smallest_number(numbers):
    smallest = numbers[0] 
    for num in numbers:
        if num < smallest:
            smallest = num
    return smallest

print(find_smallest_number([5, 4, 12, 17, 9]))",Data Structure,5947,"def find_smallest_number___:
    smallest = numbers___ 
    for num in numbers:
        if num < smallest:
            smallest = num
    return smallest

print___)"
Design a Python function which takes in a list of integers as an input and returns a tuple containing the number of positive and negative entries in the list.,"[3, -1, 5, -2, 8]","def countPosAndNeg(lst):
 positive = 0
 negative = 0
 for num in lst:
  if num >= 0:
   positive += 1
  else:
   negative += 1
 return (positive, negative)",Data Structure,5948,"def countPosAndNeg___:
 positive = 0
 negative = 0
 for num in lst:
  if num >= 0:
   positive += 1
  else:
   negative += 1
 return ___"
Write a Python program to check how many times a given element occurs in a list.,"List: [1, 2, 3, 2, 4, 2, 1]
Element: 2","def count_element_occurrence(lst, target):
 count = 0
 for element in lst:
     if element == target:
         count += 1
 return count",Data Structure,5950,"def count_element_occurrence___:
 count = 0
 for element in lst:
     if element == target:
         count += 1
 return count"
Create a Python program to generate a list from two given lists using a list comprehension.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","list1 = [1, 2, 3]
list2 = [4, 5, 6]

result = [x + y for x in list1 for y in list2]
print(result)",Data Structure,5954,"list1 = ___
list2 = ___

result = [x + y for x in list1 for y in list2]
print___"
Generate an algorithm in Python that can take in a list of integers and sort them in ascending order.,"Example list: [4, 9, 1, 6, 5]","def sort_ascending(nums):
    n = len(nums)
    for i in range(n):
        for j in range(0, n-i-1):
            if nums[j] > nums[j+1] :
                nums[j], nums[j+1] = nums[j+1], nums[j] 
    return nums",Data Structure,5955,"def sort_ascending___:
    n = len___
    for i in range___:
        for j in range___:
            if nums[j] > nums[j+1] :
                nums[j], nums[j+1] = nums[j+1], nums[j] 
    return nums"
Construct a program in Python that computes the sum of 3rd and 7th elements of a list.,"list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]","def sum_elements(list):
    Sum = list[2] + list[6]
    return Sum
print(sum_elements(list))",Data Structure,5965,"def sum_elements___:
    Sum = list___ + list___
    return Sum
print___)"
Create a Python program that takes a list of words given by the user and prints out a sentence constructed from these words.,"words = ['The', 'quick', 'brown', 'fox']","words = ['The', 'quick', 'brown', 'fox']

sentence = "" "".join(words)
print(sentence)
# Output: The quick brown fox",Data Structure,5966,"words = ['The', 'quick', 'brown', 'fox']

sentence = "" "".join___
print___
# Output: The quick brown fox"
"Using the list and additional libraries, write a python program to calculate the sum of all elements in the list.","list = [2, 3, 5, 8, 9]","#Importing the libraries
import numpy as np

#Defining the list
list = [2, 3, 5, 8, 9]

#Calculating the sum
sum = np.sum(list)

#Printing the result
print(sum)",Data Structure,5968,"#Importing the libraries
import numpy as np

#Defining the list
list = ___

#Calculating the sum
sum = np.sum___

#Printing the result
print___"
Create a function in Python to find the maximum and minimum of a list of numbers.,"[4, 8, 15, 16, 23, 42]","def find_max_min(numbers):
    max_num = float(""-inf"")
    min_num = float(""inf"")
    for num in numbers:
        if num > max_num:
            max_num = num
        elif num < min_num:
            min_num = num
    return (max_num, min_num)",Data Structure,5970,"def find_max_min___:
    max_num = float___
    min_num = float___
    for num in numbers:
        if num > max_num:
            max_num = num
        elif num < min_num:
            min_num = num
    return ___"
Create a Python program to sort an array of strings alphabetically.,"arr_of_strings = [""cat"", ""elephant"", ""dog"", ""bird""]","def alphabetical_sort(arr):
 arr.sort()
 return arr

arrOfStrings = [""cat"", ""elephant"", ""dog"", ""bird""]
sorted_arr = alphabetical_sort(arrOfStrings)
print(sorted_arr)  # Output: [""bird"", ""cat"", ""dog"", ""elephant""]",Data Structure,5973,"def alphabetical_sort___:
 arr.sort()
 return arr

arrOfStrings = [""cat"", ""elephant"", ""dog"", ""bird""]
sorted_arr = alphabetical_sort___
print___  # Output: [""bird"", ""cat"", ""dog"", ""elephant""]"
Design a function in Python to classify all the numbers in a list as even or odd.,"my_list = [1,2,3,4,5]","def classify_odd_even(nums):
    output = []
    for n in nums:
        if n%2 == 0:
            output.append('even')
        else:
            output.append('odd')
    return output

if __name__ == '__main__':
    print(classify_odd_even(my_list))",Data Structure,5976,"def classify_odd_even___:
    output = []
    for n in nums:
        if n%2 == 0:
            output___'even')
        else:
            output___'odd')
    return output

if __name__ == '__main__':
    print___)"
Write a python program to compute the Gini index for a given data set.,"[10, 3, 5, 7]","def gini_index(data):
    data_set_size = len(data)
    data_sum = sum(data)

    gini = 0.0
    for val in data:
        gini += (val/data_sum)**2
    
    return 1 - gini

print(gini_index([10, 3, 5, 7]))",Data Structure,5979,"def gini_index___:
    data_set_size = len___
    data_sum = sum___

    gini = 0.0
    for val in data:
        gini += ___**2
    
    return 1 - gini

print___)"
Optimize a Python program to reverse an array in place.,"[1, 2, 3, 4]","def reverse_in_place(arr):
    low = 0
    high = len(arr) - 1
    while low < high:
        arr[low], arr[high] = arr[high], arr[low]
        low += 1
        high -= 1
    return arr

arr = [1, 2, 3, 4]
print(reverse_in_place(arr))",Data Structure,5981,"def reverse_in_place___:
    low = 0
    high = len___ - 1
    while low < high:
        arr[low], arr[high] = arr[high], arr[low]
        low += 1
        high -= 1
    return arr

arr = ___
print___)"
Write a Python program to set the difference between two sets.,"Set1 = {1, 2, 3, 4, 5}
Set2 = {3, 4, 5, 6, 7}","def set_difference(Set1, Set2):
    return set(Set1) - set(Set2)

result = set_difference({1, 2, 3, 4, 5}, {3, 4, 5, 6, 7})
print(result)",Data Structure,5988,"def set_difference___:
    return set___ - set___

result = set_difference(___, ___)
print___"
"Implement a function in Python that takes a 2D Numpy array and returns a dictionary whose keys are the unique values in the array, and the values are the number of occurrences for each of the unique values.","arr = [[1,2,3],
       [2,3,4],
       [2,1,3]]","import numpy as np

def count_occurrences(arr):
    result = {}
    for value in np.unique(arr):
        result[value] = np.sum(arr == value)
    return result

arr = [[1,2,3], [2,3,4], [2,1,3]]
print(count_occurrences(arr))",Data Structure,5994,"import numpy as np

def count_occurrences___:
    result = {}
    for value in np.unique___:
        result[value] = np.sum___
    return result

arr = [___, ___, ___]
print___)"
Generate a Python code to multiply all the items of a given list.,"[2, 3, 4]","product = 1
for value in [2, 3, 4]:
 product *= value
print(product)",Data Structure,5995,"product = 1
for value in ___:
 product *= value
print___"
Develop a python function to locate a specific element in an array,"[6, 2, 4, 8], 8","def find_element(arr, target): 
    for i in range(len(arr)): 
        if arr[i] == target: 
            return i 
    return -1",Data Structure,5996,"def find_element___: 
    for i in range___): 
        if arr[i] == target: 
            return i 
    return -1"
Write a function in Python Web scripting to update the value of a given list.,"my_list = [1,2,3]
new_value = 5","def update_list(my_list, new_value):
    my_list[-1] = new_value
    return my_list

my_list = [1,2,3]
new_value = 5

updated_list = update_list(my_list, new_value)
print(updated_list)",Data Structure,6000,"def update_list___:
    my_list[-1] = new_value
    return my_list

my_list = ___
new_value = 5

updated_list = update_list___
print___"
"Write a function in Python that takes two lists of strings as input, and returns a list of all strings that are common to both lists.","list_1 = ['John', 'Paul', 'George', 'Ringo']
list_2 = ['Ringo', 'George', 'Pete', 'John']","def common_words(list_1, list_2):
 result = [word for word in list_1 if word in list_2]

 return result

# sample usage
common_words(list_1, list_2) # would return ['John', 'George', 'Ringo']",Data Structure,6003,"def common_words___:
 result = [word for word in list_1 if word in list_2]

 return result

# sample usage
common_words___ # would return ['John', 'George', 'Ringo']"
Design a Python program to return the largest and smallest elements from a given list.,"[7, 9, 5, 4, 8, 1]","def largest_smallest(array):
    smallest = array[0]
    largest = array[0]

    for element in array:
        if element > largest:
            largest = element
        elif element < smallest: 
            smallest = element

    return (smallest, largest)

largest_smallest([7, 9, 5, 4, 8, 1]) => (1, 9)",Data Structure,6006,"def largest_smallest___:
    smallest = array___
    largest = array___

    for element in array:
        if element > largest:
            largest = element
        elif element < smallest: 
            smallest = element

    return ___

largest_smallest___ => ___"
Generate a python code to create a list containing tuples of two elements each.,Number of tuples: 5,"my_list = [(x, y) for x in range(5) for y in range(5)]
print(my_list)",Data Structure,6008,"my_list = [___ for x in range___ for y in range___]
print___"
Use the provided data set to generate a bar chart in Python.,"x-axis values: 1, 2, 3, 4
y-axis values: 10, 12, 7, 5","import matplotlib.pyplot as plt

x_values = [1, 2, 3, 4]
y_values = [10, 12, 7, 5]

plt.bar(x_values, y_values)
plt.title('Bar Chart')
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.show()",Data Structure,6010,"import matplotlib.pyplot as plt

x_values = ___
y_values = ___

plt.bar___
plt.title___
plt.xlabel___
plt.ylabel___
plt.show()"
"Create a function in Python that takes an array of integers as input, checks if the array is sorted,  and, if not, sorts it.","[3, 1, 4, 2, 5]","def is_sorted(arr):
  sorted_arr = sorted(arr)
  if arr == sorted_arr:
    return True
  else:
    arr.sort()
    return arr",Data Structure,6013,"def is_sorted___:
  sorted_arr = sorted___
  if arr == sorted_arr:
    return True
  else:
    arr.sort()
    return arr"
Write a Python program to filter out values from a given list based on a certain condition.,"[7, 6, 5, 4, 3], condition: x > 5","def filter_values(lst, condition):
    filtered_list = []
    for x in lst:
        if eval(condition):
            filtered_list.append(x)
    return filtered_list",Data Structure,6016,"def filter_values___:
    filtered_list = []
    for x in lst:
        if eval___:
            filtered_list___x)
    return filtered_list"
Design a Python class to hold a given array of objects.,"[1, 2, 3, 4, 5]","class ArrayContainer:
  def __init__(self, arr):
    self.arr = arr

  def get_array(self):
    return self.arr",Data Structure,6017,"class ArrayContainer:
  def __init_____:
    self.arr = arr

  def get_array___:
    return self.arr"
Compose Python code to remove all elements from a list by value.,"mylist = [1,2,3,4,2]","def remove_by_val(mylist, val):
     return [i for i in mylist if i != val]

mylist = [1,2,3,4,2]
result = remove_by_val(mylist, 2)
print(""Updated list after removing elements are: "", result)",Data Structure,6018,"def remove_by_val___:
     return [i for i in mylist if i != val]

mylist = ___
result = remove_by_val___
print___"
Write a Python program to access an item of a list.,"list1 = [1, 2, 3, 4, 5]
item_index = 3","list1 = [1, 2, 3, 4, 5]
item_index = 3

def access_list_item(my_list, index):
    return my_list[index]

result = access_list_item(list1, item_index)
print(result)",Data Structure,6020,"list1 = ___
item_index = 3

def access_list_item___:
    return my_list[index]

result = access_list_item___
print___"
Design an algorithm in Python that takes a list of strings and returns the list of strings in decreasing order of length.,"[""Hello"", ""World"", ""This"", ""is"", ""a"", ""test""]","def order_by_length(input_list):
  return sorted(input_list, key=len, reverse=True)
  
input_list = [""Hello"", ""World"", ""This"", ""is"", ""a"", ""test""]
print(order_by_length(input_list))",Data Structure,6022,"def order_by_length___:
  return sorted___
  
input_list = [""Hello"", ""World"", ""This"", ""is"", ""a"", ""test""]
print___)"
"Using Python, create a sentence out of all the words entered in an array.","[""hello"", ""world"", ""!""]","sentence = "" "".join([""hello"", ""world"", ""!""])
print(sentence)",Data Structure,6024,"sentence = "" "".join___
print___"
Write a Python program to calculate the mean and standard deviation of an array of numbers.,"[2,3,4,5,7]","mean = 4.4
std = 1.6

import numpy as np

arr = np.array([2, 3, 4, 5, 7])

mean = np.mean(arr)
std = np.std(arr)

print('mean =', mean)
print('std =', std)",Data Structure,6025,"mean = 4.4
std = 1.6

import numpy as np

arr = np.array___

mean = np.mean___
std = np.std___

print___
print___"
Write a function in Python to check if an element is present in an array.,"arr = [1, 2, 3, 5, 7]
element = 4","arr = [1, 2, 3, 5, 7]
element = 4

def contains(arr, element):
  for e in arr:
    if e == element:
      return True
  return False

result = contains(arr, element)
print(result)",Data Structure,6026,"arr = ___
element = 4

def contains___:
  for e in arr:
    if e == element:
      return True
  return False

result = contains___
print___"
Optimize a Python program to copy and append an array of integers.,"[2, 4, 6]","def array_copy(arr):
    return arr[:]

def array_append(arr, value):
    arr.append(value)

arr = [2, 4, 6]
arr_copy = array_copy(arr)
array_append(arr_copy, 8)

print(arr_copy)",Data Structure,6027,"def array_copy___:
    return arr[:]

def array_append___:
    arr___value)

arr = ___
arr_copy = array_copy___
array_append___

print___"
Edit the following Python program to accept a list of numbers as input and find the second largest number from the list.,"[12, 23, 45, 22, 50]","# Find the second largest number from a given list

numbers = [12, 23, 45, 22, 50]

# Sort the list in ascending order
numbers.sort()

# Get the second largest number
second_largest_num = numbers[-2]

print('The second largest number in the list is:', second_largest_num)",Data Structure,6034,"# Find the second largest number from a given list

numbers = ___

# Sort the list in ascending order
numbers.sort()

# Get the second largest number
second_largest_num = numbers[-2]

print___"
Write a Python program which will take a list of score of five students and compute the average score for the five students.,"[85, 70, 72, 90, 75]","def compute_average(score_list):
    return sum(score_list)//len(score_list)",Data Structure,6038,"def compute_average___:
    return sum___//len___"
Write a python program to calculate the average of a list of numbers.,"[1, 2, 3, 4, 5]","def calculate_average(numbers):
    total = sum(numbers)
    length = len(numbers)
    return total / length

numbers = [1, 2, 3, 4, 5]
average = calculate_average(numbers)
print(average)",Data Structure,6041,"def calculate_average___:
    total = sum___
    length = len___
    return total / length

numbers = ___
average = calculate_average___
print___"
Generate a Python function that will accept an array of integers and remove duplicates from the array.,"[1, 2, 3, 3, 4, 4, 5, 5]","def remove_duplicates(arr):
 new_arr = [] 
 for num in arr: 
 if num not in new_arr:
 new_arr.append(num) 
 return new_arr",Data Structure,6045,"def remove_duplicates___:
 new_arr = [] 
 for num in arr: 
 if num not in new_arr:
 new_arr___num) 
 return new_arr"
Create a Python script to generate a dictionary that includes numerical data from a given list.,"list1 = [1, 2, 3, 4, 5]","def generate_dict(list1):
    my_dict = {}
    for item in list1:
        my_dict[item] = item ** 2
    return my_dict",Data Structure,6046,"def generate_dict___:
    my_dict = {}
    for item in list1:
        my_dict[item] = item ** 2
    return my_dict"
Implement an algorithm to find the second smallest element in an array of integers using Python.,"arr = [1, 5, 3, 0, -1]","def secondSmallest(arr):
    m1, m2 = float('inf'), float('inf')
    for x in arr:
        if x <= m1:
            m1, m2 = x, m1
        elif x < m2:
            m2 = x
    return m2

arr = [1, 5, 3, 0, -1]
print(secondSmallest(arr)) # Outputs 0",Data Structure,6047,"def secondSmallest___:
    m1, m2 = float___, float___
    for x in arr:
        if x <= m1:
            m1, m2 = x, m1
        elif x < m2:
            m2 = x
    return m2

arr = [1, 5, 3, 0, -1]
print___) # Outputs 0"
"Given a list of integers, write a program in Python to determine which is the maximum number.","[19,7,32,1,8,27]","# take a list 
list = [19,7,32,1,8,27] 
  
# initializinf max_val to INT_MIN so that 
# any int number would be greater that it 
max_val = float(""-inf"") 
  
# traversing through the list 
for item in list: 
    if item > max_val: 
        max_val = item 
  
# printing the maximum value 
print(""The maximum value of the list is:"", max_val)",Data Structure,6050,"# take a list 
list = ___ 
  
# initializinf max_val to INT_MIN so that 
# any int number would be greater that it 
max_val = float___ 
  
# traversing through the list 
for item in list: 
    if item > max_val: 
        max_val = item 
  
# printing the maximum value 
print___"
You are asked to write a Python program that computes the mean of a list of numbers.,"[1, 3, 5, 8, 10]","def mean(nums):
    total = 0
    for num in nums:
        total += num
    return total / len(nums)

mean([1, 3, 5, 8, 10])  # 6.0",Data Structure,6053,"def mean___:
    total = 0
    for num in nums:
        total += num
    return total / len___

mean___  # 6.0"
Write a Python code to compute the average of all numbers in a list.,"numbers = [2, 8, 4, 3]","def average(numbers):
    total = 0
    for num in numbers:
        total += num
    return total / len(numbers)",Data Structure,6063,"def average___:
    total = 0
    for num in numbers:
        total += num
    return total / len___"
Develop an algorithm in Python to find all the prime numbers from a given list.,"[12, 23, 7, 8, 10, 15]","def isPrime(num):
    if num < 2:
        return False
    for i in range(2,num):
        if num % i == 0:
            return False
    return True

num_list = [12, 23, 7, 8, 10, 15]

prime_numbers = []
for n in num_list:
    if isPrime(n):
        prime_numbers.append(n)

print(prime_numbers) #[23, 7]",Data Structure,6068,"def isPrime___:
    if num < 2:
        return False
    for i in range___:
        if num % i == 0:
            return False
    return True

num_list = ___

prime_numbers = []
for n in num_list:
    if isPrime___:
        prime_numbers___n)

print___ #[23, 7]"
Implement a solution in Python that finds the number of strings from the given set whose sum of ASCII values is divisible by 3,"{""wonder"",""woman"",""man""}","def count_strings_by_sum_of_ascii(strings):
    count = 0
    for string in strings:
        ascii_sum = 0
        for char in string:
            ascii_sum += ord(char)
        if ascii_sum % 3 == 0:
            count += 1
    return count",Data Structure,6077,"def count_strings_by_sum_of_ascii___:
    count = 0
    for string in strings:
        ascii_sum = 0
        for char in string:
            ascii_sum += ord___
        if ascii_sum % 3 == 0:
            count += 1
    return count"
"Given the following array of numbers, write a Python program to find the maximum element.","numbers = [1, 43, 78, 3, 92, 42]","#import max from the built-in library
from max import max

#initialize array of numbers
numbers = [1, 43, 78, 3, 92, 42]

#find maximum element
print(max(numbers))

#output
92",Data Structure,6087,"#import max from the built-in library
from max import max

#initialize array of numbers
numbers = ___

#find maximum element
print___)

#output
92"
Create a python program to select the maximum and minimum element from a list of integers,"[2, 3, 5, 4, 1]","def get_max_min(numbers):
    max_val = numbers[0]
    min_val = numbers[0]
    for n in numbers:
        if n > max_val:
            max_val = n
        if n < min_val:
            min_val = n
    return (max_val, min_val)",Data Structure,6091,"def get_max_min___:
    max_val = numbers___
    min_val = numbers___
    for n in numbers:
        if n > max_val:
            max_val = n
        if n < min_val:
            min_val = n
    return ___"
Write a function in Python to calculate the sum of all the values in a list of dictionaries using list comprehension.,"[
  {'key1': 3, 'key2': 4},
  {'key3': 10, 'key4': 16},
  {'key5': 3, 'key6': 9}
]","def sum_values(list_of_dicts): 
  return sum([v for d in list_of_dicts for v in d.values()])",Data Structure,6092,"def sum_values___: 
  return sum___])"
Compose a function in Python to delete all checkbox items in the list.,"['Apples', 'Orange', 'Bananas', 'Cherries', 'Checkbox']","def delete_checkbox_items(items):
    new_list = [item for item in items if item != 'Checkbox']
    return new_list

items_list = ['Apples', 'Orange', 'Bananas', 'Cherries', 'Checkbox']
result = delete_checkbox_items(items_list)
print(result)",Data Structure,6093,"def delete_checkbox_items___:
    new_list = [item for item in items if item != 'Checkbox']
    return new_list

items_list = ['Apples', 'Orange', 'Bananas', 'Cherries', 'Checkbox']
result = delete_checkbox_items___
print___"
Generate a function in Python that takes in an array and returns an array of the same length with each element multiplied by 2.,"[1, 2, 3, 4, 5]","def double_array(arr):
    return [element * 2 for element in arr]",Data Structure,6095,"def double_array___:
    return [element * 2 for element in arr]"
Create a Python program that takes a list of strings as input and prints them in alphabetical order.,"['apple', 'mango', 'banana']","def sort_strings(strings):
    strings.sort()
    for string in strings:
        print(string)

sort_strings(['apple', 'mango', 'banana'])",Data Structure,6096,"def sort_strings___:
    strings.sort()
    for string in strings:
        print___

sort_strings___"
Create a function in Python to find all the indices of a given item in a list.,"list = [1,2,3,4,5,2]
item = 2","def find_all_indices(list, item):
    result = []
    for index, i in enumerate(list):
        if i == item: result.append(index)
    return result

list = [1,2,3,4,5,2]
item = 2

#find all indices of the item
indices = find_all_indices(list, item)

#print the indices
print(indices) # [1, 5]",Data Structure,6098,"def find_all_indices___:
    result = []
    for index, i in enumerate___:
        if i == item: result___index)
    return result

list = ___
item = 2

#find all indices of the item
indices = find_all_indices___

#print the indices
print___ # [1, 5]"
Create a Python function that takes a list of names as input and returns a list of numbers representing the length of the names.,"names=[""Alice"", ""John"", ""Steve""]","def nameLengths(names):
 lengths = []
 for name in names:
 lengths.append(len(name))
 return lengths

# Example
nameLengths([""Alice"", ""John"", ""Steve""]) # [5, 4, 5]",Data Structure,6099,"def nameLengths___:
 lengths = []
 for name in names:
 lengths___len(name))
 return lengths

# Example
nameLengths___ # [5, 4, 5]"
"Given the list of numbers, create a Python program that counts the number of even numbers in the list.","[1,2,3,4,5]","def count_evens(nums):
    count = 0
    for n in nums:
        if n % 2 == 0:
            count += 1
    return count

nums = [1,2,3,4,5]
print(count_evens(nums)) # prints 2",Data Structure,6107,"def count_evens___:
    count = 0
    for n in nums:
        if n % 2 == 0:
            count += 1
    return count

nums = ___
print___) # prints 2"
Create a Python script that normalizes a given list of strings.,"Input List: ['Red', 'red', 'WhITE', 'white', 'bLUE', 'blue']","""""""
Normalize a given list of strings
""""""

def normalize(lst):
    output = []
    for item in lst:
        output.append(item.lower())
    return output
    
if __name__ == '__main__':
    input_list = ['Red', 'red', 'WhITE', 'white', 'bLUE', 'blue']
    print(normalize(input_list))",Data Structure,6111,"""""""
Normalize a given list of strings
""""""

def normalize___:
    output = []
    for item in lst:
        output___item.lower())
    return output
    
if __name__ == '__main__':
    input_list = ['Red', 'red', 'WhITE', 'white', 'bLUE', 'blue']
    print___)"
"Given a list of numbers in an array, use the Python slice operator to return the last five elements of the array.","[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
b = a[-5:]
print(b)  # [6, 7, 8, 9, 10]",Data Structure,6113,"a = ___
b = a[-5:]
print___  # [6, 7, 8, 9, 10]"
Write a Python program to find the missing number from a given list.,"[2, 3, 1, 5]","def find_missing_number(list_of_numbers):
    max_number = max(list_of_numbers)
    total_sum = (max_number * (max_number + 1)) // 2
    actual_sum = 0
    
    for number in list_of_numbers:
        actual_sum += number
    return total_sum - actual_sum

list_of_numbers = [2, 3, 1, 5]
missing_number = find_missing_number(list_of_numbers)
print(""Missing number: "", missing_number)",Data Structure,6117,"def find_missing_number___:
    max_number = max___
    total_sum = ___) // 2
    actual_sum = 0
    
    for number in list_of_numbers:
        actual_sum += number
    return total_sum - actual_sum

list_of_numbers = ___
missing_number = find_missing_number___
print___"
Write a Python program to calculate the Gini coefficient of the following data set.,"data = [14, 17, 20, 21, 32]","def gini(data):
    n = len(data)
    data.sort()
 
    gini_coef = 0
    for k in range(n):
        i = n - k - 1
        gini_coef += (2 * i + 1 - n) * data[i]
    gini_coef = gini_coef / (n * sum(data))
 
    return gini_coef

print(gini(data))
# Output: 0.32",Data Structure,6120,"def gini___:
    n = len___
    data.sort()
 
    gini_coef = 0
    for k in range___:
        i = n - k - 1
        gini_coef += ___ * data[i]
    gini_coef = gini_coef / ___)
 
    return gini_coef

print___)
# Output: 0.32"
"Create a function in Python that takes in a list of words and a target word, and prints out the first word that is alphabetically larger than the target.","words = [""Bob"", ""Cat"", ""Happy"", ""Lemon"", ""Texas"", ""Zebra""], target = ""Lemon""","# Function to find the first word alphabetically larger than the target
def find_next_word(words, target):
    for word in words:
        if word > target:
            return word
    return None",Data Structure,6125,"# Function to find the first word alphabetically larger than the target
def find_next_word___:
    for word in words:
        if word > target:
            return word
    return None"
Write a piece of python code to multipy each element in a list by 10.,"[1,2,3,4]","lst=[1,2,3,4]
for i in range(len(lst)):
    lst[i] = lst[i]*10
print(lst)",Data Structure,6126,"lst=___
for i in range___):
    lst[i] = lst[i]*10
print___"
Create a function in Python that takes in a list of numbers and returns true if the list of numbers is strictly increasing; false otherwise.,"numbers = [3, 4, 5, 6, 7]","def is_strictly_increasing(numbers):
 for i in range(len(numbers) - 1):
 if numbers[i] >= numbers[i + 1]:
 return False
 return True

numbers = [3, 4, 5, 6, 7]
result = is_strictly_increasing(numbers)
print(result) # returns True",Data Structure,6127,"def is_strictly_increasing___:
 for i in range___ - 1):
 if numbers[i] >= numbers[i + 1]:
 return False
 return True

numbers = ___
result = is_strictly_increasing___
print___ # returns True"
Construct a loop in Python to add all the elements of a given list.,"mylist = [5, 12, 17, 22]","total_sum = 0
for num in mylist:
    total_sum += num
print(""The sum is"",total_sum)",Data Structure,6129,"total_sum = 0
for num in mylist:
    total_sum += num
print___"
Write a Python algorithm to generate the combinations of n distinct objects taken from an array.,"arr = [1, 2, 3], n = 2","import itertools

arr = [1, 2, 3]
n = 2

result = list(itertools.combinations(arr, n))

print(result)",Data Structure,6130,"import itertools

arr = ___
n = 2

result = list___)

print___"
Design a program in Python to find the max three numbers in a list.,"[7, 9, 15, 10, 11]","def max_three_nums(arr):
    max_three = []

    for i in range(3):
        max_element = 0 
        for j in range(len(arr)): 
            if max_element < arr[j]:
                max_element = arr[j] 
        arr.remove(max_element) 
        max_three.append(max_element) 
    return max_three 
    
arr = [7, 9, 15, 10, 11] 
print(max_three_nums(arr))",Data Structure,6135,"def max_three_nums___:
    max_three = []

    for i in range___:
        max_element = 0 
        for j in range___): 
            if max_element < arr[j]:
                max_element = arr[j] 
        arr___max_element) 
        max_three___max_element) 
    return max_three 
    
arr = ___ 
print___)"
Generate a Python code snippet to sort a given list.,"list = [5, 4, 9, 2, 1]","list.sort()
print(list)",Data Structure,6136,"list.sort()
print___"
Create a Python program to search an element in a list using Binary Search,"[2, 8, 10, 17, 19, 25, 28]","def binary_search(arr, x): 
    low = 0
    high = len(arr) - 1
      
    while low <= high: 
        mid = (high + low) // 2
        if arr[mid] < x: 
            low = mid + 1
        elif arr[mid] > x: 
            high = mid - 1
        else: 
            return mid 
  
arr = [2, 8, 10, 17, 19, 25, 28]
x = 19
result = binary_search(arr, x)
print(result)",Data Structure,6145,"def binary_search___: 
    low = 0
    high = len___ - 1
      
    while low <= high: 
        mid = ___ // 2
        if arr[mid] < x: 
            low = mid + 1
        elif arr[mid] > x: 
            high = mid - 1
        else: 
            return mid 
  
arr = ___
x = 19
result = binary_search___
print___"
Create a function in Python that returns the unique elements in a given array.,"[1, 4, 2, 1, 5, 4]","def unique(arr): 
  unique_arr = [] 
  for i in arr: 
    if i not in unique_arr: 
      unique_arr.append(i) 
  return unique_arr",Data Structure,6146,"def unique___: 
  unique_arr = [] 
  for i in arr: 
    if i not in unique_arr: 
      unique_arr___i) 
  return unique_arr"
Create a new Python list containing the square of the values in the given list.,"[2, 4, 6]","new_list = [4, 16, 36]",Data Structure,6150,new_list = ___
Write a python function to take a list of numbers as input and return the largest number.,"[5, 7, 2, 4, 9]","def find_largest_number(numbers):
  largest_number = numbers[0]
  for number in numbers:
    if number > largest_number:
      largest_number = number
  return largest_number",Data Structure,6152,"def find_largest_number___:
  largest_number = numbers___
  for number in numbers:
    if number > largest_number:
      largest_number = number
  return largest_number"
Implement an algorithm in Python that finds the most frequently occuring element in a list.,"[3, 5, 4, 3, 2, 1, 4, 3, 4]","def most_frequent(list): 
	count = 0
	element = None
	for i in list: 
		curr_element = i 
		curr_count = list.count(i) 
		if curr_count > count: 
			element = curr_element 
			count = curr_count 
	
	return element, count

most_frequent_element, frequency = most_frequent([3, 5, 4, 3, 2, 1, 4, 3, 4]) 
print(most_frequent_element)  	
# Output: 4",Data Structure,6154,"def most_frequent___: 
	count = 0
	element = None
	for i in list: 
		curr_element = i 
		curr_count = list.count___ 
		if curr_count > count: 
			element = curr_element 
			count = curr_count 
	
	return element, count

most_frequent_element, frequency = most_frequent___ 
print___  	
# Output: 4"
Write a code snippet in Python to compute the maximum of an array of numbers.,"[2, 4, 6, 8]","def find_max(nums): 
  max_num = nums[0] 
  for num in nums: 
    if num > max_num: 
      max_num = num 
  return max_num 

print(find_max([2, 4, 6, 8]))",Data Structure,6157,"def find_max___: 
  max_num = nums___ 
  for num in nums: 
    if num > max_num: 
      max_num = num 
  return max_num 

print___)"
Design a program in Python to identify and delete the duplicate elements from a given list of numbers.,"[1, 2, 4, 2, 3, 4, 5]","def deleteDuplicateElements(arr):
    uniqueList = []
    for elem in arr:
        if elem not in uniqueList:
            uniqueList.append(elem)
    return uniqueList
  
result = deleteDuplicateElements([1, 2, 4, 2, 3, 4, 5])
print(result)",Data Structure,6163,"def deleteDuplicateElements___:
    uniqueList = []
    for elem in arr:
        if elem not in uniqueList:
            uniqueList___elem)
    return uniqueList
  
result = deleteDuplicateElements___
print___"
Design a Python program to remove a specified element from a list.,"4, [1, 2, 3, 4, 5]","def remove_element(list, element):
  return [ el for el in list if el != element]
	 
list = [1, 2, 3, 4, 5]
	
list = remove_element(list, 4)
	
print(list)",Data Structure,6167,"def remove_element___:
  return [ el for el in list if el != element]
	 
list = ___
	
list = remove_element___
	
print___"
"Given a list of strings, write a python program to check if all of the strings are palindromes.","strings = ['abba', 'bob', 'acca']","def palindrome_checker(strings):
    is_palindrome = True
    for string in strings:
        if string  != string[::-1]:
            is_palindrome = False
            break
    return is_palindrome

strings = ['abba', 'bob', 'acca']

print(palindrome_checker(strings))",Data Structure,6168,"def palindrome_checker___:
    is_palindrome = True
    for string in strings:
        if string  != string[::-1]:
            is_palindrome = False
            break
    return is_palindrome

strings = ['abba', 'bob', 'acca']

print___)"
Write a Python function that takes a list as an input and returns the largest element.,"[8, 5, 2, 4, 9]","def maximum(list):
    return max(list)

list = [8, 5, 2, 4, 9]
result = maximum(list)
print(result)",Data Structure,6170,"def maximum___:
    return max___

list = ___
result = maximum___
print___"
Write a python program to concatenate strings within a given list and join them using a space.,"[""Hello"", ""World""]","''.join(str(x) for x in [""Hello"", ""World""])",Data Structure,6171,"''.join___ for x in [""Hello"", ""World""])"
"Given the following array of strings, write a Python code snippet to remove all punctuation marks.","['hello!', 'hey,', 'where, are, you?', 'I am here']","strings = ['hello!', 'hey,', 'where, are, you?', 'I am here']
strings = [s.replace("","", """").replace(""?"", """").replace(""!"", """") for s in strings]
print(strings)",Data Structure,6172,"strings = ['hello!', 'hey,', 'where, are, you?', 'I am here']
strings = [s.replace___.replace___.replace___ for s in strings]
print___"
Find the index of a given element from a list in Python,"[1,2,3,4]","def index_of(arr, ele):
    for i in range(len(arr)):
        if arr[i] == ele:
            return i
    return -1",Data Structure,6173,"def index_of___:
    for i in range___):
        if arr[i] == ele:
            return i
    return -1"
Generate a function in Python to get the most frequent element in an array.,"[1, 15, 6, 1, 6, 15]","def most_frequent(arr):
    max_count = -1
    max_elem = -1
    count_dict = {}
    for ele in arr:
        if ele in count_dict:
            count_dict[ele] += 1
        else:
            count_dict[ele] = 1
        if count_dict[ele] > max_count:
            max_count = count_dict[ele]
            max_elem = ele
    return max_elem",Data Structure,6174,"def most_frequent___:
    max_count = -1
    max_elem = -1
    count_dict = {}
    for ele in arr:
        if ele in count_dict:
            count_dict[ele] += 1
        else:
            count_dict[ele] = 1
        if count_dict[ele] > max_count:
            max_count = count_dict[ele]
            max_elem = ele
    return max_elem"
Write a Python program to find all possible anagrams from a given set of words.,"words = [""eat"", ""tea"", ""tan"", ""ate"", ""nat"", ""bat""]","from itertools import permutations 

def possible_anagrams(words): 
    anagrams = set() 
    for word in words: 
        perm_words = [''.join(perm) for perm in permutations(word)] 
        for perm_word in perm_words: 
            if perm_word in words: 
                anagrams.add(perm_word) 
    return anagrams 

possible_anagrams(words)",Data Structure,6175,"from itertools import permutations 

def possible_anagrams___: 
    anagrams = set() 
    for word in words: 
        perm_words = [''.join___ for perm in permutations___] 
        for perm_word in perm_words: 
            if perm_word in words: 
                anagrams.add___ 
    return anagrams 

possible_anagrams___"
Write a Python program to compare two lists and return the differences as a new list.,"list1 = [1, 3, 4, 5] 
list2 = [2, 4, 6, 8]","list1 = [1, 3, 4, 5] 
list2 = [2, 4, 6, 8]

diff = []

for item in list1: 
 if item not in list2: 
 diff.append(item) 

for item in list2: 
 if item not in list1: 
 diff.append(item) 

print(diff) # [1, 3, 6, 8]",Data Structure,6180,"list1 = ___ 
list2 = ___

diff = []

for item in list1: 
 if item not in list2: 
 diff___item) 

for item in list2: 
 if item not in list1: 
 diff___item) 

print___ # [1, 3, 6, 8]"
Create a program in Python that outputs the kth smallest element in a given list of numbers.,"list = [15, 28, 12, 7, 9]
k = 4","list = [15, 28, 12, 7, 9] # List of numbers
k = 4 # kth smallest element

sorted_list = sorted(list) # sorting the list of numbers

print(""The {}th smallest element is {}"".format(k, sorted_list[k-1])) # print the kth smallest element in the sorted_list using the index (k-1)",Data Structure,6181,"list = ___ # List of numbers
k = 4 # kth smallest element

sorted_list = sorted___ # sorting the list of numbers

print___) # print the kth smallest element in the sorted_list using the index ___"
Write a python script to flatten a given nested list.,"[[1,2,3], [4,[5,6]]]","def flatten_list(input_list):
    flattened_list = []
    for i in input_list:
        if isinstance(i, list):
            flattened_list.extend(flatten_list(i))
        else:
            flattened_list.append(i)
    return flattened_list

input_list = [[1,2,3], [4,[5,6]]]
flattened_list = flatten_list(input_list)
print(flattened_list)",Data Structure,6183,"def flatten_list___:
    flattened_list = []
    for i in input_list:
        if isinstance___:
            flattened_list.extend___)
        else:
            flattened_list___i)
    return flattened_list

input_list = [___, [4,___]]
flattened_list = flatten_list___
print___"
Create a python function that takes in a list of strings and returns a list with all the strings stripped of unwanted whitespace.,"lst = [""  hello  "", ""    world  "", ""hi   ""]","def strip_whitespace(lst):
    return [string.strip() for string in lst]",Data Structure,6186,"def strip_whitespace___:
    return [string.strip() for string in lst]"
Write a Python program to find all numbers divisible by sixteen from a given list of numbers.,"[20, 16, 5, 6, 26, 48]","list_numbers = [20, 16, 5, 6, 26, 48]

divisible_numbers = []
for number in list_numbers:
    if number % 16 == 0:
        divisible_numbers.append(number)

print(divisible_numbers)",Data Structure,6189,"list_numbers = ___

divisible_numbers = []
for number in list_numbers:
    if number % 16 == 0:
        divisible_numbers___number)

print___"
"Create a Python script that takes in a list of numbers and calculates the sum, mean, and median.","[1, 2, 3, 4, 5]","my_list = [1, 2, 3, 4, 5]

sum_list = sum(my_list)
mean_list = sum_list / len(my_list)

my_list.sort()
middle_index = int(len(my_list) / 2)

if len(my_list) % 2 == 0:
 median_list = (my_list[middle_index] + my_list[middle_index - 1]) / 2
else:
 median_list = my_list[middle_index+1]

print('sum', sum_list)
print('mean', mean_list)
print('median', median_list)",Data Structure,6192,"my_list = ___

sum_list = sum___
mean_list = sum_list / len___

my_list.sort()
middle_index = int___ / 2)

if len___ % 2 == 0:
 median_list = ___ / 2
else:
 median_list = my_list[middle_index+1]

print___
print___
print___"
Come up with a python script to retrieve the last occurrence of an element in a list,"Find the last occurence of 5 in [3, 4, 5, 5, 9, 6, 5]","def last_occurence(arr, x):
    last_index = -1
    for i in range(len(arr)):
        if arr[i] == x:
            last_index = i
    return last_index

print(last_occurence([3, 4, 5, 5, 9, 6, 5], 5))",Data Structure,6193,"def last_occurence___:
    last_index = -1
    for i in range___):
        if arr[i] == x:
            last_index = i
    return last_index

print___)"
"Given a list of numbers in an array, write a Python program to find the sum of the elements of the array.","[1, 2, 3, 4, 5]","def sum_elements(arr):
 result = 0
 for i in arr:
 result += i
 return result

print(sum_elements([1,2,3,4,5]))",Data Structure,6198,"def sum_elements___:
 result = 0
 for i in arr:
 result += i
 return result

print___)"
Create a Python program that takes in a list of strings and prints out the items that appear more than once.,"[""red"", ""green"", ""blue"", ""red"", ""yellow""]","from collections import Counter

def duplicates(items):
    c = Counter(items)
    for k, v in c.items():
        if v > 1:
            print(k)

items = [""red"", ""green"", ""blue"", ""red"", ""yellow""]
duplicates(items)",Data Structure,6199,"from collections import Counter

def duplicates___:
    c = Counter___
    for k, v in c.items():
        if v > 1:
            print___

items = [""red"", ""green"", ""blue"", ""red"", ""yellow""]
duplicates___"
You have a list of numbers. Write a function in Python that multiplies each number by 2.,"[1, 2, 3, 4]","def multiplyBy2(nums):
 return [num * 2 for num in nums]",Data Structure,6206,"def multiplyBy2___:
 return [num * 2 for num in nums]"
Generate a Python function that takes an array of integers as input and returns an array of integers with the positive numbers appearing before the negative numbers.,"[-5, 2, 7, -3, 4, 9]","def sort_positives_negatives(arr):
  positives = []
  negatives = []
  for x in arr:
    if x < 0:
      negatives.append(x)
    else:
      positives.append(x)
  return positives + negatives

result = sort_positives_negatives([-5, 2, 7, -3, 4, 9])
print(result)",Data Structure,6211,"def sort_positives_negatives___:
  positives = []
  negatives = []
  for x in arr:
    if x < 0:
      negatives___x)
    else:
      positives___x)
  return positives + negatives

result = sort_positives_negatives___
print___"
Write a Python program to sort a given list in ascending order of the length of each element.,"numbers = [4, 8, 1, 16, 9, 7]","def sortList(numbers): 
    numbers.sort(key = len) 
    return numbers 

numbers = sortList(numbers) 
print(numbers)

# Output: [4, 8, 1, 7, 9, 16]",Data Structure,6214,"def sortList___: 
    numbers.sort___ 
    return numbers 

numbers = sortList___ 
print___

# Output: ___"
Write a Python program to filter out unique elements from an array.,"arr = [3, 6, 3, 2, 7, 5, 6]","arr = [3, 6, 3, 2, 7, 5, 6]

def unique_elements(arr):
  return list(set(arr))

unique_arr = unique_elements(arr)
print(unique_arr)",Data Structure,6219,"arr = ___

def unique_elements___:
  return list___)

unique_arr = unique_elements___
print___"
Write a script in Python to sort a given list of numbers according to their occurrence in the list.,"unsorted_list = [1, 4, 2, 4, 8, 1, 2, 8, 2]","def sort_by_occurrence(unsorted_list):
    d = {}
    for num in unsorted_list:
        d[num] = d.get( num, 0 ) + 1
    sorted_list = sorted(d, key=d.get, reverse=True)
    return sorted_list",Data Structure,6220,"def sort_by_occurrence___:
    d = {}
    for num in unsorted_list:
        d[num] = d.get___ + 1
    sorted_list = sorted___
    return sorted_list"
Create a Python script to remove specific items from a given list of strings.,"strings = [""apple"", ""orange"", ""banana"", ""grape""]
words_to_remove = [""apple"", ""grape""]","strings = [""apple"", ""orange"", ""banana"", ""grape""]
words_to_remove = [""apple"", ""grape""]

# Using list comprehension
filtered_list = [word for word in strings if word not in words_to_remove] 

# Output
print(filtered_list)

# Output
['orange', 'banana']",Data Structure,6223,"strings = [""apple"", ""orange"", ""banana"", ""grape""]
words_to_remove = [""apple"", ""grape""]

# Using list comprehension
filtered_list = [word for word in strings if word not in words_to_remove] 

# Output
print___

# Output
['orange', 'banana']"
Generate a database schema for a given set of sample data.,"[{""Name"": ""John"", ""Skills"": ""Python, HTML, CSS"", ""Location"": ""Europe""}, {""Name"": ""Jim"", ""Skills"": ""Java, Bash, Go"", ""Location"": ""Asia""}]","CREATE TABLE IF NOT EXISTS users (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL,
  skills TEXT NOT NULL,
  location TEXT NOT NULL
);

INSERT INTO users (name, skills, location)
VALUES ('John', 'Python, HTML, CSS', 'Europe'),
('Jim', 'Java, Bash, Go', 'Asia');",Data Structure,6225,"CREATE TABLE IF NOT EXISTS users (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL,
  skills TEXT NOT NULL,
  location TEXT NOT NULL
);

INSERT INTO users ___
VALUES ___,
___;"
Devolop a Python code to remove the duplicates from a given list and sort them in ascending order.,"[2, 8, 5, 2, 6, 3, 4]","my_list = [2, 8, 5, 2, 6, 3, 4]
my_list = list(dict.fromkeys(my_list))
my_list.sort()
print(my_list) # [2, 3, 4, 5, 6, 8]",Data Structure,6227,"my_list = ___
my_list = list___)
my_list.sort()
print___ # [2, 3, 4, 5, 6, 8]"
Design a python program that reads a list of numbers and prints the number of even numbers,"[1, 2, 3, 4, 5, 6, 7, 8]","# Get list of numbers
numbers = [1, 2, 3, 4, 5, 6, 7, 8]

# Initialize a count
count = 0

# Iterate through the list of numbers and count the even numbers
for num in numbers:
    if num % 2 == 0:
        count += 1

# Print the result
print(f""The number of even numbers is: {count}"")",Data Structure,6228,"# Get list of numbers
numbers = ___

# Initialize a count
count = 0

# Iterate through the list of numbers and count the even numbers
for num in numbers:
    if num % 2 == 0:
        count += 1

# Print the result
print(f""The number of even numbers is: ___"")"
Develop a sorting algorithm in Python that can sort an array of integers in ascending order.,"[2, 3, 1, 7, 5, 4]","def sort(arr):
  for i in range(len(arr)):
    for j in range(i+1, len(arr)):
      if arr[i] > arr[j]:
        arr[i], arr[j] = arr[j], arr[i]
  return arr

sort([2, 3, 1, 7, 5, 4])
# Output: [1, 2, 3, 4, 5, 7]",Data Structure,6232,"def sort___:
  for i in range___):
    for j in range___):
      if arr[i] > arr[j]:
        arr[i], arr[j] = arr[j], arr[i]
  return arr

sort___
# Output: ___"
Write a Python program that takes a sentence as an input and outputs a list of words in it in reverse order.,This is a test.,"def reverse(sentence): 
    words = sentence.split("" "")   
    rev_words = words[::-1] 
    rev_sentence =' '.join(rev_words)  
    return rev_sentence",Data Structure,6236,"def reverse___: 
    words = sentence.split___   
    rev_words = words[::-1] 
    rev_sentence =' '.join___  
    return rev_sentence"
Develop an optimized function to sort a list of elements using algorithms in Python,"The list contains [3, 9, 1, 4, 5]","def sort_list(arr):
    # Insertion sort algorithm
    for i in range(1, len(arr)):
        key = arr[i] 
        j = i-1
        while j >=0 and key < arr[j] : 
            arr[j+1] = arr[j] 
            j -= 1
        arr[j+1] = key 
    return arr

sorted_arr = sort_list([3, 9, 1, 4, 5])",Data Structure,6237,"def sort_list___:
    # Insertion sort algorithm
    for i in range___):
        key = arr[i] 
        j = i-1
        while j >=0 and key < arr[j] : 
            arr[j+1] = arr[j] 
            j -= 1
        arr[j+1] = key 
    return arr

sorted_arr = sort_list___"
Generate a list of all permutations of the letters in a given word using Python.,word = 'ABC',"import itertools

set_ABC = set(list('ABC'))
all_permutations = list(itertools.permutations(set_ABC))

# print all obtained permutations
{print(''.join(words)) for words in all_permutations}",Data Structure,6238,"import itertools

set_ABC = set___)
all_permutations = list___)

# print all obtained permutations
___"
Generate a Python script to generate all combinations of a list.,"[1, 2, 3]","import itertools

def combinations(list):
 comb = itertools.combinations(list, 2)
 return [list(x) for x in set(comb)]

list = [1, 2, 3]

result = combinations(list)

print(f'The list of combinations is {result}')",Data Structure,6246,"import itertools

def combinations___:
 comb = itertools.combinations___
 return [list___ for x in set___]

list = ___

result = combinations___

print(f'The list of combinations is ___')"
"Create a Python module that takes a given number and produces an output array with the numbers 0 to the given number, excluding the given number.",Number: 10,"def exclude_number(n):
  return [i for i in range(0,n) if i < n]",Data Structure,6251,"def exclude_number___:
  return [i for i in range___ if i < n]"
Construct an algorithm in Python for calculating the median of a given list of numbers.,"[2, 4, 3, 5, 7]","def calculateMedian(numbers):
    n = len(numbers)
    if n % 2 == 0:
        num1 = numbers[n//2]
        num2 = numbers[n//2 - 1]
        median = (num1 + num2)/2
    else: 
        median = numbers[n//2]
    return median
        
numbers = [2, 4, 3, 5, 7]
median = calculateMedian(numbers)
print(""Median of list is:"", median)",Data Structure,6255,"def calculateMedian___:
    n = len___
    if n % 2 == 0:
        num1 = numbers[n//2]
        num2 = numbers[n//2 - 1]
        median = ___/2
    else: 
        median = numbers[n//2]
    return median
        
numbers = ___
median = calculateMedian___
print___"
Design a Python program that takes a list of numbers and prints out the number with the highest value.,"[1, 2, 300, 4, 5]","def find_max(nums):
    max_num = nums[0]
    for num in nums:
        if num > max_num:
            max_num = num

    return max_num

nums = [1, 2, 300, 4, 5]

print(find_max(nums)) # 300",Data Structure,6258,"def find_max___:
    max_num = nums___
    for num in nums:
        if num > max_num:
            max_num = num

    return max_num

nums = ___

print___) # 300"
Create a python code to remove all elements from a list using a for loop?,"list = [4, 5, 7, 1, 3]","def remove_elements(lst):
    for element in lst:
        lst.remove(element)",Data Structure,6259,"def remove_elements___:
    for element in lst:
        lst___element)"
Rewrite the given Python code to use list comprehension.,"arr = [3, 1, 2, 5, 4]
new_arr = []
for element in arr:
    if element % 2 == 0:
        new_arr.append(element)","arr = [3, 1, 2, 5, 4]
new_arr = [element for element in arr if element % 2 == 0]",Data Structure,6260,"arr = ___
new_arr = [element for element in arr if element % 2 == 0]"
Python code to find out if a linked list has a loop,"Head of link list
|
v
1 -> 2 -> 3 -> 4
 ^         |
 |_________|","def hasLoop(self): 
    if self.head is None: 
        return False 
  
    slow = fast = self.head 
    while(slow and fast and fast.next): 
        slow = slow.next
        fast = fast.next.next
        if slow == fast: 
            return True  
          
    return False",Data Structure,6265,"def hasLoop___: 
    if self.head is None: 
        return False 
  
    slow = fast = self.head 
    while___: 
        slow = slow.next
        fast = fast.next.next
        if slow == fast: 
            return True  
          
    return False"
Create a python library to generate a bar chart from a given set of data points.,"Data points: [5, 8, 9, 10, 12]","import matplotlib.pyplot as plt
 
# Data points
data = [5, 8, 9, 10, 12]
 
# Create bar chart
plt.bar(range(len(data)), data)
 
# Show bar chart
plt.show()",Data Structure,6266,"import matplotlib.pyplot as plt
 
# Data points
data = ___
 
# Create bar chart
plt.bar___), data)
 
# Show bar chart
plt.show()"
Generate a python program that takes in a list and an integer and prints the element at index in the list,"list = [""a"", ""b"", ""c"", ""d""] and integer = 2","def print_element(lst, index):
    print(lst[index])",Data Structure,6268,"def print_element___:
    print___"
Convert a given dictionary in Python to a list of tuples.,"{'a': 1, 'b': 2, 'c': 3}","my_dict = {'a': 1, 'b': 2, 'c': 3}
my_list = list(my_dict.items())

# Test
print(my_list) # [('a', 1), ('b', 2), ('c', 3)]",Data Structure,6270,"my_dict = ___
my_list = list___)

# Test
print___ # [___, ___, ___]"
Generate a Python script that updates all elements of a 1D numerical array by adding 10.,"arr = [1, 2, 3, 4, 5]","def updateArray(arr): 
    for i in range(len(arr)):
        arr[i] += 10
    return arr

arr = [1, 2, 3, 4, 5]
arr = updateArray(arr)
print(arr)",Data Structure,6272,"def updateArray___: 
    for i in range___):
        arr[i] += 10
    return arr

arr = ___
arr = updateArray___
print___"
Generate a Python Program to generate a Bar Chart from a given list of data,"data=[2,4,6,7]","import matplotlib.pyplot as plt

def generate_bar_chart(data):
    plt.bar(list(range(len(data))), data)
    plt.xlabel('x')
    plt.ylabel('y')
    plt.title('Bar Chart')
    plt.show()

if __name__ == '__main__':
    generate_bar_chart(data)",Data Structure,6273,"import matplotlib.pyplot as plt

def generate_bar_chart___:
    plt.bar___)), data)
    plt.xlabel___
    plt.ylabel___
    plt.title___
    plt.show()

if __name__ == '__main__':
    generate_bar_chart___"
Reverse a given list using Python,"[1,2,3,4,5]","def reverse_list(arr):
    return arr[::-1]",Data Structure,6275,"def reverse_list___:
    return arr[::-1]"
Create a Python program that shuffles an array of integers.,"[1, 5, 9, 4, 2]","import random

def shuffle(arr):
    random.shuffle(arr)
    return arr 

my_arr = [1, 5, 9, 4, 2]

print(shuffle(my_arr))",Data Structure,6283,"import random

def shuffle___:
    random.shuffle___
    return arr 

my_arr = ___

print___)"
Write a function to calculate the average of a Python list of integers.,"numbers = [2, 4, 5, 7, 8]","def calculate_average(numbers):
  return sum(numbers)/len(numbers)

numbers = [2, 4, 5, 7, 8]
print(calculate_average(numbers)) # Output: 5.6",Data Structure,6284,"def calculate_average___:
  return sum___/len___

numbers = ___
print___) # Output: 5.6"
Calculate the average of a list of numbers using a Python function.,"numbers = [5, 10, 15, 20]","def calculateAverage(numbers):
 total = 0
 for num in numbers:
 total += num
 return total / len(numbers)

numbers = [5, 10, 15, 20]

print(calculateAverage(numbers)) // 12.5",Data Structure,6285,"def calculateAverage___:
 total = 0
 for num in numbers:
 total += num
 return total / len___

numbers = ___

print___) // 12.5"
Design a Python program to take a list of integers and return the sum of the even numbers in the list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def sum_even_numbers(numbers):
 
 result = 0
 
 for number in numbers:
  if number % 2 == 0:
   result += number
 
 return result
 
print(sum_even_numbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",Data Structure,6286,"def sum_even_numbers___:
 
 result = 0
 
 for number in numbers:
  if number % 2 == 0:
   result += number
 
 return result
 
print___)"
Create an algorithm in Python which prints out the number of even numbers in an array.,"[1, 2, 3, 4, 5, 6, 7, 8]","def count_even(arr):
  evenNumbers=0
  for x in arr:
      if x % 2 == 0:
          evenNumbers += 1
  return evenNumbers
  
print(count_even([1, 2, 3, 4, 5, 6, 7, 8]))",Data Structure,6292,"def count_even___:
  evenNumbers=0
  for x in arr:
      if x % 2 == 0:
          evenNumbers += 1
  return evenNumbers
  
print___)"
Write a Python program to merge two given lists into a single list.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","def merge_two_lists(list1, list2):
 return list1 + list2",Data Structure,6293,"def merge_two_lists___:
 return list1 + list2"
Implement a function in Python that will take in an arbitrary list of numbers and output the average of the list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def average(nums):
 total = 0
 for num in nums:
 total += num
 return total/len(nums)",Data Structure,6296,"def average___:
 total = 0
 for num in nums:
 total += num
 return total/len___"
Create a function in Python that takes an ID and returns a list of all the numbers in its range.,ID = 5,"def get_numbers(id):
    nums = []
    for i in range(id + 1):
        nums.append(i)
    return nums

numbers = get_numbers(5)
print(numbers)",Data Structure,6297,"def get_numbers___:
    nums = []
    for i in range___:
        nums___i)
    return nums

numbers = get_numbers___
print___"
Create a python function that takes a list of integers as input and returns the list with the numbers sorted in descending order.,"[5, 4, 3, 2, 1]","def sortList(nums): 
 
    # sort the list in descending order 
    nums.sort(reverse = True) 
   
    # return the sorted list 
    return nums 
   
# driver code 
list = [5, 4, 3, 2, 1] 
print(sortList(list))",Data Structure,6302,"def sortList___: 
 
    # sort the list in descending order 
    nums.sort___ 
   
    # return the sorted list 
    return nums 
   
# driver code 
list = ___ 
print___)"
Design a program in Python that takes a list of numbers as input and returns the average.,"Input list: [1,2,3,4,5,6,7]","# Function to return average
def average(lst):
    
    # Calculate sum of list
    sum_num = 0
    for x in lst:
        sum_num += x
        
    # Return average 
    return sum_num / len(lst)

# Sample List
lst = [1, 2, 3, 4, 5, 6, 7]

# Calling average function
print(average(lst))",Data Structure,6305,"# Function to return average
def average___:
    
    # Calculate sum of list
    sum_num = 0
    for x in lst:
        sum_num += x
        
    # Return average 
    return sum_num / len___

# Sample List
lst = ___

# Calling average function
print___)"
Create a function in Python to make a list that contains the sum of each pair of elements in two different lists.,"list1 = [1, 8, 3, 10] 
list2 = [2, 3, 4, 5]","def list_sums(lst1, lst2):
    pairs = list(zip(lst1, lst2))
    sums = [i1+i2 for (i1, i2) in pairs]
    return sums",Data Structure,6306,"def list_sums___:
    pairs = list___)
    sums = [i1+i2 for ___ in pairs]
    return sums"
Generate a Python program that takes an array as an input and prints each element of the array in a new line.,"[10, 20, 30, 40]","arr = [10, 20, 30, 40]

for num in arr:
    print(num)",Data Structure,6310,"arr = ___

for num in arr:
    print___"
Create a python function that given an input array of integers produces a new array that contains the unique integers of the input array.,"[1, 1, 2, 2, 3]","def unique_list(input_list):
    uniques = []
    for i in input_list:
        if i not in uniques:
            uniques.append(i)

    return uniques",Data Structure,6318,"def unique_list___:
    uniques = []
    for i in input_list:
        if i not in uniques:
            uniques___i)

    return uniques"
Create a function in Python that prints out the largest value from a given list of numbers.,"list = [2, 4, 1, 6]","def get_max_value(numbers): 
    return max(numbers)

print(get_max_value(list))  # 6",Data Structure,6319,"def get_max_value___: 
    return max___

print___)  # 6"
Write a Python program to sort a list according to user's desired order.,"sortList = [4, 2, 6, 3, 5]","def sort_list(lst, order):
    sorted_list = sorted(lst, reverse = order)
    return sorted_list",Data Structure,6323,"def sort_list___:
    sorted_list = sorted___
    return sorted_list"
"Given a list of words and a target word, write a function in Python that finds the index of target word in the list.","words = [""hello"", ""world"", ""another""], target_word = ""world""","def find_word_index(words, target_word):
    for i, word in enumerate(words):
        if word == target_word:
            return i
    return -1

word_index = find_word_index(words, target_word)
print(word_index)",Data Structure,6324,"def find_word_index___:
    for i, word in enumerate___:
        if word == target_word:
            return i
    return -1

word_index = find_word_index___
print___"
"Given a value for the parameter ""numRows"" and a Python list of lists as input data, write a Python program that prints out a valid HTML table.","numRows: 3
Data: [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","numRows = 3
data = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

print('<table border=""1"">')

for i in range(numRows):
    print('<tr>')
    for j in range(len(data[i])):
        print('<td>' + str(data[i][j]) + '</td>')
    print('</tr>')

print('</table>')",Data Structure,6333,"numRows = 3
data = [___, ___, ___]

print___

for i in range___:
    print___
    for j in range___):
        print___ + '</td>')
    print___

print___"
Develop a Python program to calculate the sum of all the elements in an array.,"Array = [1,2,3,4,5]","def calculateSum(arr, n): 
	# Initialize result 
	sum = 0
	
	# using foreach loop to find sum 
	for i in arr: 
		sum += arr[i] 
	
	return sum

# Driver code 
arr = [1,2,3,4,5]
n = len(arr) 

print(""Sum is"",calculateSum(arr, n))",Data Structure,6342,"def calculateSum___: 
	# Initialize result 
	sum = 0
	
	# using foreach loop to find sum 
	for i in arr: 
		sum += arr[i] 
	
	return sum

# Driver code 
arr = ___
n = len___ 

print___)"
Design a function in Python that takes an array of strings as input and returns all the strings in reversed order.,"data = [""Hello"", ""World"", ""Foo"", ""Bar""]","def reverseStrings(data):
 return [string[::-1] for string in data]

 reversedStrings = reverseStrings(data)
 print(reversedStrings) # [""olleH"", ""dlroW"", ""ooF"", ""raB""]",Data Structure,6344,"def reverseStrings___:
 return [string[::-1] for string in data]

 reversedStrings = reverseStrings___
 print___ # [""olleH"", ""dlroW"", ""ooF"", ""raB""]"
Create a python command line interface to search a given array.,"Six colors: red, orange, yellow, green, blue, purple","def search_colors():
    colors = [""red"", ""orange"", ""yellow"", ""green"", ""blue"", ""purple""]
    query = input(""What color would you like to search for? "")
    if query in colors:
        print(""The color exists in the list."")
    else:
        print(""The color does not exist in the list."")",Data Structure,6348,"def search_colors():
    colors = [""red"", ""orange"", ""yellow"", ""green"", ""blue"", ""purple""]
    query = input___
    if query in colors:
        print___
    else:
        print___"
"Using the input as a guide, modify the following Python code to generate a new list containing integers which are divisible by 5 in the input list.","lst = [5, 10, 15, 20, 25, 30]","lst = [5, 10, 15, 20, 25, 30]

divisible_by_5 = [num for num in lst if num%5 == 0]
print(divisible_by_5)",Data Structure,6350,"lst = ___

divisible_by_5 = [num for num in lst if num%5 == 0]
print___"
Write a function in Python to sort a given list according to the second element of the sublists.,"[[1,2], [2,3], [3,1]]","def sort_by_second_element(arr):
    def get_second_element(item):
        return item[1]
    return sorted(arr, key = get_second_element)

arr = [[1,2], [2,3], [3,1]]
result = sort_by_second_element(arr)
print(result)",Data Structure,6355,"def sort_by_second_element___:
    def get_second_element___:
        return item___
    return sorted___

arr = [___, ___, ___]
result = sort_by_second_element___
print___"
Create a function in Python that takes a list of numbers and returns the cumulative sum.,"1, 2, 3","def cum_sum(lst):
 result = []
 cumulative = 0
 for num in lst:
  cumulative += num
  result.append(cumulative)
 return result",Data Structure,6359,"def cum_sum___:
 result = []
 cumulative = 0
 for num in lst:
  cumulative += num
  result___cumulative)
 return result"
Create a command line utility in Python that takes as input a search query and outputs a list of relevant webpages for the query.,"Search query: ""What is code generation?""","import requests

query = input('Search query: ')
url = 'https://www.google.com/search?q=' + query

r = requests.get(url)

if r.status_code == 200: 
    print('Search results:')
    for item in r.json()['items']:
        print(item['title'] + ' - ' + item['url'])
else:
    print('An error occurred!')",Data Structure,6363,"import requests

query = input___
url = 'https://www.google.com/search?q=' + query

r = requests.get___

if r.status_code == 200: 
    print___
    for item in r.json()['items']:
        print___
else:
    print___"
Develop a python program to feature scale an input array,"[1,2,3,4,5]","# feature scaling function
def feature_scale(arr):
    min_arr = min(arr)
    max_arr = max(arr)
    y = (arr-min_arr)+1
    scaled = y/(max_arr-min_arr)
    return scaled

# example usage
arr = [1,2,3,4,5]
scaled_arr = feature_scale(arr)
print(scaled_arr) # Output: [0.  0.2 0.4 0.6 0.8]",Data Structure,6366,"# feature scaling function
def feature_scale___:
    min_arr = min___
    max_arr = max___
    y = ___+1
    scaled = y/___
    return scaled

# example usage
arr = ___
scaled_arr = feature_scale___
print___ # Output: [0.  0.2 0.4 0.6 0.8]"
Write a Python program to pad a 3D array along its first two axes.,"arr = [[[1, 2, 3], [4, 5, 6]],
       [[7, 8, 9], [10, 11, 12]]]","import numpy as np

arr = np.array([[[1, 2, 3], [4, 5, 6]],
                [[7, 8, 9], [10, 11, 12]]])

# Pad the array with 0s along its first two axes

arr_pad = np.pad(arr, ((1, 1), (1, 1), (0, 0)), 'constant', constant_values=0)",Data Structure,6368,"import numpy as np

arr = np.array([[___, ___],
                [___, ___]])

# Pad the array with 0s along its first two axes

arr_pad = np.pad___, ___, ___), 'constant', constant_values=0)"
Write a Python program to count and display the number of positive numbers from a given list of integers.,"[-2, 3, 4, -7, 6]","def countPositive(nums):
    count = 0
    for num in nums:
        if num > 0:
            count += 1
    print(""Number of positive numbers:"", count)

nums = [-2, 3, 4, -7, 6]
countPositive(nums)

# Output: Number of positive numbers: 3",Data Structure,6370,"def countPositive___:
    count = 0
    for num in nums:
        if num > 0:
            count += 1
    print___

nums = [-2, 3, 4, -7, 6]
countPositive___

# Output: Number of positive numbers: 3"
Write a function in Python to find the kth smallest element in an unsorted array.,"input_array = [7, 2, 5, 9, 6], k = 4","def kth_smallest(input_array, k):
    input_array.sort()
    return input_array[k-1]",Data Structure,6371,"def kth_smallest___:
    input_array.sort()
    return input_array[k-1]"
Write a function in Python for finding the maximum subarray sum of an array.,"arr = [4,2,1,4,5,-7,2,4]","def max_subarray_sum(arr):
	max_so_far = 0
	max_ending_here = 0	
	
	for i in range(0, len(arr)): 
		max_ending_here = max_ending_here + arr[i] 
		if max_ending_here < 0: 
			max_ending_here = 0	 
		if (max_so_far < max_ending_here): 
			max_so_far = max_ending_here 
			
	return max_so_far 

result = max_subarray_sum(arr)
print(result)",Data Structure,6376,"def max_subarray_sum___:
	max_so_far = 0
	max_ending_here = 0	
	
	for i in range___): 
		max_ending_here = max_ending_here + arr[i] 
		if max_ending_here < 0: 
			max_ending_here = 0	 
		if ___: 
			max_so_far = max_ending_here 
			
	return max_so_far 

result = max_subarray_sum___
print___"
Write a Python program to find the maximum of a given array.,"arr = [10, 9, 11, 12, 5]","def find_max(arr):
    max = arr[0]
    for i in arr: 
        if i > max: 
            max = i 
  
    return max
  
# Driver Code  
arr = [10, 9, 11, 12, 5]
maximum = find_max(arr) 
print(""Maximum element is:"", maximum)",Data Structure,6381,"def find_max___:
    max = arr___
    for i in arr: 
        if i > max: 
            max = i 
  
    return max
  
# Driver Code  
arr = ___
maximum = find_max___ 
print___"
Create a Python function that takes a dictionary as input and returns a list containing the values sorted by the key.,"dictionary = {
 'John': 23,
 'Alice': 27,
 'Bob': 17,
 'Eve': 33
}","def sort_dict_by_key(dictionary):
 sorted_list = []
 for key in sorted(dictionary):
 sorted_list.append(dictionary[key])
 return sorted_list

# Example
mydict = {
 'John': 23,
 'Alice': 27,
 'Bob': 17,
 'Eve': 33
}

print(sort_dict_by_key(mydict))
# Output: [17, 23, 27,33]",Data Structure,6391,"def sort_dict_by_key___:
 sorted_list = []
 for key in sorted___:
 sorted_list___dictionary[key])
 return sorted_list

# Example
mydict = {
 'John': 23,
 'Alice': 27,
 'Bob': 17,
 'Eve': 33
}

print___)
# Output: ___"
Write a Python program to filter out strings from a list of strings containing specific characters.,"list_of_strings = [""Hello"", ""World"", ""1"", ""0"", ""This is a string.""]","def filter_strings(list_of_strings):
    return list(filter(lambda x: x.isalpha(), list_of_strings))

print (filter_strings(list_of_strings)) # Output: ['Hello', 'World', 'This is a string.']",Data Structure,6392,"def filter_strings___:
    return list___, list_of_strings))

print ___) # Output: ['Hello', 'World', 'This is a string.']"
Create a sorting algorithm in Python that takes in an array of integers and sorts it in ascending order.,"[4, 2, 7, 1, 3]","def sort_ascending(arr):
    swapped = True
    while swapped:
        swapped = False
        for i in range(len(arr)-1):
            if arr[i] > arr[i+1]:
                arr[i], arr[i+1] = arr[i+1], arr[i]
                swapped = True
    return arr

print(sort_ascending([4, 2, 7, 1, 3]))",Data Structure,6393,"def sort_ascending___:
    swapped = True
    while swapped:
        swapped = False
        for i in range___-1):
            if arr[i] > arr[i+1]:
                arr[i], arr[i+1] = arr[i+1], arr[i]
                swapped = True
    return arr

print___)"
Create a class in Python that takes an array as an argument and reverses the elements.,"[1, 2, 3, 4]","class ReverseArray:
 def __init__(self, array):
 self.array = array
 
 def reverse(self):
 self.array.reverse()
 
 # To test with given input
 array = [1, 2, 3, 4]
 rev_array = ReverseArray(array)
 rev_array.reverse()
 print(array) # Output: [4, 3, 2, 1]",Data Structure,6395,"class ReverseArray:
 def __init_____:
 self.array = array
 
 def reverse___:
 self.array.reverse()
 
 # To test with given input
 array = ___
 rev_array = ReverseArray___
 rev_array.reverse()
 print___ # Output: [4, 3, 2, 1]"
Develop an algorithm in Python for clustering a set of data points.,"Input Data (x, y, z): [(1, 2, 3), (4, 5, 6), (7, 8, 9)]","from sklearn.cluster import KMeans
import numpy as np

# Create array of the data points
data_points = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])

# Calculate clusters
kmeans = KMeans(n_clusters=3).fit(data_points)

# Get labels for each point
labels = kmeans.predict(data_points)

# Print clusters
print(labels) # Output: [0, 1, 2]",Data Structure,6396,"from sklearn.cluster import KMeans
import numpy as np

# Create array of the data points
data_points = np.array___

# Calculate clusters
kmeans = KMeans___.fit___

# Get labels for each point
labels = kmeans.predict___

# Print clusters
print___ # Output: [0, 1, 2]"
Generate a python program to collect all elements of a given list that are of even length.,"list = [""a"", ""bb"", ""ccc"", ""dddd"", ""eee""]","def even_length_elements(my_list):
  even_length_list = list()
  for elem in my_list:
     if (len(elem) % 2 == 0):
        even_length_list.append(elem)
  return even_length_list",Data Structure,6399,"def even_length_elements___:
  even_length_list = list()
  for elem in my_list:
     if ___ % 2 == 0):
        even_length_list___elem)
  return even_length_list"
Generate a Python function to check whether a given list contains a given integer.,"[2, 4, 6], 4","def check_for_int(lst, int):
    if int in lst:
        return True
    else:
        return False
    
lst = [2, 4, 6]
int = 4

is_found = check_for_int(lst, int)
print(is_found)",Data Structure,6400,"def check_for_int___:
    if int in lst:
        return True
    else:
        return False
    
lst = ___
int = 4

is_found = check_for_int___
print___"
Create a python function that prints out the largest element in an array.,"[1,4,7,12,-1]","def findLargestElement(arr):
    largest_element = arr[0]
    for element in arr:
        if element > largest_element:
            largest_element = element
    return largest_element

arr = [1,4,7,12,-1]
print(findLargestElement(arr))",Data Structure,6402,"def findLargestElement___:
    largest_element = arr___
    for element in arr:
        if element > largest_element:
            largest_element = element
    return largest_element

arr = [1,4,7,12,-1]
print___)"
Optimize the following python code array to get the maximum value from it in one pass.,"[-5, 2, 3, 4, 6, -8]","def find_max(arr):
  max_so_far = arr[0]
  current_max = arr[0]
  
  for i in range(1, len(arr)):
    current_max = max(arr[i], current_max + arr[i])
    max_so_far = max(max_so_far, current_max)
  
  return max_so_far

arr = [-5, 2, 3, 4, 6, -8]
max_val = find_max(arr)

print(max_val) # 10",Data Structure,6403,"def find_max___:
  max_so_far = arr___
  current_max = arr___
  
  for i in range___):
    current_max = max___
    max_so_far = max___
  
  return max_so_far

arr = [-5, 2, 3, 4, 6, -8]
max_val = find_max___

print___ # 10"
Write a Python program to create an array of N zeros.,N = 5,"import numpy

def create_zeros_array(N):
  return numpy.zeros(N)

result = create_zeros_array(N)
print(result)",Data Structure,6405,"import numpy

def create_zeros_array___:
  return numpy.zeros___

result = create_zeros_array___
print___"
"Create a Python program that takes a list of numbers, and finds a pair of numbers in the list whose sum equals the given number","[2, 3, 4, 5], 5","def find_pair_with_sum(nums, target):
  seen = set()
  for num in nums:
    if target - num in seen:
      return [target - num, num]
    seen.add(num)

print(find_pair_with_sum([2, 3, 4, 5], 5))",Data Structure,6406,"def find_pair_with_sum___:
  seen = set()
  for num in nums:
    if target - num in seen:
      return [target - num, num]
    seen.add___

print___)"
Write a function in Python that reads in a 2D list of size NxM and returns a list of list of size MxN.,"[[1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]]","def transposeMatrix(list2D):
 return list(map(list, zip(*list2D)))",Data Structure,6409,"def transposeMatrix___:
 return list___))"
Develop a python code to find out the frequent items from a given list.,"list1 = [1,2,3,4,5,6,7,2,2,2,2,8,8,8,8,9,9,9]","from collections import Counter
list1 = [1,2,3,4,5,6,7,2,2,2,2,8,8,8,8,9,9,9]

# Most common items in the list
data = Counter(list1) 
  
# Printing most common items 
print(data.most_common()) # Output: [(2, 4), (8, 4), (9, 3), (1, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1)]",Data Structure,6410,"from collections import Counter
list1 = ___

# Most common items in the list
data = Counter___ 
  
# Printing most common items 
print___) # Output: [___, ___, ___, ___, ___, ___, ___, ___, ___]"
Write a Python function to generate a list of all prime numbers to a given maximum,max = 100,"def generate_primes(max): 
    primes_list = [2] 
    for i in range(3, max + 1): 
        curr = True 
        for p in primes_list: 
            if i % p == 0: 
                curr = False 
        if curr: 
            primes_list.append(i) 
    return primes_list",Data Structure,6412,"def generate_primes___: 
    primes_list = ___ 
    for i in range___: 
        curr = True 
        for p in primes_list: 
            if i % p == 0: 
                curr = False 
        if curr: 
            primes_list___i) 
    return primes_list"
Write a Python program to find the middle element of a list.,"[1,3,5,7,9,11]","def middle_element(list):
    mid = len(list) // 2
    return list[mid]

result = middle_element([1,3,5,7,9,11])
print(result)",Data Structure,6414,"def middle_element___:
    mid = len___ // 2
    return list[mid]

result = middle_element___
print___"
Generate a python program that creates a new list by appending an element to the last of an existing list.,"[1, 2, 3]","def appendElementToList(list, element):
     list.append(element)
     return list

list = [1, 2, 3]
element = 4
print(appendElementToList(list, element))",Data Structure,6415,"def appendElementToList___:
     list___element)
     return list

list = ___
element = 4
print___)"
Design a Python algorithm to find the largest element in a list.,"lst = [3, 45, 18, 5, 9]","def find_largest_element(lst):
   largest_element = None
   for elem in lst:
      if largest_element is None or largest_element < elem:
         largest_element = elem
  return largest_element

largest_element = find_largest_element(lst)
print(largest_element) # 45",Data Structure,6416,"def find_largest_element___:
   largest_element = None
   for elem in lst:
      if largest_element is None or largest_element < elem:
         largest_element = elem
  return largest_element

largest_element = find_largest_element___
print___ # 45"
Write a Python loop that prints out a list of random numbers between 0 and 100.,Number of random numbers: 5,"import random

random_numbers = []

for i in range(5):
 number = random.randint(0,100)
 random_numbers.append(number)
 print(random_numbers)",Data Structure,6419,"import random

random_numbers = []

for i in range___:
 number = random.randint___
 random_numbers___number)
 print___"
Produce a program in python which takes a given list of numbers and creates a dictionary where each number is the key and its multiple of the given number is the value.,"my_list = [3, 5, 7]","def create_dictionary(my_list):
    res = {num: num * 2 for num in my_list}
    return res

# run the code
my_list = [3, 5, 7]

res = create_dictionary(my_list)
print('The dictionary is ' + str(res))",Data Structure,6420,"def create_dictionary___:
    res = ___
    return res

# run the code
my_list = ___

res = create_dictionary___
print___)"
Develop an algorithm in Python for sorting the following array in ascending order.,"[9, 8, 11, 5]","def bubble_sort(arr):
    n = len(arr)
    for i in range(n):
        for j in range(0, n - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]

array = [9, 8, 11, 5]
bubble_sort(array)
print(array)",Data Structure,6421,"def bubble_sort___:
    n = len___
    for i in range___:
        for j in range___:
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]

array = ___
bubble_sort___
print___"
Generate a Python program to find the frequency of an element in a list.,"lst = [1, 2, 3, 4, 1, 2, 1]","def find_frequency(lst, element):
    return lst.count(element)

lst = [1, 2, 3, 4, 1, 2, 1]
print(find_frequency(lst, 1))",Data Structure,6432,"def find_frequency___:
    return lst.count___

lst = ___
print___)"
Write an algorithm to sort an array of integers in Python.,"[2,1,3,4,6,5]","def bubble_sort(nums):
    size = len(nums)
    for i in range(size):
        for j in range(size-1):
            if nums[j] > nums[j+1]:
                temp = nums[j]
                nums[j] = nums[j+1]
                nums[j+1] = temp
    return nums

print(bubble_sort([2,1,3,4,6,5]))",Data Structure,6433,"def bubble_sort___:
    size = len___
    for i in range___:
        for j in range___:
            if nums[j] > nums[j+1]:
                temp = nums[j]
                nums[j] = nums[j+1]
                nums[j+1] = temp
    return nums

print___)"
Generate a code in Python to find the index of the smallest element in a given list of numbers.,"[4, 2, 5, 12, 7]","def index_min(arr):
    min_index = 0
    for i in range(1,len(arr)):
        if arr[i] < arr[min_index]:
            min_index = i
    return min_index",Data Structure,6448,"def index_min___:
    min_index = 0
    for i in range___):
        if arr[i] < arr[min_index]:
            min_index = i
    return min_index"
Develop a program in Python to find the largest number divisible by 3 from a given list.,"The list of numbers is [8, 5, 12, 15, 9].","def divisibleByThree(lst):
 result = 0

 for num in lst:
 if (num % 3 == 0) and (num >= result):
 result = num
 
 return result

lst = [8, 5, 12, 15, 9]

print(divisibleByThree(lst))
# Output: 15",Data Structure,6454,"def divisibleByThree___:
 result = 0

 for num in lst:
 if ___ and ___:
 result = num
 
 return result

lst = ___

print___)
# Output: 15"
"Generate a Python script that filters a list of strings, keeping only those that have a length greater than 5 characters.","words = [""hello"", ""world"", ""example"", ""test""]","def filter_words(words): 
    filtered_words = [] 
    for word in words: 
        if len(word) > 5: 
            filtered_words.append(word) 
    return filtered_words 

words = [""hello"", ""world"", ""example"", ""test""]

filtered_words = filter_words(words) 

print(filtered_words)  # Output: ['example', 'test']",Data Structure,6455,"def filter_words___: 
    filtered_words = [] 
    for word in words: 
        if len___ > 5: 
            filtered_words___word) 
    return filtered_words 

words = [""hello"", ""world"", ""example"", ""test""]

filtered_words = filter_words___ 

print___  # Output: ['example', 'test']"
Generate a Python program to classify emails as either spam or not given a list of words,"emails = [""how are you?"", ""buy now!"", ""save 50%""]","def classify_emails(emails):
    result = []
    for email in emails:
        words = email.split("" "")
        is_spam = False
        for word in words:
            if word in ['buy', 'now', 'save']:
                is_spam = True
                break
        result.append(is_spam)
    return result",Data Structure,6456,"def classify_emails___:
    result = []
    for email in emails:
        words = email.split___
        is_spam = False
        for word in words:
            if word in ['buy', 'now', 'save']:
                is_spam = True
                break
        result___is_spam)
    return result"
Generate a Python script to sort a list of integers,"Input: [3, 8, 1, 5, 6]","def sort_list(my_list):
    my_list.sort()
    return my_list

print(sort_list([3,8,1,5,6]))",Data Structure,6462,"def sort_list___:
    my_list.sort()
    return my_list

print___)"
Write a Python program to sort a list of tuples according to its second parameter in ascending order.,"list = [(""yellow"", 28), (""blue"", 30), (""black"", 25), (""pink"", 45)]","def sort_tuples(list): 
    """"""Function to sort tuples according to their second parameter"""""" 
    list.sort(key = lambda x : x[1]) 
    return list

#Example:
print(sort_tuples(list))",Data Structure,6466,"def sort_tuples___: 
    """"""Function to sort tuples according to their second parameter"""""" 
    list.sort___ 
    return list

#Example:
print___)"
Create a Python code snippet to remove all elements within a list with value 0.,"my_list = [0, 2, 3, 0, 4]","my_list = [0, 2, 3, 0, 4]
my_list[:] = [val for val in my_list if val != 0]
print(my_list)",Data Structure,6467,"my_list = ___
my_list[:] = [val for val in my_list if val != 0]
print___"
Write a Python program to find the maximum length of consecutive 1s in a binary array.,"Array = [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0]","def find_max_consecutive_1s(Array):
    max_count = 0
    count = 0
    for i in Array:
        if i == 1:
            count += 1
            max_count = max(max_count, count)
        else:
            count = 0
    return max_count",Data Structure,6468,"def find_max_consecutive_1s___:
    max_count = 0
    count = 0
    for i in Array:
        if i == 1:
            count += 1
            max_count = max___
        else:
            count = 0
    return max_count"
Create a function in Python to filter a list of numbers by a given criteria.,"[2, 3, 4, 5, 6, 7], criteria: divisible by 3","# Filter a list with a given criteria
def filter_list(input_list, criteria):
    filtered_list = []
    for num in input_list:
        if num % criteria == 0:
            filtered_list.append(num)
    return filtered_list

result = filter_list([2, 3, 4, 5, 6, 7], 3)
print(result)",Data Structure,6470,"# Filter a list with a given criteria
def filter_list___:
    filtered_list = []
    for num in input_list:
        if num % criteria == 0:
            filtered_list___num)
    return filtered_list

result = filter_list___
print___"
Create a Python script to parse a dictionary using a list comprehension and create a new dictionary with the keys and values swapped.,"{'a':1, 'b':2, 'c':3}","{v:k for k, v in d.items()}",Data Structure,6473,___
"Using Python, create a function called `print_list` that prints out the elements of a list.","L = [1, 2, 3, 4, 5]","def print_list(L):
    for item in L:
        print(item)

L = [1,2,3,4,5]
print_list(L)",Data Structure,6476,"def print_list___:
    for item in L:
        print___

L = ___
print_list___"
Develop a program in Python to classify the elements in an array as even or odd.,"An array with 10 elements [1,2,3,4,5,6,7,8,9,10]","evenArray = []
oddArray = []
for i in array:
  if i % 2 == 0:
    evenArray.append(i)
  else:
    oddArray.append(i)",Data Structure,6480,"evenArray = []
oddArray = []
for i in array:
  if i % 2 == 0:
    evenArray___i)
  else:
    oddArray___i)"
Please transform this Python list comprehension into a for loop.,"list_1 = [x for x in range(1, 10) if x % 2 == 0]","list_1 = []
for x in range(1, 10):
    if x % 2 == 0:
        list_1.append(x)",Data Structure,6486,"list_1 = []
for x in range___:
    if x % 2 == 0:
        list_1___x)"
Write a Python function that takes two dimensional array and transposes it.,"[[1,2,3],[4,5,6]]","def transpose_matrix(matrix):
    transposed_matrix = []
    for i in range(len(matrix[0])):
        row = []
        for j in range(len(matrix)):
            row.append(matrix[j][i])
        transposed_matrix.append(row)
    return transposed_matrix

my_matrix =[[1,2,3],[4,5,6]]
transposed_matrix = transpose_matrix(my_matrix)
print(transposed_matrix)",Data Structure,6487,"def transpose_matrix___:
    transposed_matrix = []
    for i in range___):
        row = []
        for j in range___):
            row___matrix[j][i])
        transposed_matrix___row)
    return transposed_matrix

my_matrix =[___,___]
transposed_matrix = transpose_matrix___
print___"
Create a Python program that sorts the given list in ascending order.,"unsorted_list = [5, 8, 2, 1, 3, 10]","unsorted_list = [5, 8, 2, 1, 3, 10]

sorted_list = sorted(unsorted_list)

print(sorted_list)",Data Structure,6490,"unsorted_list = ___

sorted_list = sorted___

print___"
Create a Python script which takes in a list of integers and outputs a list of odd numbers in descending order.,"[14, 21, 8, 5, 46]","def odd_descending(lst):
    lst = [x for x in lst if x % 2 != 0]
    return sorted(lst, reverse=True)

list = [14, 21, 8, 5, 46]
print(odd_descending(list))",Data Structure,6491,"def odd_descending___:
    lst = [x for x in lst if x % 2 != 0]
    return sorted___

list = ___
print___)"
Develop a Python program that prints the maximum and minimum numbers from a given list.,"[1, 3, 7, 4, 9, 0]","list_num = [1, 3, 7, 4, 9, 0]

min_num = min(list_num)
 max_num = max(list_num)

print('Minimum is:', min_num) 
 print('Maximum is:', max_num)",Data Structure,6494,"list_num = ___

min_num = min___
 max_num = max___

print___ 
 print___"
Create a function in Python that takes an array of integers and returns an array of their squares.,"[1, 2, 3]","def square_array(nums): 
    return [n**2 for n in nums] 

result = square_array([1, 2, 3])
print(result)",Data Structure,6499,"def square_array___: 
    return [n**2 for n in nums] 

result = square_array___
print___"
Utilize array sorting to sort an array in Python.,"arr = [10, 7, 8, 4, 2, 9]","arr.sort() 
print(arr)",Data Structure,6501,"arr.sort() 
print___"
"Using Python, can you create a function that sorts a list of strings into alphabetical order?","['apple', 'banana', 'pear', 'mango']","def sort_strings(s):
    return sorted(s)

print(sort_strings(['apple', 'banana', 'pear', 'mango']))",Data Structure,6503,"def sort_strings___:
    return sorted___

print___)"
Create a Python program to compare two given list variables and create a third list variable containing all the common elements between the two lists.,"list1 = [2, 3, 4, 5, 6] 
list2 = [5, 6, 7, 8, 9]","list1 = [2, 3, 4, 5, 6]
list2 = [5, 6, 7, 8, 9]

common_elements = []

for ele in list1:
    if ele in list2:
        common_elements.append(ele)

print(common_elements)",Data Structure,6505,"list1 = ___
list2 = ___

common_elements = []

for ele in list1:
    if ele in list2:
        common_elements___ele)

print___"
Create a Python algorithm that finds the maximum value of an array,"a = [5, 9, 8, 2, 1, 3]","def maxValue(array):
    max = array[0]
    for num in array:
        if num > max:
            max = num
    return max

a = [5, 9 ,8, 2, 1, 3]
print(maxValue(a))",Data Structure,6506,"def maxValue___:
    max = array___
    for num in array:
        if num > max:
            max = num
    return max

a = ___
print___)"
Develop an algorithm in Python to separate odd and even number from a given list of integers.,"[2, 4, 7, 8, 11, 9]","def separate_odd_even(numbers):
  even = []
  odd = []

  for number in numbers:
    if number % 2 == 0:
      even.append(number)
    else:
      odd.append(number)

  return even, odd

numbers = [2, 4, 7, 8, 11, 9]

even, odd = separate_odd_even(numbers)

print(""Even numbers: "", even)
print(""Odd numbers: "", odd)",Data Structure,6507,"def separate_odd_even___:
  even = []
  odd = []

  for number in numbers:
    if number % 2 == 0:
      even___number)
    else:
      odd___number)

  return even, odd

numbers = ___

even, odd = separate_odd_even___

print___
print___"
Write a function to delete the last item from a list in Python.,"[1,2,3,4,5]","def delete_last_item(lst):
  lst.pop()
  return lst

print(delete_last_item([1,2,3,4,5]))",Data Structure,6509,"def delete_last_item___:
  lst___)
  return lst

print___)"
Create a program that sorts a list of strings in alphabetical order.,"['python', 'javascript', 'java', 'go']","""""""
Create a program that sorts a list of strings in alphabetical order.
""""""

def sort_list(lst):
    """"""
    This function sorts a list of strings in alphabetical order.
    """"""
    lst.sort()
    return lst
 
if __name__ == '__main__':
    lst = ['python', 'javascript', 'java', 'go']
    print(sort_list(lst))",Data Structure,6516,"""""""
Create a program that sorts a list of strings in alphabetical order.
""""""

def sort_list___:
    """"""
    This function sorts a list of strings in alphabetical order.
    """"""
    lst.sort()
    return lst
 
if __name__ == '__main__':
    lst = ['python', 'javascript', 'java', 'go']
    print___)"
Create a Python web scraper to scrape a list of business email addresses from a web page.,Website: www.example.com,"import requests 
from bs4 import BeautifulSoup

# make a request to the website
r = requests.get('www.example.com')

# parse the content
soup = BeautifulSoup(r.content, 'html.parser')

# find all elements with the class ""business-email""
emails = soup.find_all(class_=""business-email"")

# extract the email from each element
emails = [e.text for e in emails]",Data Structure,6517,"import requests 
from bs4 import BeautifulSoup

# make a request to the website
r = requests.get___

# parse the content
soup = BeautifulSoup___

# find all elements with the class ""business-email""
emails = soup.find_all___

# extract the email from each element
emails = [e.text for e in emails]"
"In Python, create a function that takes a list of strings and capitalizes the first letter of each word.","['hello', 'world']","def capitalize_each_word(string_list):
  """"""Capitalizes the first letter of each word in a list of strings.""""""
  capitalized_strings = []
  for s in string_list:
    capitalized_strings.append(s.title())

  return capitalized_strings

if __name__ == ""__main__"":
  string_list = ['hello', 'world']
  print(capitalize_each_word(string_list))",Data Structure,6522,"def capitalize_each_word___:
  """"""Capitalizes the first letter of each word in a list of strings.""""""
  capitalized_strings = []
  for s in string_list:
    capitalized_strings___s.title())

  return capitalized_strings

if __name__ == ""__main__"":
  string_list = ['hello', 'world']
  print___)"
Develop an algorithm in Python to find the numbers that are divisible by 3 and 5 from a given array.,"[5, 15, 20, 7, 10]","def divisible_by_3_5(array):
    result = []
    for num in array:
        if (num % 3 == 0) and (num % 5 == 0):
            result.append(num)
    return result

print(divisible_by_3_5([5, 15, 20, 7, 10])) # [15]",Data Structure,6523,"def divisible_by_3_5___:
    result = []
    for num in array:
        if ___ and ___:
            result___num)
    return result

print___) # [15]"
Write a Python function to calculate the sum of all numbers in a list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","def sum_nums(nums):
  sum = 0
  for num in nums:
    sum += num
  return sum

sum_nums([1, 2, 3, 4, 5, 6, 7, 8, 9]) # returns 45",Data Structure,6525,"def sum_nums___:
  sum = 0
  for num in nums:
    sum += num
  return sum

sum_nums___ # returns 45"
Write a function to sort the given list of tuples in Python according to the second element of the tuple.,"tuple_list = [(1, 10), (2, 7), (3, 5), (4, 8)]","def sort_by_second_elem(tuple_list):
    return sorted(tuple_list, key=lambda x: x[1])",Data Structure,6528,"def sort_by_second_elem___:
    return sorted___"
Edit a Python program to modify a numpy array into a pandas Dataframe.,Numpy Array,"import numpy as np
import pandas as pd

# Load the data
data = np.load('data.npy')

# Create the pandas DataFrame
df = pd.DataFrame(data)",Data Structure,6529,"import numpy as np
import pandas as pd

# Load the data
data = np.load___

# Create the pandas DataFrame
df = pd.DataFrame___"
Create an algorithm in Python to count all the even numbers in a given list of numbers,"[1, 2, 3, 4, 5, 6]","def count_even(array):
    count = 0
    for num in array:
        if num % 2 == 0:
            count += 1
    return count

arr = [1, 2, 3, 4, 5, 6]
print(count_even(arr)) # Output: 3",Data Structure,6530,"def count_even___:
    count = 0
    for num in array:
        if num % 2 == 0:
            count += 1
    return count

arr = ___
print___) # Output: 3"
Create a function in Python that takes in a list and returns the median value of the list.,"List: [2, 7, 3, 8, 5]","def median(nums):
    nums.sort()
    mid = len(nums) // 2
    
    if len(nums) % 2 == 0:
        return (nums[mid] + nums[mid-1]) / 2
    else:
        return nums[mid]",Data Structure,6535,"def median___:
    nums.sort()
    mid = len___ // 2
    
    if len___ % 2 == 0:
        return ___ / 2
    else:
        return nums[mid]"
Python Script to normalize a list of numbers.,"[-1, 0.2, 5.66, -2.344, 0]","def normalize(numbers):
  min_num = min(numbers)
  max_num = max(numbers)

  for i in range(0, len(numbers)):
    numbers[i] = (numbers[i] - min_num) / (max_num - min_num)

  return numbers

print(normalize([-1, 0.2, 5.66, -2.344, 0]))",Data Structure,6538,"def normalize___:
  min_num = min___
  max_num = max___

  for i in range___):
    numbers[i] = ___ / ___

  return numbers

print___)"
Create a function in Python to find the smallest positive number which is not present in a given unsorted array.,"[3, 1, 2, 6, 0, -2, -1]","def smallestMissingPositiveNumber(arr): 
    s = set() 
    for i in arr: 
        s.add(i) 
  
    for i in range(1, len(arr) + 1): 
        if i not in s: 
            return i 
  
    return len(arr)+1
  
arr = [3, 1, 2, 6, 0, -2, -1]
missing = smallestMissingPositiveNumber(arr)
print(missing) # 4",Data Structure,6541,"def smallestMissingPositiveNumber___: 
    s = set() 
    for i in arr: 
        s.add___ 
  
    for i in range___ + 1): 
        if i not in s: 
            return i 
  
    return len___+1
  
arr = [3, 1, 2, 6, 0, -2, -1]
missing = smallestMissingPositiveNumber___
print___ # 4"
Generate a Python program to filter a given list of names based on user search input.,"Names: [""Taylor"", ""Hilton"", ""John"", ""Jack"", ""Justin""]
User search input: ""J""","names = [""Taylor"", ""Hilton"", ""John"", ""Jack"", ""Justin""]

search_input = input(""Enter a name to search: "")

filtered_names = []
for name in names:
 if search_input in name:
  filtered_names.append(name)
print(filtered_names)",Data Structure,6542,"names = [""Taylor"", ""Hilton"", ""John"", ""Jack"", ""Justin""]

search_input = input___

filtered_names = []
for name in names:
 if search_input in name:
  filtered_names___name)
print___"
Debug and fix the following Python program that calculates a list of square roots.,"nums = [1, 4, 9, 16] 
for num in nums:
  print(num ** 0.5","nums = [1, 4, 9, 16] 
for num in nums:
  print(num ** 0.5)",Data Structure,6545,"nums = ___ 
for num in nums:
  print___"
Find the most expensive item from the given list using Python.,"[{'item': 'rice', 'price': 22.20}, {'item': 'bread', 'price': 15.00}, {'item': 'milk', 'price': 18.60}, {'item': 'butter', 'price': 34.40}]","most_expensive_item = max(list_of_items, key=lambda x: x['price'])",Data Structure,6548,most_expensive_item = max___
Create a python program to filter a list of words by length.,"[""Apple"", ""Banana"", ""Orange"", ""Grapes""]","def filter_words_by_length(word_list, length):
    return [word for word in word_list if len(word) == length]",Data Structure,6553,"def filter_words_by_length___:
    return [word for word in word_list if len___ == length]"
Develop a linear search algorithm in Python to find an element in an array.,"[1, 5, 8, 10], 8","def linearSearch(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i 
    return -1
  
# Driver Code 
arr = [1, 5, 8, 10] 
x = 8
  
# Function call 
result = linearSearch(arr, x) 
  
if(result == -1): 
    print(""Element is not present in the array"") 
else: 
    print(""Element is present at index"", result)",Data Structure,6555,"def linearSearch___: 
    for i in range___): 
        if arr[i] == x: 
            return i 
    return -1
  
# Driver Code 
arr = ___ 
x = 8
  
# Function call 
result = linearSearch___ 
  
if___: 
    print___ 
else: 
    print___"
Create a Python script to remove all occurrences of duplicate elements from a given list.,"mylist = [1,1,2,3,4,4,5,6]","mylist = [1,1,2,3,4,4,5,6]

unique_list = []
for element in mylist:
    if element not in unique_list:
        unique_list.append(element)

print(unique_list)",Data Structure,6556,"mylist = ___

unique_list = []
for element in mylist:
    if element not in unique_list:
        unique_list___element)

print___"
"Given a sorted array of n elements, write a Python program to search for a target element.","n = 7
target = 3
sorted_ary = [1, 2, 3, 5, 8, 9, 11]","def linear_search(sorted_ary, n, target):
	for i in range(0,n):
		if sorted_ary[i] == target:
			return i
	return -1

result = linear_search(sorted_ary, n, target)

if result == -1:
   print(""Element is not present in array"")
else:
   print(""Element is present at index"", result)",Data Structure,6558,"def linear_search___:
	for i in range___:
		if sorted_ary[i] == target:
			return i
	return -1

result = linear_search___

if result == -1:
   print___
else:
   print___"
Write a Python program to generate a mock version of the given data set.,"data_set = [('John', 32, 'Male'), ('Mary', 31, 'Female')]","import random

mock_data_set = []
for row in data_set:
    name = row[0] + str(random.randint(1,100))
    age = random.randint(1, 100)
    gender = random.choice(['Male', 'Female'])
    new_row = (name, age, gender)
    mock_data_set.append(new_row)

print(mock_data_set)",Data Structure,6559,"import random

mock_data_set = []
for row in data_set:
    name = row[0] + str___)
    age = random.randint___
    gender = random.choice___
    new_row = ___
    mock_data_set___new_row)

print___"
Generate a Python script for computing the sum of the numbers of a given list.,"nums_list = [1, 3, 5, 7, 9]","def sum_nums(nums_list):
  result = 0
  for num in nums_list:
    result += num
  return result

print(sum_nums(nums_list))

# Output
25",Data Structure,6562,"def sum_nums___:
  result = 0
  for num in nums_list:
    result += num
  return result

print___)

# Output
25"
Create a Python script that takes a list of numbers as input and prints out the mean and the standard deviation of the list.,"[5, 7, 10, 8, 6]","def mean(lst):
    return sum(lst) / len(lst)

def std_dev(lst):
    avg = mean(lst)
    variance = 0
    for num in lst:
        variance += (num - avg)**2
    variance /= len(lst)
    return variance**0.5

# Driver Code
lst = [5, 7, 10, 8, 6]

print(""Mean: "", mean(lst))
print(""Standard Deviation: "", std_dev(lst))",Data Structure,6564,"def mean___:
    return sum___ / len___

def std_dev___:
    avg = mean___
    variance = 0
    for num in lst:
        variance += ___**2
    variance /= len___
    return variance**0.5

# Driver Code
lst = ___

print___)
print___)"
Create a function in Python to sort a dictionary by value and return the result as a list.,"my_dict = {'A': 1, 'B': 2, 'C': 3}","def sort_dictionary_by_value(my_dict): 
	sorted_list = sorted(my_dict.items(), key=lambda x: x[1])
	return sorted_list 

my_dict = {'A': 1, 'B': 2, 'C': 3}
print(sort_dictionary_by_value(my_dict))",Data Structure,6565,"def sort_dictionary_by_value___: 
	sorted_list = sorted___, key=lambda x: x[1])
	return sorted_list 

my_dict = ___
print___)"
Write a Python program to take a list of numbers and remove all duplicates.,"[5,5,5,2,1,2,3,5]","OldList = [5,5,5,2,1,2,3,5]
NewList = []

for Num in OldList:
    if Num not in NewList:
        NewList.append(Num)

print(NewList)",Data Structure,6566,"OldList = ___
NewList = []

for Num in OldList:
    if Num not in NewList:
        NewList___Num)

print___"
Write a Python program to get all possible unique subsets of a given set of numbers.,"S = [1, 2, 3]","def get_subsets(S):
 subsets = [[]]
 for i in S:
 for j in range(len(subsets)):
 subsets.append(subsets[j] + [i])
 return subsets

S = [1, 2, 3]
print(get_subsets(S))
# Output: [[], [1], [2], [1, 2], [3], [1, 3], [2, 3], [1, 2, 3]]",Data Structure,6568,"def get_subsets___:
 subsets = [[]]
 for i in S:
 for j in range___):
 subsets___subsets[j] + [i])
 return subsets

S = ___
print___)
# Output: [[], ___, ___, ___, ___, ___, ___, ___]"
"In Python, write a program to find a single missing number in a sorted array of unique integers.","arr = [1,2,3,4,6,7,8]","def findMissingNumber(arr):
    n = len(arr)
    total_sum = (n+1)*(n+2)//2
    arr_sum = sum(arr)
    
    missing_number = total_sum - arr_sum
    
    return missing_number

arr = [1,2,3,4,6,7,8]

print(findMissingNumber(arr))",Data Structure,6570,"def findMissingNumber___:
    n = len___
    total_sum = ___*___//2
    arr_sum = sum___
    
    missing_number = total_sum - arr_sum
    
    return missing_number

arr = ___

print___)"
"Create a class in Python that contains a property called ""name"" and a constructor to set the value of the name property.",John,"class Person:
    def __init__(self, name):
        self.name = name

person = Person(""John"")",Data Structure,6571,"class Person:
    def __init_____:
        self.name = name

person = Person___"
"Create a Python program that takes a list of numbers and a target number as input, and returns all pairs of integers whose sum is equal to the target number","[8, 3, 10, 5], 13","def two_sum(arr, target):
    result = []
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            if (arr[i] + arr[j] == target):
                result.append((arr[i], arr[j]))
    return result

result = two_sum([8, 3, 10, 5], 13)
print(result)",Data Structure,6572,"def two_sum___:
    result = []
    for i in range___):
        for j in range___):
            if ___:
                result___(arr[i], arr[j]))
    return result

result = two_sum___
print___"
Write an efficient sorting algorithm in Python that will sort a list of numbers.,"[5, 3, 1, 4, 7, 2, 6]","def sort(nums):
    for i in range(len(nums)):
        min_index = i
        for j in range(i + 1, len(nums)):
            if nums[min_index] > nums[j]:
                min_index = j
        
        nums[i], nums[min_index] = nums[min_index], nums[i]
    
    return nums

print(sort([5, 3, 1, 4, 7, 2, 6]))",Data Structure,6574,"def sort___:
    for i in range___):
        min_index = i
        for j in range___):
            if nums[min_index] > nums[j]:
                min_index = j
        
        nums[i], nums[min_index] = nums[min_index], nums[i]
    
    return nums

print___)"
Design a function in Python that takes a list of integers and returns a list of the sum of the two largest integers.,"[10, 5, 15, 20, 7]","def get_largest_sum(nums):
  nums.sort()
  return nums[-1] + nums[-2]",Data Structure,6576,"def get_largest_sum___:
  nums.sort()
  return nums[-1] + nums[-2]"
Write a Python script to sort a list of tuples by its third element.,"[(2, 3, 5), (7, 9, 8), (1, 0, 4)]","def sort_by_third_element(input_list):
    sorted_list = sorted(input_list, key = lambda x: x[2])
    return sorted_list",Data Structure,6578,"def sort_by_third_element___:
    sorted_list = sorted___
    return sorted_list"
Optimize a code snippet in Python that sorts the given array.,"arr = [5, 4, 3, 2, 1]","# optimized code snippet to sort the given array
arr = [5, 4, 3, 2, 1]
arr.sort()
print(arr)
# arr is now sorted in ascending order as [1, 2, 3, 4, 5]",Data Structure,6579,"# optimized code snippet to sort the given array
arr = ___
arr.sort()
print___
# arr is now sorted in ascending order as ___"
"Given an array of numbers, generate a Python program to find the maximum value.","[1, 4, 6, 8, 3, 9, 5]","def find_max(arr):
    max_val = arr[0]
    for el in arr:
        if el > max_val:
            max_val = el
    return max_val

arr = [1, 4, 6, 8, 3, 9, 5]
print(find_max(arr))",Data Structure,6580,"def find_max___:
    max_val = arr___
    for el in arr:
        if el > max_val:
            max_val = el
    return max_val

arr = ___
print___)"
Write a function in Python to detect duplicate elements in an array.,"[3, 5, 6, 7, 3, 5]","def find_duplicates(arr):
    seen = set()
    duplicates = []
    for x in arr:
        if x in seen:
            duplicates.append(x)
        else:
            seen.add(x)
    return duplicates

print(find_duplicates([3, 5, 6, 7, 3, 5]))",Data Structure,6582,"def find_duplicates___:
    seen = set()
    duplicates = []
    for x in arr:
        if x in seen:
            duplicates___x)
        else:
            seen.add___
    return duplicates

print___)"
Generate a function in Python to sort a given list of integers in increasing order using Quick Sort.,"[9, 5, 7, 3, 1, 8, 6]","def quickSort(arr): 
    if len(arr) <= 1:
        return arr
    else:
        pivot = arr[0]
        lessThanPivot = [x for x in arr[1:] if x < pivot]
        moreThanPivot = [x for x in arr[1:] if x >= pivot]
        sortedArray = quickSort(lessThanPivot) + [pivot] + quickSort(moreThanPivot)
        return sortedArray",Data Structure,6601,"def quickSort___: 
    if len___ <= 1:
        return arr
    else:
        pivot = arr___
        lessThanPivot = [x for x in arr[1:] if x < pivot]
        moreThanPivot = [x for x in arr[1:] if x >= pivot]
        sortedArray = quickSort___ + [pivot] + quickSort___
        return sortedArray"
Create a function in Python to calculate the standard deviation from a given array of numbers.,"[2, 4, 4, 4, 5, 5, 7, 9]","def compute_std_dev(nums): 
	mean = sum(nums) / len(nums)
	variance = 0
	for n in nums:
		variance += (n - mean) ** 2
	variance /= len(nums)

	std_dev = variance ** 0.5
	return std_dev",Data Structure,6604,"def compute_std_dev___: 
	mean = sum___ / len___
	variance = 0
	for n in nums:
		variance += ___ ** 2
	variance /= len___

	std_dev = variance ** 0.5
	return std_dev"
Write a python code to get the maximum element from a given list.,"[7, -10, 5, 112, 0]","def get_max_elem(nums):
    max_elem = nums[0]
    for num in nums:
        if num > max_elem:
            max_elem = num
    return max_elem",Data Structure,6608,"def get_max_elem___:
    max_elem = nums___
    for num in nums:
        if num > max_elem:
            max_elem = num
    return max_elem"
Create a Python program to generate all the possible permutations of a given array.,"[1, 2, 3]","def permutations(arr):
    if len(arr) == 0:
        return [] 
  
    if len(arr) == 1:
        return [arr]

    l = [] 
    
    for i in range(len(arr)):
       m = arr[i]
       remLst = arr[:i] + arr[i+1:]
       for p in permutations(remLst):
           l.append([m] + p)
    return l",Data Structure,6611,"def permutations___:
    if len___ == 0:
        return [] 
  
    if len___ == 1:
        return [arr]

    l = [] 
    
    for i in range___):
       m = arr[i]
       remLst = arr[:i] + arr[i+1:]
       for p in permutations___:
           l___[m] + p)
    return l"
Construct an algorithm in Python that takes a list of numbers and returns the mean.,"[1, 2, 3, 4]","def mean(nums):
    total = 0
    for num in nums:
        total += num
    return total / len(nums)",Data Structure,6612,"def mean___:
    total = 0
    for num in nums:
        total += num
    return total / len___"
Implement a sorting algorithm in Python to sort a given list of numbers in ascending order.,"[3, 7, 1, 4, 9, 5]","def sort(list):
  for i in range(len(list)):
    min_idx = i
    for j in range(i+1, len(list)):
      if list[min_idx] > list[j]:
        min_idx = j
  list[i], list[min_idx] = list[min_idx], list[i]

  return list

list = [3,7,1,4,9,5]
sorted_list = sort(list)

print(sorted_list)",Data Structure,6616,"def sort___:
  for i in range___):
    min_idx = i
    for j in range___):
      if list[min_idx] > list[j]:
        min_idx = j
  list[i], list[min_idx] = list[min_idx], list[i]

  return list

list = ___
sorted_list = sort___

print___"
Write a Python method that takes a list of strings as an argument and returns a list of the words which are the same length as the longest word in the list.,"my_list = [""apple"", ""kiwi"", ""banana"", ""mango""]","def same_length(words):
 longest = max([len(word) for word in words])
 longest_words = [word for word in words if len(word) == longest]
 return longest_words

print(same_length(my_list))
# Output: [""apple"", ""banana"", ""mango""]",Data Structure,6617,"def same_length___:
 longest = max___ for word in words])
 longest_words = [word for word in words if len___ == longest]
 return longest_words

print___)
# Output: [""apple"", ""banana"", ""mango""]"
Create a Python program to edit a given list according to a given condition,"[1,3,5,8,2,6], lambda x : x%2==0","def edit_list(l, condition):
    result = []
    for i in l:
        if condition(i):
            result.append(i)
    return result

l = [1,3,5,8,2,6]
condition = lambda x : x%2==0

print(edit_list(l, condition))",Data Structure,6619,"def edit_list___:
    result = []
    for i in l:
        if condition___:
            result___i)
    return result

l = ___
condition = lambda x : x%2==0

print___)"
Design a function in Python that takes in a list and returns its reverse.,"[1, 2, 3, 4]","def reverse_list(list):
    return list[::-1]

result = reverse_list([1,2,3,4])
print(result)",Data Structure,6622,"def reverse_list___:
    return list[::-1]

result = reverse_list___
print___"
Create a Python function that sorts a list of strings in descending order of length.,"['Math', 'English', 'Computer Science', 'Physics']","def sort_by_length_descending(list_of_strings):
    list_of_strings.sort(key=len, reverse=True)
    return list_of_strings

result = sort_by_length_descending(['Math', 'English', 'Computer Science', 'Physics'])
print(result)",Data Structure,6623,"def sort_by_length_descending___:
    list_of_strings.sort___
    return list_of_strings

result = sort_by_length_descending___
print___"
Develop a python program that takes a paragraph as input and outputs a list of words in descending order of frequencies.,This is a sample sentence to try out the program.,"from collections import Counter

def word_frequency(paragraph): 
  words = paragraph.split()
  counts = Counter(words)
  return counts.most_common()

paragraph = ""This is a sample sentence to try out the program.""
print(word_frequency(paragraph))",Data Structure,6624,"from collections import Counter

def word_frequency___: 
  words = paragraph.split()
  counts = Counter___
  return counts.most_common()

paragraph = ""This is a sample sentence to try out the program.""
print___)"
Create an algorithm in Python for removing duplicates from an array of integers.,"[1, 2, 4, 5, 6, 2, 7, 4]","def remove_duplicates(arr):
    s = set()
    result = []
    for i in arr:
        if i not in s:
            s.add(i)
            result.append(i)
    return result

arr = [1, 2, 4, 5, 6, 2, 7, 4]

print(remove_duplicates(arr))
# Output: [1, 2, 4, 5, 6, 7]",Data Structure,6625,"def remove_duplicates___:
    s = set()
    result = []
    for i in arr:
        if i not in s:
            s.add___
            result___i)
    return result

arr = ___

print___)
# Output: ___"
Generate a Python program that determines the largest number in the given array.,"[7, 12, 5, 9]","arr = [7, 12, 5, 9]

def find_max(arr):
    max_num = arr[0]
    for num in arr:
        if num > max_num:
            max_num = num
    return max_num

print(""The largest number is:"", find_max(arr))",Data Structure,6631,"arr = ___

def find_max___:
    max_num = arr___
    for num in arr:
        if num > max_num:
            max_num = num
    return max_num

print___)"
Write a Python class that prints the mean and median of a given list.,"[2, 4, 6, 8, 10]","class MeanMedianCalculator:
    def __init__(self, data):
        self.data = data
    
    def mean(self):
        return sum(self.data) / len(self.data)
    
    def median(self):
        self.data.sort()
        return self.data[(len(self.data)-1) // 2]

calculator = MeanMedianCalculator([2, 4, 6, 8, 10])
print(""Mean is {}, Median is {}"".format(calculator.mean(), calculator.median()))",Data Structure,6634,"class MeanMedianCalculator:
    def __init_____:
        self.data = data
    
    def mean___:
        return sum___ / len___
    
    def median___:
        self.data.sort()
        return self.data[___-1) // 2]

calculator = MeanMedianCalculator___
print___, calculator.median()))"
Create a Python program that predicts the next value from a given list of integer numbers.,"[7, 3, 5, 9, 4]","def predict_next_value(nums):
  # calculate average
  avg = sum(nums) / len(nums)

  # predict next value
  return avg
  
# test  
print(predict_next_value([7, 3, 5, 9, 4])) # prints 6.0",Data Structure,6635,"def predict_next_value___:
  # calculate average
  avg = sum___ / len___

  # predict next value
  return avg
  
# test  
print___) # prints 6.0"
Write a Python program to generate a random key of a given length containing characters from the given set of characters.,"6, ""ACGT""","import random

def generate_random_key(length,characters):
    key = """"
    for _ in range(length):
        key += random.choice(characters)
    return key

length = 6
characters = ""ACGT""

print(generate_random_key(length,characters)) # GTGGCA",Data Structure,6638,"import random

def generate_random_key___:
    key = """"
    for _ in range___:
        key += random.choice___
    return key

length = 6
characters = ""ACGT""

print___) # GTGGCA"
Create a python program to check if a list is palindromic.,"list1 = [1,2,3,2,1]","def is_palindrome(lst):
  if len(lst) < 2:
    return True
  if lst[0] != lst[-1]:
    return False
  return is_palindrome(lst[1:-1])",Data Structure,6640,"def is_palindrome___:
  if len___ < 2:
    return True
  if lst___ != lst[-1]:
    return False
  return is_palindrome___"
Write a Python program to determine the sum of even elements in a given array.,"[1, 2, 3, 4, 5, 6]","def sum_even_elems(arr):
    sum_of_even = 0
    for elem in arr:
        if elem % 2 == 0:
            sum_of_even += elem
    return sum_of_even

arr = [1,2,3,4,5,6]
print(sum_even_elems(arr))",Data Structure,6642,"def sum_even_elems___:
    sum_of_even = 0
    for elem in arr:
        if elem % 2 == 0:
            sum_of_even += elem
    return sum_of_even

arr = ___
print___)"
Write a Python program to optimize the sorting of a given list of items.,"['chair', 'lamp', 'books', 'table']","def optimize_sort(items):
  sorted_items = sorted(items)
  return sorted_items",Data Structure,6646,"def optimize_sort___:
  sorted_items = sorted___
  return sorted_items"
Write a Python program to check whether an element exists within a given list.,"list_a = [1, 2, 3, 4]
target = 3","def is_element_in_list(list_a, target):
 return target in list_a

is_element_in_list(list_a, target)",Data Structure,6650,"def is_element_in_list___:
 return target in list_a

is_element_in_list___"
Write a Python program to filter out all the strings longer than 10 characters in a list of strings.,"my_list = [""Hello"", ""World"", ""Welcome to the world!"", ""Hi!""]","def filter_long_strings(my_list):
  long_strings = []
  for i in my_list:
    if len(i) > 10:
      long_strings.append(i)
  return long_strings",Data Structure,6653,"def filter_long_strings___:
  long_strings = []
  for i in my_list:
    if len___ > 10:
      long_strings___i)
  return long_strings"
Write a Python program to identify the largest number in the given list.,"[1000, 506, 299, 620, 35]","max_num = 0 

for num in lst : 
    if num > max_num : 
        max_num = num 

print(max_num)",Data Structure,6667,"max_num = 0 

for num in lst : 
    if num > max_num : 
        max_num = num 

print___"
Create a function in Python that takes a list and sorts its elements in ascending order.,"numbers = [5, 2, 8, 7, 1]","def sortAsc(numbers):
    numbers.sort()
    return numbers",Data Structure,6672,"def sortAsc___:
    numbers.sort()
    return numbers"
Generate a program in Python that takes a list of numbers and prints out the average value.,"[3, 5, 7, 9]","def find_average(nums):
  sum = 0
  for num in nums:
    sum += num
  return sum/len(nums)",Data Structure,6673,"def find_average___:
  sum = 0
  for num in nums:
    sum += num
  return sum/len___"
Create a Python program that takes the average of all numbers in a list.,"[10, 15, 20, 25]","def averageList(numbers):
    total = 0
    for num in numbers:
        total += num
    return total / len(numbers)

print(averageList([10, 15, 20, 25]))",Data Structure,6675,"def averageList___:
    total = 0
    for num in numbers:
        total += num
    return total / len___

print___)"
Create a function in Python to find the most common elements in a list.,"[2, 4, 1, 4, 5, 6, 4, 8]","def most_common_element(lst):
    max_count = 0
    most_common = None
    
    for num in lst:
        count = lst.count(num)
        if count > max_count:
            most_common = num
            max_count = count
    return most_common

most_common_element([2, 4, 1, 4, 5, 6, 4, 8])",Data Structure,6676,"def most_common_element___:
    max_count = 0
    most_common = None
    
    for num in lst:
        count = lst.count___
        if count > max_count:
            most_common = num
            max_count = count
    return most_common

most_common_element___"
Create a Python function that takes in a list of words and check if every word in the list is a palindrome.,"[""abcd"", ""anna"", ""mom"", ""live""]","def is_all_palindrome(words):
    for word in words:
        if word == word[::-1]:
            continue
        else:
            return False
    return True

words = [""abcd"", ""anna"", ""mom"", ""live""]

print(is_all_palindrome(words))",Data Structure,6679,"def is_all_palindrome___:
    for word in words:
        if word == word[::-1]:
            continue
        else:
            return False
    return True

words = [""abcd"", ""anna"", ""mom"", ""live""]

print___)"
Write a Python function that takes a list of numbers and prints out a list of their squares.,"[1, 2, 3]","def squares(arr):
  res = []
  for i in arr:
    res.append(i**2)
  return res

arr = [1, 2, 3]
res = squares(arr)
print(res)",Data Structure,6682,"def squares___:
  res = []
  for i in arr:
    res___i**2)
  return res

arr = ___
res = squares___
print___"
Write a Python program to remove duplicate items from a list.,"[1, 2, 3, 4, 3, 2, 4]","def remove_duplicate(inlist):
    outlist = []
    for item in inlist:
        if item not in outlist:
            outlist.append(item)
    return outlist

result = remove_duplicate([1, 2, 3, 4, 3, 2, 4])
print(result)",Data Structure,6686,"def remove_duplicate___:
    outlist = []
    for item in inlist:
        if item not in outlist:
            outlist___item)
    return outlist

result = remove_duplicate___
print___"
Implement a Python function to swap two values in a list.,List: 4 8 1 5,"def swapPositions(list, pos1, pos2): 
  
    first_ele = list[pos1] 
    list[pos1] = list[pos2] 
    list[pos2] = first_ele 
  
    return list
  
# Driver function 
list = [4, 8, 1, 5] 
pos1, pos2  = 0, 3
  
print(swapPositions(list, pos1, pos2))",Data Structure,6693,"def swapPositions___: 
  
    first_ele = list[pos1] 
    list[pos1] = list[pos2] 
    list[pos2] = first_ele 
  
    return list
  
# Driver function 
list = ___ 
pos1, pos2  = 0, 3
  
print___)"
Write a Python program to sort a dictionary by its values and return the sorted list?,"{""Red"":120,""Blue"":90,""Yellow"":50,""Purple"":75}","unsortedDict = {""Red"":120,""Blue"":90,""Yellow"":50,""Purple"":75}

sortedList = sorted(unsortedDict.items(), key=lambda x: x[1])
print(sortedList)",Data Structure,6697,"unsortedDict = ___

sortedList = sorted___, key=lambda x: x[1])
print___"
Generate a function in Python that takes a list of integers and returns a boolean indicating whether or not there are any duplicates in the input list.,"[1, 2, 3, 1]","def contains_duplicates(list):
 
 seen = set()
 
 for element in list:
 if element in seen:
 return True
 seen.add(element)
 
 return False",Data Structure,6703,"def contains_duplicates___:
 
 seen = set()
 
 for element in list:
 if element in seen:
 return True
 seen.add___
 
 return False"
Develop a Python script to calculate the sum of the squares of all elements in a given array.,"[1, 2, 3]","def sum_of_squares(arr):
    sum = 0 
    for num in arr:
        sum += num*num
    return sum

arr = [1,2,3]
sum_of_squares = sum_of_squares(arr)
print(sum_of_squares)",Data Structure,6708,"def sum_of_squares___:
    sum = 0 
    for num in arr:
        sum += num*num
    return sum

arr = ___
sum_of_squares = sum_of_squares___
print___"
Optimize a Python algorithm that computes the maximum value in a given array.,"list = [23, 45, 67, 89, 13, 99, 19, 20]","def max_value(list):
    max_val = list[0]
    for val in list[1:]:
        if val > max_val:
            max_val = val
    return max_val

list = [23, 45, 67, 89, 13, 99, 19, 20]
print(max_value(list)) # 99",Data Structure,6711,"def max_value___:
    max_val = list___
    for val in list[1:]:
        if val > max_val:
            max_val = val
    return max_val

list = ___
print___) # 99"
Read the following data structure and generate a Python program to sort the list by name alphabetically.,"student_list = [{""name"": ""John"", ""age"": 20}, {""name"": ""Emily"", ""age"": 18}, {""name"": ""James"", ""age"": 21}]","sorted_list = sorted(student_list, key=lambda k: k[""name""])
 
for student in sorted_list:
    print(student[""name""])",Data Structure,6717,"sorted_list = sorted___
 
for student in sorted_list:
    print___"
Generate a Python script to delete the duplicate element from an array.,"[3, 8, 4, 3, 2, 8]","def removeDuplicates(arr): 
    final_list = [] 
    for num in arr: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list 
          
# Driver Code 
arr = [3, 8, 4, 3, 2, 8]  
print(removeDuplicates(arr))",Data Structure,6718,"def removeDuplicates___: 
    final_list = [] 
    for num in arr: 
        if num not in final_list: 
            final_list___num) 
    return final_list 
          
# Driver Code 
arr = ___  
print___)"
Write a Python script that takes a list of numbers as an input and outputs their average.,"[3, 5, 7, 9, 12]","def average(arr):
    return sum(arr) / len(arr)

mylist = [3, 5, 7, 9, 12]

print(""Average of mylist is:"", average(mylist))",Data Structure,6719,"def average___:
    return sum___ / len___

mylist = ___

print___)"
Write a Python code to check if a given list contains all unique elements.,"list = [3, 1, 4, 6, 5]","def is_unique_list (numbers):
    return len(numbers) == len(set(numbers))",Data Structure,6720,"def is_unique_list ___:
    return len___ == len___)"
Create a web scraper using Python to scrape the title of all articles on a given website and store them in a list.,"URL: ""http://example.com/articles""","import requests
from bs4 import BeautifulSoup

url = ""http://example.com/articles""
r = requests.get(url)
html = r.text
soup = BeautifulSoup(html, ""html.parser"")

titles = []
for art in soup.find_all(""h2""):
 titles.append(art.get_text())

print(titles)",Data Structure,6721,"import requests
from bs4 import BeautifulSoup

url = ""http://example.com/articles""
r = requests.get___
html = r.text
soup = BeautifulSoup___

titles = []
for art in soup.find_all___:
 titles___art.get_text())

print___"
Generate a for loop in Python for iterating an array.,"[2, 5, 9, 8]","arr = [2, 5, 9, 8]
for num in arr:
    print(num)",Data Structure,6723,"arr = ___
for num in arr:
    print___"
"Write a Python script that takes a list of integers, and returns a list of tuples that contain the index and square of each number in the original list.","nums = [1, 2, 3, 4, 5]","def square_index(nums):
    return [(index, num ** 2) for index, num in enumerate(nums)]

square_index(nums)
# Output: [(0, 1), (1, 4), (2, 9), (3, 16), (4, 25)]",Data Structure,6725,"def square_index___:
    return [___ for index, num in enumerate___]

square_index___
# Output: [___, ___, ___, ___, ___]"
Generate a python script to extract a random subset of size 100 from a given list of items.,"li = [1,2,3,4,5,6,7,8,9,10]","import random

def extract_random_subset(li, size=100): 
    subset = [] 
    while len(subset) < size: 
        rand_ele = random.choice(li)
        if rand_ele not in subset: 
            subset.append(rand_ele) 
    return subset",Data Structure,6730,"import random

def extract_random_subset___: 
    subset = [] 
    while len___ < size: 
        rand_ele = random.choice___
        if rand_ele not in subset: 
            subset___rand_ele) 
    return subset"
Sort a list of strings in Python alphabetically.,"string_list = [""apple"",""banana"", ""orange"", ""kiwi""]","def sort_list(string_list):
  sorted_list = sorted(string_list)
  return sorted_list",Data Structure,6731,"def sort_list___:
  sorted_list = sorted___
  return sorted_list"
"Write a Python program to create a list that contains the elements of the previous list, but with all duplicates removed.","list_with_duplicates = [2, 3, 4, 4, 5, 5, 6, 6]",no_duplicates_list = list(set(list_with_duplicates)),Data Structure,6733,no_duplicates_list = list___)
Generate a Python function to return the index of a given item in a list.,"lst = [1, 2, 3, 4];","def findIndex(lst, item):
 for i, v in enumerate(lst):
 if v == item:
 return i
 return -1

findIndex(lst, 4) // 3",Data Structure,6737,"def findIndex___:
 for i, v in enumerate___:
 if v == item:
 return i
 return -1

findIndex___ // 3"
Convert a given list of numbers into a Python dictionary using a for loop.,"list_of_nums = [1, 2, 3, 4, 5]","list_of_nums = [1, 2, 3, 4, 5]

dictionary = {}
for num in list_of_nums:
 dictionary[num] = num

print(dictionary)

# Output {1: 1, 2: 2, 3: 3, 4: 4, 5: 5}",Data Structure,6740,"list_of_nums = ___

dictionary = {}
for num in list_of_nums:
 dictionary[num] = num

print___

# Output ___"
Compute the sum of a list of numbers using a for loop in Python.,"[1, 2, 3, 4]","total = 0

nums = [1, 2, 3, 4]

for num in nums:
    total += num

print(total)",Data Structure,6745,"total = 0

nums = ___

for num in nums:
    total += num

print___"
Write a Python function to calculate the sum of a list of numbers after transforming them using a given function.,"numbers = [1, 2, 3]
transform_function = lambda x: x**2","def transform_sum(numbers, transform_function):
 transformed_numbers = [transform_function(x) for x in numbers]
 return sum(transformed_numbers)",Data Structure,6748,"def transform_sum___:
 transformed_numbers = [transform_function___ for x in numbers]
 return sum___"
Write a function in Python to delete duplicates from a list.,"[1,1,3,4,4,5]","def remove_duplicates(lst): 
	return list(set(lst)) 
remove_duplicates([1,1,3,4,4,5])",Data Structure,6751,"def remove_duplicates___: 
	return list___) 
remove_duplicates___"
Create a Python program to generate a bar chart of a given data set.,"data_points = [50, 45, 55]","import matplotlib.pyplot as plt

plt.bar(range(len(data_points)), data_points)
plt.title('Bar Chart')
plt.xlabel('index') 
plt.ylabel('value')
plt.show()",Data Structure,6753,"import matplotlib.pyplot as plt

plt.bar___), data_points)
plt.title___
plt.xlabel___ 
plt.ylabel___
plt.show()"
Write a Python program that takes a list of numbers as input and returns a list of all numbers in the original list which are divisible by 7.,"[14, 21, 49, 28, 35, 56, 16]","def divisible_by_seven(numbers): 
    return [number for number in numbers if number % 7 == 0]

numbers = [14, 21, 49, 28, 35, 56, 16]
print(divisible_by_seven(numbers))

# Output  [14, 21, 28, 56]",Data Structure,6755,"def divisible_by_seven___: 
    return [number for number in numbers if number % 7 == 0]

numbers = ___
print___)

# Output  ___"
Write a function in Python to compute the mean of a list of numbers.,"[1, 3, 4, 8, 5]","def compute_mean(nums):
    sum = 0
    for num in nums:
        sum += num
    return sum/len(nums)

a = [1, 3, 4, 8, 5]
print(""Mean ="", compute_mean(a)) # Output: Mean = 4.4",Data Structure,6763,"def compute_mean___:
    sum = 0
    for num in nums:
        sum += num
    return sum/len___

a = ___
print___) # Output: Mean = 4.4"
Generate a python function that takes an array and returns its maximum element.,"[5, 25, 10, 9]","def maxElement(arr): 
    max = arr[0] 
    for i in arr: 
        if i > max: 
            max = i 
    return max 
 
arr = [5, 25, 10, 9]
out = maxElement(arr) 
print(out)",Data Structure,6764,"def maxElement___: 
    max = arr___ 
    for i in arr: 
        if i > max: 
            max = i 
    return max 
 
arr = ___
out = maxElement___ 
print___"
Develop a Python script to generate an array of given size filled with random numbers.,int size = 10,"import random

def arr_of_random_numbers(size):
    arr = []
    for i in range(size):
        arr.append(random.randint(1, 100))
    return arr

size = 10
arr = arr_of_random_numbers(size)
print(arr)",Data Structure,6765,"import random

def arr_of_random_numbers___:
    arr = []
    for i in range___:
        arr___random.randint(1, 100))
    return arr

size = 10
arr = arr_of_random_numbers___
print___"
Write a Python program to sort a list of dictionaries using a custom key.,"lst = [{'name': 'Tim', 'age': 20}, {'name': 'Bob', 'age': 10}, {'name': 'Chris', 'age': 30}]","sorted_list = sorted(lst, key = lambda x: x['name'])
print(sorted_list)",Data Structure,6768,"sorted_list = sorted___
print___"
Generate an optimized Python data structure for sorting a large list of numbers.,"[32, 66, 1, 4, 88, 29]","def optimized_sort(numbers):
    # Create a heap
    heap = []

    # Insert each element into the heap
    for num in numbers:
        heapq.heappush(heap, num)

    # Pop elements from the heap and append to result list
    sorted_nums = []
    while heap:
        sorted_nums.append(heapq.heappop(heap))

    return sorted_nums",Data Structure,6770,"def optimized_sort___:
    # Create a heap
    heap = []

    # Insert each element into the heap
    for num in numbers:
        heapq.heappush___

    # Pop elements from the heap and append to result list
    sorted_nums = []
    while heap:
        sorted_nums___heapq.heappop(heap))

    return sorted_nums"
Write a Python program to read a list of numbers and return the sum of elements in the list.,"[1,2,3,4,5]","def sum_list(nums):
    if not nums: 
        return 0
    return nums[0] + sum_list(nums[1:])

sum_list([1,2,3,4,5]) # 15",Data Structure,6773,"def sum_list___:
    if not nums: 
        return 0
    return nums[0] + sum_list___

sum_list___ # 15"
Write a Python program to take a list of numbers and reverse the order of the elements in the list in place.,"[1, 2, 3, 4, 5]","def reverse_list(numbers):
 # get the length of the list
 n = len(numbers)

 # loop through the list
 for i in range(n // 2):
 # swap the elements
 numbers[i], numbers[n - i - 1] = numbers[n - i - 1], numbers[i]

numbers = [1, 2, 3, 4, 5]
reverse_list(numbers)
print(numbers) # [5, 4, 3, 2, 1]",Data Structure,6777,"def reverse_list___:
 # get the length of the list
 n = len___

 # loop through the list
 for i in range___:
 # swap the elements
 numbers[i], numbers[n - i - 1] = numbers[n - i - 1], numbers[i]

numbers = ___
reverse_list___
print___ # [5, 4, 3, 2, 1]"
Generate an array of random numbers in Python.,size: 10,"import numpy as np

size = 10
random_array = np.random.randint(0, 100, size)
print(random_array)",Data Structure,6782,"import numpy as np

size = 10
random_array = np.random.randint___
print___"
Create a Python code that generates a combination of elements from a given array.,"arr = [a, b, c, d], n = 2","def combinations(arr, n):
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            print(arr[i], arr[j])
combinations(arr, n)",Data Structure,6784,"def combinations___:
    for i in range___):
        for j in range___):
            print___
combinations___"
Create a Python program to list all the integers between a given range input.,"Start: 3
End:10","def list_integers(start, end):
    integers_list=[]
    while (start <= end):
        integers_list.append(start)
        start = start + 1
    return integers_list
  
print(""The list of integers in the given range is:"")
result = list_integers(3,10)
print(result)",Data Structure,6785,"def list_integers___:
    integers_list=[]
    while ___:
        integers_list___start)
        start = start + 1
    return integers_list
  
print___
result = list_integers___
print___"
Create a Python function which will take a list of numbers as input and return a list but with each value doubled.,"[1, 2, 3, 4, 5]","def double_list(lst):
    new_list = []
    for num in lst:
        new_list.append(num * 2)
    return new_list

my_list = [1, 2, 3, 4, 5]

double_list(my_list) #[2, 4, 6, 8, 10]",Data Structure,6790,"def double_list___:
    new_list = []
    for num in lst:
        new_list___num * 2)
    return new_list

my_list = ___

double_list___ #[2, 4, 6, 8, 10]"
Optimize a python program that prints out all the even numbers in a list using list comprehension.,"numbers = [1,2,3,4,5,6,7,8,9,10]","even_numbers = [x for x in numbers if x % 2 == 0]

print(even_numbers)",Data Structure,6791,"even_numbers = [x for x in numbers if x % 2 == 0]

print___"
Generate a Python program which takes a list of numbers and returns only the even numbers,"[1, 2, 3, 4, 5, 6]","def get_even_numbers(list_of_numbers):
    even_nums = []
    for num in list_of_numbers:
        if num % 2 == 0:
            even_nums.append(num)
    return even_nums

list_of_nums = [1, 2, 3, 4, 5, 6]
result = get_even_numbers(list_of_nums)
print(result)",Data Structure,6793,"def get_even_numbers___:
    even_nums = []
    for num in list_of_numbers:
        if num % 2 == 0:
            even_nums___num)
    return even_nums

list_of_nums = ___
result = get_even_numbers___
print___"
Create a unique list of items from a given list in Python.,"given_list = [2, 2, 4, 5, 5, 6, 8, 8]","# Unique list
unq_list = list(set(given_list))

#Print unique list
print(unq_list)",Data Structure,6798,"# Unique list
unq_list = list___)

#Print unique list
print___"
Write a Python program to check if a given list of strings consists only of unique elements.,"my_list = ['cat', 'dog', 'cat']","def check_unique_list(my_list):
    unique_list =[]
    for i in my_list:
        if i not in unique_list:
            unique_list.append(i)
    if len(unique_list) == len(my_list):
        return True
    else:
        return False",Data Structure,6802,"def check_unique_list___:
    unique_list =[]
    for i in my_list:
        if i not in unique_list:
            unique_list___i)
    if len___ == len___:
        return True
    else:
        return False"
"Write a Python program to create a dictionary from two lists. Make the dictionary keys from the first list, and the value from the second list.","Tractors, 100
Cars, 50","dictionary = { ""Tractors"": 100, ""Cars"": 50 }",Data Structure,6806,dictionary = ___
"Create a Python generator to iterate over the strings in the list ['cat', 'dog', 'bird'].","['cat', 'dog', 'bird']","def string_generator(strings):
  for string in strings:
    yield string

for string in string_generator(['cat', 'dog', 'bird']):
  print(string)",Data Structure,6809,"def string_generator___:
  for string in strings:
    yield string

for string in string_generator___:
  print___"
Write a python program to retrieve the value at a given index of a list.,"Lists = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
Index = 1","def getValueAtIndex(my_list, index):
    return my_list[index]

result = getValueAtIndex([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 1) 
print(result)",Data Structure,6812,"def getValueAtIndex___:
    return my_list[index]

result = getValueAtIndex___ 
print___"
"Given an array of integers, write a Python function to find the index of the largest element in that array.","nums = [10, 50, 20, 7, 55]","def find_largest_element_index(nums):
        largest = nums[0]
        largest_element_index = 0
        for i in range(0, len(nums)):
            if nums[i] > largest:
                largest = nums[i]
                largest_element_index = i
        return largest_element_index",Data Structure,6815,"def find_largest_element_index___:
        largest = nums___
        largest_element_index = 0
        for i in range___):
            if nums[i] > largest:
                largest = nums[i]
                largest_element_index = i
        return largest_element_index"
Write a Python code to find the number of odd and even numbers in a given array.,"arr = [8, 5, 6, 3, 9]","arr = [8, 5, 6, 3, 9]

odd = 0
even = 0

for num in arr: 
    if num % 2 == 0: 
        even += 1
    else: 
        odd += 1

print(""Number of odd numbers in the array: "", odd)
print(""Number of even numbers in the array: "", even)",Data Structure,6816,"arr = ___

odd = 0
even = 0

for num in arr: 
    if num % 2 == 0: 
        even += 1
    else: 
        odd += 1

print___
print___"
Update the Python function below so that it sorts the given list of numbers in ascending order.,"[2, 4, 5, 1, 3]","def sort_list(numbers):
    numbers.sort()
    return numbers

result = sort_list([2, 4, 5, 1, 3])
print(result)",Data Structure,6821,"def sort_list___:
    numbers.sort()
    return numbers

result = sort_list___
print___"
Create a sorting algorithm in Python that sorts a list of numbers from low to high.,"[10, 6, 8, 4]","def bubble_sort(lst):
    for i in range(len(lst) - 1): 
        for j in range (0, len(lst) - i - 1): 
            if lst[j] > lst[j + 1] : 
                lst[j], lst[j + 1] = lst[j + 1], lst[j] 
    return lst

sorted_list = bubble_sort([10, 6, 8, 4])
print(sorted_list)",Data Structure,6827,"def bubble_sort___:
    for i in range___ - 1): 
        for j in range ___ - i - 1): 
            if lst[j] > lst[j + 1] : 
                lst[j], lst[j + 1] = lst[j + 1], lst[j] 
    return lst

sorted_list = bubble_sort___
print___"
Create a python function to count the number of unique elements from a given list.,"arr = [1, 4, 2, 1, 5, 4, 3]","def count_unique_elements(arr):
    unique_elements = set(arr)
    return len(unique_elements)
    
if __name__ == '__main__':
    arr = [1, 4, 2, 1, 5, 4, 3]
    print(count_unique_elements(arr))",Data Structure,6830,"def count_unique_elements___:
    unique_elements = set___
    return len___
    
if __name__ == '__main__':
    arr = ___
    print___)"
Suggest a way to shuffle a python list of integers,"my_list = [1,2,3,4,5]","import random

def shuffle_list(lst):
    random.shuffle(lst)
    return lst

my_list = [1,2,3,4,5]
shuffled_list = shuffle_list(my_list)
print(shuffled_list)",Data Structure,6831,"import random

def shuffle_list___:
    random.shuffle___
    return lst

my_list = ___
shuffled_list = shuffle_list___
print___"
Create a Python program to rearrange the elements of an array in the maximum possible order,"arr = [1,2,3]","arr = [1,2,3]

def rearrange(arr):
    i = 1
    while i < len(arr):
        key = arr[i]
        j = i - 1
        while j >= 0 and arr[j] < key:
            arr[j+1] = arr[j]
            j -= 1
        arr[j+1] = key
        i += 1
    return arr",Data Structure,6832,"arr = ___

def rearrange___:
    i = 1
    while i < len___:
        key = arr[i]
        j = i - 1
        while j >= 0 and arr[j] < key:
            arr[j+1] = arr[j]
            j -= 1
        arr[j+1] = key
        i += 1
    return arr"
Create a Python function to remove all the elements in a list that are greater than a specified value.,"[1, 2, 3, 4, 5], 3","def remove_greater_than(arr, value):
    new_arr = []
    for item in arr:
        if item <= value:
            new_arr.append(item)
    return new_arr

result = remove_greater_than([1, 2, 3, 4, 5], 3)
print(result)",Data Structure,6833,"def remove_greater_than___:
    new_arr = []
    for item in arr:
        if item <= value:
            new_arr___item)
    return new_arr

result = remove_greater_than___
print___"
Develop a Python program that takes an array of integers and returns the largest element.,"[2, 4, 8, 9, 10]","def find_max(arr):
    
    max_val = arr[0]
    
    for num in arr:
        if num > max_val:
            max_val = num
            
    return max_val

print(find_max([2, 4, 8, 9, 10]))",Data Structure,6834,"def find_max___:
    
    max_val = arr___
    
    for num in arr:
        if num > max_val:
            max_val = num
            
    return max_val

print___)"
Create a python function which sorts an array of integers into ascending order.,"[3, 7, 8, 1, 5, 4]","def sort_int_asc(arr):
    arr.sort()
    return arr

print(sort_int_asc([3, 7, 8, 1, 5, 4]))",Data Structure,6839,"def sort_int_asc___:
    arr.sort()
    return arr

print___)"
Design a numerical algorithm in Python that takes an input set of numbers and returns the maximum of this set.,"[8, 15, 7, 6, 16]","def find_max(arr): 
  
  max_value = arr[0] 
  
  for i in range(1, len(arr)): 
      if arr[i]> max_value: 
          max_value = arr[i] 
          
  return max_value 
  
#Test Array 
arr = [8, 15, 7, 6, 16] 

#Function call 
maxvalue = find_max(arr) 

print(""Maximum value:"",maxvalue)",Data Structure,6840,"def find_max___: 
  
  max_value = arr___ 
  
  for i in range___): 
      if arr[i]> max_value: 
          max_value = arr[i] 
          
  return max_value 
  
#Test Array 
arr = ___ 

#Function call 
maxvalue = find_max___ 

print___"
"Write a python program to generate a random password given a set of letters, numbers, and characters.",No input,"import random 
  
  
# All the possible characters 
# that could go into the password 
string = ""abcdefghijklmnopqrstuvwxyz01234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()?""
  
# Using the choice function of the 
# random module choose any 
# character randomly from the set of characters 
password =  """".join(random.sample(string, 8)) 
print(password)",Data Structure,6844,"import random 
  
  
# All the possible characters 
# that could go into the password 
string = ""abcdefghijklmnopqrstuvwxyz01234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()?""
  
# Using the choice function of the 
# random module choose any 
# character randomly from the set of characters 
password =  """".join___) 
print___"
Create a search algorithm using Python to find an item in a list of tuples.,"arr = [('a', 2), ('b', 4), ('c', 6), ('d', 7)]
key = 'd'","def search(arr, key): 
    for item in arr: 
        if item[0] == key: 
            return item[1] 
    return ""Not found""
  
# Driver code 
arr = [('a', 2), ('b', 4), ('c', 6), ('d', 7)] 
key = 'd'
  
print(search(arr, key))",Data Structure,6851,"def search___: 
    for item in arr: 
        if item___ == key: 
            return item___ 
    return ""Not found""
  
# Driver code 
arr = [___, ___, ___, ___] 
key = 'd'
  
print___)"
Write a Python program to sort a list of dictionaries by a given key,"[{'name': 'Alice', 'age': 26}, {'name': 'Bob', 'age': 24}], 'age'","def sort_dicts(list_dicts, key):
    list_dicts.sort(key=lambda x: x[key])
    return list_dicts

print(sort_dicts([{'name': 'Alice', 'age': 26}, {'name': 'Bob', 'age': 24}], 'age'))",Data Structure,6852,"def sort_dicts___:
    list_dicts.sort___
    return list_dicts

print(sort_dicts([___, ___], 'age'))"
Write a Python program to generate the powerset of a given set of elements.,"[1, 2, 3]","def powerset(arr):
    result = [[]]
    for ele in arr:
        result.extend([subset + [ele] for subset in result])
    return result

print(powerset([1, 2, 3]))",Data Structure,6853,"def powerset___:
    result = [[]]
    for ele in arr:
        result.extend___
    return result

print___)"
Construct a single line of code in python to get the last element of a list,"[1, 8, 3, 10, 5]","last_element = [1, 8, 3, 10, 5][-1]",Data Structure,6855,last_element = ___[-1]
Incorporate AI into an existing Python program to sort a list of integers.,"list=[4,3,7,8,2,1,6]","def AI_sort(list):
  sorted_list = sorted(list) 
  return sorted_list

list = [4,3,7,8,2,1,6]
print(""Sorted list is :"", AI_sort(list))",Data Structure,6859,"def AI_sort___:
  sorted_list = sorted___ 
  return sorted_list

list = ___
print___)"
Write a function in Python that takes in a list of integers. The function should return a list of integers such that the result is made up of the elements of the original list sorted in descending order.,"[3, 5, 2, 1]","def sorted_descending(list_of_ints):
  result = sorted(list_of_ints, reverse=True)
  return result",Data Structure,6861,"def sorted_descending___:
  result = sorted___
  return result"
Optimize this Python code for finding the maximum value in an array.,"def find_max(arr):
    max_value = 0
    for x in arr:
        if x > max_value:
            max_value = x
    return max_value","def find_max(arr): 
    return max(arr)",Data Structure,6863,"def find_max___: 
    return max___"
Create a python script to find the last element of a given list.,"list = [1, 2, 3, 4, 5]","def last_element(list):
    """"""Find the last element of a given list.""""""
    return list[-1]

# Usage Example 
list = [1, 2, 3, 4, 5]
last_element = last_element(list)
print(last_element)  # 5",Data Structure,6864,"def last_element___:
    """"""Find the last element of a given list.""""""
    return list[-1]

# Usage Example 
list = ___
last_element = last_element___
print___  # 5"
Develop an algorithm in Python to sort a list of numbers using an insertion sort.,"[7, 8, 5, 4, 1, 9, 6, 3, 2]","def insertion_sort(nums):
    for i in range(1,len(nums)):
        key = nums[i]
        j = i-1
        while j >= 0 and key < nums[j]:
            nums[j + 1] = nums[j]
            j -= 1
        nums[j + 1] = key

nums = [7, 8, 5, 4, 1, 9, 6, 3, 2]
print(""Unsorted Array:"", nums)
insertion_sort(nums)
print(""Sorted Array:"", nums)",Data Structure,6866,"def insertion_sort___:
    for i in range___):
        key = nums[i]
        j = i-1
        while j >= 0 and key < nums[j]:
            nums[j + 1] = nums[j]
            j -= 1
        nums[j + 1] = key

nums = ___
print___
insertion_sort___
print___"
Generate a Python script to filter a list of words by length.,"words = ['cat', 'dog', 'elephant', 'bear', 'dragon']","def filter_by_length(words, length):
    return [word for word in words if len(word) == length]",Data Structure,6869,"def filter_by_length___:
    return [word for word in words if len___ == length]"
"Given a list of numbers and a target number, write a python code to find two integer elements in the list whose sum equals the target.","umbers_list = [2, 4, 6, 11, 15, 20]
target_num = 22","def find_sum_in_list(numbers_list, target_num):
 for num1 in numbers_list:
 for num2 in numbers_list:
 if num1 + num2 == target_num:
 return (num1, num2)

find_sum_in_list(numbers_list, target_num)",Data Structure,6870,"def find_sum_in_list___:
 for num1 in numbers_list:
 for num2 in numbers_list:
 if num1 + num2 == target_num:
 return ___

find_sum_in_list___"
"Edit the following Python program so that it prints out a list of numbers from 50 to 100, exclusive.","lst = [1,2,3,4]

for n in lst:
 print(n)","lst = list(range(50, 100))

for n in lst:
 print(n)",Data Structure,6871,"lst = list___)

for n in lst:
 print___"
"Generate a Python function that takes in a list of numbers, and creates a new list with each number doubled.","[1, 2, 3, 4]","def double_numbers(numbers):
    # use list comprehesion to double each number
    doubled_numbers = [num * 2 for num in numbers]
    return doubled_numbers

numbers = [1, 2, 3, 4]
doubled_numbers = double_numbers(numbers)
print(doubled_numbers) # [2, 4, 6, 8]",Data Structure,6872,"def double_numbers___:
    # use list comprehesion to double each number
    doubled_numbers = [num * 2 for num in numbers]
    return doubled_numbers

numbers = ___
doubled_numbers = double_numbers___
print___ # [2, 4, 6, 8]"
Create a Python Program to sort a list of strings according to the length of their elements.,"list = [""apple"", ""cat"", ""banana"", ""dog""]","def ascending_sort(list):
    list.sort(key=len)
    return list

list = [""apple"", ""cat"", ""banana"", ""dog""]
result = ascending_sort(list)
print(result)",Data Structure,6880,"def ascending_sort___:
    list.sort___
    return list

list = [""apple"", ""cat"", ""banana"", ""dog""]
result = ascending_sort___
print___"
Create a program in Python which will return the index of the maximum value in a given array.,"[2, 10, 4, 8, 1]","def find_max(arr):
  max_val = max(arr)
  for i in range(len(arr)):
    if arr[i] == max_val:
      return i",Data Structure,6886,"def find_max___:
  max_val = max___
  for i in range___):
    if arr[i] == max_val:
      return i"
Create a Python program which reads a list of numbers and stores them in an array.,"[1, 2, 3, 4, 5]","my_list = [1, 2, 3, 4, 5]

my_array = []

for number in my_list:
    my_array.append(number)

print(my_array)",Data Structure,6891,"my_list = ___

my_array = []

for number in my_list:
    my_array___number)

print___"
Design a Python program to create a set of unique elements from a given list,"[1, 5, 1, 8, 6, 5]","def unique_list(nums):
  return list(set(nums))",Data Structure,6894,"def unique_list___:
  return list___)"
Modify the code below to slice a 2 dimensional array in python.,"data = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","def get_slice(data, start, end):
    return [row[start:end] for row in data]",Data Structure,6900,"def get_slice___:
    return [row[start:end] for row in data]"
Could you create a function in Python for reaching an element in a given list with a specific index?,"[2, 3, 5, 7, 11], index = 3","def get_element(lst, index):
    return lst[index]",Data Structure,6903,"def get_element___:
    return lst[index]"
Write a script in Python to get the largest and smallest number from a given list.,"[9, 10, -12, 0, 5]","# Solution
# First, let's define our list of numbers
my_list = [9, 10, -12, 0, 5]

# Now, let's get the largest and the smallest numbers
max_val = max(my_list)
min_val = min(my_list)

# Finally, we can print out the results
print(""Largest number:"", max_val)
print(""Smallest number:"", min_val)",Data Structure,6907,"# Solution
# First, let's define our list of numbers
my_list = [9, 10, -12, 0, 5]

# Now, let's get the largest and the smallest numbers
max_val = max___
min_val = min___

# Finally, we can print out the results
print___
print___"
Create a python program to calculate the average of the numbers in a list (not including null values).,"An example list of integers: [30, 28, 40, 10, 0, null, 33, null]","# Calculate the average
def avg(lst): 
    sum = 0
    count = 0
    for num in lst:
        if num is not None:
            sum += num
            count += 1
    return sum / count

# Create list of numbers
lst = [30, 28, 40, 10, 0, None, 33, None]

# Print average
print(avg(lst))

# Output: 25.5",Data Structure,6909,"# Calculate the average
def avg___: 
    sum = 0
    count = 0
    for num in lst:
        if num is not None:
            sum += num
            count += 1
    return sum / count

# Create list of numbers
lst = [30, 28, 40, 10, 0, None, 33, None]

# Print average
print___)

# Output: 25.5"
"Given an array of integers, write a Python program to classify each number as even or odd.","[10, 27, 32, 11]","def classify_number(arr): 
 result = []
 for num in arr: 
 if num % 2 == 0: 
 result.append(""even"")
 else: 
 result.append(""odd"")
 return result 

print(classify_number([10, 27, 32, 11]))",Data Structure,6910,"def classify_number___: 
 result = []
 for num in arr: 
 if num % 2 == 0: 
 result___""even"")
 else: 
 result___""odd"")
 return result 

print___)"
Write a Python program that takes a list and a search query as input and returns the indices of all elements in the list which match the search query.,"list = [""apple"", ""banana"", ""peach"", ""orange"", ""grape""]
search_query = ""apple""","def search_list(list, search_query):
    result = []
    for i in range(len(list)):
        if list[i] == search_query:
            result.append(i)
    return result

search_list(list, search_query) # returns [0]",Data Structure,6919,"def search_list___:
    result = []
    for i in range___):
        if list[i] == search_query:
            result___i)
    return result

search_list___ # returns [0]"
Write a Python program to convert a set of strings to a single dictionary.,"[""apple"", ""bat"", ""cat""], [""red"", ""grey"", ""black""]","my_dict = dict(zip([""apple"", ""bat"", ""cat""], [""red"", ""grey"", ""black""]))

#Print the dictionary
print(my_dict)",Data Structure,6920,"my_dict = dict___)

#Print the dictionary
print___"
Write a Python script to find the second highest number in a list of numbers.,"[12, 2, 6, 8, 19, 15]","list_nums = [12, 2, 6, 8, 19, 15] 
  
# sorting the list in ascending order
list_nums.sort() 
  
# printing the second last element 
print(""Second highest number is:"", list_nums[-2])",Data Structure,6923,"list_nums = ___ 
  
# sorting the list in ascending order
list_nums.sort() 
  
# printing the second last element 
print___"
Remove the duplicates from a given array using Python,"data = [1, 3, 3, 4, 5, 6, 6, 7]","def remove_duplicates(data):
    result = []
    for element in data:
        if element not in result:
            result.append(element)
    return result

print(remove_duplicates([1, 3, 3, 4, 5, 6, 6, 7]))",Data Structure,6926,"def remove_duplicates___:
    result = []
    for element in data:
        if element not in result:
            result___element)
    return result

print___)"
Write a Python function that takes two lists as input and returns true if all the elements in List 1 are available in List 2.,"list1 = [21, 54, 8, 54]
list2 = [21, 24, 8, 16]","def check_if_all_in_list_2(list1, list2):
    for item in list1: 
        if item not in list2: 
            return False
    return True",Data Structure,6927,"def check_if_all_in_list_2___:
    for item in list1: 
        if item not in list2: 
            return False
    return True"
Create a Python function that takes an array as input and returns a dictionary with each element as the key and its frequency as the value.,"[1, 1, 2, 3]","def getElementFrequency(arr):
    frequency = {}
    for item in arr:
        if item in frequency:
            frequency[item] += 1
        else:
            frequency[item] = 1
    return frequency

print(getElementFrequency([1, 1, 2, 3]))",Data Structure,6928,"def getElementFrequency___:
    frequency = {}
    for item in arr:
        if item in frequency:
            frequency[item] += 1
        else:
            frequency[item] = 1
    return frequency

print___)"
Create a Python program for finding the second highest number in a list.,"[1, 2, 3, 4, 5]","def findSecondHighest(lst): 
  max = float(""-inf"")
  sec_max = float(""-inf"")
	
  for num in lst: 
    if (num > max): 
      sec_max = max 
      max = num 
    elif (num > sec_max): 
      sec_max = num	
  return sec_max

print(findSecondHighest([1, 2, 3, 4, 5]))",Data Structure,6939,"def findSecondHighest___: 
  max = float___
  sec_max = float___
	
  for num in lst: 
    if ___: 
      sec_max = max 
      max = num 
    elif ___: 
      sec_max = num	
  return sec_max

print___)"
Write a Python program to group two lists of numbers into a dictionary. The keys would be the first list and the values would be the second list.,"list_a = [1,2,3,4,5]
list_b = [6,7,8,9,10]","list_a = [1,2,3,4,5]
list_b = [6,7,8,9,10]

d = dict(zip(list_a, list_b)) 

print(d) // {1: 6, 2: 7, 3: 8, 4: 9, 5: 10}",Data Structure,6941,"list_a = ___
list_b = ___

d = dict___) 

print(d) // ___"
Create a python program which takes a list and returns the elements which appear twice.,"input_list = [1, 2, 3, 7, 8, 2, 4, 7]","def find_duplicates(input_list):
    seen = set() 
    duplicates = [] 
  
    for i in input_list: 
        if i not in seen: 
            seen.add(i)
        else: 
            duplicates.append(i) 
    return duplicates",Data Structure,6942,"def find_duplicates___:
    seen = set() 
    duplicates = [] 
  
    for i in input_list: 
        if i not in seen: 
            seen.add___
        else: 
            duplicates___i) 
    return duplicates"
Create a function in Python which will return the maximum and minimum elements from a given list of numbers.,"[3, 4, 7, 1, 9]","def max_min(lst):
  return max(lst), min(lst)",Data Structure,6943,"def max_min___:
  return max___, min___"
Write a function in Python to remove duplicates from a list.,"[2, 2, 3, 4, 5, 5]","def remove_duplicates(nums):
    # create a set to remove duplicates
    unique_list = set(nums)
    # convert the set back to a list
    nums = list(unique_list)
    return nums

input_list = [2, 2, 3, 4, 5, 5]
result = remove_duplicates(input_list)
print(result)",Data Structure,6951,"def remove_duplicates___:
    # create a set to remove duplicates
    unique_list = set___
    # convert the set back to a list
    nums = list___
    return nums

input_list = ___
result = remove_duplicates___
print___"
Design a python program which will return the maximum element of a given list.,"data = [10, 20, 50, 27, 11, 1]","def find_max_element(arr):
    max_element = arr[0]
    for num in arr[1:]:
        if num > max_element:
            max_element = num
    return max_element",Data Structure,6955,"def find_max_element___:
    max_element = arr___
    for num in arr[1:]:
        if num > max_element:
            max_element = num
    return max_element"
Sort a list of dictionaries in Python by a given key.,"[{'food': 'apple', 'color': 'red'}, {'food': 'banana', 'color': 'yellow'}, {'food': 'pear', 'color': 'green'}]","list_of_dicts = [{'food': 'apple', 'color': 'red'}, {'food': 'banana', 'color': 'yellow'}, {'food': 'pear', 'color': 'green'}]

# Sort list by given key
sorted_list = sorted(list_of_dicts, key=lambda item:item['color'])

print(sorted_list)",Data Structure,6960,"list_of_dicts = [___, ___, ___]

# Sort list by given key
sorted_list = sorted___

print___"
Write a function in Python that takes an integer and returns an array of digits of the number except the last two digits.,8765,"def remove_last_two_digits(num):
    num = str(num)
    return [int(x) for x in num[:-2]]",Data Structure,6961,"def remove_last_two_digits___:
    num = str___
    return [int___ for x in num[:-2]]"
Write a python function to generate the power set for a given set.,"A = {1, 2, 3}","def powerset(A):
    result = []
    for i in range(len(A)+1):
        for subset in itertools.combinations(A,i):
            result.append(subset)
    return result

A = {1, 2, 3}
print(powerset(A))

#Output:
#[(), (1, ), (2, ), (3, ), (1, 2), (1, 3), (2, 3), (1, 2, 3)]",Data Structure,6962,"def powerset___:
    result = []
    for i in range___+1):
        for subset in itertools.combinations___:
            result___subset)
    return result

A = ___
print___)

#Output:
#[(), ___, ___, ___, ___, ___, ___, ___]"
Write a Python program to find the index of an item in a list.,"my_list = [1,2,3,4]
item = 3","def find_index(lst,item):
  for i in range(len(lst)):
    if item == lst[i]:
      return i

index = find_index(my_list, item)
print(index) # 2",Data Structure,6964,"def find_index___:
  for i in range___):
    if item == lst[i]:
      return i

index = find_index___
print___ # 2"
Write a Python program to calculate the total sales revenue for a list of item prices and quantities.,"item_prices = [1.99, 3.00, 2.50]
item_quantities = [5, 10, 8]","# Calculate total sales

item_prices = [1.99, 3.00, 2.50]
item_quantities = [5, 10, 8]

total_sales = 0

for price, quantity in zip(item_prices, item_quantities):
 total_sales += price * quantity

print(total_sales)",Data Structure,6972,"# Calculate total sales

item_prices = [1.99, 3.00, 2.50]
item_quantities = ___

total_sales = 0

for price, quantity in zip___:
 total_sales += price * quantity

print___"
Develop a Python script which sorts a list of names in alphabetical order,"John, Anna, David, Bob, Alex","names = [""John"", ""Anna"", ""David"", ""Bob"", ""Alex""]
  
# sorting the names 
names.sort() 
  
# printing the first name in the sorted list 
print(""The first name in the sorted list is:"") 
print(names[0])",Data Structure,6975,"names = [""John"", ""Anna"", ""David"", ""Bob"", ""Alex""]
  
# sorting the names 
names.sort() 
  
# printing the first name in the sorted list 
print___ 
print___"
Develop an algorithm in Python to optimize a given set of integers.,"nums = [2, 4, 6, 10, 12]","def optimize_ints(nums): 
    left = 0
    right = len(nums) - 1

    while left < right: 
        min_num = min(nums[left], nums[right]) 
        nums[right] = nums[left] = min_num + 
                                 nums[left] - nums[right] 
        left += 1
        right -= 1
    return nums

nums = [2, 4, 6, 10, 12]
print(optimize_ints(nums))",Data Structure,6976,"def optimize_ints___: 
    left = 0
    right = len___ - 1

    while left < right: 
        min_num = min___ 
        nums[right] = nums[left] = min_num + 
                                 nums[left] - nums[right] 
        left += 1
        right -= 1
    return nums

nums = ___
print___)"
"Given a list of numbers with one missing, create a Python program to find the missing number.","[1, 2, 4, 6, 7, 8]","def find_missing_number(lst): 
    n = len(lst) 
    total = (n + 1)*(n + 2)/2
    sum_of_lst = sum(lst) 
    missing_number = total - sum_of_lst 
    return missing_number 
  
lst = [1, 2, 4, 6, 7, 8] 
missing_number = find_missing_number(lst) 
print(missing_number)",Data Structure,6978,"def find_missing_number___: 
    n = len___ 
    total = ___*___/2
    sum_of_lst = sum___ 
    missing_number = total - sum_of_lst 
    return missing_number 
  
lst = ___ 
missing_number = find_missing_number___ 
print___"
Write a function in Python to sort a given list according to the second element in the sublist,"list = [['B', 'b'], ['A', 'a'], ['C', 'c']]","def sort_by_second_element(list):
    list.sort(key= lambda x : x[1])
    return list

list = [['B', 'b'], ['A', 'a'], ['C', 'c']]

print(sort_by_second_element(list)) # [['A', 'a'], ['B', 'b'], ['C', 'c']]",Data Structure,6980,"def sort_by_second_element___:
    list.sort___
    return list

list = [['B', 'b'], ['A', 'a'], ['C', 'c']]

print___) # [['A', 'a'], ['B', 'b'], ['C', 'c']]"
Find the maximum number in an array of integers using a Python program.,"[12, 5, 23, 1, 11]","def max_number(array):
    max = array[0]
    for num in array:
        if num > max:
            max = num
    return max

maximum = max_number([12, 5, 23, 1, 11])
print(maximum) # prints: 23",Data Structure,6982,"def max_number___:
    max = array___
    for num in array:
        if num > max:
            max = num
    return max

maximum = max_number___
print___ # prints: 23"
Create a function in Python which takes a list and returns a list of unique elements in ascending order.,"[15, 2, 4, 15, 46, 4, 3, 21]","def unique_list(list): 
  new_list = list(set(list)) 
  new_list.sort() 
  return new_list

print (unique_list([15, 2, 4, 15, 46, 4, 3, 21]))",Data Structure,6983,"def unique_list___: 
  new_list = list___) 
  new_list.sort() 
  return new_list

print ___)"
Create a Python program to find the average of any list of numbers.,"[2, 4, 6, 8]","def get_average(numbers):
    # take the sum and divide by number of elements
    return sum(numbers)/len(numbers)

input_list = [2, 4, 6, 8]
result = get_average(input_list)
print(result)",Data Structure,6985,"def get_average___:
    # take the sum and divide by number of elements
    return sum___/len___

input_list = ___
result = get_average___
print___"
Can you develop a function in Python to iteratively sum all the numbers in a list of numbers?,"[4, 9, 13, 5]","def sum_list(list): 
  total = 0
  for num in list:
    total += num  
  return total

print(sum_list([4, 9, 13, 5])) # Output: 31",Data Structure,6987,"def sum_list___: 
  total = 0
  for num in list:
    total += num  
  return total

print___) # Output: 31"
"For a given list of numbers, generate a python code that finds the largest number in the list.","[7, 5, 2, 9, 1]","def find_max(arr):
    max_number = 0

    for i in arr:
        if i > max_number:
            max_number = i
    return max_number",Data Structure,6991,"def find_max___:
    max_number = 0

    for i in arr:
        if i > max_number:
            max_number = i
    return max_number"
"Write a Python program to generate an array of random numbers in the range [0,99], with the length given as input.",length = 10,"import random

def generate_random_array(length):
    return [random.randint(0, 99) for _ in range(length)]",Data Structure,6993,"import random

def generate_random_array___:
    return [random.randint___ for _ in range___]"
Create a Python program to group words that are anagrams into a list.,"['eat', 'tea', 'tan', 'ate', 'nat', 'bat']","def group_anagrams(words): 
    result = {} 
      
    for word in words: 
        key = ''.join(sorted(word)) 
        if key in result.keys(): 
            result[key].append(word) 
        else: 
            result[key] = [word] 
  
    return list(result.values()) 

words = ['eat', 'tea', 'tan', 'ate', 'nat', 'bat'] 
print(group_anagrams(words))",Data Structure,6994,"def group_anagrams___: 
    result = {} 
      
    for word in words: 
        key = ''.join___) 
        if key in result.keys(): 
            result[key]___word) 
        else: 
            result[key] = [word] 
  
    return list___) 

words = ['eat', 'tea', 'tan', 'ate', 'nat', 'bat'] 
print___)"
Create a Python script to filter a list and return all elements which are divisible by a given number (i.e. create a filter function).,"num_list = [1, 2, 3, 4, 5, 6]
divisor = 2","def filter_list(num_list, divisor):
    return list(filter(lambda n: n % divisor == 0, num_list))

num_list = [1, 2, 3, 4, 5, 6]
divisor = 2

divisible_nums = filter_list(num_list, divisor)
print(divisible_nums) # [2, 4, 6]",Data Structure,6998,"def filter_list___:
    return list___)

num_list = ___
divisor = 2

divisible_nums = filter_list___
print___ # [2, 4, 6]"
Write a Python program that takes in a list containing 100 integers and finds the number of occurrences of each number in the list.,"[1, 2, 3, 4, 4, 2, 3, 2, 1, 3, 4, 2, 1]","from collections import Counter
 
def findOccurrences(arr):
    counter = Counter(arr)
    for i in counter:
        print('Number', i, 'occurs', counter[i], 'time(s).')
 
arr = [1, 2, 3, 4, 4, 2, 3, 2, 1, 3, 4, 2, 1]
findOccurrences(arr)",Data Structure,6999,"from collections import Counter
 
def findOccurrences___:
    counter = Counter___
    for i in counter:
        print___.')
 
arr = ___
findOccurrences___"
Develop an algorithm in Python to identify the majority element in an unsorted array.,"[3,9,3,3,3,1,3,3]","def find_majority_element(array):
    count = 0
    majority_element = None

    for element in array:
        if count == 0:
            majority_element = element

        count += (1 if element == majority_element else -1)

    return majority_element",Data Structure,7000,"def find_majority_element___:
    count = 0
    majority_element = None

    for element in array:
        if count == 0:
            majority_element = element

        count += ___

    return majority_element"
Generate Python code to find the smallest and largest numbers from a list of numbers.,"[2, 5, 3, 8, 10, 11, 9]","# Finding smallest number
list_of_nums = [2, 5, 3, 8, 10, 11, 9]
smallest_num = min(list_of_nums)
print('The smallest number is:', smallest_num)

# Finding largest number
list_of_nums = [2, 5, 3, 8, 10, 11, 9]
largest_num = max(list_of_nums)
print('The largest number is:', largest_num)",Data Structure,7002,"# Finding smallest number
list_of_nums = ___
smallest_num = min___
print___

# Finding largest number
list_of_nums = ___
largest_num = max___
print___"
"Given a list, write a Python function to separate the odd numbers from the even numbers.","numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]","def separate_odd_even(numbers):
    odd_numbers = []
    even_numbers = []
    for num in numbers:
        if num % 2 == 0:
            even_numbers.append(num)
        else:
            odd_numbers.append(num)
    
    return odd_numbers, even_numbers",Data Structure,7003,"def separate_odd_even___:
    odd_numbers = []
    even_numbers = []
    for num in numbers:
        if num % 2 == 0:
            even_numbers___num)
        else:
            odd_numbers___num)
    
    return odd_numbers, even_numbers"
Develop a Python script to calculate the standard deviation of a list of numbers.,"[3, 8, 19, 24, 7, 50]","import statistics

# Store the list of numbers 
number_list = [3, 8, 19, 24, 7, 50]
 
# Calculate the standard deviation  
stdev = statistics.stdev(number_list) 
 
# Print the standard deviation 
print(stdev)",Data Structure,7004,"import statistics

# Store the list of numbers 
number_list = ___
 
# Calculate the standard deviation  
stdev = statistics.stdev___ 
 
# Print the standard deviation 
print___"
Generate a Python script to calculate the total cost of items in a grocery list.,"list = {""banana"": 2.5, ""apple"": 3.7, ""orange"": 4.2, ""tomato"": 1.2}","# Calculating the total cost of items in a grocery list

list_cost = 0
list_items = {""banana"": 2.5, ""apple"": 3.7, ""orange"": 4.2, ""tomato"": 1.2}

for item, price in list_items.items():
    list_cost += price
    
print('The total cost of the items in the list is {}'.format(list_cost)",Data Structure,7005,"# Calculating the total cost of items in a grocery list

list_cost = 0
list_items = ___

for item, price in list_items.items():
    list_cost += price
    
print___"
Create a Python function to sort a list of tuples by the second item in the tuple.,"my_list = [('a', 3), ('b', 2), ('c', 1)]","def sort_by_second_item(my_list): 
    return sorted(my_list, key = lambda x: x[1])",Data Structure,7009,"def sort_by_second_item___: 
    return sorted___"
Create a function in Python that will take a list of elements and return the sum of their cube.,"[2, 3, 4]","def cube_sum(nums): 
  sum = 0 
  for num in nums: 
    sum += num*num*num 
  return sum",Data Structure,7013,"def cube_sum___: 
  sum = 0 
  for num in nums: 
    sum += num*num*num 
  return sum"
Create a function in Python that takes a list as an argument and returns the sum of all the numbers in the list.,"[1, 2, 3, 4]","def sum_list(nums):
    total = 0
    for num in nums:
        total += num
    return total",Data Structure,7018,"def sum_list___:
    total = 0
    for num in nums:
        total += num
    return total"
Construct a while loop in Python to iterate through a list of items.,"list_items = ['apple', 'banana', 'pear', 'strawberry']","list_items = ['apple', 'banana', 'pear', 'strawberry']

index = 0
while index < len(list_items):
   item = list_items[index]
   print(item)
   index += 1",Data Structure,7019,"list_items = ['apple', 'banana', 'pear', 'strawberry']

index = 0
while index < len___:
   item = list_items[index]
   print___
   index += 1"
Write a Python program to filter a list of strings according to a given pattern.,"Pattern: asterisks
Strings: [""daisy"", ""sunflower"", ""asterisk"", ""cat"", ""monkey""]","def filter_strings(pattern, strings):
    filtered_strings = [x for x in strings if pattern in x]
    return filtered_strings

result = filter_strings('asterisks', [""daisy"", ""sunflower"", ""asterisk"", ""cat"", ""monkey""])
print(result)",Data Structure,7020,"def filter_strings___:
    filtered_strings = [x for x in strings if pattern in x]
    return filtered_strings

result = filter_strings___
print___"
Write a function in Python to filter out duplicates from a list.,"[1,2,3,4,5,1,2,3,4]","def remove_duplicates(List): 
  return list(set(List))",Data Structure,7023,"def remove_duplicates___: 
  return list___)"
Write a Python function that takes a list of integers as an argument and returns a list of the squares of all the elements in the input list.,"[1, 2, 3, 4, 5]","def squareList(inputList): 
	# Returns a list of the squares of all the elements in inputList
	squaredList = [] 

	for num in inputList:
		squaredList.append(num ** 2) 

	return squaredList

# Example 
inputList = [1, 2, 3, 4, 5] 

squaredList = squareList(inputList) 

print(squaredList)

# Output: [1, 4, 9, 16, 25]",Data Structure,7024,"def squareList___: 
	# Returns a list of the squares of all the elements in inputList
	squaredList = [] 

	for num in inputList:
		squaredList___num ** 2) 

	return squaredList

# Example 
inputList = ___ 

squaredList = squareList___ 

print___

# Output: ___"
Serialize a list of dictionaries in Python,"[{'name':'John', 'age':30},
{'name':'Paul', 'age':22}]","import json

data = [{'name':'John', 'age':30},
{'name':'Paul', 'age':22}]

serialized_data = json.dumps(data)
print(serialized_data)",Data Structure,7025,"import json

data = [___,
___]

serialized_data = json.dumps___
print___"
Develop a function in Python to swap the first and last elements of a given input list.,"list = [1, 2, 3, 4, 5]","def swap(list):
    # swapping first and last elements 
    temp = list[0] 
    list[0] = list[-1] 
    list[-1] = temp 

list = [1, 2, 3, 4, 5]
swap(list)

print(list)",Data Structure,7027,"def swap___:
    # swapping first and last elements 
    temp = list___ 
    list___ = list[-1] 
    list[-1] = temp 

list = ___
swap___

print___"
Generate a Python program to transform a given list of integers into a dictionary with each list element as the key and its square root as the value.,"[4, 9, 16, 25]","def to_dict(lst): 
    # Initialize a new dictionary 
    new_dict = {}
      
    # Iterate over the list and assign the square root of each element as value  
    for item in lst:
        new_dict[item] = item**0.5
      
    # Return the dictionary  
    return new_dict",Data Structure,7028,"def to_dict___: 
    # Initialize a new dictionary 
    new_dict = {}
      
    # Iterate over the list and assign the square root of each element as value  
    for item in lst:
        new_dict[item] = item**0.5
      
    # Return the dictionary  
    return new_dict"
Compute the mean value of an array of integers using Python.,"[1, 2, 3, 4, 5]","def calculate_mean(values):
    total_sum = 0

    for num in values:
        total_sum += num

    return total_sum / len(values)

values = [1, 2, 3, 4, 5]

mean = calculate_mean(values)
print(""Mean Value:"", mean)",Data Structure,7029,"def calculate_mean___:
    total_sum = 0

    for num in values:
        total_sum += num

    return total_sum / len___

values = ___

mean = calculate_mean___
print___"
Can you design a Python program to sort a list of tuples?,"[(4,20) , (3,-5), (10, 0)]","def sort_tuples(lst): 
    return sorted(lst, key = lambda x : x[1]) 
  
# Driver code 
tuple_list = [(4, 20), (3, -5), (10, 0)] 
print(sort_tuples(tuple_list))",Data Structure,7033,"def sort_tuples___: 
    return sorted___ 
  
# Driver code 
tuple_list = [___, ___, ___] 
print___)"
Write a function in Python for calculating the sum of squares of a list of elements.,"[3, 5, 7]","def calculateSumSquare(lst):
    sum = 0
    for element in lst:
        sum += element**2
    return sum

lst = [3, 5, 7]
print(calculateSumSquare(lst))",Data Structure,7036,"def calculateSumSquare___:
    sum = 0
    for element in lst:
        sum += element**2
    return sum

lst = ___
print___)"
Implement a Python program to find the maximum and minimum of a list.,"[3, 2, 8, 9, 5]","# Function to find the maximum and minimum of a list
def find_max_min(nums):
    max = nums[0]
    min = nums[0]
    for num in nums:
        if num > max:
            max = num
        if num < min:
            min = num
    return (max, min)

# Test program
nums = [3, 2, 8, 9, 5]
max, min = find_max_min(nums)
print('Maximum:', max)
print('Minimum:', min)",Data Structure,7041,"# Function to find the maximum and minimum of a list
def find_max_min___:
    max = nums___
    min = nums___
    for num in nums:
        if num > max:
            max = num
        if num < min:
            min = num
    return ___

# Test program
nums = ___
max, min = find_max_min___
print___
print___"
"Code a Python program to classify elements in a provided array into two categories, odd and even.","[1, 2, 3, 4, 5, 6]","def classify_elements(arr):
    odd = []
    even = []
    for x in arr:
        if x % 2 == 0:
            even.append(x)
        else:
            odd.append(x)
    return (odd, even)

elements = [1, 2, 3, 4, 5, 6]
result = classify_elements(elements)

print(""Odd Elements:"")
print(result[0])

print(""Even Elements:"")
print(result[1])",Data Structure,7043,"def classify_elements___:
    odd = []
    even = []
    for x in arr:
        if x % 2 == 0:
            even___x)
        else:
            odd___x)
    return ___

elements = ___
result = classify_elements___

print___
print___

print___
print___"
Create a program in Python to find the second highest number in a list of numbers.,"[8, 5, 11, 6, 9, 15]","# Create an array of numbers
nums = [8, 5, 11, 6, 9, 15]

# Sort the array in descending order
nums.sort(reverse=True)

# Get the second highest number
second_highest = nums[1]

# Output the result
print(""The second highest number is"", second_highest)",Data Structure,7050,"# Create an array of numbers
nums = ___

# Sort the array in descending order
nums.sort___

# Get the second highest number
second_highest = nums___

# Output the result
print___"
Sum up all the elements of a given list in Python.,"my_list = [10,20,30,40]","my_list = [10,20,30,40]

total = 0
for num in my_list:
    total += num

print(""The sum of all elements in the list is: "" + str(total))",Data Structure,7052,"my_list = ___

total = 0
for num in my_list:
    total += num

print___)"
Create a program in Python that rotates an array right by one place,"arr = [1,2,3,4,5]","def rotateArrayRight(arr): 
    temp = arr[len(arr) - 1] 
    
    for i in range(len(arr)-1, 0, -1): 
        arr[i] = arr[i-1] 
          
    arr[0] = temp 
    return arr

arr = [1, 2, 3, 4, 5]

print(rotateArrayRight(arr))",Data Structure,7053,"def rotateArrayRight___: 
    temp = arr[len___ - 1] 
    
    for i in range___-1, 0, -1): 
        arr[i] = arr[i-1] 
          
    arr___ = temp 
    return arr

arr = ___

print___)"
Rewrite the following Python program using recursion to sum the numbers in a list.,"[2, 4, 6, 8]","# Using recursion to sum the numbers in a list
def recursive_sum(arr):
    if len(arr) == 0:  
        return 0   # Base case 
    else:
        return arr[0] + recursive_sum(arr[1:])   # Recursive case

print(""Sum of the list:"", recursive_sum([2, 4, 6, 8]))",Data Structure,7056,"# Using recursion to sum the numbers in a list
def recursive_sum___:
    if len___ == 0:  
        return 0   # Base case 
    else:
        return arr[0] + recursive_sum___   # Recursive case

print___)"
Design aPython program to replace the last element in a list with another list.,"list1 = [1,3,5,2], list2 = [10,20,30]","def replace_last_element(list1, list2): 
    list1[-1:] = list2 
    return list1",Data Structure,7060,"def replace_last_element___: 
    list1[-1:] = list2 
    return list1"
"Develop a Python function to calculate the maximum, minimum and average of a given list.","numbers = [3, 4, 5, 6]","def calculate_stats(numbers):
    maximum = max(numbers)
    minimum = min(numbers)
    average = sum(numbers)/len(numbers)
    return (maximum, minimum, average)",Data Structure,7062,"def calculate_stats___:
    maximum = max___
    minimum = min___
    average = sum___/len___
    return ___"
Write a Python program to get the largest number from a list.,"nums = [1, 3, 5, 7, 2, 4, 6, 8]","def get_largest_number(nums):
  return max(nums)",Data Structure,7063,"def get_largest_number___:
  return max___"
Create a python program to remove duplicate entries in a list and return the unique items.,"[1, 1, 2, 3, 4, 4]","def remove_duplicate(list): 
	return list(set(list)) 

remove_duplicate([1,1,2,3,4,4]) #returns [1, 2, 3, 4]",Data Structure,7065,"def remove_duplicate___: 
	return list___) 

remove_duplicate___ #returns [1, 2, 3, 4]"
"Create a Python method that takes a list and a value as arguments, and returns the index of the value if it exists in the list.","list = [2, 4, 6, 8]
value = 6","def find_index(list, value):
 for i in range(len(list)):
 if list[i] == value:
 return i
 return -1",Data Structure,7066,"def find_index___:
 for i in range___):
 if list[i] == value:
 return i
 return -1"
Create a Python script for scraping a website and extracting a list of URLs from it.,https://example.com,"import requests
from bs4 import BeautifulSoup

url = 'https://example.com'

response = requests.get(url)
soup = BeautifulSoup(response.content, 'html.parser')

urls = []

for link in soup.find_all('a', href=True):
 if link['href'].startswith('http'):
 urls.append(link['href'])

print(urls)",Data Structure,7069,"import requests
from bs4 import BeautifulSoup

url = 'https://example.com'

response = requests.get___
soup = BeautifulSoup___

urls = []

for link in soup.find_all___:
 if link['href'].startswith___:
 urls___link['href'])

print___"
Create a simple Python program that finds the number of even numbers in a given list.,"list1 = [1, 4, 5, 6, 3, 2]","def count_even_numbers(list1):
    count = 0
    for item in list1:
        if item % 2 == 0:
            count += 1
    return count

print(count_even_numbers(list1))",Data Structure,7072,"def count_even_numbers___:
    count = 0
    for item in list1:
        if item % 2 == 0:
            count += 1
    return count

print___)"
"Given a list of integers, write a code in Python to find a sublist whose sum is divisible by 7.","list = <5,-1,2,10,20, 4, 7, 8>","def find_sublist_divisible_by_7(list):
    for i in range(len(list)):
        sum_so_far = 0
        for j in range(i, len(list)):
            sum_so_far += list[j]
            if sum_so_far % 7 == 0:
                return list[i:j+1]
    return None",Data Structure,7073,"def find_sublist_divisible_by_7___:
    for i in range___):
        sum_so_far = 0
        for j in range___):
            sum_so_far += list[j]
            if sum_so_far % 7 == 0:
                return list[i:j+1]
    return None"
Optimize a Python program to reverse the elements of a list.,"my_list = [1, 2, 3, 4, 5]","def reverse_list(l): 
    return [ele for ele in reversed(l)] 
  
my_list = [1, 2, 3, 4, 5]
 
print(reverse_list(my_list))",Data Structure,7074,"def reverse_list___: 
    return [ele for ele in reversed___] 
  
my_list = ___
 
print___)"
Generate a code in Python to sort an array using insertion sort.,"[1, 3, 5, 2, 4]","def insertion_sort(arr):
    for j in range(1, len(arr)):
        key = arr[j]
        i = j - 1
        while i >= 0 and arr[i] > key:
            arr[i + 1] = arr[i]
            i -= 1
        arr[i + 1] = key
    return arr

# Main program
input_array = [1, 3, 5, 2, 4]
output_array = insertion_sort(input_array)
print(output_array)",Data Structure,7075,"def insertion_sort___:
    for j in range___):
        key = arr[j]
        i = j - 1
        while i >= 0 and arr[i] > key:
            arr[i + 1] = arr[i]
            i -= 1
        arr[i + 1] = key
    return arr

# Main program
input_array = ___
output_array = insertion_sort___
print___"
Generate a python program to output the largest element in a list.,"Given a list x = [7, 9, 5, 8, 3, 11].","def largest_element(x):
    max_element = x[0]
    for number in x:
        if number > max_element:
            max_element = number
    return max_element",Data Structure,7079,"def largest_element___:
    max_element = x___
    for number in x:
        if number > max_element:
            max_element = number
    return max_element"
Design a program in Python that takes a list of strings and returns a list containing the length of each of the strings.,"['hello', 'world']","def string_lengths(arr):
    lengths = [len(s) for s in arr]
    return lengths

result = string_lengths(['hello', 'world'])
print(result)",Data Structure,7084,"def string_lengths___:
    lengths = [len___ for s in arr]
    return lengths

result = string_lengths___
print___"
Develop an algorithm in Python that finds the minimum element from a given array.,"[14, 7, 25, 16]","def findMin(arr): 
     
    # Initialize minimum element as first 
    # element of array 
    min = arr[0] 
  
    # Loop through the array and get 
    # the current element 
    for i in range(len(arr)): 
        if arr[i] < min: 
            min = arr[i] 
  
    return min

arr = [14, 7, 25, 16]

print(findMin(arr))",Data Structure,7087,"def findMin___: 
     
    # Initialize minimum element as first 
    # element of array 
    min = arr___ 
  
    # Loop through the array and get 
    # the current element 
    for i in range___): 
        if arr[i] < min: 
            min = arr[i] 
  
    return min

arr = ___

print___)"
Write a Python program to find the number of uniquely identifiable countries in the list given below.,"['GB', 'CH', 'GB', 'US', 'CH', 'CN', 'ES', 'CN']","def unique_countries(lst): 
    return len(set(lst))",Data Structure,7088,"def unique_countries___: 
    return len___)"
Create a function in Python to return the index of the largest value in given array.,"arr = [3, 8, 4, 5, 9]","def max_index(arr):
    max_value = arr[0]
    max_index = 0

    for i in range(1, len(arr)):
        if arr[i] > max_value:
            max_index = i
            max_value = arr[i]
    
    return max_index",Data Structure,7090,"def max_index___:
    max_value = arr___
    max_index = 0

    for i in range___):
        if arr[i] > max_value:
            max_index = i
            max_value = arr[i]
    
    return max_index"
Create a python program that reads a list of numbers and returns the average of the numbers in the list.,"[1, 5, 7, 10]","def compute_average(numbers):
    total = 0
    for num in numbers:
        total += num
    return total / len(numbers)

if __name__ == '__main__':
    numbers = [1, 5, 7, 10]
    print(compute_average(numbers)) # 6.0",Data Structure,7091,"def compute_average___:
    total = 0
    for num in numbers:
        total += num
    return total / len___

if __name__ == '__main__':
    numbers = ___
    print___) # 6.0"
Generate a python program to find the most frequent element in a given array.,"Given array: [1, 2, 2, 3, 3]","def most_frequent(arr):
    max_val = 0
    max_count = 0
    counts = {}
    for i in arr:
        if i in counts:
            counts[i] += 1
        else:
            counts[i] = 1
        if counts[i] > max_count:
            max_val = i
            max_count = counts[i]
    return max_val",Data Structure,7093,"def most_frequent___:
    max_val = 0
    max_count = 0
    counts = {}
    for i in arr:
        if i in counts:
            counts[i] += 1
        else:
            counts[i] = 1
        if counts[i] > max_count:
            max_val = i
            max_count = counts[i]
    return max_val"
Optimize this program in Python to find the highest peak in a given array.,"def find_highest_peak(arr):
  highest_peak = 0
  for i in range(len(arr)):
    if i == 0:
      highest_peak = arr[i]
    else:
      if arr[i] > highest_peak:
        highest_peak = arr[i]  
  return highest_peak","def find_highest_peak(arr):
  highest_peak = arr[0]
  for i in range(1, len(arr)): 
    highest_peak = max(highest_peak, arr[i]) 
  return highest_peak",Data Structure,7099,"def find_highest_peak___:
  highest_peak = arr___
  for i in range___): 
    highest_peak = max___ 
  return highest_peak"
Write a Python program to remove all duplicate items from a list.,"[1, 2, 2, 4, 5]","def remove_duplicates(lst): 
	return list(dict.fromkeys(lst)) 

result = remove_duplicates([1, 2, 2, 4, 5]) 
print(result)",Data Structure,7100,"def remove_duplicates___: 
	return list___) 

result = remove_duplicates___ 
print___"
Generate a Python program to find the sum of all even numbers in an array,"[1, 5, 9, 11, 2, 8]","def sumEven(array):
    sum = 0
    for x in array:
        if x % 2 == 0:
            sum += x
    return sum

print(sumEven([1, 5, 9, 11, 2, 8]))",Data Structure,7103,"def sumEven___:
    sum = 0
    for x in array:
        if x % 2 == 0:
            sum += x
    return sum

print___)"
Write a Python function to sort a list of numbers in ascending order.,"[2,4,3,1,5]","def sort_list(list): 
  list.sort() 
  return list
  
print(sort_list([2,4,3,1,5]))",Data Structure,7105,"def sort_list___: 
  list.sort() 
  return list
  
print___)"
Create a Python program which takes a given list of temperatures (in Celsius) and converts them to Fahrenheit.,"[21, 12, -4]","def c2f(c):
 return (c * 9 / 5) + 32

celsius = [21, 12, -4]

fahrenheit = []
for temp in celsius:
 fahrenheit.append(c2f(temp))

print(fahrenheit) 
# Output: [69.8, 53.6, 24.8]",Data Structure,7107,"def c2f___:
 return ___ + 32

celsius = [21, 12, -4]

fahrenheit = []
for temp in celsius:
 fahrenheit___c2f(temp))

print___ 
# Output: [69.8, 53.6, 24.8]"
Write a Python function for converting an array of strings into a list of integers,"Array of strings: [""1"", ""2"", ""3"", ""4""]","def convert_strings_to_int(arr): 
  return list(map(int, arr))
  
list_of_integers = convert_strings_to_int([""1"", ""2"", ""3"", ""4""]) # [1, 2, 3, 4]",Data Structure,7113,"def convert_strings_to_int___: 
  return list___)
  
list_of_integers = convert_strings_to_int___ # [1, 2, 3, 4]"
Compare a given set of strings and sort them in descending order using Python.,"['Python', 'Java', 'C++', 'C']","strings = ['Python', 'Java', 'C++', 'C']

strings.sort(reverse=True)

print(strings) # ['Python', 'Java', 'C++', 'C']",Data Structure,7114,"strings = ['Python', 'Java', 'C++', 'C']

strings.sort___

print___ # ['Python', 'Java', 'C++', 'C']"
Write a Python program to sort a given list of numbers in ascending order.,"[3, 4, 7, 1, 6, 9, 2]","list = [3, 4, 7, 1, 6, 9, 2] 
list.sort() 
print(""Ascending :"",list)",Data Structure,7121,"list = ___ 
list.sort() 
print___"
Generate code using Python to find the largest and smallest number in a given list.,"[2, 3, 5, 8, 1, 9, 4]","def min_max(array):
    min_val = array[0]
    max_val = array[0]
    for element in array:
        if(element > max_val):
            max_val = element
        if(element < min_val):
            min_val = element
    return (min_val, max_val)",Data Structure,7122,"def min_max___:
    min_val = array___
    max_val = array___
    for element in array:
        if___:
            max_val = element
        if___:
            min_val = element
    return ___"
Generate a Python code to calculate average temperatures from a list of temperatures.,"[22.5, 18.7, 30.1]","def get_average(temps):
    sum = 0
    for temp in temps:
        sum += temp
    avg = sum / len(temps)
    return avg
    
temperatures = [22.5, 18.7, 30.1]
average_temp = get_average(temperatures)
print(""Average temperature:"", average_temp)",Data Structure,7123,"def get_average___:
    sum = 0
    for temp in temps:
        sum += temp
    avg = sum / len___
    return avg
    
temperatures = [22.5, 18.7, 30.1]
average_temp = get_average___
print___"
"Create a function in Python to generate an array of numbers, each element in the array being twice the value of its previous one.",Size of Array: 10,"def generate_double_array(size):
	arr = [1]
	for i in range(1, size):
		arr.append(arr[i - 1] * 2)
	return arr",Data Structure,7127,"def generate_double_array___:
	arr = ___
	for i in range___:
		arr___arr[i - 1] * 2)
	return arr"
Write a python code that takes in a list of integers and removes all the duplicate elements from it.,"[1, 2, 3, 2, 4, 5, 6, 3]","final_list = [] 
for num in list_of_integers: 
    if num not in final_list: 
    	final_list.append(num) 
print(final_list)",Data Structure,7128,"final_list = [] 
for num in list_of_integers: 
    if num not in final_list: 
    	final_list___num) 
print___"
Your client has asked you to convert an existing Java program into a Python program. The Java program takes a list of integers and returns the maximum value.,"listOfIntegers = [1, 3, 8, 2, 9]","def get_max_value(listOfIntegers):
 maxValue = listOfIntegers[0]
 for num in listOfIntegers:
 if num > maxValue:
 maxValue = num
 return maxValue

print(get_max_value(listOfIntegers))",Data Structure,7130,"def get_max_value___:
 maxValue = listOfIntegers___
 for num in listOfIntegers:
 if num > maxValue:
 maxValue = num
 return maxValue

print___)"
Create a program in Python which seeks for a number in a given list.,"[2, 5, 7, 8, 11, 13]
seek: 8","list = [2, 5, 7, 8, 11, 13]
seek = 8

if seek in list:
    print(""Found!"")
else:
    print(""Not Found"")",Data Structure,7134,"list = ___
seek = 8

if seek in list:
    print___
else:
    print___"
Write an algorithm in Python that takes an array of numbers and returns an array of only the even numbers.,"[2, 5, 8, 9, 10, 13, 11]","def keep_even_only(arr):
    return [n for n in arr if n%2 == 0]

arr = [2, 5, 8, 9, 10, 13, 11]
even_arr = keep_even_only(arr)

print(even_arr)

# Output:
# [2, 8, 10]",Data Structure,7141,"def keep_even_only___:
    return [n for n in arr if n%2 == 0]

arr = ___
even_arr = keep_even_only___

print___

# Output:
# ___"
Design a program in Python which takes a list of strings as input and prints out the number of strings with a length equal to 3.,"['word', 'cat', 'bat', 'car', 'apple', 'dog']","def count_length_3(words):
    count = 0
    for word in words:
        if len(word) == 3:
            count += 1
    print(count)

count_length_3(['word', 'cat', 'bat', 'car', 'apple', 'dog'])",Data Structure,7145,"def count_length_3___:
    count = 0
    for word in words:
        if len___ == 3:
            count += 1
    print___

count_length_3___"
Edit the given Python code to return the maximum value from a list,"def max_val(nums):
    maximum = 0
    for i in range(len(nums)):
        if nums[i] > maximum:
            maximum = nums[i]
    return maximum

list = [1, 4, 8, 10]","def max_val(nums):
    maximum = nums[0]
    for i in range(len(nums)):
        if nums[i] > maximum:
            maximum = nums[i]
    return maximum

list = [1, 4, 8, 10]",Data Structure,7148,"def max_val___:
    maximum = nums___
    for i in range___):
        if nums[i] > maximum:
            maximum = nums[i]
    return maximum

list = ___"
Construct a Python function to remove all instances of an element from a given list of integers.,"[2,2,3,4,5], 2","def remove_element(nums, x):
   return [y for y in nums if y != x]",Data Structure,7149,"def remove_element___:
   return [y for y in nums if y != x]"
Write a function in python to split an given array into two parts with equal sum.,"[1, 2, 3, 4]","def split_equal_sum(arr):
    n = len(arr) 
    leftsum = 0
    rightsum = sum(arr)
    
    for i in range(n): 
        rightsum -= arr[i]
        if leftsum == rightsum:
            return True 
        leftsum += arr[i] 
    return False",Data Structure,7158,"def split_equal_sum___:
    n = len___ 
    leftsum = 0
    rightsum = sum___
    
    for i in range___: 
        rightsum -= arr[i]
        if leftsum == rightsum:
            return True 
        leftsum += arr[i] 
    return False"
Create a code that can be run in both Python and Java to find the sum of all the elements in a given array.,"[3, 4, 7, 2, 6]","def sumArray(arr):
    sum = 0
    for x in arr:
        sum += x
    return sum

public static int sumArray(int[] arr) {
    int sum = 0;
    for(int ele : arr) {
        sum += ele;
    }
    return sum;
}",Data Structure,7159,"def sumArray___:
    sum = 0
    for x in arr:
        sum += x
    return sum

public static int sumArray___ {
    int sum = 0;
    for___ {
        sum += ele;
    }
    return sum;
}"
Refactor the following code to use list comprehension in Python.,"double_list = []
for num in range(10):
    double_list.append(num * 2)",double_list = [num * 2 for num in range(10)],Data Structure,7162,double_list = [num * 2 for num in range___]
Sort the following array from smallest to largest without using the built in sort method in Python.,"[5, 4, 2, 1, 3]","def bubbleSort(arr):
    n = len(arr) 
    for i in range(n): 
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]

arr = [5, 4, 2, 1, 3]
bubbleSort(arr) 
print (""Sorted array is:"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i])",Data Structure,7163,"def bubbleSort___:
    n = len___ 
    for i in range___: 
        for j in range___: 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]

arr = ___
bubbleSort___ 
print ___ 
for i in range___): 
    print ___"
Write a Python program to find the most common element in an array.,"[3, 4, 2, 3, 5, 3, 2, 3]","def most_common_element(arr):
    frequency = 0
    most_common = None

    for element in arr:
        count = arr.count(element)
        if count > frequency:
            frequency = count
            most_common = element

    return most_common

print(most_common_element([3, 4, 2, 3, 5, 3, 2, 3]))",Data Structure,7166,"def most_common_element___:
    frequency = 0
    most_common = None

    for element in arr:
        count = arr.count___
        if count > frequency:
            frequency = count
            most_common = element

    return most_common

print___)"
Create a Python code snippet toshuffle a given list of numbers.,"[1, 2, 3, 4, 5]","import random 
  
def shuffle_list(list_nums):
    random.shuffle(list_nums)
    print(""Shuffled list :"",  list_nums)

list_nums = [1, 2, 3, 4, 5]
shuffle_list(list_nums)",Data Structure,7169,"import random 
  
def shuffle_list___:
    random.shuffle___
    print___

list_nums = ___
shuffle_list___"
"In a Python list, swap the items at index 3 and 4.","List: [10, 20, 30, 40, 50]","def swap(arr, idx1, idx2):
    arr[idx1], arr[idx2] = arr[idx2], arr[idx1]

arr = [10, 20, 30, 40, 50]
swap(arr, 3, 4)
print(arr)",Data Structure,7173,"def swap___:
    arr[idx1], arr[idx2] = arr[idx2], arr[idx1]

arr = ___
swap___
print___"
"Using python, modify the code provided below to add the items in the list.","list = [1,2,3,4]
sum = 0","list = [1,2,3,4]
sum = 0

for item in list:
    sum += item

print(sum)",Data Structure,7174,"list = ___
sum = 0

for item in list:
    sum += item

print___"
Create an algorithm in python to sort a list of numbers using bubble sort.,<noinptut>,"def bubble_sort(nums):
    for i in range(len(nums)-1):
        for j in range(0, len(nums)-i-1):
            if nums[j] > nums[j+1]:
                nums[j], nums[j+1] = nums[j+1], nums[j]
    return nums",Data Structure,7177,"def bubble_sort___:
    for i in range___-1):
        for j in range___-i-1):
            if nums[j] > nums[j+1]:
                nums[j], nums[j+1] = nums[j+1], nums[j]
    return nums"
"Create a Python function that takes two inputs, a list of integers and an integer n,and returns a new list of all the integers in the first list that are larger than n.","The list: [3,4,5,6,7], n=5","def greater_than_n(nums, n):
 return [num for num in nums if num > n]

greater_than_n([3,4,5,6,7], 5)
# Returns [6,7]",Data Structure,7186,"def greater_than_n___:
 return [num for num in nums if num > n]

greater_than_n___
# Returns ___"
Develop an algorithm in Python to generate a random permutation of a given list.,"[1, 2, 3, 4, 5]","import random

def generate_permutation(nums):
 n = len(nums)
 permutation = []

# Generate a random index and add the element at that index to the list
 for _ in range(n):
 idx = random.randint(0, len(nums) - 1)
 permutation.append(nums[idx])
 nums.pop(idx)

return permutation

# Test the function
print(generate_permutation([1, 2, 3, 4, 5]))    # Output: [4, 2, 5, 3, 1]",Data Structure,7189,"import random

def generate_permutation___:
 n = len___
 permutation = []

# Generate a random index and add the element at that index to the list
 for _ in range___:
 idx = random.randint___ - 1)
 permutation___nums[idx])
 nums___idx)

return permutation

# Test the function
print___)    # Output: [4, 2, 5, 3, 1]"
Write a Python program to filter a list of strings and only return strings with two or more words.,"my_list = [""hello"", ""world"", ""how"", ""are"", ""you"", ""I am fine""]","my_list = [""hello world"", ""how are you"", ""I am fine""]

filtered_list = [i for i in my_list if len(i.split())>1]

print(filtered_list)

# Output: ['hello world', 'how are you', 'I am fine']",Data Structure,7190,"my_list = [""hello world"", ""how are you"", ""I am fine""]

filtered_list = [i for i in my_list if len___)>1]

print___

# Output: ['hello world', 'how are you', 'I am fine']"
"Construct a program, in Python code, to calculate the histogram of the elements in a list.","example_list = [1,2,2,2,3,4,5,5,5,5,5]","def histogram_elements(example_list):
    histogram = {}
    for i in example_list:
        histogram[i] = example_list.count(i)
    return histogram",Data Structure,7197,"def histogram_elements___:
    histogram = {}
    for i in example_list:
        histogram[i] = example_list.count___
    return histogram"
Create a Python function that returns a nested dictionary given a list of keys and their corresponding values.,"keys = [""key_1"", ""key_2"", ""key_3""]
values = [1, 2, 3]","def create_nested_dict(keys, values): 
  my_dict = {}
  for i in range(len(keys)):
    my_dict[keys[i]] = values[i]
  return my_dict",Data Structure,7198,"def create_nested_dict___: 
  my_dict = {}
  for i in range___):
    my_dict[keys[i]] = values[i]
  return my_dict"
Create an algorithm using Python that finds the maximum and minimum in a list of numbers.,"[9,6,7,11,14,5]","def find_max_min(mylist):
  max_num = mylist[0]
  min_num = mylist[0]

  for num in mylist:
    if num > max_num:
      max_num = num
    if num < min_num:
      min_num = num
  
  return [min_num, max_num]

list1 = [9,6,7,11,14,5]

print(find_max_min(list1)) #[5, 14]",Data Structure,7199,"def find_max_min___:
  max_num = mylist___
  min_num = mylist___

  for num in mylist:
    if num > max_num:
      max_num = num
    if num < min_num:
      min_num = num
  
  return [min_num, max_num]

list1 = ___

print___) #[5, 14]"
Create a Python program that returns the index of an integer in a sorted array.,"Given a sorted array arr[] = {1, 2, 3, 5, 6, 8, 9}, and an integer x = 8","def binarySearch(arr, x): 
    l = 0
    r = len(arr)-1
    while l <= r: 
        mid = l + (r - l)//2
        if arr[mid] == x: 
            return mid 
        elif arr[mid] < x: 
            l = mid + 1
        else: 
            r = mid - 1
    return -1",Data Structure,7202,"def binarySearch___: 
    l = 0
    r = len___-1
    while l <= r: 
        mid = l + ___//2
        if arr[mid] == x: 
            return mid 
        elif arr[mid] < x: 
            l = mid + 1
        else: 
            r = mid - 1
    return -1"
Create a python program to output an alphabetically sorted list of strings from an input list of strings.,"[""blue"", ""red"", ""green"", ""yellow""]","def sort_words(words):
    words.sort()
    return words

print(sort_words([""blue"", ""red"", ""green"", ""yellow""]))",Data Structure,7207,"def sort_words___:
    words.sort()
    return words

print___)"
Create an algorithm in Python that finds a 'magic number' in an array. A magic number is an integer in the array that is strictly greater than the number of elements before it in the array.,"[1, 2, 5, 7, 9, 10]","def find_magic_number(a):
 m = -1
 for i in range(len(a)):
 if a[i] > i:
 m = a[i]
 break

return m

print(find_magic_number([1, 2, 5, 7, 9, 10]))
# 7",Data Structure,7208,"def find_magic_number___:
 m = -1
 for i in range___):
 if a[i] > i:
 m = a[i]
 break

return m

print___)
# 7"
Create a Python program to convert a list of temperatures from Celcius to Fahrenheit.,"temp_list = [30,15,17,18]","temp_list = [30,15,17,18]

# Convert each element in the list to Fahrenheit
fahrenheit_list = []

for temp in temp_list:
 fahrenheit_list.append(temp*9/5 + 32)

print(fahrenheit_list)
# [86.0, 59.0, 62.6, 64.4]",Data Structure,7209,"temp_list = ___

# Convert each element in the list to Fahrenheit
fahrenheit_list = []

for temp in temp_list:
 fahrenheit_list___temp*9/5 + 32)

print___
# [86.0, 59.0, 62.6, 64.4]"
Design a linear search algorithm for a given list in Python.,"arr = [10, 20, 80, 30, 60, 50, 110, 100, 130, 170]
value = 110","def linearSearch(arr, value):
    
    for i in range(len(arr)):
        if arr[i] == value:
            return i
        
    return -1

arr = [10, 20, 80, 30, 60, 50, 110, 100, 130, 170]
value = 110

idx = linearSearch(arr, value)

if idx != -1:
    print(""Element is present at index"", idx)
else:
    print(""Element is not present in the array"")",Data Structure,7216,"def linearSearch___:
    
    for i in range___):
        if arr[i] == value:
            return i
        
    return -1

arr = ___
value = 110

idx = linearSearch___

if idx != -1:
    print___
else:
    print___"
Implement a Python class to sort a given array of integers using Insertion Sort.,"[5, 2, 4, 1, 3]","class InsertionSort:
    def sort(self, arr): 
        for i in range(1, len(arr)): 
            key = arr[i] 
            j = i-1
            while j >=0 and key < arr[j] : 
                    arr[j+1] = arr[j] 
                    j -= 1
            arr[j+1] = key
        return arr

InsertionSort().sort([5, 2, 4, 1, 3])",Data Structure,7217,"class InsertionSort:
    def sort___: 
        for i in range___): 
            key = arr[i] 
            j = i-1
            while j >=0 and key < arr[j] : 
                    arr[j+1] = arr[j] 
                    j -= 1
            arr[j+1] = key
        return arr

InsertionSort().sort___"
Find the maximum element in an array of integers and return its index.,"[3,8,15,2,6,10]","// Python
def findMaxElementIndex(arr):
    max_val = max(arr)
    max_index = arr.index(max_val)
    return max_index",Data Structure,7219,"// Python
def findMaxElementIndex___:
    max_val = max___
    max_index = arr.index___
    return max_index"
Write a Python program to determine if a given list of words are anagrams or not.,"words = [""cat"", ""tac"", ""tca""]","def is_anagram(words):
 anagram = True
 for i in range(len(words)):
 for j in range(i + 1, len(words)):
 if len(words[i]) != len(words[j]):
 anagram = False
 break
 else:
 if sorted(words[i]) != sorted(words[j]):
 anagram = False
 break
 return anagram

result = is_anagram(words)
print(result) # True",Data Structure,7222,"def is_anagram___:
 anagram = True
 for i in range___):
 for j in range___):
 if len___ != len___:
 anagram = False
 break
 else:
 if sorted___ != sorted___:
 anagram = False
 break
 return anagram

result = is_anagram___
print___ # True"
"Design a Python program that finds the most common elements in a list""","list = [1,2,3,4,4,4,5,5,6,6,6]","from collections import Counter 
def most_common(list): 
     counter = Counter(list) 
     most_occur = counter.most_common(1)[0][0] 
     return most_occur

print(most_common(list))",Data Structure,7223,"from collections import Counter 
def most_common___: 
     counter = Counter___ 
     most_occur = counter.most_common___[0][0] 
     return most_occur

print___)"
"Write a Python program to filter a list of strings so that strings containingthe substring ""bad"" are removed.","list_of_string = [""good"",""bad"",""weird"",""great"",""amazing""]","list_of_string = [""good"",""weird"",""great"",""amazing""]

filtered_list = [s for s in list_of_string if ""bad"" not in s]

print(filtered_list)",Data Structure,7227,"list_of_string = [""good"",""weird"",""great"",""amazing""]

filtered_list = [s for s in list_of_string if ""bad"" not in s]

print___"
Generate a list comprehension in Python for the following operation.,"mulitply each element in (1, 2, 3, 4) by 3","[x * 3 for x in (1, 2, 3, 4)]",Data Structure,7228,[x * 3 for x in ___]
Use Python to create an array that stores the Fibonacci sequence up to the nth number.,n = 10,"def fibonacci(n): 
    a = 0
    b = 1
    fibo = []

    for i in range(n):
        fibo.append(a)
        c = a + b
        a = b
        b = c

    return fibo

fibonacci(10)",Data Structure,7235,"def fibonacci___: 
    a = 0
    b = 1
    fibo = []

    for i in range___:
        fibo___a)
        c = a + b
        a = b
        b = c

    return fibo

fibonacci___"
Create a script in Python that calculates the average length of a given list of strings,"list_of_strings = [""cat"", ""dog"", ""mouse"", ""elephant""]","def calculate_avg_string_length(string_list):
    total_length = 0

    for item in string_list:
        total_length += len(item)
    
    return total_length / len(string_list)

list_of_strings = [""cat"", ""dog"", ""mouse"", ""elephant""]

result = calculate_avg_string_length(list_of_strings)
print(result)",Data Structure,7236,"def calculate_avg_string_length___:
    total_length = 0

    for item in string_list:
        total_length += len___
    
    return total_length / len___

list_of_strings = [""cat"", ""dog"", ""mouse"", ""elephant""]

result = calculate_avg_string_length___
print___"
"In Python, create an algorithm for efficiently sorting a list of numbers in ascending order.","[4,7,2,1,11,0,29]","def sort_list(numbers):
    for i in range(len(numbers)-1):
        for j in range(i+1, len(numbers)):
            if numbers[i] > numbers[j]:
                numbers[i], numbers[j] = numbers[j], numbers[i]
    return numbers",Data Structure,7238,"def sort_list___:
    for i in range___-1):
        for j in range___):
            if numbers[i] > numbers[j]:
                numbers[i], numbers[j] = numbers[j], numbers[i]
    return numbers"
Generate a Python Program to Sort a List by Frequency,"list_a = [1, 2, 3, 2, 5, 2]","def sort_by_frequency(list_a):
    frequency = {}
    for a in list_a:
        if a not in frequency:
            frequency[a] = 1
        else:
            frequency[a] += 1
    list_sorted = []
    for key, value in sorted(frequency.items(), key=lambda item: item[1], reverse=True):
        for _ in range(value):
            list_sorted.append(key)
    return list_sorted",Data Structure,7239,"def sort_by_frequency___:
    frequency = {}
    for a in list_a:
        if a not in frequency:
            frequency[a] = 1
        else:
            frequency[a] += 1
    list_sorted = []
    for key, value in sorted___, key=lambda item: item[1], reverse=True):
        for _ in range___:
            list_sorted___key)
    return list_sorted"
Can you generate a sorting algorithm in Python that would sort this array of numbers in ascending order?,"[9, 2, 5, 6, 4, 3, 7, 10, 1, 8]","def bubble_sort(arr):
  n = len(arr)
  for i in range(n): 
    for j in range(0, n-i-1):
      if arr[j] > arr[j+1] :
        arr[j], arr[j+1] = arr[j+1], arr[j]
  return arr

bubble_sort([9, 2, 5, 6, 4, 3, 7, 10, 1, 8])",Data Structure,7241,"def bubble_sort___:
  n = len___
  for i in range___: 
    for j in range___:
      if arr[j] > arr[j+1] :
        arr[j], arr[j+1] = arr[j+1], arr[j]
  return arr

bubble_sort___"
"Utilizing the given data, write a Python code to calculate the average of numbers stored in a list.","list = [2, 3, 6, 8, 9]","def calculate_average(lst):
sum = 0
for num in lst:
 sum+=num
avg = sum/len(lst)
return avg

list = [2, 3, 6, 8, 9]
average = calculate_average(list)
print(""Average of list:"", average)",Data Structure,7245,"def calculate_average___:
sum = 0
for num in lst:
 sum+=num
avg = sum/len___
return avg

list = ___
average = calculate_average___
print___"
Implement a Python program to calculate the average of every two numbers in a given array.,"[1, 3, 5, 7, 9]","def average_every_two_numbers(arr):
    result = []
    for i in range(0, len(arr), 2):
        if i+1 < len(arr):
            result.append( (arr[i] + arr[i+1])/2.0)
        else:
            result.append(arr[i])
    return result

print(average_every_two_numbers([1, 3, 5, 7, 9]))",Data Structure,7246,"def average_every_two_numbers___:
    result = []
    for i in range___, 2):
        if i+1 < len___:
            result___ (arr[i] + arr[i+1])/2.0)
        else:
            result___arr[i])
    return result

print___)"
Design an algorithm in Python that reverses the order of strings in a list.,"[""Apple"", ""Banana"", ""Carrot"", ""Durian""]","def reverseList(list):
    list.reverse()
    return list

list = [""Apple"", ""Banana"", ""Carrot"", ""Durian""]

reverseList(list)",Data Structure,7247,"def reverseList___:
    list.reverse()
    return list

list = [""Apple"", ""Banana"", ""Carrot"", ""Durian""]

reverseList___"
"Generate a Python program to generate a list of all the prime numbers in given range [n,m], where n and m are input parameters.","n = 5, m = 20","def generatePrimes(n, m):
  primes = []
  for i in range(n, m + 1):
    isPrime = True
    for j in range(2,i):
      if i % j == 0:
        isPrime = False
        break
    
    if isPrime:
      primes.append(i)
  
  return primes
  
n = 5
m = 20
primes = generatePrimes(n, m)
print(primes)  #Output: [5, 7, 11, 13, 17, 19]",Data Structure,7250,"def generatePrimes___:
  primes = []
  for i in range___:
    isPrime = True
    for j in range___:
      if i % j == 0:
        isPrime = False
        break
    
    if isPrime:
      primes___i)
  
  return primes
  
n = 5
m = 20
primes = generatePrimes___
print___  #Output: [5, 7, 11, 13, 17, 19]"
Create a Python function to delete the fourth element of a given list.,"[1,2,3,4,5]","def removeFourthElement(lst):
  lst.pop(3)
  return lst

print(removeFourthElement([1,2,3,4,5]))",Data Structure,7252,"def removeFourthElement___:
  lst___3)
  return lst

print___)"
Design a Python function that rearranges the elements of a given array,"[1, 2, 3, 4, 5]","def rearrange_arr(arr): 
    arr.sort(reverse = True) 
    return arr",Data Structure,7253,"def rearrange_arr___: 
    arr.sort___ 
    return arr"
Write a function in Python that takes a list of numbers as input and returns the minimum value.,"[4,6,2,1,10,8]","def find_min(numbers):
    min_value = numbers[0]
    for num in numbers:
        if num < min_value:
            min_value = num
    return min_value

result = find_min([4,6,2,1,10,8])
print(result)",Data Structure,7254,"def find_min___:
    min_value = numbers___
    for num in numbers:
        if num < min_value:
            min_value = num
    return min_value

result = find_min___
print___"
Write a Python script to take in a 2D array as an input and return the sum of all the elements.,"arr = [[1,2,3],
[4,5,6],
[7,8,9]]","def sum_elements(arr):
  s = 0
  for row in arr:
    s += sum(row)
  return s

arr = [[1,2,3],
[4,5,6],
[7,8,9]]

print(sum_elements(arr))

# Output: 45",Data Structure,7257,"def sum_elements___:
  s = 0
  for row in arr:
    s += sum___
  return s

arr = [___,
___,
___]

print___)

# Output: 45"
Develop a Python script to add a given list of numbers.,"[4, 8, 15, 20]","def sum_list(list_of_nums):
    total = 0
    for number in list_of_nums:
        total += number
    return total

result = sum_list([4, 8, 15, 20])
print(result)",Data Structure,7261,"def sum_list___:
    total = 0
    for number in list_of_nums:
        total += number
    return total

result = sum_list___
print___"
Can you write a Python program to search a list of numbers and return the index positions of matches?,"list = [1, 5, 7, 8, 10]
number = 8","def search(lst, number):
    for i, n in enumerate(lst):
        if n == number:
            return i
    return -1

result = search(lst, number)
print(result)",Data Structure,7266,"def search___:
    for i, n in enumerate___:
        if n == number:
            return i
    return -1

result = search___
print___"
Create a Python program to find all elements in a list that appear more than once.,"list=[1, 2, 3, 2, 4, 5, 1, 0]","def duplicate_elements(lst):
 
 seen_elements = set()
 duplicates = set()
 
 for element in lst:
 if element in seen_elements:
 duplicates.add(element)
 else:
 seen_elements.add(element)
 
 return duplicates
 
list = [1, 2, 3, 2, 4, 5, 1, 0]
duplicates = duplicate_elements(list)
print(duplicates) # {1, 2}",Data Structure,7273,"def duplicate_elements___:
 
 seen_elements = set()
 duplicates = set()
 
 for element in lst:
 if element in seen_elements:
 duplicates.add___
 else:
 seen_elements.add___
 
 return duplicates
 
list = ___
duplicates = duplicate_elements___
print(duplicates) # ___"
Create a function in Python which takes a list of numbers as input and returns the maximum of the numbers.,"[2, -1, 15, 8, 9, 10]","def findMax(l): 
    max = l[0] 
    for x in l: 
        if x > max: 
            max = x 
    return max 
  
# Driver code 
l = [2, -1, 15, 8, 9, 10] 
print(findMax(l))",Data Structure,7274,"def findMax___: 
    max = l___ 
    for x in l: 
        if x > max: 
            max = x 
    return max 
  
# Driver code 
l = [2, -1, 15, 8, 9, 10] 
print___)"
"Write a Python program to find an index in a list of numbers, where sum of numbers before it is equal to the sum of numbers after it","[1, 4, 9, 5, 3, 2]","def index_sum_equal(nums): 
    total = sum(nums) 
    left_sum = 0 
    for i in range(len(nums)): 
        right_sum = total - left_sum - nums[i] 
        if left_sum == right_sum: 
            return i 
        left_sum += nums[i] 
    return -1",Data Structure,7275,"def index_sum_equal___: 
    total = sum___ 
    left_sum = 0 
    for i in range___): 
        right_sum = total - left_sum - nums[i] 
        if left_sum == right_sum: 
            return i 
        left_sum += nums[i] 
    return -1"
Create a Python function that accepts a list of numbers as input and returns a new list with the numbers in reversed order.,"myList = [1, 2, 3, 4, 5]","def reverseList(List):
    revList = []
    for i in range(len(List)):
        revList.append(List[len(List) - i - 1])
    return revList",Data Structure,7277,"def reverseList___:
    revList = []
    for i in range___):
        revList___List[len(List) - i - 1])
    return revList"
Generate a Python code to find the minimum and maximum of a given array of integers.,"[-5, -2, -6, 0, -1]","def get_min_max(numbers):
  minimum = min(numbers)
  maximum = max(numbers)
  return minimum, maximum",Data Structure,7279,"def get_min_max___:
  minimum = min___
  maximum = max___
  return minimum, maximum"
Create a function in Python that calculates the sum of all even numbers in a given list,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","def sum_evens(nums):
 total = 0
 for num in nums:
 if num % 2 == 0:
 total += num
 return total

a = [1, 2, 3, 4, 5, 6, 7, 8, 9]
print(sum_evens(a)) # 20",Data Structure,7280,"def sum_evens___:
 total = 0
 for num in nums:
 if num % 2 == 0:
 total += num
 return total

a = ___
print___) # 20"
Create a Python script that runs a Monte Carlo simulation to generate a set of random points.,<no input>,"import random

def monte_carlo_simulation(n):
    points = []
    for _ in range(n):
        x = random.uniform(-1, 1)
        y = random.uniform(-1, 1)
        points.append((x, y))
    return points

result = monte_carlo_simulation(50)
print(result)",Data Structure,7284,"import random

def monte_carlo_simulation___:
    points = []
    for _ in range___:
        x = random.uniform___
        y = random.uniform___
        points___(x, y))
    return points

result = monte_carlo_simulation___
print___"
Write a code in Python to remove duplicate elements from a list.,"[1,2,3,4,2,2,4]","def remove_duplicates(nums):
  new_list = []
  for num in nums:
    if num not in new_list:
      new_list.append(num)
  return new_list

print(remove_duplicates([1,2,3,4,2,2,4]))",Data Structure,7287,"def remove_duplicates___:
  new_list = []
  for num in nums:
    if num not in new_list:
      new_list___num)
  return new_list

print___)"
Develop a function in Python to perform linear search on a given array and return the position of the target element.,"arr = [10, 50, 30, 20, 11], target = 20","def linear_search(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1

arr = [10, 50, 30, 20, 11]
target = 20

index = linear_search(arr, target)
if index != -1:
    print(""Element found at index"", index)
else:
    print(""Element is not present in the array"")",Data Structure,7288,"def linear_search___:
    for i in range___):
        if arr[i] == target:
            return i
    return -1

arr = ___
target = 20

index = linear_search___
if index != -1:
    print___
else:
    print___"
Design a python program that returns the third smallest element from a given list.,"x = [4,5,6,7,2,9]","def thirdSmallest(x):
    y = sorted(x)[2]
    return y",Data Structure,7291,"def thirdSmallest___:
    y = sorted___[2]
    return y"
Create an object in Python that includes data from a list comprehension.,"my_list = [1, 2, 3, 4, 5]","my_object = {x:x for x in my_list}
print(my_object)",Data Structure,7294,"my_object = ___
print___"
Generate a Python program that iterates through a given list of numbers and prints the doubled values.,"list_nums = [4, 6, 2, 8]","def double_list(list_nums):
 for num in list_nums:
 print(num * 2)
 
list_nums = [4, 6, 2, 8]
double_list(list_nums)",Data Structure,7296,"def double_list___:
 for num in list_nums:
 print___
 
list_nums = ___
double_list___"
Write a Python function which takes a list of words and counts the number of vowels.,"The list of words is [""hello"", ""world""]","def count_vowels(words): 
    vowels = ""aeiou"" 
    count = 0 
  
    for word in words: 
        for char in word: 
            if char in vowels: 
                count += 1
    return count",Data Structure,7303,"def count_vowels___: 
    vowels = ""aeiou"" 
    count = 0 
  
    for word in words: 
        for char in word: 
            if char in vowels: 
                count += 1
    return count"
Develop a program in Python that takes two lists as input and creates a new list that contains only the common elements of both lists.,"list1=[1,2,3], list2=[2,3,4]","def common_elements(list1, list2):
    common_list = []
    for element1 in list1:
        for element2 in list2:
            if element1 == element2: 
                common_list.append(element1)
    return common_list

common_elements_list = common_elements([1,2,3], [2,3,4])
print(common_elements_list)",Data Structure,7305,"def common_elements___:
    common_list = []
    for element1 in list1:
        for element2 in list2:
            if element1 == element2: 
                common_list___element1)
    return common_list

common_elements_list = common_elements___
print___"
Construct a function in Python to remove a given value from a list of integers.,"[5, 7, 6, 1, 3], 3","def remove_element(list, element):
  for i in list:
    if i == element:
      list.remove(i)
  return list

list = [5, 7, 6, 1, 3]
element = 3

print(remove_element(list, element)) # => [5, 7, 6, 1]",Data Structure,7315,"def remove_element___:
  for i in list:
    if i == element:
      list___i)
  return list

list = ___
element = 3

print___) # => [5, 7, 6, 1]"
Write a Python function to remove all elements from a given list present in another list.,"list1 = [1, 2, 3, 4, 5]
list2 = [4, 5, 6]","def remove_elements(list1, list2):
    for item in list2:
        if item in list1:
            list1.remove(item)
    
    return list1

result = remove_elements([1, 2, 3, 4, 5], [4, 5, 6])
print(result)",Data Structure,7317,"def remove_elements___:
    for item in list2:
        if item in list1:
            list1___item)
    
    return list1

result = remove_elements___
print___"
Generate an algorithm in Python for reversing an array of numbers.,"[1, 2, 3, 4, 5]","def reverse_array(arr):

    # Use the two pointer technique
    start = 0
    end = len(arr) - 1

    while start < end:
        # Swap the values at each pointer position
        arr[start], arr[end] = arr[end], arr[start]
        # Move the pointer to the next position
        start += 1
        end -= 1

    return arr

arr = [1, 2, 3, 4, 5]
reverse_array(arr)",Data Structure,7322,"def reverse_array___:

    # Use the two pointer technique
    start = 0
    end = len___ - 1

    while start < end:
        # Swap the values at each pointer position
        arr[start], arr[end] = arr[end], arr[start]
        # Move the pointer to the next position
        start += 1
        end -= 1

    return arr

arr = ___
reverse_array___"
"Given an array and a target value, write a Python program to find theIndex of the target value in the array.","[1, 2, 3, 4, 5], 3","def find_index(arr, target):
 for i in range(len(arr)):
  if arr[i] == target:
   return i
 return -1",Data Structure,7323,"def find_index___:
 for i in range___):
  if arr[i] == target:
   return i
 return -1"
Edit the following Python code to calculate the average of an array of numbers.,"arr = [3, 4, 5]
sum = 0
for i in arr:
    sum = sum + i
print(sum)","arr = [3, 4, 5]
sum = 0
for i in arr:
    sum = sum + i

average = sum / len(arr)
print(average)",Data Structure,7329,"arr = ___
sum = 0
for i in arr:
    sum = sum + i

average = sum / len___
print___"
Implement a function in Python that takes a list of integers and returns the sum of the squares of the even numbers.,"[1, 2, 3, 4, 5]","def sum_of_squares_of_evens(list_):
  sum_ = 0
  for num in list_:
    if num % 2 == 0:
      sum_ += num**2
  
  return sum_",Data Structure,7330,"def sum_of_squares_of_evens___:
  sum_ = 0
  for num in list_:
    if num % 2 == 0:
      sum_ += num**2
  
  return sum_"
Write a function in Python that takes a list of numbers and returns a new list with all the elements sorted in descending order.,"[9,4,3,2,1]","def sort_descending(input):
 input.sort(reverse=True)
 return input",Data Structure,7331,"def sort_descending___:
 input.sort___
 return input"
Create a function in Python to find the minimum value in a given array.,An array of integers arr[],"def findMin(arr): 
   
    # Initialize minimum element 
    min = arr[0] 
   
    # Traverse array elements starting from 
    # 1st to the last 
    for i in range(1, len(arr)): 
        if arr[i] < min: 
            min = arr[i]
   
    return min

arr = [10, 11, 8, 9, 2] 
print(findMin(arr))",Data Structure,7332,"def findMin___: 
   
    # Initialize minimum element 
    min = arr___ 
   
    # Traverse array elements starting from 
    # 1st to the last 
    for i in range___): 
        if arr[i] < min: 
            min = arr[i]
   
    return min

arr = ___ 
print___)"
Edit the following Python function so that it returns a list of the factors of a number.,"def factors(n):
    return","def factors(n):
    factors =[]
    for i in range(1, n + 1):
        if n % i == 0:
            factors.append(i)
    return factors",Data Structure,7336,"def factors___:
    factors =[]
    for i in range___:
        if n % i == 0:
            factors___i)
    return factors"
Write a python program to fill in missing values in a given list of strings.,"['a', '', 'b', '', 'c']","input_list = ['a', '', 'b', '', 'c']

for i, val in enumerate(input_list):
    if val == '':
        input_list[i] = input_list[i-1]

print(input_list) # ['a', 'a', 'b', 'b', 'c']",Data Structure,7338,"input_list = ['a', '', 'b', '', 'c']

for i, val in enumerate___:
    if val == '':
        input_list[i] = input_list[i-1]

print___ # ['a', 'a', 'b', 'b', 'c']"
Create a Python program to retrieve the hours worked by an employee from a given list of timestamps.,"[1577296930, 1577297490, 1577299030]","def total_hours(timestamps):
    total_hours = 0
    for i in range(1, len(timestamps)):
        total_hours += (timestamps[i] - timestamps[i-1]) / 3600
    return total_hours

timestamps = [1577296930, 1577297490, 1577299030]

print(total_hours(timestamps))

# Output should be 3.33",Data Structure,7340,"def total_hours___:
    total_hours = 0
    for i in range___):
        total_hours += ___ / 3600
    return total_hours

timestamps = ___

print___)

# Output should be 3.33"
Generate a Python program to remove all the elements equal to the given target from an array.,"[2, 3, 4, 3, 5, 3], target: 3","def remove_target(arr, target): 
    result = [] 
    for num in arr: 
        if num != target: 
            result.append(num) 
    return result",Data Structure,7342,"def remove_target___: 
    result = [] 
    for num in arr: 
        if num != target: 
            result___num) 
    return result"
Program a Python script that has a given list of integers as input and returns the sum of the list elements.,"my_list = [3, 2, 5, 4, 9]","def sum_list(my_list):
	total = 0
	for i in my_list:
		total += i
	return total",Data Structure,7344,"def sum_list___:
	total = 0
	for i in my_list:
		total += i
	return total"
Develop a Python program that calculates the maximum and minimum of a given list.,"nums = [2, 3, 5, 10, 12]","def get_min_max(nums): 
  min_value = min(nums) 
  max_value = max(nums) 
  return (min_value, max_value)",Data Structure,7345,"def get_min_max___: 
  min_value = min___ 
  max_value = max___ 
  return ___"
Create a method in the Python language that takes a list of integers and returns a list containing only the values greater than 10.,"[1, 5, 10, 15, 20]","def filter_greater_than_10(nums):
 filtered_nums = []
 for num in nums:
 if num > 10:
 filtered_nums.append(num)
 return filtered_nums

nums = [1, 5, 10, 15, 20]
filtered_nums = filter_greater_than_10(nums)
print(filtered_nums) # [15, 20]",Data Structure,7347,"def filter_greater_than_10___:
 filtered_nums = []
 for num in nums:
 if num > 10:
 filtered_nums___num)
 return filtered_nums

nums = ___
filtered_nums = filter_greater_than_10___
print___ # [15, 20]"
Write a python program that adds all the elements in a given list,"my_list = [2, 4, 6, 8]","def list_sum(list):
    sum = 0
    for num in list:
        sum += num
    return sum",Data Structure,7349,"def list_sum___:
    sum = 0
    for num in list:
        sum += num
    return sum"
Create an algorithm in Python that finds the maximum and minimum numbers in an unsorted array.,"[-5, 7, 2, 11, -9]","def get_max_min(arr):
    max_num = None
    min_num = None

    for n in arr:
        if max_num is None or n > max_num:
            max_num = n

        if min_num is None or n < min_num:
            min_num = n

    return max_num, min_num

max_num, min_num = get_max_min([-5, 7, 2, 11, -9])
print(f""max = {max_num}, min = {min_num}"")",Data Structure,7355,"def get_max_min___:
    max_num = None
    min_num = None

    for n in arr:
        if max_num is None or n > max_num:
            max_num = n

        if min_num is None or n < min_num:
            min_num = n

    return max_num, min_num

max_num, min_num = get_max_min___
print(f""max = ___, min = ___"")"
Create a Python module that takes in an array and returns the greatest common divisor (GCD).,"[30, 42]","def gcd(arr):
    gcd = arr[0]
    for i in arr[1:]:
        while i:
            gcd, i = i, gcd % i
    return gcd

arr = [30,42]
print(gcd(arr))",Data Structure,7358,"def gcd___:
    gcd = arr___
    for i in arr[1:]:
        while i:
            gcd, i = i, gcd % i
    return gcd

arr = ___
print___)"
Write an algorithm in Python to detect duplicate values in a given array.,"[5, 2, 1, 5, 9, 1, 3]","def find_duplicates(arr):
    duplicates = []
    seen = set()
    for i in arr:
        if i not in seen:
            seen.add(i)
        else:
            duplicates.append(i)
    return duplicates",Data Structure,7368,"def find_duplicates___:
    duplicates = []
    seen = set()
    for i in arr:
        if i not in seen:
            seen.add___
        else:
            duplicates___i)
    return duplicates"
"Create a Python function to sort a list of strings lexicographically, where strings are of varying lengths.","string_list = [""abcd"", ""def"", ""fh"", ""ac"", ""a""]","def lexicographic_sort(string_list):
    # Sort by length
    string_list.sort(key=len)
 
    # Second, sort by alphabetical order
    string_list.sort()
 
    return string_list

string_list = [""abcd"", ""def"", ""fh"", ""ac"", ""a""]
print(lexicographic_sort(string_list)) # [""a"", ""ac"", ""def"", ""fh"", ""abcd""]",Data Structure,7369,"def lexicographic_sort___:
    # Sort by length
    string_list.sort___
 
    # Second, sort by alphabetical order
    string_list.sort()
 
    return string_list

string_list = [""abcd"", ""def"", ""fh"", ""ac"", ""a""]
print___) # [""a"", ""ac"", ""def"", ""fh"", ""abcd""]"
"Using the comment as guide, construct a python program that checks whether a given value is in a list","Input List: [1, 2, 3, 4, 5]
Input Value: 3","def search_list(input_list, input_value):
    """"""Checks whether a given value is in a list""""""
    for num in input_list:
        if num == input_value:
            return True
    return False",Data Structure,7370,"def search_list___:
    """"""Checks whether a given value is in a list""""""
    for num in input_list:
        if num == input_value:
            return True
    return False"
Design a python program to find the maximum value of an array.,"[2, 4, 7, 6]","def maxVal(arr):
    maxVal = -float(""inf"")
    for num in arr:
        if num > maxVal:
            maxVal = num
    return maxVal

maxVal([2, 4, 7, 6]) #returns 7",Data Structure,7371,"def maxVal___:
    maxVal = -float___
    for num in arr:
        if num > maxVal:
            maxVal = num
    return maxVal

maxVal___ #returns 7"
Create a function in Python that takes two list of numbers and outputs the product of each element in both lists.,"[1, 2, 3], [3, 4, 5]","def productOfLists(arr1, arr2):
    res = []
    for i in range(len(arr1)):
        for j in range(len(arr2)):
            if i == j:
                res.append(arr1[i] * arr2[j])
    return res

product = productOfLists([1, 2, 3], [3, 4, 5])
print(product)",Data Structure,7374,"def productOfLists___:
    res = []
    for i in range___):
        for j in range___):
            if i == j:
                res___arr1[i] * arr2[j])
    return res

product = productOfLists___
print___"
Create a Python program that takes any number of lists and combines them into a single list.,"list_1 = [1, 2, 3]
list_2 = [4, 5, 6]
list_3 = [7, 8, 9]","def combine_lists(*lists):
    '''This function takes any number of lists and combines them into a single list.'''
    combined_list = []

    for list in lists:
        for item in list:
            combined_list.append(item)

    return combined_list

combined_list = combine_lists(list_1, list_2, list_3)
print(combined_list)",Data Structure,7375,"def combine_lists___:
    '''This function takes any number of lists and combines them into a single list.'''
    combined_list = []

    for list in lists:
        for item in list:
            combined_list___item)

    return combined_list

combined_list = combine_lists___
print___"
Create a list expression and a set expression in Python that converts the given list to a set.,"list = [1, 2, 2, 3, 4, 4, 5]","list_expression = set([x for x in list]) 

set_expression = set(list)",Data Structure,7380,"list_expression = set___ 

set_expression = set___"
Can you design a function in Python to sort a list of tuples based on the second item in the tuple?,"tuples = [(""b"", 0), (""a"", 1), (""c"", -1)]","def sort_tuple(tuples):
    # sort by 2nd item of the tuple
    tuples.sort(key=lambda x: x[1])
    return tuples

# Test
tuples = [(""b"", 0), (""a"", 1), (""c"", -1)]
sorted_tuples = sort_tuple(tuples)
print(sorted_tuples) # [(""c"", -1), (""b"", 0), (""a"", 1)]",Data Structure,7385,"def sort_tuple___:
    # sort by 2nd item of the tuple
    tuples.sort___
    return tuples

# Test
tuples = [___, ___, ___]
sorted_tuples = sort_tuple___
print___ # [___, ___, ___]"
Create a Python script that takes a list of strings as input and prints them in reverse order.,"[""apple"", ""banana"", ""cherry""]","def reverse_list(lst):
  lst.reverse()
  for item in lst:
    print(item)
  
reverse_list([""apple"", ""banana"", ""cherry""])",Data Structure,7390,"def reverse_list___:
  lst.reverse()
  for item in lst:
    print___
  
reverse_list___"
Create a list of words from a sentence using Python,The quick brown fox jumps over the lazy dog,"sentence = ""The quick brown fox jumps over the lazy dog"" 
word_list = sentence.split("" "") 
print(word_list) 

# Output: ['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog']",Data Structure,7398,"sentence = ""The quick brown fox jumps over the lazy dog"" 
word_list = sentence.split___ 
print___ 

# Output: ['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog']"
Implement a sorting algorithm in Python to sort a list of integers.,"[5, 2, 8, 1, 4]","def sort(list): 

    for i in range(len(list)): 
        min_idx = i 
        for j in range(i+1, len(list)): 
            if list[min_idx] > list[j]: 
                min_idx = j 
                
        list[i], list[min_idx] = list[min_idx], list[i] 
 
list = [5, 2, 8, 1, 4] 
sort(list) 
print(list)",Data Structure,7400,"def sort___: 

    for i in range___): 
        min_idx = i 
        for j in range___): 
            if list[min_idx] > list[j]: 
                min_idx = j 
                
        list[i], list[min_idx] = list[min_idx], list[i] 
 
list = ___ 
sort___ 
print___"
"Given a list, write a Python script to reverse the order of the list.","[10, 20, 30, 40, 50]","list = [10, 20, 30, 40, 50]
list.reverse()
print(list)",Data Structure,7401,"list = ___
list.reverse()
print___"
Design a program that outputs the average value of a list in Python.,"[1, 4, 10, 6]","# Given a list of numbers
nums = [1, 4, 10, 6]

# Calculate the average
total = 0
for num in nums:
    total += num

average = total/ len(nums)

# Output the average
print(average)",Data Structure,7406,"# Given a list of numbers
nums = ___

# Calculate the average
total = 0
for num in nums:
    total += num

average = total/ len___

# Output the average
print___"
Create a Python script that takes a list of email addresses as input and prints a filtered list of email addresses that belong to a particular domain.,"list = [""john@gmail.com"", ""sarah@yahoo.com"", ""bob@microsoft.com"", ""sophie@gmail.com""]","filtered_list = [email for email in list if email.endswith(""@gmail.com"")]

print(filtered_list)
# Output: [""john@gmail.com"", ""sophie@gmail.com""]",Data Structure,7411,"filtered_list = [email for email in list if email.endswith___]

print___
# Output: [""john@gmail.com"", ""sophie@gmail.com""]"
Create a Python program that prints the most frequent item in a given list.,"[6, 5, 8, 3, 6, 5, 8, 6]","from collections import Counter

def most_frequent(items):
    c = Counter(items)
    return c.most_common(1)[0][0]

items = [6, 5, 8, 3, 6, 5, 8, 6]
result = most_frequent(items)
print(result)",Data Structure,7413,"from collections import Counter

def most_frequent___:
    c = Counter___
    return c.most_common___[0][0]

items = ___
result = most_frequent___
print___"
"Create a Python program for classifying an array of numbers into one of three classes (low, medium, or high).","Example array: [-5, 0, 2, 10, 15]","def classify(arr):
 output = []
 for n in arr:
 if n < 0:
 output.append('low')
 elif n < 5:
 output.append('medium')
 else:
 output.append('high')
 return output

# Example Usage
example_array = [-5, 0, 2, 10, 15]
result = classify(example_array)
print(result) # ['low', 'medium', 'medium', 'high', 'high']",Data Structure,7414,"def classify___:
 output = []
 for n in arr:
 if n < 0:
 output___'low')
 elif n < 5:
 output___'medium')
 else:
 output___'high')
 return output

# Example Usage
example_array = [-5, 0, 2, 10, 15]
result = classify___
print___ # ['low', 'medium', 'medium', 'high', 'high']"
Create a function in Python to sort the elements of a list in ascending order.,"[9, 3, 5, 4, 7, 6]","def sort_asc(lst):
    lst.sort()
    return lst",Data Structure,7417,"def sort_asc___:
    lst.sort()
    return lst"
Suggest an efficient algorithm for sorting an array of integers in Python.,"[1, 5, 3, 8, 4, 2]","def sort_array(array):
    for i in range(len(array)):
        lowest = i
        for j in range(i + 1, len(array)):
            if array[lowest] > array[j]:
                lowest = j
        array[i], array[lowest] = array[lowest], array[i]
    return array

result = sort_array([1, 5, 3, 8, 4, 2])
print(result)",Data Structure,7420,"def sort_array___:
    for i in range___):
        lowest = i
        for j in range___):
            if array[lowest] > array[j]:
                lowest = j
        array[i], array[lowest] = array[lowest], array[i]
    return array

result = sort_array___
print___"
Create an algorithm in Python to determine if the given array contains two elements with the given sum.,"arr = [3, 6, 7, 8, 10]
sum = 16","def twoSum(arr, sum):
    for i in range(len(arr) - 1):
        for j in range(i+1, len(arr)):
            if arr[i] + arr[j] == sum:
                return True

    return False

print(twoSum(arr, sum))
# Output: True",Data Structure,7421,"def twoSum___:
    for i in range___ - 1):
        for j in range___):
            if arr[i] + arr[j] == sum:
                return True

    return False

print___)
# Output: True"
Construct a Python algorithm to find the largest palindrome from the given array.,"[12, 521, 1212, 84561, 91332]","def largest_palindrome(arr):
    max_palindrome = 0
    for item in arr:
        temp = str(item)
        if temp == temp[::-1] and max_palindrome < item:
            max_palindrome = item
    return max_palindrome

print(largest_palindrome([12, 521, 1212, 84561, 91332]))",Data Structure,7424,"def largest_palindrome___:
    max_palindrome = 0
    for item in arr:
        temp = str___
        if temp == temp[::-1] and max_palindrome < item:
            max_palindrome = item
    return max_palindrome

print___)"
Write a Python program to return the difference between the largest and smallest elements in a given list of integers.,"[10, 4, 2, 5, 7]","def diff(nums):
    return max(nums) - min(nums)

print(diff([10, 4, 2, 5, 7])) # 8",Data Structure,7425,"def diff___:
    return max___ - min___

print___) # 8"
Create a Python function to remove duplicates from the given list.,"[1, 2, 3, 2, 3]","def remove_duplicates(list):
  new_list = []
  for item in list:
    if item not in new_list:
      new_list.append(item)
  return new_list",Data Structure,7429,"def remove_duplicates___:
  new_list = []
  for item in list:
    if item not in new_list:
      new_list___item)
  return new_list"
Write a Python program to partition a list into sublists of given size.,"list_a = [1, 2, 3, 4, 5, 6, 7, 8]
size = 3","def partition_list(list_a, size):
 return [list_a[i * size:(i + 1) * size] for i in range((len(list_a) + size - 1) // size )] 
 
partition_list(list_a, size)",Data Structure,7430,"def partition_list___:
 return [list_a[i * size:___ * size] for i in range___ + size - 1) // size )] 
 
partition_list___"
Design an algorithm in Python that sorts a list in descending order.,"List = [3, 4, 1, 2]","def sort_list(List):
 for i in range(len(List)-1, 0, -1):
  for j in range(i):
   if List[j] < List[j+1]:
    List[j], List[j+1] = List[j+1], List[j]
 
 return List
 

List = [3, 4, 1, 2]

sorted_list = sort_list(List)

print(sorted_list) # [4, 3, 2, 1]",Data Structure,7434,"def sort_list___:
 for i in range___-1, 0, -1):
  for j in range___:
   if List[j] < List[j+1]:
    List[j], List[j+1] = List[j+1], List[j]
 
 return List
 

List = ___

sorted_list = sort_list___

print___ # [4, 3, 2, 1]"
Create a Python program for sorting a list of words into alphabetical order.,"[""dog"", ""cat"", ""apple"", ""banana""]","def sort_words(words):
  return sorted(words)

words = [""dog"", ""cat"", ""apple"", ""banana""]

sorted_words = sort_words(words)

print(sorted_words)",Data Structure,7437,"def sort_words___:
  return sorted___

words = [""dog"", ""cat"", ""apple"", ""banana""]

sorted_words = sort_words___

print___"
Expand this function to compute the sum of a list in Python.,"def computeSum(L):
    total = 0
    for x in L:
        total += x
    return total","def computeSum(L):
    """"""Computes the sum of a list

    Parameters
    ----------
    L : list
        A list of numbers

    Returns
    -------
    total : int
        The sum of all the numbers in the list
    """"""
    total = 0
    for x in L:
        total += x
    return total",Data Structure,7441,"def computeSum___:
    """"""Computes the sum of a list

    Parameters
    ----------
    L : list
        A list of numbers

    Returns
    -------
    total : int
        The sum of all the numbers in the list
    """"""
    total = 0
    for x in L:
        total += x
    return total"
"Create a function in Python that takes in an array of integers, and returns a new array with all the elements in the original array multiplied by two.","[1, 2, 3, 4]","def double_array(array):
    return [element*2 for element in array]

double_array([1, 2, 3, 4]) # [2, 4, 6, 8]",Data Structure,7442,"def double_array___:
    return [element*2 for element in array]

double_array___ # [2, 4, 6, 8]"
Write a Python program to check if an array contains a particular value.,"Example array: [2, 3, 7, 8], Check for number: 7","def check_value(arr, val):
	for i in arr:
		if i == val:
			return True 
	return False 

arr = [2, 3, 7, 8]
val = 7

if(check_value(arr, val)):
	print(""Array contains number "" + str(val))
else:
	print(""Array does not contain number "" + str(val))",Data Structure,7444,"def check_value___:
	for i in arr:
		if i == val:
			return True 
	return False 

arr = ___
val = 7

if___):
	print___)
else:
	print___)"
Create a Python program to find the largest number in a given list.,"[3, 6, 4, 8, 1]","def largestNumber(list): 
    max_num = 0
    for i in list:  
        if i > max_num: 
            max_num = i 
    return max_num 
  

list = [3, 6, 4, 8, 1]
largestNumber = largestNumber(list) 
print(""Largest element in the list is: "", largestNumber);",Data Structure,7445,"def largestNumber___: 
    max_num = 0
    for i in list:  
        if i > max_num: 
            max_num = i 
    return max_num 
  

list = ___
largestNumber = largestNumber___ 
print___;"
Generate a python script which calculates the average of ten numbers stored in a list.,"[4, 6, 8, 10, 11, 12, 22, 34, 36, 37]","my_list = [4, 6, 8, 10, 11, 12, 22, 34, 36, 37] 
  
# calculate sum of the list numbers 
sum_numbers = sum(my_list) 
  
# length of the list 
length = len(my_list) 
  
# average of the list 
average = sum_numbers/length 
  
# print the result 
print(average)",Data Structure,7449,"my_list = ___ 
  
# calculate sum of the list numbers 
sum_numbers = sum___ 
  
# length of the list 
length = len___ 
  
# average of the list 
average = sum_numbers/length 
  
# print the result 
print___"
Write a Python program to append multiple lists into one list.,"list1 = [2, 3, 4]
list2 = [5, 6, 7]
list3 = [8, 9, 10]","list1 = [2, 3, 4]
list2 = [5, 6, 7]
list3 = [8, 9, 10]

list = list1 + list2 + list3
print(list) 
# Output: [2, 3, 4, 5, 6, 7, 8, 9, 10]",Data Structure,7452,"list1 = ___
list2 = ___
list3 = ___

list = list1 + list2 + list3
print___ 
# Output: ___"
Write a Python program to sort a list of tuples based on the second element of each tuple.,"[(3, 4), (2, 5), (1, 6)]","def sort_list(lst): 
	lst.sort(key = lambda x: x[1]) 
	return lst 

# Driver code 
lst = [(3, 4), (2, 5), (1, 6)] 
print(sort_list(lst)) 

# Output: [(3, 4), (2, 5), (1, 6)]",Data Structure,7457,"def sort_list___: 
	lst.sort___ 
	return lst 

# Driver code 
lst = [___, ___, ___] 
print___) 

# Output: [___, ___, ___]"
Write a Python program that takes two lists as input and merges the values from both these lists into the third list.,"list1 = [1, 2, 3, 4, 5]
list2 = [6, 7, 8, 9, 0]","list3 = []

list3.extend(list1)
list3.extend(list2)
  
print(list3)",Data Structure,7462,"list3 = []

list3.extend___
list3.extend___
  
print___"
Create a function in Python that will take a list as an argument and return the average of the first 3 elements in the list.,"[1, 2, 3, 4, 5]","def getAverageOfFirstThree(data):
    sum = 0
    for i in range(3):
        sum += data[i]
    
    return sum / 3",Data Structure,7472,"def getAverageOfFirstThree___:
    sum = 0
    for i in range___:
        sum += data[i]
    
    return sum / 3"
Write a Python function to compare two given lists and return a list containing only the common elements.,"list1 = [1, 2, 3, 4]
list2 = [2, 4, 6]","def common_elements(lst1, lst2):
  return [element for element in lst1 if element in lst2]

list1 = [1, 2, 3, 4]
list2 = [2, 4, 6]
common_elements = common_elements(list1, list2)

print(""Common elements:"", common_elements)",Data Structure,7473,"def common_elements___:
  return [element for element in lst1 if element in lst2]

list1 = ___
list2 = ___
common_elements = common_elements___

print___"
Write a Python program to remove the duplicates from a given list of numbers while preserving the order of elements.,"[1, 2, 3, 2, 1]","def remove_duplicates(lst):
    new_list = []
    for i in lst:
        if i not in new_list:
            new_list.append(i)
    return new_list

print(remove_duplicates([1, 2, 3, 2, 1]))",Data Structure,7474,"def remove_duplicates___:
    new_list = []
    for i in lst:
        if i not in new_list:
            new_list___i)
    return new_list

print___)"
Optimize a code snippet written in Python. The code snippet should create a list of numbers from 0 to 10 that are divisible by 2.,"arr = []
for i in range(10):
 if i % 2 == 0:
 arr.append(i)",arr = [i for i in range(11) if i % 2 == 0],Data Structure,7476,arr = [i for i in range___ if i % 2 == 0]
Write a Python program to delete duplicate elements from a list.,"[2, 3, 4, 5, 4, 6, 7, 5, 8]","def removeDuplicates(inputList):
      tempList = [] 
      for elem in inputList: 
          if elem not in tempList: 
              tempList.append(elem)
      return tempList
    
outputList = removeDuplicates([2, 3, 4, 5, 4, 6, 7, 5, 8]) 
print(outputList)",Data Structure,7477,"def removeDuplicates___:
      tempList = [] 
      for elem in inputList: 
          if elem not in tempList: 
              tempList___elem)
      return tempList
    
outputList = removeDuplicates___ 
print___"
Write a Python program to randomly shuffle a given list of numbers.,"numbers = [1,2,3,4,5]","import random

def shuffle(numbers):
 random.shuffle(numbers)
 return numbers

shuffle(numbers)",Data Structure,7479,"import random

def shuffle___:
 random.shuffle___
 return numbers

shuffle___"
Create a python program to remove odd numbers from a list of numbers.,"data = [10, 20, 30, 5, 6, 7]","def remove_odd_numbers(arr):
    result = [i for i in arr if i % 2 == 0]
    return result",Data Structure,7482,"def remove_odd_numbers___:
    result = [i for i in arr if i % 2 == 0]
    return result"
Write a Python program to find all numbers in a list and replace them with their product.,"[1, 2, 3, 4, 5]","my_list = [1, 2, 3, 4, 5]
new_list = [x * y for x, y in zip(my_list, my_list[1:] + [1])]",Data Structure,7484,"my_list = ___
new_list = [x * y for x, y in zip___]"
"Given a list of numbers, write a Python program to compute the average of all numbers.","[10, 20, 45, 60]","def compute_average(numbers):
 sum = 0
 for number in numbers:
 sum += number
 return sum/len(numbers)

numbers = [10, 20, 45, 60]
result = compute_average(numbers)
print(result)

# Output:
31.25",Data Structure,7485,"def compute_average___:
 sum = 0
 for number in numbers:
 sum += number
 return sum/len___

numbers = ___
result = compute_average___
print___

# Output:
31.25"
Design a function in Python to remove all occurrences of a given number from a given list.,"[1, 7, 3, 1, 4, 7, 9], 7","def remove_num(lst, num):
  return [n for n in lst if n != num]

print(remove_num([1, 7, 3, 1, 4, 7, 9], 7))  # [1, 3, 1, 4, 9]",Data Structure,7491,"def remove_num___:
  return [n for n in lst if n != num]

print___)  # [1, 3, 1, 4, 9]"
Construct a python snippet to list out the keys present in a dictionary.,"dictionary = {""key1"":""value1"", ""key2"":""value2"", ""key3"":""value3""}","for key in dictionary.keys():
    print(key)",Data Structure,7492,"for key in dictionary.keys():
    print___"
Compose a code in Python to check if a list contains any duplicate elements.,"[1, 2, 3, 4, 5]","def has_duplicates(arr):
    seen = set()
    for elem in arr:
        if elem in seen:
            return True
        else:
            seen.add(elem)
    return False

test_arr = [1, 2, 3, 4, 5]
result = has_duplicates(test_arr)
print(result)",Data Structure,7493,"def has_duplicates___:
    seen = set()
    for elem in arr:
        if elem in seen:
            return True
        else:
            seen.add___
    return False

test_arr = ___
result = has_duplicates___
print___"
Generate a Python script to create a list of numbers between a given range.,"start = 5, end = 10","def generate_list(start, end):
    result = []
    for num in range(start, end+1):
        result.append(num)
    return result

list = generate_list(5, 10)
print(list)  # Output: [5, 6, 7, 8, 9, 10]",Data Structure,7494,"def generate_list___:
    result = []
    for num in range___:
        result___num)
    return result

list = generate_list___
print___  # Output: [5, 6, 7, 8, 9, 10]"
Generate a function to find the sum of an element in a nested list in Python.,"arr = [[1, 2], [3, 4], [5, 6]]","def sum_of_element(arr):
    s = 0
    for sub_list in arr:
        for element in sub_list:
            s += element
    return s

arr = [[1, 2], [3, 4], [5, 6]]
total = sum_of_element(arr)
print(total)",Data Structure,7499,"def sum_of_element___:
    s = 0
    for sub_list in arr:
        for element in sub_list:
            s += element
    return s

arr = [___, ___, ___]
total = sum_of_element___
print___"
Generate a Python program that returns the smallest even number in a given list,"nums = [5, 7, 9, 8, 4]","def find_smallest_even(nums):
    smallest = None
    for num in nums:
        if (num % 2 == 0) and (smallest == None or num < smallest):
            smallest = num
    return smallest",Data Structure,7500,"def find_smallest_even___:
    smallest = None
    for num in nums:
        if ___ and ___:
            smallest = num
    return smallest"
Write a Python program that takes a list of integers and returns the largest number,"my_list = [1, 5, 10, 15, 20]","def find_largest_number(numbers):
    largest_number = -float('inf')
    for number in numbers:
        if number > largest_number:
            largest_number = number
    return largest_number

my_list = [1, 5, 10, 15, 20]
largest_number = find_largest_number(my_list)
print(largest_number)",Data Structure,7507,"def find_largest_number___:
    largest_number = -float___
    for number in numbers:
        if number > largest_number:
            largest_number = number
    return largest_number

my_list = ___
largest_number = find_largest_number___
print___"
Create a Python program to convert a list of words into its corresponding abbreviations.,"[""Hello"",""World"",""Amazing""]","def word_abbreviations(words):
 abbreviations = []
 for word in words:
  abbreviations.append(word[0].upper() + str(len(word)-2) + word[-1].upper())
 return abbreviations

list_of_words = [""Hello"",""World"",""Amazing""]
print(word_abbreviations(list_of_words))

Output: ['H4o', 'W4d', 'A5g']",Data Structure,7509,"def word_abbreviations___:
 abbreviations = []
 for word in words:
  abbreviations___word[0].upper() + str(len(word)-2) + word[-1].upper())
 return abbreviations

list_of_words = [""Hello"",""World"",""Amazing""]
print___)

Output: ['H4o', 'W4d', 'A5g']"
"In the following Python list, remove an item with the index of 3 and then add a new item to the list with a value of 99.","my_list = [1, 4, 5, 7, 8]","my_list = [1, 4, 5, 8]
my_list.append(99)",Data Structure,7510,"my_list = ___
my_list___99)"
Generate a Python code snippet to search for a specific value in a 2D list and return its index.,"Value to search for: ""hello""
2D List: [[12, ""goodbye"", 21], [""hello"", 67, 55]]","def search_2d(value, lst):
 for i, row in enumerate(lst):
  if value in row:
   return (i, row.index(value))

print(search_2d(""hello"", [[12, ""goodbye"", 21], [""hello"", 67, 55]]))
# Output: (1, 0)",Data Structure,7512,"def search_2d___:
 for i, row in enumerate___:
  if value in row:
   return ___)

print___)
# Output: ___"
Write a Python function to calculate the product of elements in a list.,"[1, 2, 3, 4]","def product(arr):
    product = 1
    for num in arr:
        product *= num
    return product

product([1, 2, 3, 4])",Data Structure,7513,"def product___:
    product = 1
    for num in arr:
        product *= num
    return product

product___"
"Write a Python program to create functions for min, max, and mean of a given list.",A list of 10 integers,"def min_list(numbers):
  min_num = min(numbers)
  return min_num

def max_list(numbers):
  max_num = max(numbers)
  return max_num

def mean_list(numbers):
  mean_num = sum(numbers)/len(numbers)
  return mean_num

numbers = [1,2,3,4,5,6,7,8,9,10]

print(min_list(numbers))
print(max_list(numbers))
print(mean_list(numbers))

# Output
# 1
# 10
# 5.5",Data Structure,7514,"def min_list___:
  min_num = min___
  return min_num

def max_list___:
  max_num = max___
  return max_num

def mean_list___:
  mean_num = sum___/len___
  return mean_num

numbers = ___

print___)
print___)
print___)

# Output
# 1
# 10
# 5.5"
Write a Python script to transform a given list of integers into a single integer.,"int_list = [1,2,3,4,5]","def int_to_int(int_list):
    return int(''.join(str(e) for e in int_list))",Data Structure,7517,"def int_to_int___:
    return int___ for e in int_list))"
Write a Python program to find the index of an item in the given array.,"[5, 7, 8, 6], 8","def search_index(arr, target):
  for i in range(len(arr)):
    if arr[i] == target:
      return i
  
  return -1

print(search_index([5, 7, 8, 6], 8)) # 2",Data Structure,7523,"def search_index___:
  for i in range___):
    if arr[i] == target:
      return i
  
  return -1

print___) # 2"
Write a function in Python to perform a selection sort on an unsorted array.,"[4, 6, 1, 3, 8, 2]","def selection_sort(arr):
    for i in range(len(arr)): 
        min_idx = i 
        for j in range(i+1, len(arr)): 
            if arr[min_idx] > arr[j]: 
                min_idx = j
        arr[i], arr[min_idx] = arr[min_idx], arr[i]
    return arr
        
const result = selection_sort([4, 6, 1, 3, 8, 2]);
console.log(result);",Data Structure,7524,"def selection_sort___:
    for i in range___): 
        min_idx = i 
        for j in range___): 
            if arr[min_idx] > arr[j]: 
                min_idx = j
        arr[i], arr[min_idx] = arr[min_idx], arr[i]
    return arr
        
const result = selection_sort___;
console.log___;"
Write a Python script for sorting an array of numbers.,"[4, 2, 3, 5, 1]","arr = [4, 2, 3, 5, 1]
arr.sort()
print(arr)",Data Structure,7527,"arr = ___
arr.sort()
print___"
Design an algorithm in Python to find the highest one digit number in a given list.,"[5, 11, 15, 8, 9]","def get_highest_one_digit(list_nums):
    highest_num = 0
    for num in list_nums:
        if num <= 9 and num > highest_num:
            highest_num = num
    return highest_num",Data Structure,7529,"def get_highest_one_digit___:
    highest_num = 0
    for num in list_nums:
        if num <= 9 and num > highest_num:
            highest_num = num
    return highest_num"
Develop a Python script to convert a list of words into a dictionary with its frequency count as the key and the words as the value.,"List of words: hello, world, hello, python, hello","words = [""hello"",""world"",""hello"",""python"",""hello""] 

# counting frequency of each word in a list 
wordFrequencyDict = {}
for word in words: 
    if (word in wordFrequencyDict): 
        wordFrequencyDict[word] += 1
    else: 
        wordFrequencyDict[word] = 1

print(wordFrequencyDict)",Data Structure,7531,"words = [""hello"",""world"",""hello"",""python"",""hello""] 

# counting frequency of each word in a list 
wordFrequencyDict = {}
for word in words: 
    if ___: 
        wordFrequencyDict[word] += 1
    else: 
        wordFrequencyDict[word] = 1

print___"
Create a Python function to generated permutations of a given list of numbers.,"[1, 2, 3]","def permutations(arr):
    if len(arr) == 0:
        return []

    if len(arr) == 1:
        return [arr]

    l = []
    for i in range(len(arr)):
        m = arr[i]
        remL = arr[:i] + arr[i+1:]
        for p in permutations(remL):
            l.append([m] + p)
    return l

permutations([1, 2, 3])",Data Structure,7533,"def permutations___:
    if len___ == 0:
        return []

    if len___ == 1:
        return [arr]

    l = []
    for i in range___):
        m = arr[i]
        remL = arr[:i] + arr[i+1:]
        for p in permutations___:
            l___[m] + p)
    return l

permutations___"
Write a Python program that takes in two lists and returns a merged list with unique elements.,"list1 = [1, 2, 3]
list2 = [2, 3, 4]","list1 = [1, 2, 3]
list2 = [2, 3, 4]

merged_list = list(set(list1 + list2))
print(merged_list) #Output: [1, 2, 3, 4]",Data Structure,7535,"list1 = ___
list2 = ___

merged_list = list___)
print___ #Output: [1, 2, 3, 4]"
Create a function in Python to check if a list contains duplicates.,"[1, 3, 2, 4, 5, 3]","def contains_duplicates(list):
    seen = set()
    for item in list:
        if item in seen:
            return True
        seen.add(item)
    return False
 
list = [1, 3, 2, 4, 5, 3]
 
print(contains_duplicates(list))",Data Structure,7536,"def contains_duplicates___:
    seen = set()
    for item in list:
        if item in seen:
            return True
        seen.add___
    return False
 
list = ___
 
print___)"
"Write a python program that takes in 2 parameters, a list and a number, and returns a dictionary with the words in the list and the number of characters in each word as its value.","['the', 'cat', 'in', 'the', 'hat']","my_list = ['the', 'cat', 'in', 'the', 'hat']

def get_word_length_dict(my_list):
    my_dict = {}
    for word in my_list:
        my_dict[word] = len(word)
    return my_dict

print(get_word_length_dict(my_list))",Data Structure,7546,"my_list = ['the', 'cat', 'in', 'the', 'hat']

def get_word_length_dict___:
    my_dict = {}
    for word in my_list:
        my_dict[word] = len___
    return my_dict

print___)"
Generate a python function that takes a list of strings and returns the longest one.,"words = ['hello', 'world', 'this', 'is', 'a', 'test']","def longest_string(words):
    longest = 0
    result = ''
    for w in words:
        if len(w) > longest:
            longest = len(w)
            result = w
    return result",Data Structure,7549,"def longest_string___:
    longest = 0
    result = ''
    for w in words:
        if len___ > longest:
            longest = len___
            result = w
    return result"
Develop a function to search for a value in a list.,"lst = [‘hello’, ‘world’, ‘python’]
value = ‘python’","def search_list(lst, value): 
    for item in lst: 
        if item == value:  
            return True 
    return False

# Driver Code 
lst = ['hello', 'world', 'python'] 
value = 'python'

is_present = search_list(lst, value) 
if is_present == True: 
    print(value, ""is present in the list"") 
else: 
    print(value, ""is not present in the list"")",Data Structure,7552,"def search_list___: 
    for item in lst: 
        if item == value:  
            return True 
    return False

# Driver Code 
lst = ['hello', 'world', 'python'] 
value = 'python'

is_present = search_list___ 
if is_present == True: 
    print___ 
else: 
    print___"
Generate a new Python list with the squared value of each element in a given list.,"list = [1, 2, 3, 4, 5, 6]","def squared_list(list):
    squared_list = []
    for num in list:
        squared_list.append(num **2)
    return squared_list

list = [1, 2, 3, 4, 5, 6]
print(squared_list(list)) # Outputs [1, 4, 9, 16, 25, 36]",Data Structure,7553,"def squared_list___:
    squared_list = []
    for num in list:
        squared_list___num **2)
    return squared_list

list = ___
print___) # Outputs [1, 4, 9, 16, 25, 36]"
