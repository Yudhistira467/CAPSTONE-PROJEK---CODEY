{
    "quiz": [
        {
            "question_id": 2,
            "material": "Introduction Python",
            "instruction": "Edit the following Python code such that it will print an array containing the seven days of the week.",
            "question": "days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\nfor day in days:\n    print(___)",
            "correct_answer": "day",
            "duration": 20
        },
        {
            "question_id": 11,
            "material": "Introduction Python",
            "instruction": "Generate a code snippet to print a pattern of stars in Python.",
            "question": "# Use two for loops to print pattern\nfor i in range(0, rows):\n    for j in range(0, i + 1):\n        print(___)\n    print(\"\\r\")",
            "correct_answer": "\"* \", end=\"\"",
            "duration": 20
        },
        {
            "question_id": 58,
            "material": "Introduction Python",
            "instruction": "Create a Python program to loop through a given list and print each item on a new line.",
            "question": "for item in my_list:\n    print(___)",
            "correct_answer": "item",
            "duration": 20
        },
        {
            "question_id": 72,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the 3 most common elements of a given list.",
            "question": "from collections import Counter\n\nInput = [2, 5, 3, 7, 8, 5, 10, 19, 20] \n  \nCounter = Counter(Input) \n  \nmost_occur = Counter.most_common(3)\n\nfor i in most_occur: \n    print(___)",
            "correct_answer": "i[0], \":\", i[1]",
            "duration": 20
        },
        {
            "question_id": 76,
            "material": "Introduction Python",
            "instruction": "Design a Python program to read in a list of list of strings, eliminate duplicate entries, sort them and print out the result.",
            "question": "def removeduplicates(list_of_string):\n    result = []\n    for item in list_of_string:\n        if item not in result:\n            result.append(item)\n    result.sort()\n    return result\n\nlist_of_string = [['b', 'a', 'd'], ['c', 'a', 'd'], ['a', 'f', 'g']]\nprint(___))",
            "correct_answer": "removeduplicates(list_of_string",
            "duration": 20
        },
        {
            "question_id": 84,
            "material": "Introduction Python",
            "instruction": "Edit a python program to print the square of a number input by the user.",
            "question": "num = input(\"Enter a number: \")\n\nnum = int(num)\n\nprint(___)",
            "correct_answer": "\"The square of the number is:\", num**2",
            "duration": 20
        },
        {
            "question_id": 96,
            "material": "Introduction Python",
            "instruction": "Find the most efficient Python code to print all the divisors of an input number.",
            "question": "# Python Program to find the factors of a number\n\n# define a function\ndef print_divisors(input):\n\n    # find all factors of the input number\n    for i in range(1, input + 1):\n        if input % i == 0:\n            print(___)\n\n# take input from the user\ninput = 28\n\n# print the divisors\nprint_divisors(input)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 112,
            "material": "Introduction Python",
            "instruction": "You are given the following string. Write a Python program to print how many times each word appears in the string.",
            "question": "def count_words(input_string):\n  words_count = {}\n  words = input_string.split()\n  for word in words:\n    if word in words_count:\n      words_count[word] += 1\n    else:\n      words_count[word] = 1\n  return words_count\n\nwords_count = count_words(input_string)\nprint(___)",
            "correct_answer": "words_count",
            "duration": 20
        },
        {
            "question_id": 126,
            "material": "Introduction Python",
            "instruction": "Edit this python code to make the output print in descending order (from highest to lowest).",
            "question": "my_list = [10,2,5,1,20]\n\nfor x in my_list:\n    print(___)\n    \nfor x in sorted(my_list, reverse=True):\n    print(x)",
            "correct_answer": "x",
            "duration": 20
        },
        {
            "question_id": 149,
            "material": "Introduction Python",
            "instruction": "Develop an algorithm in Python to print an array in reverse order.",
            "question": "def reverse_array(arr):\n    return arr[::-1]\n\narr = [1, 2, 3, 4, 5]\nprint(___))",
            "correct_answer": "reverse_array(arr",
            "duration": 20
        },
        {
            "question_id": 160,
            "material": "Introduction Python",
            "instruction": "Create a Python script to print out each word that begins with a vowel in a sentence.",
            "question": "for word in sentence.split():\n    if word[0].lower() in 'aeiou':\n        print(___)",
            "correct_answer": "word",
            "duration": 20
        },
        {
            "question_id": 161,
            "material": "Introduction Python",
            "instruction": "Write a Python program to traverse a tree data structure and print all the nodes in preorder.",
            "question": "def preorder(tree): \n    if tree: \n        print(___) \n        preorder(tree.left) \n        preorder(tree.right) \n  \n# Driver code  \ntree = Node(1) \ntree.left = Node(2) \ntree.right = Node(3) \ntree.left.left = Node(4) \ntree.left.right = Node(5) \n  \npreorder(tree)",
            "correct_answer": "tree.val",
            "duration": 20
        },
        {
            "question_id": 171,
            "material": "Introduction Python",
            "instruction": "Create a program to print the following ASCII art using python.",
            "question": "print(___)')\nprint('  | o o |')\nprint('  |  ^  |')\nprint('  | \\_/ |')",
            "correct_answer": "'  ( _ _ ",
            "duration": 20
        },
        {
            "question_id": 177,
            "material": "Introduction Python",
            "instruction": "Create a Python program to print out a multiplication table. The table should print out the first 10 multiples of a given number.",
            "question": "number = int(input(\"Please enter a number:\"))\n\nfor i in range(1, 11):\n print(___)",
            "correct_answer": "f'{number} * {i} = {number*i}'",
            "duration": 20
        },
        {
            "question_id": 183,
            "material": "Introduction Python",
            "instruction": "Using the input provided, write a Python program to print the sum of the numbers in both lists.",
            "question": "list3 = list1 + list2\n\ntotal = 0\n\nfor num in list3:\n    total += num \n\nprint(___)  # output: 29",
            "correct_answer": "total",
            "duration": 20
        },
        {
            "question_id": 194,
            "material": "Introduction Python",
            "instruction": "write a python code to print the common elements in between two given sets.",
            "question": "def common_elements(set1, set2): \n    return set1 & set2\n\nprint(___))",
            "correct_answer": "common_elements({1,2,3,4,5,6,7}, {2,4,5,6}",
            "duration": 20
        },
        {
            "question_id": 223,
            "material": "Introduction Python",
            "instruction": "Generate a python program to print the given sentence in reverse.",
            "question": "def reverse_string(s):\n    return s[::-1]\n\nprint(___))",
            "correct_answer": "reverse_string(\"This is an example\"",
            "duration": 20
        },
        {
            "question_id": 242,
            "material": "Introduction Python",
            "instruction": "Create a basic web scraper in Python using the requests library and the Beautiful Soup library. The web scraper should take a URL as an argument and print the text content of the page.",
            "question": "import requests\nfrom bs4 import BeautifulSoup\n\n# Define the URL\nurl = 'https://example.com'\n\n# Make a request\nresponse = requests.get(url)\n\n# Parse the HTML\nsoup = BeautifulSoup(response.text, 'html.parser')\n\n# Print the text contents\nprint(___)",
            "correct_answer": "soup.text",
            "duration": 20
        },
        {
            "question_id": 275,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print out the factorial of a number.",
            "question": "def factorial(x):\n    factorial = 1\n    while x > 1:\n        factorial = factorial * x\n        x = x - 1\n    return factorial\n\nnumber = 7\nresult = factorial(number)\nprint(___)",
            "correct_answer": "result",
            "duration": 20
        },
        {
            "question_id": 285,
            "material": "Introduction Python",
            "instruction": "Construct a for loop in Python to print all the values from a list of numbers.",
            "question": "for x in mylist: \n  print(___)",
            "correct_answer": "x",
            "duration": 20
        },
        {
            "question_id": 317,
            "material": "Introduction Python",
            "instruction": "Write a Python program to divide two numbers and print the quotient and the remainder.",
            "question": "def divide(num1, num2):\n    quotient = num1 // num2\n    remainder = num1 % num2\n    return quotient, remainder\n\nquotient, remainder = divide(15, 4)\nprint(___)\nprint(\"Remainder :\", remainder)",
            "correct_answer": "\"Quotient :\", quotient",
            "duration": 20
        },
        {
            "question_id": 318,
            "material": "Introduction Python",
            "instruction": "Develop a program to print all unique strings from a given array of strings",
            "question": "def unique_strings(strings):\n    unique_strings = []\n    for string in strings:\n        if string not in unique_strings:\n            unique_strings.append(string)\n    return unique_strings\n\nstrings = [\"Hello\", \"World\", \"Hello\", \"Python\"]\nresult = unique_strings(strings)\nprint(___)",
            "correct_answer": "result",
            "duration": 20
        },
        {
            "question_id": 329,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the following string pattern.",
            "question": "for i in range(3):\n    for j in range(3):\n        if (i == j) or (i + j == 2):\n            print(___)\n        else:\n            print('_', end=\"\")\n    print()",
            "correct_answer": "'*', end=\"\"",
            "duration": 20
        },
        {
            "question_id": 335,
            "material": "Introduction Python",
            "instruction": "Create a Python program to search a string and print the index of all instances of a specific character.",
            "question": "def search_character(string, character):\n indices = []\n for i in range(len(string)):\n  if string[i] == character:\n   indices.append(i)\n return indices\n\nprint(___)) # [3]",
            "correct_answer": "search_character(string, character",
            "duration": 20
        },
        {
            "question_id": 345,
            "material": "Introduction Python",
            "instruction": "Develop a Python code to print a string in reverse order.",
            "question": "str = \"Hello, World!\"\n\n# loop to iterate through string\nfor i in range(len(str)-1, -1, -1):\n  print(___)\n\nprint()",
            "correct_answer": "str[i],end=\"\"",
            "duration": 20
        },
        {
            "question_id": 350,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print all combinations of three numbers from the given list.",
            "question": "import itertools \n  \n# initializing list \nnum_list = [1, 2, 3, 4] \n  \n# printing all possible combinations \nresult = itertools.combinations(num_list, 3) \n  \n# printing the result \nprint(___) \nfor item in result: \n    print(item)",
            "correct_answer": "\"All possible combinations are : \"",
            "duration": 20
        },
        {
            "question_id": 354,
            "material": "Introduction Python",
            "instruction": "Write a Python program to accept a string input from the user and print each character in a list.",
            "question": "user_input = input(\"Enter a string: \")\n\nchar_list = []\n\nfor char in user_input:\n char_list.append(char)\n\nprint(___)",
            "correct_answer": "char_list",
            "duration": 20
        },
        {
            "question_id": 359,
            "material": "Introduction Python",
            "instruction": "Write a Python snippet to print the difference between the largest and smallest values in a given array.",
            "question": "def diff_max_min(numbers):\n    return max(numbers) - min(numbers)\n  \nif __name__ == '__main__':\n    nums = [1,2,3,4,5]\n    diff = diff_max_min(nums)\n    print(___)",
            "correct_answer": "diff",
            "duration": 20
        },
        {
            "question_id": 361,
            "material": "Introduction Python",
            "instruction": "Generate code in Python to accept student information like name, age, course and print it.",
            "question": "name = \"John Doe\"\nage = 23\ncourse = \"Data Science\"\n\nprint(___)\nprint(\"Age: \" + str(age))\nprint(\"Course: \" + course)",
            "correct_answer": "\"Name: \" + name",
            "duration": 20
        },
        {
            "question_id": 367,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print even numbers from 0 to the number provided",
            "question": "def print_even_numbers(N):\n    for x in range(0, N+1):\n        if x%2 == 0:\n            print(___)",
            "correct_answer": "x",
            "duration": 20
        },
        {
            "question_id": 373,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print a Fibonacci sequence with a length of n, where n is a given number that is equal to or greater than 0.",
            "question": "def fibonacci(n):\n # Base Case\n if n == 0: \n return []\n elif n == 1: \n return [0] \n\n # Recursive Case\n else: \n l = fibonacci(n-1) \n l.append(l[-1]+l[-2]) \n return l\n\n# Driver Program \nn = 5\nprint(___)) \n# Output: [0, 1, 1, 2, 3]",
            "correct_answer": "fibonacci(n",
            "duration": 20
        },
        {
            "question_id": 377,
            "material": "Introduction Python",
            "instruction": "Convert the following code from Java to Python:\n\npublic class HelloWorld {\n public static void main(String[] args) {\n System.out.println(\"Hello World\");\n }\n}",
            "question": "def main():\n print(___)\n\nif __name__ == \"__main__\":\n main()",
            "correct_answer": "\"Hello World\"",
            "duration": 20
        },
        {
            "question_id": 420,
            "material": "Introduction Python",
            "instruction": "Given a number, write a Python program to print the multiplication table of that number.",
            "question": "for i in range(1, 11):\n print(___)",
            "correct_answer": "5, 'X', i, '=', 5*i",
            "duration": 20
        },
        {
            "question_id": 445,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print a given dictionary where the keys are numbers between 1 and 3 and the values are a list from 1 to the number key.",
            "question": "d = {1: [1], 2: [1,2], 3: [1,2,3]}\nfor k,v in d.items():\n    print(___)",
            "correct_answer": "k,v",
            "duration": 20
        },
        {
            "question_id": 464,
            "material": "Introduction Python",
            "instruction": "Write Python code to print the number present in an inputted string.",
            "question": "def print_numbers_in_string(string):\n    numbers = [int(s) for s in string.split() if s.isdigit()]\n    print(___)\n\nstring_1 = \"The temperature is 24 degrees Celsius\"\nprint_numbers_in_string(string_1)\n\n# Output\n# [24]",
            "correct_answer": "numbers",
            "duration": 20
        },
        {
            "question_id": 466,
            "material": "Introduction Python",
            "instruction": "Create a program in Python to print all elements of a given set.",
            "question": "my_set = {10, 20, 30}\nfor i in my_set:\n    print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 470,
            "material": "Introduction Python",
            "instruction": "Create a Python program for calculating the Fibonacci sequence. The program should print the n-th number of the sequence.",
            "question": "def fibonacci(n): \n if n <= 0: \n return 0 \n elif n == 1: \n return 1 \n else: \n return fibonacci(n-1) + fibonacci(n-2) \n\nn = 7 \nprint(___)) # Output: 13",
            "correct_answer": "fibonacci(n",
            "duration": 20
        },
        {
            "question_id": 496,
            "material": "Introduction Python",
            "instruction": "Generate a Python source code to print the last element from a given list.",
            "question": "arr = ['Apple', 'Orange', 'Banana']\nlast_element = arr[-1]\nprint(___)  # Result: Banana",
            "correct_answer": "last_element",
            "duration": 20
        },
        {
            "question_id": 504,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print out the restults of a list of functions",
            "question": "def print_results(functions, list): \n  for func in functions: \n    print(___)))\n    \nprint_results(functions, list)",
            "correct_answer": "func.__name__ + \": \" + str(func(list",
            "duration": 20
        },
        {
            "question_id": 526,
            "material": "Introduction Python",
            "instruction": "Given a Python dictionary, find the most common value in the dictionary and print it out.",
            "question": "from collections import Counter \n\nd = {\u2018python\u2019: 20, \u2018java\u2019: 10, \u2018c++\u2019: 15, \u2018C#\u2019: 15}\n\n#Get most common value\ndata = Counter(d) \nmost_common_value = data.most_common(1)[0][0]  \n\n#Print out most common value\nprint(___)",
            "correct_answer": "most_common_value",
            "duration": 20
        },
        {
            "question_id": 530,
            "material": "Introduction Python",
            "instruction": "Write a Python program to compare two lists of strings and print unique values in each list.",
            "question": "list1_unique = []\nlist2_unique = []\n\nfor a in list1:\n    if a not in list2:\n        list1_unique.append(a)\n        \nfor b in list2:\n    if b not in list1:\n        list2_unique.append(b)\n\nprint(___)\nprint(\"Unique elements in List 2: \", list2_unique)",
            "correct_answer": "\"Unique elements in List 1: \", list1_unique",
            "duration": 20
        },
        {
            "question_id": 543,
            "material": "Introduction Python",
            "instruction": "Create a function in Python to print a dictionary in a formatted way",
            "question": "def print_dict(d):\n    for key, value in d.items():\n        print(___)\n\nprint_dict(d)\n\n# Output: \nName: Donald Trump\nAge: 70\nProfession: President",
            "correct_answer": "f\"{key}: {value}\"",
            "duration": 20
        },
        {
            "question_id": 556,
            "material": "Introduction Python",
            "instruction": "Compose a Python program to print the first hundred odd numbers.",
            "question": "# declaring an empty list\nodds = []\n\n# looping for a range of 1 to 100\nfor n in range(1,101):\n# check if the number is odd\n if n % 2 != 0:\n  # add the odd numbers to the list\n  odds.append(n)\n\n# print the list\nprint(___)",
            "correct_answer": "odds",
            "duration": 20
        },
        {
            "question_id": 599,
            "material": "Introduction Python",
            "instruction": "Create a for-loop in Python to print a list of strings that contain only the vowels from a given list of strings.",
            "question": "for word in words:\n    vowels = \"\"\n    for x in word:\n        if x in ('a', 'e', 'i', 'o', 'u'):\n            vowels += x\n    print(___)",
            "correct_answer": "vowels",
            "duration": 20
        },
        {
            "question_id": 629,
            "material": "Introduction Python",
            "instruction": "Given a list of integers, write a Python program to print the latest 3 largest numbers.",
            "question": "def print_largest_three_numbers(numbers): \n    numbers.sort(reverse=True) \n    print(___) \n\nprint_largest_three_numbers([5, 1, 10, 25, 74, 17, 2])\n\nOutput:\n74, 25, 17",
            "correct_answer": "*numbers[:3], sep = \", \"",
            "duration": 20
        },
        {
            "question_id": 650,
            "material": "Introduction Python",
            "instruction": "Optimize an existing Python code snippet to print all even numbers between 1 and 10.",
            "question": "num = 0\nwhile num<=10:\n    if num % 2 == 0:\n        print(___)\n    num+=1",
            "correct_answer": "num",
            "duration": 20
        },
        {
            "question_id": 657,
            "material": "Introduction Python",
            "instruction": "Write a for loop to print all the keys and values of a Python dictionary.",
            "question": "for key,value in my_dict.items(): \n    print(___)",
            "correct_answer": "key,\" :\",value",
            "duration": 20
        },
        {
            "question_id": 671,
            "material": "Introduction Python",
            "instruction": "Create a function in Python to print Pascal's Triangle of a given number of rows.",
            "question": "def pascal_triangle(n):\n    triangle = []\n\n    for i in range(n):\n        row = [1] * (i+1)\n        triangle.append(row)\n\n        for j in range(1,i):\n            row[j] = triangle[i-1][j-1] + triangle[i-1][j]\n\n    for row in triangle:\n        print(___)\n\npascal_triangle(6) \n# Output: [1]\n# [1, 1]\n# [1, 2, 1]\n# [1, 3, 3, 1]\n# [1, 4, 6, 4, 1]\n# [1, 5, 10, 10, 5, 1]",
            "correct_answer": "row",
            "duration": 20
        },
        {
            "question_id": 777,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print out the triangle pattern given an height n as input.",
            "question": "def print_triangle(n): \n\n    for i in range(n): \n        for j in range(i+1): \n            print(___) \n        print() \n  \nn = 4\nprint_triangle(n)\n\n# Output\n# *\n# **\n# ***\n# ****",
            "correct_answer": "\"*\",end=\"\"",
            "duration": 20
        },
        {
            "question_id": 783,
            "material": "Introduction Python",
            "instruction": "Create a Python program to sort and print out the elements of an array of integers.",
            "question": "arr = [17, 41, 5, 22, 54, 6, 29, 3, 13]\n\narr.sort()\n\nprint(___)\n\n# Output: [3, 5, 6, 13, 17, 22, 29, 41, 54]",
            "correct_answer": "arr",
            "duration": 20
        },
        {
            "question_id": 813,
            "material": "Introduction Python",
            "instruction": "Create a program in Python to compute and print the factorial of a given number.",
            "question": "def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nnum = 5\n\nprint(___))",
            "correct_answer": "\"The factorial of\", num, \"is\", factorial(num",
            "duration": 20
        },
        {
            "question_id": 827,
            "material": "Introduction Python",
            "instruction": "Develop a python code to print a dictionary\u2019s key-value pairs in sorted order of keys.",
            "question": "my_dict = {'a': 5, 'c': 10, 'b': 4}\n\nfor key in sorted(my_dict):\n    print(___)\n\n# Output:\n# a 5\n# b 4\n# c 10",
            "correct_answer": "key, my_dict[key]",
            "duration": 20
        },
        {
            "question_id": 859,
            "material": "Introduction Python",
            "instruction": "Create a python script to print the following output with the help of list and dictionary.",
            "question": "name = {\n    \"Harry\"\n}\nage = {\n    23\n}\ncountry = {\n    \"India\"\n}\n\ndata_list = [name, age, country]\n\nfor item in data_list:\n    print(___)",
            "correct_answer": "item",
            "duration": 20
        },
        {
            "question_id": 877,
            "material": "Introduction Python",
            "instruction": "Create a script in Python to print the squares of all numbers in the given list.",
            "question": "for n in [1, 2, 3, 4, 5]:\n print(___)",
            "correct_answer": "n**2",
            "duration": 20
        },
        {
            "question_id": 886,
            "material": "Introduction Python",
            "instruction": "Write a Python program to calculate the sum of two numbers (input in separate lines) and print it.",
            "question": "num1 = int(input())\nnum2 = int(input())\nsum_of_nums\nprint(___)",
            "correct_answer": "sum_of_nums",
            "duration": 20
        },
        {
            "question_id": 894,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print a calendar of the given month and year",
            "question": "import calendar\n\nc = calendar.TextCalendar(calendar.SUNDAY)\nstr = c.formatmonth(year, month)\nprint(___)",
            "correct_answer": "str",
            "duration": 20
        },
        {
            "question_id": 930,
            "material": "Introduction Python",
            "instruction": "Embed a mathematical expression in Python and print the expression.",
            "question": "expression = 'x**3 + 2*x**2 + 3'\n\nprint(___))",
            "correct_answer": "eval(expression",
            "duration": 20
        },
        {
            "question_id": 933,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the largest number from a given list.",
            "question": "my_list = [1, 5, 10, 20, 8]\n\nlargest = max(my_list)\nprint(___))",
            "correct_answer": "\"The largest number from the given list is: \" + str(largest",
            "duration": 20
        },
        {
            "question_id": 950,
            "material": "Introduction Python",
            "instruction": "Develop a Python code to print the pairs of the numbers in the given list which adds up to the given target number.",
            "question": "def pairs_adding_to_target(nums, target): \n \n\tresult = [] \n\tfor i in range(0, len(nums)): \n\t\tfor j in range(i+1, len(nums))\t: \n\t\t\tif nums[i] + nums[j] == target:\t \n\t\t\t\tresult.append([nums[i], nums[j]]) \n\treturn result \n\nresult = pairs_adding_to_target([1, 5, 9, 4], 10)\nprint(___)",
            "correct_answer": "result",
            "duration": 20
        },
        {
            "question_id": 1000,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print a frequency table for the given data.",
            "question": "from collections import Counter\n\ndata = [2, 4, 7, 1, 6, 4, 7, 2, 6, 3]\n\ncounts = Counter(data)\n\nfor item, count in counts.items():\n    print(___)\n\n# Output\n# 2 : 2\n# 4 : 2\n# 7 : 2\n# 1 : 1\n# 6 : 2\n# 3 : 1",
            "correct_answer": "f'{item} : {count}'",
            "duration": 20
        },
        {
            "question_id": 1023,
            "material": "Introduction Python",
            "instruction": "Using the data provided, write a Python program to find and print the root of the quadratic equation ax2 + bx + c = 0",
            "question": "import math\n\na = 1\nb = 5\nc = 6\n\n# calculate the discriminant\nd = (b**2) - (4*a*c)\n\n# find the two solutions \nsol1 = (-b-math.sqrt(d))/(2*a)\nsol2 = (-b+math.sqrt(d))/(2*a)\n\nprint(___))",
            "correct_answer": "'The solutions are {0} and {1}'.format(sol1, sol2",
            "duration": 20
        },
        {
            "question_id": 1058,
            "material": "Introduction Python",
            "instruction": "Modify the following Python code to select and print out the negative elements from an array.",
            "question": "my_list = [3,4,1,-6,9,10,-2,-8,-4]\n\ndef select_negative_elements(my_list):\n    negative_elements = []\n\n    for x in my_list:\n        if x < 0:\n            negative_elements.append(x)\n\n    return negative_elements\n\nprint(___))",
            "correct_answer": "select_negative_elements(my_list",
            "duration": 20
        },
        {
            "question_id": 1065,
            "material": "Introduction Python",
            "instruction": "Implement a basic linear search algorithm in Python that searches a list of numbers for a given target value and returns the index of the target value if it is present, otherwise it returns -1.",
            "question": "def linear_search(arr, target):\n for i in range(len(arr)):\n if arr[i] == target:\n return i\n return -1\n\nprint(___)) # 3 (index of 6)",
            "correct_answer": "linear_search(arr, target",
            "duration": 20
        },
        {
            "question_id": 1067,
            "material": "Introduction Python",
            "instruction": "Add code in python to the given argument to iterate over a list of numbers and print the even numbers.",
            "question": "# Iterate over numbers\nfor num in [1,2,3,4,5]:\n  # Check for even\n  if(num % 2 == 0):\n    # Print the even numbers\n    print(___)",
            "correct_answer": "num",
            "duration": 20
        },
        {
            "question_id": 1068,
            "material": "Introduction Python",
            "instruction": "Generate a valid Python code that will print the given message",
            "question": "print(___)",
            "correct_answer": "\"Hello World!\"",
            "duration": 20
        },
        {
            "question_id": 1077,
            "material": "Introduction Python",
            "instruction": "Write a Python function to print prime numbers between two given numbers.",
            "question": "def print_prime_numbers_between_two_numbers(low, high): \n    for numb in range(low,high + 1): \n        if numb > 1: \n            for i in range(2,numb): \n                if (numb % i) == 0: \n                    break\n            else: \n                print(___) \n\n#calling the function\nprint_prime_numbers_between_two_numbers(5, 10)",
            "correct_answer": "numb",
            "duration": 20
        },
        {
            "question_id": 1088,
            "material": "Introduction Python",
            "instruction": "Create a Python program to print out the prime numbers between the given input range.",
            "question": "def print_primes(min, max):\n  for num in range(min, max+1):\n    if num > 1:\n      for i in range(2, num):\n        if (num % i) == 0:\n          break\n      else:\n        print(___)\n  \n# Driver Code\nmin = 1\nmax = 10\n\nprint_primes(min, max)\n\n# Output:\n# 2\n# 3\n# 5\n# 7",
            "correct_answer": "num",
            "duration": 20
        },
        {
            "question_id": 1133,
            "material": "Introduction Python",
            "instruction": "Construct a for loop in Python to print the characters in a string.",
            "question": "for char in \"Hello World\":\n    print(___)",
            "correct_answer": "char",
            "duration": 20
        },
        {
            "question_id": 1151,
            "material": "Introduction Python",
            "instruction": "Write a python program to print the elements in a list which are not repeated more than once.",
            "question": "result = []\nfor ele in list:\n    if list.count(ele) == 1:\n        result.append(ele)\nprint(___) # Output: [1, 4]",
            "correct_answer": "result",
            "duration": 20
        },
        {
            "question_id": 1181,
            "material": "Introduction Python",
            "instruction": "Create a for loop statement in Python to iterate over a list and print the each item in the list.",
            "question": "for i in [1,2,3,4,5]:\n    print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 1201,
            "material": "Introduction Python",
            "instruction": "Write a Python script to print the size and color of shoes in a list.",
            "question": "def print_size_color(shoes):\n    for size, color in shoes:\n        print(___)\n\nprint_size_color(shoes)",
            "correct_answer": "'size:', size, 'color:', color",
            "duration": 20
        },
        {
            "question_id": 1231,
            "material": "Introduction Python",
            "instruction": "Given a string, write a python program to print the next largest palindrome.",
            "question": "def next_largest_palindrome(num):\n    # convert string to a number\n    num = int(num)\n    # increment number by 1\n    num += 1\n    while not is_palindrome(str(num)):\n        # increment number by 1\n        num += 1\n\n    return num\n\ndef is_palindrome(num):\n    return num == num[::-1]\n\nprint(___))\n\n# Output: 1331",
            "correct_answer": "next_largest_palindrome(\"1234\"",
            "duration": 20
        },
        {
            "question_id": 1242,
            "material": "Introduction Python",
            "instruction": "Write a code in Python to print the following string:",
            "question": "print(___)",
            "correct_answer": "\"Welcome to the amazing world of programming!\"",
            "duration": 20
        },
        {
            "question_id": 1244,
            "material": "Introduction Python",
            "instruction": "Create a Python program to print out the given string in all uppercase.",
            "question": "string = \"This is a test string\"\n\nprint(___))",
            "correct_answer": "string.upper(",
            "duration": 20
        },
        {
            "question_id": 1260,
            "material": "Introduction Python",
            "instruction": "Create a program in Python to generate and print all possible permutations of a given set of characters.",
            "question": "import itertools\n \ndef permutations(characters):\n permut = itertools.permutations(characters)\n\n for p in list(permut): \n print(___))\n\n# Usage\ncharacters = ['A', 'B', 'C']\npermutations(characters)\n\n# Output\nABC\nACB\nBAC\nBCA\nCAB\nCBA",
            "correct_answer": "\"\".join(p",
            "duration": 20
        },
        {
            "question_id": 1266,
            "material": "Introduction Python",
            "instruction": "Upload a python program on GitHub which will print the total number of vowels in a given string.",
            "question": "import re\n\ndef count_vowels(string):\n    vowels = re.findall(r'[aeiou]', string, re.I)\n    return len(vowels)\n\nif __name__ == '__main__':\n    string = \"Hello World!\"\n    print(___))",
            "correct_answer": "\"Number of vowels in the given string:\", count_vowels(string",
            "duration": 20
        },
        {
            "question_id": 1268,
            "material": "Introduction Python",
            "instruction": "Can you provide a Python script to print the largest and smallest number from a given list?",
            "question": "def largest_smallest(arr):\n    max_num = arr[0]\n    min_num = arr[0]\n\n    for i in arr:\n        if i > max_num:\n            max_num = i\n        if i < min_num:\n            min_num = i\n\n    print(___)",
            "correct_answer": "\"The largest number is\", max_num, \"and the smallest number is\", min_num",
            "duration": 20
        },
        {
            "question_id": 1342,
            "material": "Introduction Python",
            "instruction": "Edit the following Python program to print out the key-value pair of a dictionary.",
            "question": "d = {'Name': 'John', 'Age': 30, 'City': 'New York'}\n \nfor key, value in d.items():\n    print(___)",
            "correct_answer": "f'{key}: {value}'",
            "duration": 20
        },
        {
            "question_id": 1347,
            "material": "Introduction Python",
            "instruction": "Edit the following line of code in Python to print out the result.",
            "question": "print(___))",
            "correct_answer": "3 + (5 * 2",
            "duration": 20
        },
        {
            "question_id": 1364,
            "material": "Introduction Python",
            "instruction": "Create a for loop in python to print all the items in the given list.",
            "question": "for item in List:\n    print(___)",
            "correct_answer": "item",
            "duration": 20
        },
        {
            "question_id": 1394,
            "material": "Introduction Python",
            "instruction": "Create a Python program to parse a CSV string and print each row in a readable format.",
            "question": "import csv \n  \ncsvString = \"John Doe, 22, ABC Street, 07777\\nMary Smith, 26, XYZ Street, 02222\"\n  \n# Convert CSV String to List\ncsvList = csvString.split('\\n')\n  \n# Print each Row of CSV \nfor row in csvList: \n    print(___)",
            "correct_answer": "row",
            "duration": 20
        },
        {
            "question_id": 1396,
            "material": "Introduction Python",
            "instruction": "Create a program in Python which will print the names of the top 3 numbers in a given list.",
            "question": "\"\"\"\nPrint the names of the top 3 numbers in a given list \n\"\"\"\n \nmy_list = [1, 43, 124, 87, 92]\n\n# Sort the list\nmy_list.sort(reverse=True)\n\n# Print the top 3 numbers\nprint(___)\nprint(my_list[1], \"is the second biggest number\")\nprint(my_list[2], \"is the third biggest number\")",
            "correct_answer": "my_list[0], \"is the first biggest number\"",
            "duration": 20
        },
        {
            "question_id": 1429,
            "material": "Introduction Python",
            "instruction": "Make a function to print out all substrings of a given string in Python",
            "question": "def print_substrings(str):\n    for i in range(len(str)):\n        for j in range(i+1, len(str)+1):\n            print(___)\n\nif __name__ == \"__main__\":\n    str = \"coding\"\n    print_substrings(str)",
            "correct_answer": "str[i:j]",
            "duration": 20
        },
        {
            "question_id": 1451,
            "material": "Introduction Python",
            "instruction": "Create a simple Python program to calculate the sum of two numbers and print out the result.",
            "question": "num1 = 3\nnum2 = 5\n\nresult = num1 + num2\n\nprint(___)",
            "correct_answer": "f'The sum of {num1} and {num2} is {result}'",
            "duration": 20
        },
        {
            "question_id": 1462,
            "material": "Introduction Python",
            "instruction": "Change the following Python code to work with python 3 and print output \u201cMy name is Mary\u201d.",
            "question": "print(___)",
            "correct_answer": "'My name is Mary'",
            "duration": 20
        },
        {
            "question_id": 1463,
            "material": "Introduction Python",
            "instruction": "Generate Python code to print the first \u2018n\u2019 elements of the Fibonacci series.",
            "question": "def print_fibonacci_series(n):\n    a, b = 0, 1\n    for i in range(n):\n        print(___)\n        a, b = b, a + b\n\nprint_fibonacci_series(7)",
            "correct_answer": "a",
            "duration": 20
        },
        {
            "question_id": 1491,
            "material": "Introduction Python",
            "instruction": "Generate a Python program which reads a string as input and removes all vowels present in the string and print out the revised string.",
            "question": "def removeVowels(string): \n    vowels = ('a', 'e', 'i', 'o', 'u')  \n    revised_string = \"\"\n    for letter in string:\n        if letter.lower() not in vowels:\n            revised_string += letter \n    return revised_string\n    \nstring = \"apple\"\nreviseString = removeVowels(string)\nprint(___)",
            "correct_answer": "\"Revised string =\", reviseString",
            "duration": 20
        },
        {
            "question_id": 1495,
            "material": "Introduction Python",
            "instruction": "Create a basic Python program to classify a list of positive and negative integer numbers.",
            "question": "positive_numbers = []\nnegative_numbers = []\n\nfor num in numbers:\n if num > 0:\n  positive_numbers.append(num)\n else:\n  negative_numbers.append(num)\n\nprint(___)\nprint('Negative numbers:', negative_numbers)",
            "correct_answer": "'Positive numbers:', positive_numbers",
            "duration": 20
        },
        {
            "question_id": 1518,
            "material": "Introduction Python",
            "instruction": "Create a command-line program in Python which takes in three command-line arguments. The program should add the three arguments and print the result in the console.",
            "question": "import sys\n\nif __name__ == '__main__':\n args = sys.argv[1:]\n if len(args) != 3:\n print(___)\n else:\n result = int(args[0]) + int(args[1]) + int(args[2])\n print('Result: ' + str(result))",
            "correct_answer": "'Error: Not enough arguments provided'",
            "duration": 20
        },
        {
            "question_id": 1522,
            "material": "Introduction Python",
            "instruction": "Create a Python program to print an encrypted message using a given cipher key.",
            "question": "#Input\nmessage = \"hellohello\"\ncipher_key = 3\n\n#Solution\nalphabet = \"abcdefghijklmnopqrstuvwxyz\";\ncipher = alphabet[cipher_key:] + alphabet[:cipher_key]\n\nencoded_message = \"\"\nfor char in message:\n encoded_message += cipher[alphabet.find(char)]\n\nprint(___) # khoorkhoor",
            "correct_answer": "encoded_message",
            "duration": 20
        },
        {
            "question_id": 1529,
            "material": "Introduction Python",
            "instruction": "Write a Python program to take a list of words as input and print all of the words with at least 4 letters.",
            "question": "words = ['apple', 'cat', 'elephant', 'banana', 'dog']\n\nfiltered_words = []\n\nfor word in words:\n    if len(word) >= 4:\n        filtered_words.append(word)\n\nprint(___)",
            "correct_answer": "filtered_words",
            "duration": 20
        },
        {
            "question_id": 1531,
            "material": "Introduction Python",
            "instruction": "Create a Python Program to perform a linear search on given data and print the index of the found element.",
            "question": "def linear_search(data, target):\n    for i in range(len(data)):\n        if (data[i] == target):\n            return i\n    return -1\n\ndata = [7, 4, 3, 11, 9]\ntarget = 11\n\nindex = linear_search(data, target)\nif index != -1:\n    print(___)\nelse:\n    print(\"Element is not present in the given array\")",
            "correct_answer": "\"Element\", target, \"is present at index\", index",
            "duration": 20
        },
        {
            "question_id": 1558,
            "material": "Introduction Python",
            "instruction": "Create a Python program to print out the largest palindrome number from a list of numbers.",
            "question": "def is_palindrome(n):\n return str(n) == str(n)[::-1]\n\ndef largest_palindrome(nums):\n largest = 0\n for n in nums:\n if is_palindrome(n):\n largest = max(n, largest)\n return largest\n\nnums = [4, 12, 25, 98, 9989]\nlargest = largest_palindrome(nums)\nprint(___)",
            "correct_answer": "f'Largest palindrome from the list is {largest}'",
            "duration": 20
        },
        {
            "question_id": 1570,
            "material": "Introduction Python",
            "instruction": "Given a list of strings, write a Python code snippet to print all strings that begin with a letter 'a'.",
            "question": "for item in [\"apple\", \"banana\", \"orange\", \"avocado\"]:\n if item.startswith('a'):\n print(___)\n\n# Output:\napple\navocado",
            "correct_answer": "item",
            "duration": 20
        },
        {
            "question_id": 1585,
            "material": "Introduction Python",
            "instruction": "Edit the following python code to print all the elements of a list that are divisible by 7.",
            "question": "my_list = [14, 35, 42, 49, 56, 63, 70]\n\nfor element in my_list:\n if element % 7 == 0:\n print(___) \n  \n# Output:\n14\n \n42\n \n49\n \n56\n \n63\n \n70",
            "correct_answer": "element",
            "duration": 20
        },
        {
            "question_id": 1599,
            "material": "Introduction Python",
            "instruction": "Create a Python program to print a given string with each character's ASCII code.",
            "question": "def print_ascii(text):\n    '''This function will print a given string with each character's ASCII code.'''\n    for ch in text:\n        print(___)}')\n\nprint_ascii('Hello world!')\n\n# Output:\n# H : 72\n# e : 101\n# l : 108\n# l : 108\n# o : 111\n#  : 32\n# w : 119\n# o : 111\n# r : 114\n# l : 108\n# d : 100\n# ! : 33",
            "correct_answer": "f'{ch} : {ord(ch",
            "duration": 20
        },
        {
            "question_id": 1612,
            "material": "Introduction Python",
            "instruction": "Create a function in Python to find all elements in a list that are negative, and print them.",
            "question": "def find_negatives(l):\n  negative_numbers = []\n  for num in l:\n    if num < 0:\n      negative_numbers.append(num)\n  print(___)\n\nfind_negatives(list) # prints [-3, -9]",
            "correct_answer": "negative_numbers",
            "duration": 20
        },
        {
            "question_id": 1619,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the count of all even numbers in the given list.",
            "question": "my_list = [1, 2, 3, 4, 5, 6, 7, 8]\n\ncount = 0\nfor i in my_list:\n    if i % 2 == 0:\n        count += 1\n\nprint(___)",
            "correct_answer": "count",
            "duration": 20
        },
        {
            "question_id": 1636,
            "material": "Introduction Python",
            "instruction": "Edit the given Python code to print the multiplication table for given number.",
            "question": "number = 5\nfor i in range(1, 11): \n    print(___)",
            "correct_answer": "number, 'x', i, '=', number*i",
            "duration": 20
        },
        {
            "question_id": 1646,
            "material": "Introduction Python",
            "instruction": "Write a Python code to print the items in a dictionary in the order of their occurrence in the dictionary.",
            "question": "for key, value in d.items():\n    print(___)",
            "correct_answer": "key, value",
            "duration": 20
        },
        {
            "question_id": 1663,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print a Welcome message for the user.",
            "question": "print(___)",
            "correct_answer": "\"Welcome John!\"",
            "duration": 20
        },
        {
            "question_id": 1665,
            "material": "Introduction Python",
            "instruction": "Generate a program in Python to print the union of two given sets.",
            "question": "def union_sets(set1, set2):\n    return list(set(set1) | set(set2))\n\nset1 = [1, 2, 3]\nset2 = [2, 3, 4, 5]\n\nprint(___)",
            "correct_answer": "union_sets(set1, set2",
            "duration": 20
        },
        {
            "question_id": 1673,
            "material": "Introduction Python",
            "instruction": "Create a python program to accept two inputs from the user, a number and a string, and print the string the given number of times.",
            "question": "num = int(input(\"Enter a number: \"))\nstring = input(\"Enter a string: \")\n\nfor i in range(num):\n print(___)",
            "correct_answer": "string",
            "duration": 20
        },
        {
            "question_id": 1712,
            "material": "Introduction Python",
            "instruction": "Modify the provided Python program to print out the numbers from 1 to 10",
            "question": "for i in range(1, 11):\n    print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 1725,
            "material": "Introduction Python",
            "instruction": "Generate a Python function to print a pattern of stars",
            "question": "def starPattern(n):\n    # outer loop to handle number of rows\n    for i in range(0, n):\n        # inner loop to handle number of columns\n        for j in range(0, i + 1):\n            # printing stars\n            print(___)\n        # ending line after each row\n        print(\"\\r\")\n\n# Driver code\nn = 5\nstarPattern(n)",
            "correct_answer": "\"* \", end=\"\"",
            "duration": 20
        },
        {
            "question_id": 1746,
            "material": "Introduction Python",
            "instruction": "Create a basic Python script that converts all strings in a given dictionary to uppercase.",
            "question": "d = {\"name\": \"John\", \"age\": 45, \"location\": \"San Francisco\"}\nfor key in d:\n d[key] = str(d[key]).upper()\n\nprint(___)\n# Output: {\"name\": \"JOHN\", \"age\": 45, \"location\": \"SAN FRANCISCO\"}",
            "correct_answer": "d",
            "duration": 20
        },
        {
            "question_id": 1767,
            "material": "Introduction Python",
            "instruction": "Create a simple python script to parse a given JSON string and print all the keys and their corresponding values.",
            "question": "import json\n\njson_str = '{\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}'\njson_data = json.loads(json_str)\n\nfor key, value in json_data.items():\n    print(___))",
            "correct_answer": "'{}: {}'.format(key, value",
            "duration": 20
        },
        {
            "question_id": 1810,
            "material": "Introduction Python",
            "instruction": "Make a program in Python to print a staircase of height 'n', where n is an integer.",
            "question": "def staircase(n): \n    for i in range(0, n): \n        for j in range(0, n - i - 1): \n            print(___) \n        for j in range(0, i + 1): \n            print(\"#\", end=\"\") \n        print(\"\\r\") \n  \n# Driver code \nn = 5\nstaircase(n)",
            "correct_answer": "end=\" \"",
            "duration": 20
        },
        {
            "question_id": 1836,
            "material": "Introduction Python",
            "instruction": "Create a for-loop in Python to iterate over a list and print each element.",
            "question": "words = [\"these\", \"are\", \"some\", \"words\"]\nfor word in words:\n  print(___)",
            "correct_answer": "word",
            "duration": 20
        },
        {
            "question_id": 1843,
            "material": "Introduction Python",
            "instruction": "Utilize the Python in-built module to print the calendar for the given month.",
            "question": "# import the module\nimport calendar\n\n# print the calendar \nprint(___))",
            "correct_answer": "calendar.month(2021, 5",
            "duration": 20
        },
        {
            "question_id": 1864,
            "material": "Introduction Python",
            "instruction": "Use Python to calculate and print the sum of values in an array.",
            "question": "arr = [1,2,3,4,5] \nsum = 0\nfor i in arr: \n    sum+=i \n    print(___)\n\n# Output \n# 15",
            "correct_answer": "sum",
            "duration": 20
        },
        {
            "question_id": 1877,
            "material": "Introduction Python",
            "instruction": "Can you write a Python program to print out the elements in a given list with their frequency?",
            "question": "my_list = [1, 2, 3, 2, 4, 1, 1]\n\nfrequency_dict = {}\n\nfor num in my_list:\n    if num in frequency_dict:\n        frequency_dict[num] = frequency_dict[num] + 1\n    else:\n        frequency_dict[num] = 1\n\nfor num, freq in frequency_dict.items():\n    print(___))",
            "correct_answer": "\"{} : {}\".format(num, freq",
            "duration": 20
        },
        {
            "question_id": 1879,
            "material": "Introduction Python",
            "instruction": "Modify the following Python program to print the sum of all its elements.",
            "question": "# Given a list\n\nlist = [1, 2, 3, 4, 5]\n \n# Calculate sum\nsum_val = 0\nfor num in list:\n sum_val += num\n \n# Print the result\nprint(___) # returns 15",
            "correct_answer": "sum_val",
            "duration": 20
        },
        {
            "question_id": 1883,
            "material": "Introduction Python",
            "instruction": "Compose a Python method to print the flat list from a given 2D list.",
            "question": "def flat_list(lst): \n  flat_lst = [] \n  for sublist in lst: \n    if type(sublist) == int: \n      flat_lst.append(sublist) \n    else: \n      for ele in sublist: \n        flat_lst.append(ele) \n  return flat_lst \n\nresult = flat_list(test_list) \n  \nprint(___)",
            "correct_answer": "\"The flattened list is:\", result",
            "duration": 20
        },
        {
            "question_id": 1897,
            "material": "Introduction Python",
            "instruction": "Construct a Python program to take a list of numbers as input and print out the largest number in the list.",
            "question": "def largestNumber(list):\n  max = list[0]\n  for num in list:\n    if num > max:\n      max = num\n  return max\n\nlist = [5, 10, 2, 9, 6]\nprint(___)) # Output: 10",
            "correct_answer": "largestNumber(list",
            "duration": 20
        },
        {
            "question_id": 1913,
            "material": "Introduction Python",
            "instruction": "Create a function in Python to print all the prime numbers in an array.",
            "question": "def print_primes(arr):\n    for i in arr:\n        if i > 1:\n            for j in range(2,i):\n                if (i % j) == 0:\n                    break\n            else:\n                print(___)\n\nprint_primes(array)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 1925,
            "material": "Introduction Python",
            "instruction": "Generate a python statement to print a descriptive message about a given string.",
            "question": "print(___)}\")",
            "correct_answer": "f\"Given string is {string}, and its length is {len(string",
            "duration": 20
        },
        {
            "question_id": 1928,
            "material": "Introduction Python",
            "instruction": "Construct a for loop in Python to iterate over a list and print out each item in the list.",
            "question": "for element in myList: \n print(___)",
            "correct_answer": "element",
            "duration": 20
        },
        {
            "question_id": 1967,
            "material": "Introduction Python",
            "instruction": "Write a Python program to compare two lists and print out the one that is greater in length.",
            "question": "def compare_list_length(list1, list2):\n    if len(list1) > len(list2):\n        return list1\n    else:\n        return list2\n\nlist1 = [1, 2, 3, 4]\nlist2 = [3, 4]\nlonger_list = compare_list_length(list1, list2)\nprint(___) # Output: [1, 2, 3, 4]",
            "correct_answer": "longer_list",
            "duration": 20
        },
        {
            "question_id": 1982,
            "material": "Introduction Python",
            "instruction": "Extend the python code below to print \"hello world\" 5 times.",
            "question": "for i in range(5):\n    print(___)",
            "correct_answer": "\"hello world\"",
            "duration": 20
        },
        {
            "question_id": 1986,
            "material": "Introduction Python",
            "instruction": "Write a function in Python to print every other element in a list.",
            "question": "def print_every_other(lst):\n for i in range(0, len(lst), 2):\n print(___)",
            "correct_answer": "lst[i]",
            "duration": 20
        },
        {
            "question_id": 2009,
            "material": "Introduction Python",
            "instruction": "Edit the code below to print the output using the Python format() method.",
            "question": "number1 = 2\nnumber2 = 3\n\nprint(___))",
            "correct_answer": "'The sum of the numbers is {}'.format(number1 + number2",
            "duration": 20
        },
        {
            "question_id": 2012,
            "material": "Introduction Python",
            "instruction": "Use an if-else statement in Python to print a message depending on the value of a given integer.",
            "question": "if (x > 10) {\n    print(___)\n} else {\n    print('The number is less or equal than 10')\n}",
            "correct_answer": "'The number is greater than 10'",
            "duration": 20
        },
        {
            "question_id": 2030,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to iterate over a list of numbers and print out only the even numbers.",
            "question": "for num in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]:\n if num % 2 == 0:\n print(___)",
            "correct_answer": "num",
            "duration": 20
        },
        {
            "question_id": 2031,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to print the characters at even positions in a given string.",
            "question": "def even_positions(string):\n    result = \"\"\n    for i in range(0, len(string), 2):\n        result += string[i]\n    return result\n\nprint(___))",
            "correct_answer": "even_positions(\"Hello World!\"",
            "duration": 20
        },
        {
            "question_id": 2060,
            "material": "Introduction Python",
            "instruction": "Generate a Python function to print all the even numbers from 0 to a given number.",
            "question": "def print_even_numbers(n):\n    for i in range(0, n+1):\n        if i % 2 == 0:\n            print(___)\n\nprint_even_numbers(10)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 2063,
            "material": "Introduction Python",
            "instruction": "Design a Python script to print out a list of unique numbers from 0 to N.",
            "question": "numbers = [i for i in range(0, N+1)]\nunique_numbers = list(set(numbers))\n\nprint(___)",
            "correct_answer": "unique_numbers",
            "duration": 20
        },
        {
            "question_id": 2075,
            "material": "Introduction Python",
            "instruction": "Write a python program to print the items in the following dictionary",
            "question": "for key,val in dictionary.items():\n    print(___)",
            "correct_answer": "f\"{key}: {val}\"",
            "duration": 20
        },
        {
            "question_id": 2091,
            "material": "Introduction Python",
            "instruction": "Implement a function in Python to print all the uppercase letters from a given string.",
            "question": "def print_uppercase(s):\n    for c in s:\n        if c.isupper():\n            print(___)\n\nprint_uppercase(\"Hello World\")\n# Output:\n# H\n# W",
            "correct_answer": "c",
            "duration": 20
        },
        {
            "question_id": 2098,
            "material": "Introduction Python",
            "instruction": "Write a Python program to compare two strings and print the number of times the second string appears in the first string.",
            "question": "def count_word_occurrence(str1, str2):\n    count = 0\n    for word in str1.split():\n        if word == str2:\n            count += 1\n\n    return count\n\noccurrence = count_word_occurrence(\"The quick brown fox jumps over the lazy dog\", \"fox\")\nprint(___)",
            "correct_answer": "occurrence",
            "duration": 20
        },
        {
            "question_id": 2118,
            "material": "Introduction Python",
            "instruction": "Given a JSON object, write a python program to print the square of every value, only if the value is even.",
            "question": "import json\n\ndata = {\n \"a\": 1,\n \"b\": 2,\n \"c\": 3,\n \"d\": 4\n}\n\nfor key, value in data.items():\n if value % 2 == 0:\n print(___)",
            "correct_answer": "value**2",
            "duration": 20
        },
        {
            "question_id": 2126,
            "material": "Introduction Python",
            "instruction": "Construct a nested loop in Python to print out the following elements in a new line.",
            "question": "for x in [1,2,3]:\n  for y in [4,5,6]:\n      for z in [7,8,9]:\n          print(___)",
            "correct_answer": "x,y,z",
            "duration": 20
        },
        {
            "question_id": 2134,
            "material": "Introduction Python",
            "instruction": "Write a Python code snippet to print out the first ten entries in a given dictionnary.",
            "question": "for key, value in dict.items():\n    if key < 'k':\n        print(___)",
            "correct_answer": "key, value",
            "duration": 20
        },
        {
            "question_id": 2144,
            "material": "Introduction Python",
            "instruction": "Write a Python program to generate and print a random list of size n.",
            "question": "import random\n\ndef generate_random_list(n):\n    random_list = []\n    for i in range(n):\n        random_list.append(random.randint(0, 100))\n    return random_list\n\nn = 8\nrandom_list = generate_random_list(n)\nprint(___)",
            "correct_answer": "random_list",
            "duration": 20
        },
        {
            "question_id": 2159,
            "material": "Introduction Python",
            "instruction": "Given a number of queues, each containing numbers, write python code to find and print out the numbers at the front of each queue.",
            "question": "def print_front_elements_from_queues(queue_list):\n    for queue in queue_list:\n        print(___)\n\nqueue_list = [queue1, queue2]\n\nprint_front_elements_from_queues(queue_list) # This should print 5 and 7",
            "correct_answer": "queue[0]",
            "duration": 20
        },
        {
            "question_id": 2176,
            "material": "Introduction Python",
            "instruction": "Create a program in Python which will take in a sentence and print out each word in reverse.",
            "question": "string = 'This sentence will be reversed'\n\nwords = string.split()\n\nfor word in words:\n\tprint(___)\n\n# Output: sihT ecnetnes lliw eb desrever",
            "correct_answer": "word[::-1], end=\" \"",
            "duration": 20
        },
        {
            "question_id": 2193,
            "material": "Introduction Python",
            "instruction": "Can you make a Python program to print out the Fibonacci sequence up to the nth element of the sequence?",
            "question": "def Fibonacci(n):\n  a = 0\n  b = 1\n  if n < 0:\n    print(___)\n  elif n == 0:\n    return 0\n  elif n == 1:\n    return 1\n  else:\n    for i in range(2,n):\n      c = a + b\n      a = b\n      b = c\n    return b\n\nprint(Fibonacci(8)) # Output: 13",
            "correct_answer": "\"Incorrect input\"",
            "duration": 20
        },
        {
            "question_id": 2206,
            "material": "Introduction Python",
            "instruction": "Create a basic Python application to return the similarity between two strings using fuzzywuzzy.",
            "question": "# Import the necessary modules\nimport fuzzywuzzy \nfrom fuzzywuzzy import process\n\n# The two strings to compare \nstr1 = 'Apple'\nstr2 = 'Apples'\n\n# Compare the two strings\nscore = fuzzywuzzy.fuzz.ratio(str1, str2)\n\n# Print the similarity score\nprint(___)\n\n# Output \n100",
            "correct_answer": "score",
            "duration": 20
        },
        {
            "question_id": 2249,
            "material": "Introduction Python",
            "instruction": "Write a basic web scraper in Python using the BeautifulSoup library. The scraper should take as input a URL and output the text on the page.",
            "question": "import requests\nfrom bs4 import BeautifulSoup\n\nurl = \"https://en.wikipedia.org/wiki/Web_scraping\" \nresponse = requests.get(url)\nsoup = BeautifulSoup(response.text, 'html.parser')\n\ntext = soup.find_all('p')\nfor t in text:\n    print(___)",
            "correct_answer": "t.text",
            "duration": 20
        },
        {
            "question_id": 2277,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print out the Fibonacci series up to n numbers where n is a user input.",
            "question": "# Python Program to print the Fibonacci series up to n numbers\n\nn = int(input(\"Enter the value of 'n': \"))\n\n# first two numbers\na = 0\nb = 1\n\nprint(___) \nprint(a, b, end=\" \") \n  \nfor i in range(2,n):\n               \n    c = a + b\n    a = b\n    b = c\n    print(c, end = \" \")\n    \nprint()",
            "correct_answer": "\"Fibonacci Series:\"",
            "duration": 20
        },
        {
            "question_id": 2292,
            "material": "Introduction Python",
            "instruction": "Design a loop in a Python program to print the Fibonacci series up to the nth term.",
            "question": "def fibonacci(n): \n    a = 0\n    b = 1\n    if n < 0: \n        print(___) \n    elif n == 0: \n        return a \n    elif n == 1: \n        return b \n    else: \n        for i in range(2,n): \n            c = a + b \n            a = b \n            b = c \n        return b \nprint(fibonacci(n))",
            "correct_answer": "\"Incorrect input\"",
            "duration": 20
        },
        {
            "question_id": 2300,
            "material": "Introduction Python",
            "instruction": "Generate a piece of Python code to print the reversed version of a list.",
            "question": "print(___)))",
            "correct_answer": "list(reversed([1, 2, 3]",
            "duration": 20
        },
        {
            "question_id": 2317,
            "material": "Introduction Python",
            "instruction": "Write a python program to print the name and age of all customers in a list.",
            "question": "for customer in customers:\n  print(___)",
            "correct_answer": "f\"Name: {customer['name']}, Age: {customer['age']}\"",
            "duration": 20
        },
        {
            "question_id": 2336,
            "material": "Introduction Python",
            "instruction": "Design a Python program to print out all possible permutations of a 3 character string.",
            "question": "def permutation(str):\n    if len(str) == 0:\n        return []\n    if len(str) == 1:\n        return [str]\n    l = [] \n    for i in range(len(str)):\n       m = str[i] \n       remLst = permutation(str[:i] + str[i+1:])\n       for p in remLst:\n           l.append(m + p)\n    return l\n\nstring = 'ABC'\nl = permutation(string)\nfor s in l:\n    print(___)",
            "correct_answer": "s",
            "duration": 20
        },
        {
            "question_id": 2337,
            "material": "Introduction Python",
            "instruction": "Create a data structure to store and print all the codes for the top 10 programming languages.",
            "question": "codes = {\n    'C': 'c',\n    'C++': 'cpp',\n    'Python': 'py',\n    'Java': 'java',\n    'C#': 'cs',\n    'JavaScript': 'js',\n    'PHP': 'php',\n    'Rust': 'rs',\n    'Swift': 'swift',\n    'Go': 'go'\n}\n\nfor key, value in codes.items():\n    print(___))",
            "correct_answer": "'{}: {}'.format(key, value",
            "duration": 20
        },
        {
            "question_id": 2344,
            "material": "Introduction Python",
            "instruction": "Write a function in Python to print the Fibonacci sequence up to the nth term.",
            "question": "def fibonacci(n): \n    a = 0\n    b = 1\n    if n < 0: \n        print(___) \n    elif n == 0: \n        return a \n    elif n == 1: \n        return b \n    else: \n        for i in range(2,n): \n            c = a + b \n            a = b \n            b = c \n        return b \n    \nprint(\"Fibonacci sequence:\")\nfor i in range(n):\n    print(fibonacci(i))",
            "correct_answer": "\"Incorrect input\"",
            "duration": 20
        },
        {
            "question_id": 2377,
            "material": "Introduction Python",
            "instruction": "Create a program in Python that takes a word as an argument and print it in reverse.",
            "question": "def reverse(word):\n    return word[::-1]\n\nprint(___))",
            "correct_answer": "reverse('Hello World'",
            "duration": 20
        },
        {
            "question_id": 2432,
            "material": "Introduction Python",
            "instruction": "Create a Python script to print the absolute difference between two given numbers.",
            "question": "def absolute_difference(A, B): \n    return abs(A - B) \n  \n# Driver Code \nA = 9\nB = 5\nprint(___))",
            "correct_answer": "absolute_difference(A, B",
            "duration": 20
        },
        {
            "question_id": 2468,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the day of week for a specific date.",
            "question": "import datetime\n\ndate_str = \"21 October 2020\"\ndate = datetime.datetime.strptime(date_str, \"%d %B %Y\")\nprint(___))",
            "correct_answer": "date.strftime(\"%A\"",
            "duration": 20
        },
        {
            "question_id": 2470,
            "material": "Introduction Python",
            "instruction": "Construct a python program to print out the number of distinct elements in a string.",
            "question": "def count_unique(s):\n    seen = set()\n    count = 0\n    \n    for character in s:\n        if character not in seen:\n            seen.add(character)\n            count += 1\n            \n    return count\n\nprint(___))",
            "correct_answer": "count_unique(\"hello world!\"",
            "duration": 20
        },
        {
            "question_id": 2474,
            "material": "Introduction Python",
            "instruction": "Write a Python program to loop through a list and print each element of the list.",
            "question": "for x in [1, 2, 3, 4]:\n    print(___)",
            "correct_answer": "x",
            "duration": 20
        },
        {
            "question_id": 2503,
            "material": "Introduction Python",
            "instruction": "Create a Python script to loop over a list of numbers and print out each value if it is greater than five.",
            "question": "def loop_list(list):\n    for i in list:\n        if i > 5:\n            print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 2515,
            "material": "Introduction Python",
            "instruction": "Design a Python program to solve the following problem: Given two strings of equal length, print the number of differences.",
            "question": "def diff_characters(str1, str2):\n diff_count = 0\n\n for i in range(len(str1)):\n     if str1[i] != str2[i]:\n         diff_count += 1\n\n return diff_count\n\nstr1 = \"abcd\"\nstr2 = \"abcx\"\n\nprint(___))\n\n# Output: 1",
            "correct_answer": "diff_characters(str1, str2",
            "duration": 20
        },
        {
            "question_id": 2525,
            "material": "Introduction Python",
            "instruction": "Given the following input JSON data, write a Python program to print out all the elements that have an even length.",
            "question": "import json\n\ndata = '{\"apple\":[\"red\",\"green\"],\"pear\":[\"green\"],\"grapes\":[\"green\",\"red\"],\"banana\":[\"yellow\"]}'\n\njson_data = json.loads(data)\n\nfor item in json_data.items():\n    if len(item[1]) % 2 == 0:\n        print(___)",
            "correct_answer": "item[0]",
            "duration": 20
        },
        {
            "question_id": 2568,
            "material": "Introduction Python",
            "instruction": "Develop a Python program to find and print the first non-repeating character from a given string.",
            "question": "def non_repeating_character(string):\n    for c in string:\n        if string.count(c) == 1:\n            return c\n    return 'No result'\n\nprint(___))",
            "correct_answer": "non_repeating_character('Hello, world!'",
            "duration": 20
        },
        {
            "question_id": 2574,
            "material": "Introduction Python",
            "instruction": "Generate a code in Python to print the length of the given string.",
            "question": "string = 'Hello world'\n\n# print the length of string\nprint(___))",
            "correct_answer": "len(string",
            "duration": 20
        },
        {
            "question_id": 2589,
            "material": "Introduction Python",
            "instruction": "Create a basic web scraper in Python to parse HTML.",
            "question": "#import library\nimport bs4\n\n#store HTML data\nhtml_data = '<p>This is some text</p><a href='www.example.com/'>Click Here</a>'\n\n#parse HTML data\nsoup = bs4.BeautifulSoup(html_data, 'html.parser')\n\n#get all tags\nall_tags = soup.find_all()\n\n#print result\nfor tag in all_tags:\n print(___)",
            "correct_answer": "tag",
            "duration": 20
        },
        {
            "question_id": 2607,
            "material": "Introduction Python",
            "instruction": "Create an optimized Python program to print all prime numbers in a given range.",
            "question": "def is_prime(n):\n    if n <= 1:\n        return False\n  \n    for i in range(2, n):\n        if n % i == 0:\n            return False\n  \n    return True\n \nstart = 4\nend = 15\n \nfor num in range(start, end+1):\n   if is_prime(num):\n       print(___)",
            "correct_answer": "num",
            "duration": 20
        },
        {
            "question_id": 2620,
            "material": "Introduction Python",
            "instruction": "Create an algorithm in Python to print the binary representation of a given number.",
            "question": "def binary_rep(num):\n    binary_string = \"\"\n    while num>0:\n        remainder = num%2\n        binary_string = str(remainder) + binary_string\n        num = num//2\n\n    print(___)\n\nbinary_rep(23) # prints 10111",
            "correct_answer": "binary_string",
            "duration": 20
        },
        {
            "question_id": 2622,
            "material": "Introduction Python",
            "instruction": "Edit the following Python code to print \"Hello World\" in a loop 10 times.",
            "question": "for i in range(10):\n    print(___)",
            "correct_answer": "\"Hello World\"",
            "duration": 20
        },
        {
            "question_id": 2628,
            "material": "Introduction Python",
            "instruction": "Create a basic script in Python that can automatically sort a list of items by price.",
            "question": "items.sort(key=lambda x: x['price'])\n\nprint(___)\n# Output:\n[{'name': 'Sprite', 'price': 1.99},\n{'name': 'Pepsi', 'price': 2.99},\n{'name': 'Coca Cola', 'price': 3.99}]",
            "correct_answer": "items",
            "duration": 20
        },
        {
            "question_id": 2648,
            "material": "Introduction Python",
            "instruction": "Create a Python program to search through a list of names and print out any names that contain the letter 'a'.",
            "question": "names = [\"John\", \"Paul\", \"George\", \"Ringo\", \"Adam\", \"Peter\", \"Alice\", \"Karen\", \"Jerry\"]\n\nfor name in names:\n if 'a' in name:\n print(___)\n\n# Output\nAdam\nAlice\nKaren",
            "correct_answer": "name",
            "duration": 20
        },
        {
            "question_id": 2678,
            "material": "Introduction Python",
            "instruction": "Write a Python program to parse a JSON data and print the values.",
            "question": "\"\"\"\nWrite a Python program to parse a JSON data and print the values\n\"\"\"\n\nimport json\n\n# Load the input data as a json string\ndata = '{\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}'\n\n# Parse the json string into a dictionary\nparsed_data = json.loads(data)\n\n# Print out the values\nfor key, value in parsed_data.items():\n    print(___)",
            "correct_answer": "f'{key}: {value}'",
            "duration": 20
        },
        {
            "question_id": 2688,
            "material": "Introduction Python",
            "instruction": "Implement a Python parser to print return a list of words from a given string.",
            "question": "def parse_words(string):\n    words = []\n\n    for word in string.split(\" \"):\n        words.append(word.strip(\"!,.? \\n\\t\\r\\\"\\'-\"))\n    return words\n\nresult = parse_words(\"Hello, World!\")\nprint(___)\n##\nOutput: ['Hello', 'World']",
            "correct_answer": "result",
            "duration": 20
        },
        {
            "question_id": 2693,
            "material": "Introduction Python",
            "instruction": "Create an algorithm in Python to print the numbers from 1 to n in increasing order, except for any numbers which are divisible by 3 should be printed as \"Fizz\".",
            "question": "def fizz(n):\n    for i in range(1, n+1):\n        if i % 3 == 0:\n            print(___)\n        else:\n            print(i)\n\n#example\nfizz(20) # prints 1, 2, Fizz, 4, 5, Fizz, 7, 8, Fizz, 10, 11, Fizz, 13, 14, Fizz, 16, 17, Fizz, 19, 20",
            "correct_answer": "\"Fizz\"",
            "duration": 20
        },
        {
            "question_id": 2736,
            "material": "Introduction Python",
            "instruction": "Write a Python script to print the frequency of occurrence of characters in a given string.",
            "question": "def char_frequency(text):\n    chars = {}\n    for c in text:\n        if c not in chars:\n            chars[c] = 0\n        chars[c] += 1\n    return chars\n    \nprint(___))",
            "correct_answer": "char_frequency(text",
            "duration": 20
        },
        {
            "question_id": 2741,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to print all possible permutations of a given string.",
            "question": "from itertools import permutations \n  \n# Get all permutations of length 2 \n# and length 2 \nperm = permutations(\"ABC\", 2) \n  \n# Print the obtained permutations \nfor i in list(perm): \n    print(___) \n\n# Get all permutations of length 3 \n# and length 3 \nperm = permutations(\"ABC\") \n  \n# Print the obtained permutations \nfor i in list(perm): \n    print(i)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 2751,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to print the Fibonacci series up to n-th term.",
            "question": "def Fibonacci(n): \n    a = 0\n    b = 1\n    if n < 0: \n        print(___) \n    elif n == 0: \n        return a \n    elif n == 1: \n        return b \n    else: \n        for i in range(2,n): \n            c = a + b \n            a = b \n            b = c \n        return b \n  \nprint(Fibonacci(6))",
            "correct_answer": "\"Incorrect input\"",
            "duration": 20
        },
        {
            "question_id": 2776,
            "material": "Introduction Python",
            "instruction": "Write a Python script to print out all prime numbers in a given list.",
            "question": "import math\n\ndef is_prime(n):\n    for i in range(2, int(math.sqrt(n))+1):\n        if n % i == 0: \n            return False\n    return True\n\ninput_list = [4, 15, 22, 50, 119]\n\nfor num in input_list:\n    if is_prime(num):\n        print(___)\n\n# Output: \n# 4\n# 15\n# 50\n# 119",
            "correct_answer": "num",
            "duration": 20
        },
        {
            "question_id": 2780,
            "material": "Introduction Python",
            "instruction": "Build a list comprehension in Python to print numbers divisible by 3 and not divisible by 7 in the range of 30 to 50",
            "question": "divisible_by_3_or_7 = [n for n in range(30,51) if n % 3 == 0 and n % 7 != 0]\nprint(___) # output: [30, 33, 36, 39, 42, 45, 48]",
            "correct_answer": "divisible_by_3_or_7",
            "duration": 20
        },
        {
            "question_id": 2819,
            "material": "Introduction Python",
            "instruction": "Write a method in Python to print each element in a given dictionary.",
            "question": "def printDict(dictionary): \n    for key in dictionary: \n        print(___)) \n\ndict = {\n    \"Alice\": 23,\n    \"Bob\": 30,\n    \"John\": 27\n}\nprintDict(dict)",
            "correct_answer": "\"{}: {}\".format(key, dictionary[key]",
            "duration": 20
        },
        {
            "question_id": 2840,
            "material": "Introduction Python",
            "instruction": "Create a Python function to print out all the prime numbers between two integers.",
            "question": "def print_primes(start, end):\n for n in range(start, end + 1):\n if is_prime(n):\n print(___)\n \ndef is_prime(n):\n if n <= 1:\n return False\n elif n <= 3:\n return True\n elif (n % 2 == 0) or (n % 3 == 0):\n return False\n \n i = 5\n while i ** 2 <= n:\n if (n % i == 0) or (n % (i + 2) == 0):\n return False\n i += 6\n \n return True\n\nprint_primes(10, 25)",
            "correct_answer": "n",
            "duration": 20
        },
        {
            "question_id": 2882,
            "material": "Introduction Python",
            "instruction": "Create a loop in Python to print the following sentence 5 times.",
            "question": "for i in range(5):\n    print(___)",
            "correct_answer": "\"I love coding!\"",
            "duration": 20
        },
        {
            "question_id": 2897,
            "material": "Introduction Python",
            "instruction": "Create a program in Python to print the following output.",
            "question": "str = \"programming\"\nprint(___)\n\nOutput: gnimmargorp",
            "correct_answer": "str[::-1]",
            "duration": 20
        },
        {
            "question_id": 2902,
            "material": "Introduction Python",
            "instruction": "Create a Python script to print out the values in a given dictionary, with each key and value on a separate line.",
            "question": "for k, v in my_dict.items():\n    print(___)",
            "correct_answer": "f'{k}: {v}'",
            "duration": 20
        },
        {
            "question_id": 2910,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print out all possible pairs of two lists.",
            "question": "for i in list1:\n    for j in list2:\n        print(___)\n\n# Output:\n# (1, 'a')\n# (1, 'b')\n# (1, 'c')\n# (2, 'a')\n# (2, 'b')\n# (2, 'c')\n# (3, 'a')\n# (3, 'b')\n# (3, 'c')",
            "correct_answer": "i,j",
            "duration": 20
        },
        {
            "question_id": 2917,
            "material": "Introduction Python",
            "instruction": "Create a for loop in Python to iterate over a list of numbers and print only the even numbers.",
            "question": "for num in my_list:\n    if num % 2 == 0:\n        print(___)",
            "correct_answer": "num",
            "duration": 20
        },
        {
            "question_id": 2931,
            "material": "Introduction Python",
            "instruction": "Using the input dictionary as a guide, implement a Python function to print out the list of values for each key.",
            "question": "def print_values(dict_in):\n    for key,value in dict_in.items():\n        print(___)\n\nprint_values(my_dict)",
            "correct_answer": "key, \":\", value",
            "duration": 20
        },
        {
            "question_id": 2935,
            "material": "Introduction Python",
            "instruction": "Optimize the following Python code to print the numbers in reverse.",
            "question": "for i in reversed(range(1,11)):\n    print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 2960,
            "material": "Introduction Python",
            "instruction": "Create a Python program to print out the following message and its variables.",
            "question": "name = \"John\"\n\nprint(___)  # Outputs: \"Hello John!\"",
            "correct_answer": "\"Hello \" + name + \"!\"",
            "duration": 20
        },
        {
            "question_id": 2979,
            "material": "Introduction Python",
            "instruction": "Design a Python program to print out the list of prime numbers up to the input value.",
            "question": "def printPrimeNum(n): \n  \n    prime_list = [] \n   \n    for num in range(2, n + 1): \n        prime = True\n        for i in range(2, num): \n            if (num % i == 0): \n                prime = False\n        if prime:\n            prime_list.append(num) \n              \n    print(___)\n  \n  \nnum = 25 \nprintPrimeNum(num)",
            "correct_answer": "prime_list",
            "duration": 20
        },
        {
            "question_id": 2984,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the key of the element in a dictionary that has the maximum value.",
            "question": "dictionary = {'a': 3, 'b': 6, 'c': 9, 'd': 12}\n\nmax_value = max(dictionary.values())\nfor key, value in dictionary.items():\n if value == max_value:\n print(___)",
            "correct_answer": "key",
            "duration": 20
        },
        {
            "question_id": 2988,
            "material": "Introduction Python",
            "instruction": "Generate a program in Python to remove all vowels from a sentence, and print the resulting string to the console.",
            "question": "def remove_vowels(word):\n    new_word = \"\"\n    for i in word:\n        if i not in \"aeiouAEIOU\":\n            new_word += i\n    return new_word\n\nsentence = \"This is a sentence\"\nprint(___))",
            "correct_answer": "remove_vowels(sentence",
            "duration": 20
        },
        {
            "question_id": 3021,
            "material": "Introduction Python",
            "instruction": "Write a Python script to print all prime numbers from 1 to n",
            "question": "def print_primes(n):\n    for num in range(2, n+1):\n        for i in range(2, num):\n            if (num % i) == 0:\n                break\n        else:\n            print(___)\n\nprint_primes(10)",
            "correct_answer": "num",
            "duration": 20
        },
        {
            "question_id": 3050,
            "material": "Introduction Python",
            "instruction": "Write a Python program to traverse a two-dimensional array and print each row.",
            "question": "def traverse_2d_list(list2d):\n    for row in list2d:\n        print(___)",
            "correct_answer": "row",
            "duration": 20
        },
        {
            "question_id": 3081,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the numbers of a specified list after removing even numbers from it.",
            "question": "def remove_even_numbers(numbers):\n    odd_numbers = []\n    for number in numbers:\n        if number % 2 != 0:\n            odd_numbers.append(number)\n    return odd_numbers\n\nnumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nodd_numbers = remove_even_numbers(numbers)\nprint(___)",
            "correct_answer": "odd_numbers",
            "duration": 20
        },
        {
            "question_id": 3101,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to print the most popular item in a list.",
            "question": "from collections import Counter\n\ndef most_popular(arr):\n    cnt = Counter()\n    for number in arr:\n        cnt[number] += 1\n    return cnt.most_common(1)[0][0]\n\nresult = most_popular([1, 5, 9, 1, 4, 5, 9])\nprint(___)",
            "correct_answer": "result",
            "duration": 20
        },
        {
            "question_id": 3153,
            "material": "Introduction Python",
            "instruction": "Create a code that would prompt the user for a given number and print out the Python equivalent of the given number.",
            "question": "def user_number(number):\n    number_py = '{}'.format(number)\n    print(___))",
            "correct_answer": "\"The Python equivalent of {} is {}\".format(number, number_py",
            "duration": 20
        },
        {
            "question_id": 3171,
            "material": "Introduction Python",
            "instruction": "Write a Python script to print the frequency of all unique words in a given string.",
            "question": "words = \"Hello world, hello programmer\".split()\n\nword_freq = {}\nfor word in words:\n    if word not in word_freq:\n        word_freq[word] = 1 \n    else:\n        word_freq[word] += 1\n\nfor key, value in word_freq.items():\n    print(___)",
            "correct_answer": "f\"{key} : {value}\"",
            "duration": 20
        },
        {
            "question_id": 3193,
            "material": "Introduction Python",
            "instruction": "Print the Fibonacci sequence up to a given number in Python.",
            "question": "# Declare a function\ndef Fibonacci(num):\n    a = 0\n    b = 1\n    \n    # Iterate\n    for i in range(num):\n        print(___)\n        c = a + b\n        a = b\n        b = c\n    print()\n    \n# Print the sequence\nFibonacci(10)",
            "correct_answer": "a, end=\" \"",
            "duration": 20
        },
        {
            "question_id": 3236,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to print a square matrix of size n containing the numbers from 11 to n*n.",
            "question": "n = 3\n\noutput_matrix = [[0 for x in range(n)] for y in range(n)] \n  \nnum = 1\n  \nfor i in range (0, n):    \n for j in range(0, n):     \n output_matrix[i][j] = num    \n num = num + 1    \n  \nfor i in range(0, n):\n for j in range(0, n):\n print(___)\n print(\"\")",
            "correct_answer": "output_matrix[i][j], end = \" \"",
            "duration": 20
        },
        {
            "question_id": 3239,
            "material": "Introduction Python",
            "instruction": "Use a for-loop in Python to print the ASCII value of each character in a given string.",
            "question": "for i in range(len(string)):\n    print(___))  # Output: 72, 101, 108, 108, 111",
            "correct_answer": "ord(string[i]",
            "duration": 20
        },
        {
            "question_id": 3245,
            "material": "Introduction Python",
            "instruction": "Design a FOR loop algorithm in Python to print all numbers starting from one to the given number.",
            "question": "for i in range(1, 11): \n    print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 3250,
            "material": "Introduction Python",
            "instruction": "Create a Python program to determine if a given string is a palindrome and if so, print it.",
            "question": "# Function to check if a string is a palindrome\ndef isPalindrome(s):\n # Reverse the string\n rev_s = s[::-1]\n\n # Check if the string is the same as its reverse\n if (s == rev_s):\n return True\n return False\n\n# Driver code\ns = 'racecar'\n\n# Check if the given word is a palindrome\nif (isPalindrome(s)):\n print(___)",
            "correct_answer": "s",
            "duration": 20
        },
        {
            "question_id": 3315,
            "material": "Introduction Python",
            "instruction": "Design a Python function to print out all permutations of a given string.",
            "question": "def permute(s):\n    if len(s) == 1:\n        return s\n\n    perms = []\n    for i in range(len(s)):\n        element = s[i]\n\n        remaining_elements = s[:i] + s[i+1:]\n        z = permute(remaining_elements)\n\n        for t in z:\n            perms.append(element + t)\n\n    return perms\n\nprint(___))",
            "correct_answer": "permute(\"ABC\"",
            "duration": 20
        },
        {
            "question_id": 3341,
            "material": "Introduction Python",
            "instruction": "Design a program in Python to print out the prime numbers from 2 to a given upper limit.",
            "question": "def is_prime(upper_limit):\n    for num in range(2, upper_limit+1):\n        if num > 1:\n            for i in range(2, num):\n                if (num % i) == 0:\n                    break\n            else:\n                print(___)\n\nupper_limit = 20\nis_prime(upper_limit)",
            "correct_answer": "num, end=\" \"",
            "duration": 20
        },
        {
            "question_id": 3369,
            "material": "Introduction Python",
            "instruction": "Develop a Python script to print out the prime numbers up to a given limit.",
            "question": "def is_prime(n):\n if n == 1:\n return False\n for i in range(2, n):\n if n % i == 0:\n return False\n return True\n\n# Print out prime numbers from 1 to 100\nlimit = 100\n\nfor i in range(1, limit+1):\n if is_prime(i):\n print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 3371,
            "material": "Introduction Python",
            "instruction": "Create a Python function to print all elements in a nested list.",
            "question": "def print_elements(nested_list):\n    \n    for item in nested_list:\n        if type(item) == list:\n            print_elements(item)\n        else:\n            print(___)\n\nprint_elements(nested_list)",
            "correct_answer": "item",
            "duration": 20
        },
        {
            "question_id": 3399,
            "material": "Introduction Python",
            "instruction": "Generate a Python code which calls a function to print the following array?",
            "question": "arr = [1,3,7,9,10]\n\ndef print_array(arr):\n    '''This function prints the elements of an array'''\n    for ele in arr:\n        print(___)\n\nprint_array(arr)",
            "correct_answer": "ele",
            "duration": 20
        },
        {
            "question_id": 3411,
            "material": "Introduction Python",
            "instruction": "Edit the following code snippet to print out \"Hello World\" instead of \"Hello Python\"",
            "question": "print(___)",
            "correct_answer": "\"Hello World\"",
            "duration": 20
        },
        {
            "question_id": 3447,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print out the even numbers in the given list.",
            "question": "#Print out even numbers from the given list\nfor num in list:\n    if (num % 2 == 0):\n        print(___)",
            "correct_answer": "num",
            "duration": 20
        },
        {
            "question_id": 3461,
            "material": "Introduction Python",
            "instruction": "Develop a program in Python to store 5 integer numbers in a list and print out the maximum value.",
            "question": "numbers = [7, 9, 23, 0, 4]\n\nmaximum = max(numbers)\n\nprint(___))",
            "correct_answer": "\"The maximum value is: \"+ str(maximum",
            "duration": 20
        },
        {
            "question_id": 3462,
            "material": "Introduction Python",
            "instruction": "Write a Python program to take a user's input, store it in a variable, and then print out a greeting combining the user's name and the value they entered.",
            "question": "name = input(\"Name: \")\nvalue = input(\"Value: \")\nprint(___))",
            "correct_answer": "\"Hello {}, your value is {}\".format(name, value",
            "duration": 20
        },
        {
            "question_id": 3468,
            "material": "Introduction Python",
            "instruction": "Create a for loop in Python to print out the numbers in a given list in reverse order.",
            "question": "list = [1,2,3,4,5]\nfor i in reversed(list):\n    print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 3531,
            "material": "Introduction Python",
            "instruction": "Write a code snippet in Python to print out the contents of a given dictionary.",
            "question": "dictionary = {\"apple\": 1, \"banana\": 2, \"carrot\": 3}\n\nfor item in dictionary:\n  print(___))",
            "correct_answer": "\"{}: {}\".format(item, dictionary[item]",
            "duration": 20
        },
        {
            "question_id": 3532,
            "material": "Introduction Python",
            "instruction": "Modify the following python code to print the count of values greater than 5.",
            "question": "data = [1,2,3,4,5,6,7,8,9]\n\ncount = 0\nfor value in data:\n  if value > 5:\n    count += 1\n\nprint(___)",
            "correct_answer": "count",
            "duration": 20
        },
        {
            "question_id": 3538,
            "material": "Introduction Python",
            "instruction": "Develop Python code to print all possible permutations of a given string.",
            "question": "def permutations(string): \n    if string == \"\": \n        return [''] \n          \n    prev_list = permutations(string[1:]) \n    next_list = [] \n    char = string[0] \n    for word in prev_list: \n        for j in range(len(word) + 1): \n            next_list.append(word[:j] + char + word[j:]) \n    return next_list \n\nstring = \"abc\"\nperm_list = permutations(string) \nprint(___)",
            "correct_answer": "perm_list",
            "duration": 20
        },
        {
            "question_id": 3558,
            "material": "Introduction Python",
            "instruction": "Generate code for a Python for loop that prints \"Hello World\" n times.",
            "question": "for i in range(5):\n print(___)",
            "correct_answer": "\"Hello World\"",
            "duration": 20
        },
        {
            "question_id": 3584,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to print the elements of a given array in reverse order.",
            "question": "def print_reverse(arr):\n    for i in range(len(arr)-1, -1, -1):\n        print(___)",
            "correct_answer": "arr[i]",
            "duration": 20
        },
        {
            "question_id": 3607,
            "material": "Introduction Python",
            "instruction": "Suggest a completion of the following Python code to print all perfect squares between 25 and 45.",
            "question": "for n in range(25, 46):\n    if n ** 0.5 == int(n ** 0.5):\n        print(___)",
            "correct_answer": "n",
            "duration": 20
        },
        {
            "question_id": 3630,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print a formatted price list with a given list of expenses.",
            "question": "def print_price_list(expenses):\n    print(___)\n    print(\"-\" * 30)\n    print(\"Item\\tPrice\")\n    print(\"-\" * 30)\n    for item in expenses.keys():\n        print(\"{}\\t{}\".format(item, expenses[item]))\n    print(\"-\" * 30)",
            "correct_answer": "\"Price list of items available:\"",
            "duration": 20
        },
        {
            "question_id": 3662,
            "material": "Introduction Python",
            "instruction": "Optimize a Python program to print the sum of the 10 smallest even numbers larger than a user-defined number.",
            "question": "num = int(input(\"Enter a number: \"))\n\n# Find the 10 smallest even numbers larger than the user-defined number\nnumbers = []\ntotal = 0\nfor i in range(num+1, num+21):\n if i%2 == 0:\n  numbers.append(i)\n  total += i\n  \nprint(___)",
            "correct_answer": "'The sum is', total",
            "duration": 20
        },
        {
            "question_id": 3681,
            "material": "Introduction Python",
            "instruction": "Create a program to print out the pyramid pattern in Python.",
            "question": "for i in range(rows):\n    for j in range(i):\n        print(___)\n    print()",
            "correct_answer": "\"#\", end=\"\"",
            "duration": 20
        },
        {
            "question_id": 3686,
            "material": "Introduction Python",
            "instruction": "Write a Python code fragment to print all the leap years between two years.",
            "question": "for year in range(start_year, end_year+1):\n    if year % 4 == 0 and (year % 100 != 0 or year % 400 == 0):\n        print(___)",
            "correct_answer": "year",
            "duration": 20
        },
        {
            "question_id": 3710,
            "material": "Introduction Python",
            "instruction": "Generate a Python script to print an inverted triangle pattern made up of asterisks.",
            "question": "def inverted_triangle(length):\n    for i in range(length, 0, -1):\n        for j in range(length - i):\n            print(___)\n        for j in range(2 * i - 1):\n            print('*', end=\"\")\n        print()\n\ninverted_triangle(5)\n\n# Output:\n# *****\n#  ***\n#   *",
            "correct_answer": "' ', end=\"\"",
            "duration": 20
        },
        {
            "question_id": 3717,
            "material": "Introduction Python",
            "instruction": "Design a loop in Python to iterate over the elements of a list and print the elements in reverse order.",
            "question": "my_list = [10, 15, 20]\nfor i in my_list[::-1]:\n    print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 3724,
            "material": "Introduction Python",
            "instruction": "Generate a class in Python, implementing the __init__ and __str__ methods to initialize a variable and print its value.",
            "question": "class Person:\n    def __init__(self, name):\n        self.name = name\n\n    def __str__(self):\n        return self.name\n\np = Person('John Doe')\nprint(___)",
            "correct_answer": "p",
            "duration": 20
        },
        {
            "question_id": 3738,
            "material": "Introduction Python",
            "instruction": "Create a basic Python program that prints out the class average for a list of student grades.",
            "question": "numbers = [80, 85, 90, 75, 95]\n\ntotal = 0\nfor number in numbers:\n total += number\n\nclass_average = total / len(numbers)\nprint(___)",
            "correct_answer": "class_average",
            "duration": 20
        },
        {
            "question_id": 3787,
            "material": "Introduction Python",
            "instruction": "Create a Python program to read in a list of items and print them out in reverse order.",
            "question": "my_list = [\"Apple\", \"Pear\", \"Banana\", \"Orange\"]\n\nfor item in reversed(my_list):\n print(___)",
            "correct_answer": "item",
            "duration": 20
        },
        {
            "question_id": 3788,
            "material": "Introduction Python",
            "instruction": "Create a Python Program to print the Fibonacci sequence up to n terms",
            "question": "def Fibonacci(n):\n      \n    # First and second number in the sequence \n    Fib_list = [0, 1]\n    \n    # Generate the Fibonacci sequence up to n terms\n    for i in range(2,n): \n        Fib_list.append(Fib_list[i-2] + Fib_list[i-1])\n    return Fib_list\n\n# Driver code \nn = 5\nprint(___))",
            "correct_answer": "Fibonacci(n",
            "duration": 20
        },
        {
            "question_id": 3791,
            "material": "Introduction Python",
            "instruction": "Create a Python program to print out the sum of all even numbers between the given range, inclusive.",
            "question": "def sum_even_numbers(start, end):\n result = 0\n for n in range(start, end+1):\n if n % 2 == 0:\n result += n\n return result\n\nprint(___))",
            "correct_answer": "sum_even_numbers(2, 10",
            "duration": 20
        },
        {
            "question_id": 3823,
            "material": "Introduction Python",
            "instruction": "Produce code to print out the multiplication table of a given number in Python.",
            "question": "# Program to print the multiplication table\nnum = 5\n\n# Iterate from 1 to 10\nfor i in range(1,11):\n print(___)",
            "correct_answer": "f'{num} X {i} = {num * i}'",
            "duration": 20
        },
        {
            "question_id": 3889,
            "material": "Introduction Python",
            "instruction": "Write a python code to find all numbers in a given string, and print them out.",
            "question": "import re\n\nstring = \"There are 45.8 apples and 12.3 oranges.\"\nnumbers = re.findall(r\"[-+]?\\d*\\.\\d+|\\d+\", string)\nprint(___)\n\n# Output: ['45.8', '12.3']",
            "correct_answer": "numbers",
            "duration": 20
        },
        {
            "question_id": 3932,
            "material": "Introduction Python",
            "instruction": "Edit the given Python code to add a feature which will print the squares of given numbers.",
            "question": "def printNumbers(a, b): \n    for i in range(a, b + 1): \n        print(___) \n    print(\"\\n\")\n    for i in range(a, b + 1):\n        print(i*i, end = \" \")",
            "correct_answer": "i, end = \" \"",
            "duration": 20
        },
        {
            "question_id": 3937,
            "material": "Introduction Python",
            "instruction": "Generate a Python script to identify which words in a given list appear more than 3 times and print them out.",
            "question": "words = ['blue', 'red', 'green', 'red', 'yellow', 'blue', 'blue', 'orange']\nfrom collections import Counter\nword_counts = Counter(words)\nwords_appearing_more_than_3_times = [word for word, count in word_counts.items() if count > 3]\nprint(___)",
            "correct_answer": "words_appearing_more_than_3_times",
            "duration": 20
        },
        {
            "question_id": 3942,
            "material": "Introduction Python",
            "instruction": "Create a recursive function in Python to print the sum of the natural numbers up to the given number.",
            "question": "def sum_natural_numbers(limit):\n    if limit < 2:\n        return limit\n    else:\n        return limit + sum_natural_numbers(limit-1)\n\n#print the sum \nprint(___))",
            "correct_answer": "sum_natural_numbers(limit",
            "duration": 20
        },
        {
            "question_id": 3991,
            "material": "Introduction Python",
            "instruction": "Rewrite the following Javascript code as a Python code that solves the same problem.\n\nGiven an array of numbers, find the square root of each number and print it.",
            "question": "import math\n\nnumbers = [2, 3, 4, 5]\n\nfor number in numbers:\n print(___))\n\n# Output\n# 1.414\n# 1.732\n# 2.000\n# 2.236",
            "correct_answer": "math.sqrt(number",
            "duration": 20
        },
        {
            "question_id": 3994,
            "material": "Introduction Python",
            "instruction": "Write a python program to calculate the mean of a list of numbers and display the mean using print statement.",
            "question": "list = [2, 6, 9, 8, 4, 5]\nsum = 0 \nfor num in list:\n sum += num \n\n# calculate mean\nmean = sum / len(list)\n\n# print mean\nprint(___)\n\n# Output\nMean: 5.8",
            "correct_answer": "\"Mean:\", mean",
            "duration": 20
        },
        {
            "question_id": 4018,
            "material": "Introduction Python",
            "instruction": "Develop a code in Python to print the nth Fibonacci number.",
            "question": "def Fibonacci(n): \n    if n<0: \n        print(___) \n    # First Fibonacci number is 0 \n    elif n==1: \n        return 0\n    # Second Fibonacci number is 1 \n    elif n==2: \n        return 1\n    else: \n        return Fibonacci(n-1)+Fibonacci(n-2) \n\nprint(Fibonacci(6))",
            "correct_answer": "\"Incorrect input\"",
            "duration": 20
        },
        {
            "question_id": 4036,
            "material": "Introduction Python",
            "instruction": "Please provide Python code to print out all the prime numbers in a list of numbers.",
            "question": "def is_prime(num):\n  for i in range(2, num):\n    if num % i == 0:\n      return False\n  return True\n\nlist_of_numbers = [2, 3, 4, 5, 6, 7, 8, 9, 11] \nfor i in list_of_numbers:\n  if is_prime(i):\n    print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 4053,
            "material": "Introduction Python",
            "instruction": "Create a python program to print all two dimensional subarrays in a given two-dimensional array",
            "question": "for i in range(len(two_dimensional_array)): \n    for j in range(i+1): \n        for k in range(len(two_dimensional_array[i])): \n            print(___) \n        print()",
            "correct_answer": "two_dimensional_array[j][k], end=\" \"",
            "duration": 20
        },
        {
            "question_id": 4085,
            "material": "Introduction Python",
            "instruction": "Can you create a Python script to print out the two smallest elements from an array of numbers?",
            "question": "def smallest_two_elements(nums):\n    min1 = min(nums)\n    nums.remove(min1)\n    min2 = min(nums)\n    \n    print(___)\n\nsmallest_two_elements([45, 24, 2, 17, 78])",
            "correct_answer": "min1, min2",
            "duration": 20
        },
        {
            "question_id": 4160,
            "material": "Introduction Python",
            "instruction": "Create a Python script to print the first n even numbers.",
            "question": "n = 10\n\nfor i in range(1, n+1):\n if i % 2 == 0:\n print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 4184,
            "material": "Introduction Python",
            "instruction": "Given a Python dictionary, print out the keys and values that are duplicated.",
            "question": "for key, value in my_dict.items():\n    if my_dict.values().count(value) > 1:\n        print(___)",
            "correct_answer": "key, value",
            "duration": 20
        },
        {
            "question_id": 4211,
            "material": "Introduction Python",
            "instruction": "Generate a Python script to print all the prime numbers in a given range.",
            "question": "for n in range(2, 21): \n   if n > 1: \n       for i in range(2, n//2 + 2): \n           if (n % i) == 0: \n               break\n       else: \n           print(___)",
            "correct_answer": "n",
            "duration": 20
        },
        {
            "question_id": 4225,
            "material": "Introduction Python",
            "instruction": "Create a Python script to perform sentiment analysis on a given piece of text. Use the TextBlob package to detect the sentiment of the text and print out the sentiment score.",
            "question": "import textblob\n\ntext = \"The movie was great! I really enjoyed watching it.\"\n\nblob = textblob.TextBlob(text)\nsentiment = blob.sentiment\n\nprint(___)",
            "correct_answer": "\"Sentiment score:\", sentiment.polarity",
            "duration": 20
        },
        {
            "question_id": 4267,
            "material": "Introduction Python",
            "instruction": "Create a program in Python to print out the elements in a list in reverse order.",
            "question": "list = [\"A\", \"B\", \"C\", \"D\"]\n\nfor i in range(len(list)-1, -1, -1):\n    print(___)",
            "correct_answer": "list[i]",
            "duration": 20
        },
        {
            "question_id": 4280,
            "material": "Introduction Python",
            "instruction": "Create a Python program to print out all the combination of a given set of numbers.",
            "question": "def combinations(arr):\n    res = []\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            res.append([arr[i], arr[j]])\n    return res\n\nprint(___))",
            "correct_answer": "combinations([1, 2, 3]",
            "duration": 20
        },
        {
            "question_id": 4314,
            "material": "Introduction Python",
            "instruction": "Modify a basic Python algorithm to increase the speed of the program.",
            "question": "def faster_sum(arr):\n total = 0\n # looping over the array and adding the elements\n # to the variable total\n for i in range(0, len(arr)):\n total += arr[i]\n return total\n\nlist_of_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n# using the faster_sum() function\nresult = faster_sum(list_of_numbers)\nprint(___)",
            "correct_answer": "result",
            "duration": 20
        },
        {
            "question_id": 4363,
            "material": "Introduction Python",
            "instruction": "Create a Python script to iterate over a list of words and print them out one by one.",
            "question": "for word in ['cat', 'dog', 'bird']:\n    print(___)",
            "correct_answer": "word",
            "duration": 20
        },
        {
            "question_id": 4398,
            "material": "Introduction Python",
            "instruction": "Write a Python program to concatenate two strings and print the combined string.",
            "question": "string1 = 'I love'\nstring2 = 'Programming'\n\noutput = string1 + string2\n\nprint(___)\n\n# Output\nI love Programming",
            "correct_answer": "output",
            "duration": 20
        },
        {
            "question_id": 4407,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print all the numbers from 1 to n (inclusive), where n is a given number.",
            "question": "for i in range(1, n+1): \n print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 4442,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print an empty square based on size",
            "question": "def print_square(size): \n\n    # loop to print size number of lines \n    for _ in range(size): \n\n        # print stars on each line \n        print(___) \n\nif __name__ == '__main__':\n    size = 8\n    print_square(size)",
            "correct_answer": "\"*\" * size",
            "duration": 20
        },
        {
            "question_id": 4457,
            "material": "Introduction Python",
            "instruction": "Generate a Python code to print all the animal types entered in a list",
            "question": "animal_list = [\"dog\", \"cat\", \"mouse\", \"snake\"] \n\nfor animal in animal_list:\n    print(___)",
            "correct_answer": "animal",
            "duration": 20
        },
        {
            "question_id": 4507,
            "material": "Introduction Python",
            "instruction": "Come up with a python program to join two strings x and y, and then print the resulting combined string.",
            "question": "x = \"Hello\"\ny = \"World\"\n\nresult = x + y\nprint(___)",
            "correct_answer": "result",
            "duration": 20
        },
        {
            "question_id": 4515,
            "material": "Introduction Python",
            "instruction": "Create a python script to read a JSON object and print out its values.",
            "question": "import json\n\ndata = json.loads('{ \"name\": \"Adam\", \"age\": 24, \"city\": \"New York\" }')\n\nprint(___) \nprint(\"Age: \", data['age']) \nprint(\"City: \", data['city'])",
            "correct_answer": "\"Name: \", data['name']",
            "duration": 20
        },
        {
            "question_id": 4520,
            "material": "Introduction Python",
            "instruction": "Use a Python print function to write a statement that takes an input message and prints the message in all uppercase letters.",
            "question": "message = 'Hello world!'\n\nprint(___)) // HELLO WORLD!",
            "correct_answer": "message.upper(",
            "duration": 20
        },
        {
            "question_id": 4530,
            "material": "Introduction Python",
            "instruction": "Design a Python code to Print the length of the string entered by user.",
            "question": "stringLength = len(stringInput)\n\nprint(___)",
            "correct_answer": "\"The length of the string is: \", stringLength",
            "duration": 20
        },
        {
            "question_id": 4548,
            "material": "Introduction Python",
            "instruction": "In Python, create a function to check if a given number is prime, and then print out all prime numbers between 0 and that number.",
            "question": "def is_prime(number):\n    if number <= 1:\n        return False\n    for i in range(2, number):\n        if number % i == 0:\n            return False\n    return True\n\ndef print_primes(upper_limit):\n    for i in range(2, upper_limit+1):\n        if is_prime(i):\n            print(___)\n\nprint_primes(25)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 4585,
            "material": "Introduction Python",
            "instruction": "Generate a Python script to print the elements of a list in reverse order.",
            "question": "my_list = [1, 2, 3, 4, 5]\n\nfor i in reversed(my_list):\n    print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 4590,
            "material": "Introduction Python",
            "instruction": "Create a basic Python script that takes a user input, filters out any characters that are not letters or numbers, and prints the input after filtering.",
            "question": "import re\n\ninput_string = \"This input contains \\\" special characters!\"\nfiltered_string = re.sub(r'[^a-zA-Z0-9]', '', input_string)\n\nprint(___) # Output: Thisinputcontainsspecialcharacters",
            "correct_answer": "filtered_string",
            "duration": 20
        },
        {
            "question_id": 4595,
            "material": "Introduction Python",
            "instruction": "Modify the following Python code to print the sum of the elements in a given list (without using the sum() function).",
            "question": "my_list = [1, 5, 4, -3, 10]\n\ntotal = 0\n\nfor num in my_list:\n total += num\n\nprint(___) # prints 17",
            "correct_answer": "total",
            "duration": 20
        },
        {
            "question_id": 4603,
            "material": "Introduction Python",
            "instruction": "Write a Python code snippet to search and print all items in the list that starts with substring \"java\".",
            "question": "arr = [\"python\", \"c++\", \"java\", \"java-script\"]\n\nresult = []\nfor item in arr:\n    if item.startswith(\"java\"):\n        result.append(item)\nprint(___)",
            "correct_answer": "result",
            "duration": 20
        },
        {
            "question_id": 4618,
            "material": "Introduction Python",
            "instruction": "Can you provide a Python code to print the largest item in a given list?",
            "question": "# Find the largest element in a list\n\ndef find_largest(lst):\n    max_val = float('-inf')\n    for val in lst:\n        if val > max_val:\n            max_val = val\n    return max_val\n\n# Test\nlst = [9, 2, 6, 10, 4]\nprint(___)) # 10",
            "correct_answer": "find_largest(lst",
            "duration": 20
        },
        {
            "question_id": 4644,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to read a list of integers and print its elements in reversed order.",
            "question": "list_of_ints = [1, 3, 6, 8, 10]\n\nlist_of_ints.reverse()\n\nprint(___) # [10, 8, 6, 3, 1]",
            "correct_answer": "list_of_ints",
            "duration": 20
        },
        {
            "question_id": 4652,
            "material": "Introduction Python",
            "instruction": "Create a Python script to generate 10 random numbers and print their sum.",
            "question": "import random\n\nnums = random.sample(range(100), 10)\ntotal = 0\n\nfor num in nums:\n    total += num\n\nprint(___)",
            "correct_answer": "total",
            "duration": 20
        },
        {
            "question_id": 4695,
            "material": "Introduction Python",
            "instruction": "Create a Python script to print out the most common words in the text.",
            "question": "from collections import Counter\n\ntext = \"The quick brown fox jumps over the lazy dog.\"\nwords = text.split()\n\nword_counts = Counter(words)\nmost_common_words = word_counts.most_common()\n\nfor word, count in most_common_words:\n    print(___)\n# Output:\n# the 2\n# quick 1\n# brown 1\n# fox 1\n# jumps 1\n# over 1\n# lazy 1\n# dog 1",
            "correct_answer": "word, count",
            "duration": 20
        },
        {
            "question_id": 4714,
            "material": "Introduction Python",
            "instruction": "Update the given Python program to print the result in reverse order.",
            "question": "numbers = [1, 2, 3, 4, 5, 6]\n\nfor x in reversed(numbers):\n    print(___)",
            "correct_answer": "x",
            "duration": 20
        },
        {
            "question_id": 4746,
            "material": "Introduction Python",
            "instruction": "Generate Python code to print the sum of two user-defined variables.",
            "question": "var1 = 3\nvar2 = 7\n\nsum = var1 + var2\nprint(___)) # prints 'The sum of var1 and var2 is 10'",
            "correct_answer": "'The sum of var1 and var2 is ' + str(sum",
            "duration": 20
        },
        {
            "question_id": 4750,
            "material": "Introduction Python",
            "instruction": "Develop a Python script to print all possible words with a given set of letters.",
            "question": "import itertools \n\nletters = ('a', 'c', 'd', 'e', 'm') \n\nfor words in itertools.permutations(letters): \n    print(___))",
            "correct_answer": "''.join(words",
            "duration": 20
        },
        {
            "question_id": 4760,
            "material": "Introduction Python",
            "instruction": "Write a Python program to parse the following JSON and print out the values of the type and message keys.",
            "question": "import json\n\ndata = '{\"type\": \"error\", \"message\": \"An error occurred\"}'\n\njson_data = json.loads(data)\nprint(___) # prints \"error\"\nprint(json_data[\"message\"]) # prints \"An error occurred\"",
            "correct_answer": "json_data[\"type\"]",
            "duration": 20
        },
        {
            "question_id": 4767,
            "material": "Introduction Python",
            "instruction": "Examine a given Python program and modify it to only print out characters which are palindromes.",
            "question": "my_string = \"I like mangoes\"\n\nfor char in my_string:\n\tif char == char[::-1]:\n\t\tprint(___)",
            "correct_answer": "char",
            "duration": 20
        },
        {
            "question_id": 4775,
            "material": "Introduction Python",
            "instruction": "Create a loop in Python to print every permutation of a list of strings.",
            "question": "import itertools \n  \n# list of strings \nlist_of_strings = [\"Hello\", \"World\", \"Foo\", \"Bar\"] \n  \n# using itertools \n# to get the permutations \npermutations = itertools.permutations(list_of_strings) \n  \n# printing permutations \nfor i in list(permutations): \n    print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 4779,
            "material": "Introduction Python",
            "instruction": "Create a Python program for simulating a bouncing ball with a bouncing height of 10 meters. The program should print out the time at which the ball reaches the ground.",
            "question": "import math\n\n# initial velocity\nv0 = 20\n# height\nh = 10\n# time to reach ground\nt = (v0 * 2) / 9.81\n\nprint(___))",
            "correct_answer": "\"The ball will reach the ground in {:.2f} seconds\".format(t",
            "duration": 20
        },
        {
            "question_id": 4800,
            "material": "Introduction Python",
            "instruction": "Create a python for loop to print the elements of a given list l.",
            "question": "for element in l:\n    print(___)",
            "correct_answer": "element",
            "duration": 20
        },
        {
            "question_id": 4815,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print all unique values in a dictionary.",
            "question": "def printUniqueValues(dictionary):\n    unique_values = set()\n\n    for key in dictionary:\n        if dictionary[key] not in unique_values:\n            unique_values.add(dictionary[key])\n\n    print(___)\n\nprintUniqueValues(sample_dict)",
            "correct_answer": "unique_values",
            "duration": 20
        },
        {
            "question_id": 4818,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to print all odd numbers from an array of integers.",
            "question": "def printOddNumbers(array):\n  for number in array:\n    if number % 2 != 0:\n      print(___)\n\narray = [3, 5, 7, 10, 15]\nprintOddNumbers(array)",
            "correct_answer": "number",
            "duration": 20
        },
        {
            "question_id": 4821,
            "material": "Introduction Python",
            "instruction": "Write a Python script to print the Fibonacci series from 0 to n.",
            "question": "def Fibonacci(n): \n   a = 0\n   b = 1\n   if n < 0: \n      print(___) \n   elif n == 0: \n      return a \n   elif n == 1: \n      return b \n   else: \n      for i in range(2,n+1): \n          c = a + b \n          a = b \n          b = c \n      return b \n  \nprint(Fibonacci(10))",
            "correct_answer": "\"Incorrect input\"",
            "duration": 20
        },
        {
            "question_id": 4858,
            "material": "Introduction Python",
            "instruction": "Create a Python function to print the Fibonacci series up to a given range.",
            "question": "def Fibonacci(n): \n    if n<0: \n        print(___) \n    # First Fibonacci number is 0 \n    elif n==1: \n        return 0\n    # Second Fibonacci number is 1 \n    elif n==2: \n        return 1\n    else: \n        return Fibonacci(n-1)+Fibonacci(n-2) \n   \n# Driver Program \nresult = []\nfor i in range(1,10): \n    result.append(Fibonacci(i))\n    \nprint(result)",
            "correct_answer": "\"Incorrect input\"",
            "duration": 20
        },
        {
            "question_id": 4864,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print out a histogram for a list of numbers.",
            "question": "numbers = [1, 2, 3, 4, 5, 3, 2, 1, 3, 2, 5, 6, 7, 5, 4]\n\nfor i in numbers:\n    print(___)\n\n# Output should be\n# *\n# **\n# ***\n# ****\n# *****\n# ***\n# **\n# *\n# ***\n# **\n# *****\n# ******\n# *******\n# *****\n# ****",
            "correct_answer": "'*' * i",
            "duration": 20
        },
        {
            "question_id": 4890,
            "material": "Introduction Python",
            "instruction": "Develop a Python program to print the second-largest element of an array.",
            "question": "def second_largest(arr):\n    largest = float(\"-inf\")\n    second_largest = float(\"-inf\") \n    for i in arr:\n        if i > largest:\n            second_largest = largest\n            largest = i\n        elif i > second_largest and i != largest:\n            second_largest = i\n    return second_largest\n\narr = [10, 3, 5, 22, 4]\nprint(___))",
            "correct_answer": "second_largest(arr",
            "duration": 20
        },
        {
            "question_id": 4905,
            "material": "Introduction Python",
            "instruction": "Generate a simple Python script to compute basic statistics (mean, median and mode) for a given list of numbers.",
            "question": "def compute_statistics(nums):\n mean = sum(nums)/len(nums)\n median = sorted(nums)[len(nums)//2]\n mode = max([(nums.count(i), i) for i in set(nums)], key=lambda x:x[0])[1]\n print(___)\n print('Median:', median)\n print('Mode:', mode)\n\ncompute_statistics([7, 10, 16, 1, 18])",
            "correct_answer": "'Mean:', mean",
            "duration": 20
        },
        {
            "question_id": 4923,
            "material": "Introduction Python",
            "instruction": "Create python code to print the first n numbers of the Fibonacci sequence",
            "question": "def print_fibonacci_sequence(n):\n    # Initialize the first two numbers of the sequence\n    num1 = 0\n    num2 = 1\n    # Use a for loop to print the the sequence in the right order\n    for i in range(n):\n        print(___)\n        num3 = num1 + num2\n        num1 = num2\n        num2 = num3\n\n# Test\nprint_fibonacci_sequence(10)",
            "correct_answer": "num1, end=' '",
            "duration": 20
        },
        {
            "question_id": 4928,
            "material": "Introduction Python",
            "instruction": "You are given a Python program that prints random numbers. Improve the program to print a random number between 0 and 10.",
            "question": "import random\n\nfor i in range(5):\n    print(___))",
            "correct_answer": "random.randint(0, 10",
            "duration": 20
        },
        {
            "question_id": 4932,
            "material": "Introduction Python",
            "instruction": "Generate a loop in Python using a list of words and print out the length of each word.",
            "question": "words = [\"apple\", \"pie\", \"is\", \"delicious\"]\n\nfor word in words:\n print(___))",
            "correct_answer": "len(word",
            "duration": 20
        },
        {
            "question_id": 4965,
            "material": "Introduction Python",
            "instruction": "Generate a code that will print out all substrings of a given string.",
            "question": "def substrings(s):\n    sub_str_list = []\n    for i in range(len(s)):\n        for j in range(i + 1, len(s)+1):\n            sub_str = s[i:j]\n            sub_str_list.append(sub_str)\n    return sub_str_list\n\nresult = substrings(\"python\")\nprint(___)",
            "correct_answer": "result",
            "duration": 20
        },
        {
            "question_id": 4970,
            "material": "Introduction Python",
            "instruction": "Using Python, create a command line program to print out the frequency of a given string in a given text.",
            "question": "def countSubstring(text, string):\n count = 0\n for i in range(len(text)):\n if text[i:i+len(string)] == string:\n count += 1\n return count\n\nprint(___))",
            "correct_answer": "countSubstring(text, string",
            "duration": 20
        },
        {
            "question_id": 4996,
            "material": "Introduction Python",
            "instruction": "Given an integer input, write a Python program to find the maximum value of the input and print out the result.",
            "question": "input_list = [3, 5, 7]\n \nmax_value = max(input_list)\n \nprint(___) # prints 7",
            "correct_answer": "max_value",
            "duration": 20
        },
        {
            "question_id": 5013,
            "material": "Introduction Python",
            "instruction": "Write a function to print the following pattern in Python.",
            "question": "def print_pattern(n): \n  \n    # outer loop to handle number of rows \n    for i in range(1,n+1): \n      \n        # inner loop to handle number of columns \n        for j in range(1,i+1): \n          \n            # printing stars \n            print(___) \n       \n        # ending line after each row \n        print(\"\\r\") \n  \n# Driver Code \nn = 3\nprint_pattern(n)\n\nOutput:\n* \n* * \n* * *",
            "correct_answer": "'* ', end=\"\"",
            "duration": 20
        },
        {
            "question_id": 5033,
            "material": "Introduction Python",
            "instruction": "Edit the following Python script to randomly select 10 numbers between 10 and 20, store them in the list lst, and print them out.",
            "question": "import random\nlst = random.sample(range(10, 21), 10)\nprint(___)",
            "correct_answer": "lst",
            "duration": 20
        },
        {
            "question_id": 5079,
            "material": "Introduction Python",
            "instruction": "Create a function in Python to print the first n numbers of the Fibonacci series.",
            "question": "def Fibonacci(n): \n a = 0\n b = 1\nif n<0: \n print(___) \nelif n==0: \n print(a) \nelif n==1: \n print(b) \nelse: \n print(a)\n print(b)\n for i in range(2,n): \n c = a + b \n a = b \n b = c \n print(b)",
            "correct_answer": "\"Incorrect input\"",
            "duration": 20
        },
        {
            "question_id": 5081,
            "material": "Introduction Python",
            "instruction": "Write a python program to iterate over two lists and print only the common items.",
            "question": "list1 = [1, 2, 3, 4, 5]\nlist2 = [4, 5, 6, 7, 8]\n\nfor i in list1:\n  if i in list2: \n    print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 5086,
            "material": "Introduction Python",
            "instruction": "Generate a Python code to print the frequencies of the characters of a given string.",
            "question": "freq={}\nfor ch in \"Hello World!\":\n if ch in freq:\n freq[ch] +=1\n else:\n freq[ch] = 1\n\nfor key, value in freq.items():\n print(___))",
            "correct_answer": "\"{}:{}\".format(key,value",
            "duration": 20
        },
        {
            "question_id": 5092,
            "material": "Introduction Python",
            "instruction": "Create a basic scoring engine in Python that takes two numbers and returns the higher of the two.",
            "question": "def higher_number(num1, num2):\n if num1 > num2:\n return num1\n else:\n return num2\n\nprint(___)) # 6",
            "correct_answer": "higher_number(5, 6",
            "duration": 20
        },
        {
            "question_id": 5108,
            "material": "Introduction Python",
            "instruction": "Write a python script to print the nth Fibonacci number.",
            "question": "\"\"\"\nPython script to print the nth Fibonacci number\n\"\"\"\n\ndef fibonacci(num):\n    a, b = 0, 1\n    for _ in range(num):\n        a, b = b, a+b\n    return a\n\nnum = int(input(\"Enter a number: \"))\nprint(___)))",
            "correct_answer": "\"The Fibonacci number at position {0} is {1}\".format(num, fibonacci(num",
            "duration": 20
        },
        {
            "question_id": 5121,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print a given number with commas separating the thousands.",
            "question": "n = 12345678\n# method 1\n print(___))\n# method 2 \nprint(f\"{n:,}\")",
            "correct_answer": "\"{:,}\".format(n",
            "duration": 20
        },
        {
            "question_id": 5123,
            "material": "Introduction Python",
            "instruction": "Create a function in Python to print a number pyramid given a height.",
            "question": "def pyramid(h): \n    \n    for i in range(0, h): \n        for j in range(0, h-i-1): \n            print(___) \n        for j in range(0, i+1): \n            print(\"* \", end=\"\") \n        print(\"\\r\") \n\npyramid(3)",
            "correct_answer": "end=\" \"",
            "duration": 20
        },
        {
            "question_id": 5134,
            "material": "Introduction Python",
            "instruction": "Modify the given program to print the output in reverse order",
            "question": "def print_list_reverse(lst):\n    for i in reversed(lst):\n        print(___)\n\nword_list = [\"Python\", \"is\", \"fun\"]\n\nprint_list_reverse(word_list)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 5135,
            "material": "Introduction Python",
            "instruction": "Create a python program to print out all combinations of elements from two lists.",
            "question": "for i in list1:\n    for j in list2:\n        print(___)",
            "correct_answer": "i, j",
            "duration": 20
        },
        {
            "question_id": 5209,
            "material": "Introduction Python",
            "instruction": "Edit the following Python program to print all the numbers in a given list, one number per line.",
            "question": "list = [1, 2, 3, 4, 5]\n\nfor num in list:\n    print(___)",
            "correct_answer": "num",
            "duration": 20
        },
        {
            "question_id": 5223,
            "material": "Introduction Python",
            "instruction": "Create a function in Python to print a sorted list of the given input string.",
            "question": "def sortString(inputString): \n  \n    words = inputString.split() \n    words.sort() \n  \n    for i in words: \n        print(___) \n          \nsortString(inputString)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 5236,
            "material": "Introduction Python",
            "instruction": "Write a Python function to convert USD to Euro and print the new value to the console.",
            "question": "def usd_to_euro(amount):\n  euro = amount * 0.9\n  print(___)\n  \nusd_to_euro(12.5)",
            "correct_answer": "amount, \"USD is equal to\", euro, \"Euros.\"",
            "duration": 20
        },
        {
            "question_id": 5276,
            "material": "Introduction Python",
            "instruction": "Edit the given Python program to print 'Happy Holidays' 10 times.",
            "question": "for i in range(10):\n    print(___)",
            "correct_answer": "'Happy Holidays'",
            "duration": 20
        },
        {
            "question_id": 5291,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to print a numbers pyramid of size n, with the first line of the pyramid containing n consecutive numbers.",
            "question": "n = int(input())\n \nfor i in range(1, n + 1):\n for j in range(1, i + 1):\n  print(___)\n print(\"\")\n \nfor i in range(n - 1, 0, -1):\n for j in range(1, i + 1):\n  print(j, end=\"\")\n print(\"\")",
            "correct_answer": "j, end=\"\"",
            "duration": 20
        },
        {
            "question_id": 5299,
            "material": "Introduction Python",
            "instruction": "Create a Python script to print out only the even numbers from a list of numbers.",
            "question": "for num in list: \n    if (num % 2 == 0):\n        print(___)",
            "correct_answer": "num, end = ' '",
            "duration": 20
        },
        {
            "question_id": 5303,
            "material": "Introduction Python",
            "instruction": "Design an algorithm in Python to read in a matrix of integers and print the sum of each row.",
            "question": "def rowSum(matrix):\n    row_sums = []\n    for row in matrix:\n        row_sum = 0\n        for num in row:\n            row_sum += num\n        row_sums.append(row_sum)\n    return row_sums\n\nmatrix = [[1, 2, 3],\n          [4, 5, 6],\n          [7, 8, 9]]\n\nprint(___)) # [6, 15, 24]",
            "correct_answer": "rowSum(matrix",
            "duration": 20
        },
        {
            "question_id": 5327,
            "material": "Introduction Python",
            "instruction": "Create an algorithm in Python to print all the prime numbers between two given numbers.",
            "question": "def printPrimeNumbers(start, end):\n \n for num in range(start, end + 1):\n   if num > 1:\n      for i in range(2, num):\n          if (num % i) == 0:\n              break\n      else:\n          print(___)\n          \nstart = 2\nend = 10\nprint(\"Prime numbers between\", start, \"and\", end, \"are:\")\nprintPrimeNumbers(start, end)",
            "correct_answer": "num",
            "duration": 20
        },
        {
            "question_id": 5336,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print food items along with their prices from a given dictionary of food items and prices.",
            "question": "for item, price in food_items.items():\n print(___)",
            "correct_answer": "f'{item}: ${price}'",
            "duration": 20
        },
        {
            "question_id": 5370,
            "material": "Introduction Python",
            "instruction": "Modify the given Python function to print out the reversed list first and then find the sum of the numbers.",
            "question": "def reverse_list(numbers):\n reversed_list = numbers[::-1]\n print(___)\n return sum(reversed_list)",
            "correct_answer": "reversed_list",
            "duration": 20
        },
        {
            "question_id": 5406,
            "material": "Introduction Python",
            "instruction": "Create a program in Python which will take in a list of strings, and print out the longest string in the list.",
            "question": "def longest_string(str_list): \n    longest_str = '' \n    for str in str_list: \n        if len(str) > len(longest_str): \n            longest_str = str \n  \n    return longest_str \n\nstring_list = ['foo', 'test', 'longstring', 'bar'] \nlong_string = longest_string(string_list) \n\nprint(___)",
            "correct_answer": "long_string",
            "duration": 20
        },
        {
            "question_id": 5417,
            "material": "Introduction Python",
            "instruction": "Write a Python code to compare two list and print the elements which are common between them.",
            "question": "list1 = [2, 3, 5, 8]\nlist2 = [1, 4, 5, 9]\n\ncommon_elements =  [element for element in list1 if element in list2]\n\nprint(___)",
            "correct_answer": "common_elements",
            "duration": 20
        },
        {
            "question_id": 5421,
            "material": "Introduction Python",
            "instruction": "Modify this Python program to print the greatest common divisor of two numbers.",
            "question": "def gcd(x, y):\n    while y != 0:\n        (x, y) = (y, x % y)\n    return x\n\nnum1 = 5\nnum2 = 6\n\nprint(___))",
            "correct_answer": "\"GCD is:\", gcd(num1, num2",
            "duration": 20
        },
        {
            "question_id": 5426,
            "material": "Introduction Python",
            "instruction": "Create a Python function to print out all the words in a given string with the letter e.",
            "question": "def print_words_with_e(str): \n    words = str.split() \n    for word in words: \n        if 'e' in word: \n            print(___) \n\nprint_words_with_e(str)",
            "correct_answer": "word",
            "duration": 20
        },
        {
            "question_id": 5435,
            "material": "Introduction Python",
            "instruction": "Optimize the following Python program to print numbers from 1 to 100 without using a loop.",
            "question": "def print_numbers():\n    if num <= 100:\n        print(___)\n        print_numbers(num + 1)\n\nprint_numbers(1)",
            "correct_answer": "num",
            "duration": 20
        },
        {
            "question_id": 5436,
            "material": "Introduction Python",
            "instruction": "Using Python, create a program to print a random element from a list.",
            "question": "import random\n\n# list of fruits\nfruits = [\"apple\", \"banana\", \"mango\", \"pear\", \"grape\"]\n\n# generate a random index\nrandomIndex = random.randint(0, len(fruits)-1)\n\n# select and print the random fruit\nrandomFruit = fruits[randomIndex]\nprint(___)",
            "correct_answer": "\"Random fruit: \" + randomFruit",
            "duration": 20
        },
        {
            "question_id": 5446,
            "material": "Introduction Python",
            "instruction": "Write a Python program to multiply two given numbers and print their product",
            "question": "product = num1 * num2\nprint(___)",
            "correct_answer": "product",
            "duration": 20
        },
        {
            "question_id": 5451,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to calculate the sum of all numbers in a list and print it out.",
            "question": "def sum_list(l):\n    result = 0\n    for num in l:\n        result += num\n    return result\n\nlist = [1, 2, 3, 4, 5]\nprint(___))",
            "correct_answer": "sum_list(list",
            "duration": 20
        },
        {
            "question_id": 5452,
            "material": "Introduction Python",
            "instruction": "Create a python code to print the frequency of each character in a string.",
            "question": "for char in \"Hello World\":\n    print(___))",
            "correct_answer": "char, \":\", \"Hello World\".count(char",
            "duration": 20
        },
        {
            "question_id": 5474,
            "material": "Introduction Python",
            "instruction": "Develop a Python program to print a value based on a comparison between two numbers",
            "question": "if a < b:\n    print(___)\nelse:\n    print(\"A is not less than B\")",
            "correct_answer": "\"A is less than B\"",
            "duration": 20
        },
        {
            "question_id": 5475,
            "material": "Introduction Python",
            "instruction": "Write Python code to print the fibonnaci sequence up to the given number.",
            "question": "\"\"\"\nPrint the Fibonacci sequence up to the given number\n\"\"\"\n\ndef fibonacci(n):\n    # Base case\n    if n == 0 or n == 1:\n        return n\n \n    # Recursive case\n    return fibonacci(n-1) + fibonacci(n-2)\n \n# Print the Fibonacci sequence up to the given number\nn = 10\nfor i in range(n + 1):\n    print(___))",
            "correct_answer": "fibonacci(i",
            "duration": 20
        },
        {
            "question_id": 5497,
            "material": "Introduction Python",
            "instruction": "Write a Python program to evaluate a simple expression and print the output.",
            "question": "def evaluate_expression(exp):\n  return eval(exp) \n\nexpression = \"7*6+20\"\noutput = evaluate_expression(expression)\nprint(___)",
            "correct_answer": "output",
            "duration": 20
        },
        {
            "question_id": 5527,
            "material": "Introduction Python",
            "instruction": "Create a Python script to print out all the numbers in a given range that are divisible by a given number.",
            "question": "def printDivisible(lower, upper, divisible):\n    for i in range(lower, upper + 1):\n        if i % divisible == 0:\n            print(___)\n\nprintDivisible(lower, upper, divisible)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 5531,
            "material": "Introduction Python",
            "instruction": "Generate a complete python code to print the output shown.",
            "question": "print(___)",
            "correct_answer": "\"I love Python\"",
            "duration": 20
        },
        {
            "question_id": 5534,
            "material": "Introduction Python",
            "instruction": "Write a web scraper in Python to extract all the links from a given webpage and print them.",
            "question": "from bs4 import BeautifulSoup\nimport requests\n\n# Get html of desired webpage\nurl = \"https://www.example.com/\"\nr = requests.get(url)\nhtml = r.text\n\n# Parse html using BeautifulSoup\nsoup = BeautifulSoup(html, 'html.parser')\n\n# Extract all links\nlinks = []\nfor link in soup.find_all('a'):\n    links.append(link.get('href'))\n\n# Print all links\nprint(___)",
            "correct_answer": "links",
            "duration": 20
        },
        {
            "question_id": 5538,
            "material": "Introduction Python",
            "instruction": "EDIT this Python function to print the number of characters in its argument.",
            "question": "def print_length(text):\n    print(___)))",
            "correct_answer": "\"Length of text is \" + str(len(text",
            "duration": 20
        },
        {
            "question_id": 5557,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the top 5 most frequent words in a given sentence.",
            "question": "import collections\n \nsentence = \"Python is an interpreted, high-level, general-purpose programming language.\"\n \n# Split sentence into words\nwords = sentence.split()\n \n# Set the counter for words\ncounter = collections.Counter(words)\n \n# Find top 5 most frequent words\nresult = counter.most_common(5)\nprint(___)",
            "correct_answer": "result",
            "duration": 20
        },
        {
            "question_id": 5560,
            "material": "Introduction Python",
            "instruction": "Create a Python script to print the sum of all numbers divisible by 3 or 7 in a list.",
            "question": "nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n\ntotal = 0\n\nfor num in nums:\n    if (num % 3 == 0) or (num % 7 == 0):\n        total += num\n\nprint(___)   # Output: 42",
            "correct_answer": "total",
            "duration": 20
        },
        {
            "question_id": 5580,
            "material": "Introduction Python",
            "instruction": "Create a basic Python program to list all the odd numbers from 0 to a user-specified number",
            "question": "def odd_numbers(num):\n for n in range(num+1):\n if n % 2 != 0:\n print(___)\n\nodd_numbers(user_number)\n# Output: 1, 3, 5, 7, 9",
            "correct_answer": "n",
            "duration": 20
        },
        {
            "question_id": 5599,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the multiplication table for a given number.",
            "question": "def printMultiplicationTable(num):\n\n for i in range(1, 11):\n print(___))\n\nprintMultiplicationTable(8) \n# Output:\n# 8 x 1 = 8\n# 8 x 2 = 16\n# 8 x 3 = 24\n# 8 x 4 = 32\n# 8 x 5 = 40\n# 8 x 6 = 48\n# 8 x 7 = 56\n# 8 x 8 = 64\n# 8 x 9 = 72\n# 8 x 10 = 80",
            "correct_answer": "\"{} x {} = {}\".format(num, i, num * i",
            "duration": 20
        },
        {
            "question_id": 5608,
            "material": "Introduction Python",
            "instruction": "Write a python program to parse and print out the name, email, and phone number from a given string.",
            "question": "def parse_contact_info(string):\n    name = string.split(\", \")[0]\n    email = string.split(\", \")[1]\n    phone_number = string.split(\", \")[2]\n    print(___)",
            "correct_answer": "f\"Name: {name} \\nEmail: {email} \\nPhone Number: {phone_number}\"",
            "duration": 20
        },
        {
            "question_id": 5621,
            "material": "Introduction Python",
            "instruction": "Create a Python script to print an nxn matrix containing all the numbers from 1 to n\u00b2",
            "question": "def print_matrix(n):  \n    matrix = [[0 for x in range(n)] for y in range(n)] \n    k = 1\n  \n    for i in range(0, n): \n  \n        for j in range(0, n): \n  \n            matrix[i][j] = k\n            k = k + 1\n  \n    for i in range(0, n): \n  \n        for j in range(0, n): \n            print(___)\n    \n        print(\"\")",
            "correct_answer": "matrix[i][j], end = \" \"",
            "duration": 20
        },
        {
            "question_id": 5626,
            "material": "Introduction Python",
            "instruction": "Create a program in Python that takes an integer n as input and prints out n lines of \"Hello World!\"",
            "question": "def hello_world_lines(n):\n    for i in range(n):\n        print(___)",
            "correct_answer": "\"Hello World!\"",
            "duration": 20
        },
        {
            "question_id": 5725,
            "material": "Introduction Python",
            "instruction": "Create a Python program to print the nth Fibonacci number in the sequence, where n is provided as an input.",
            "question": "def Fibonacci(n): \n\ta = 0\n\tb = 1\n\tif n < 0: \n\t\tprint(___) \n\telif n == 0: \n\t\treturn a \n\telif n == 1: \n\t\treturn b \n\telse: \n\t\tfor i in range(2,n+1): \n\t\t\tc = a + b \n\t\t\ta = b \n\t\t\tb = c \n\t\treturn b \n\nprint(Fibonacci(10))",
            "correct_answer": "\"Incorrect input\"",
            "duration": 20
        },
        {
            "question_id": 5733,
            "material": "Introduction Python",
            "instruction": "Generate a Python script to create a list of numbers in the range 0-n (inclusive) and print it.",
            "question": "n = 10\n\nlist_numbers = []\nfor i in range(0,n+1):\n    list_numbers.append(i)\n\nprint(___)",
            "correct_answer": "list_numbers",
            "duration": 20
        },
        {
            "question_id": 5777,
            "material": "Introduction Python",
            "instruction": "Create a Python script to print out the multiplication table for the given number.",
            "question": "def printMultTable(n):\n    for i in range(1, 11):\n        print(___)\n\nprintMultTable(4)",
            "correct_answer": "n, 'x', i, '=', n*i",
            "duration": 20
        },
        {
            "question_id": 5787,
            "material": "Introduction Python",
            "instruction": "Create a Python program to print out a listed dictionary.",
            "question": "for key, value in my_dict.items(): \n  print(___)",
            "correct_answer": "f\"{key}: {value}\"",
            "duration": 20
        },
        {
            "question_id": 5821,
            "material": "Introduction Python",
            "instruction": "Edit the following Python code to print out \"Hello World\" 5 times.",
            "question": "for i in range(5):\n    print(___)",
            "correct_answer": "\"Hello World\"",
            "duration": 20
        },
        {
            "question_id": 5837,
            "material": "Introduction Python",
            "instruction": "Write a python script to print out every possible combination of letters given a list of characters",
            "question": "from itertools import product\n\n# Create a function to generate every possible combination\ndef generate_combinations(chars):\n    for combination in product(*chars):\n        combination = \"\".join(combination)\n        print(___)\n        \n# Input list of characters\nchars = [\"a\",\"b\",\"c\"]\n\n# Generate all combinations\ngenerate_combinations(chars)",
            "correct_answer": "combination",
            "duration": 20
        },
        {
            "question_id": 5872,
            "material": "Introduction Python",
            "instruction": "Write a Python script to loop through a list of numbers and print out only the even numbers.",
            "question": "my_list = [3, 7, 10, 15, 17, 20]\n\nfor number in my_list: \n  if (number % 2 == 0): \n    print(___)",
            "correct_answer": "number",
            "duration": 20
        },
        {
            "question_id": 5884,
            "material": "Introduction Python",
            "instruction": "Analyze a given list of numbers and print out the mean and variance using Python.",
            "question": "def analyze_list(numbers):\n mean = 0\n for num in numbers:\n mean += num\n mean /= len(numbers)\n \n variance = 0\n for num in numbers:\n variance += (num - mean)**2\n variance /= len(numbers)\n \n print(___)\n print(\"Variance:\", variance)",
            "correct_answer": "\"Mean:\", mean",
            "duration": 20
        },
        {
            "question_id": 5886,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the factorial of a number.",
            "question": "def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nnum = 5\nprint(___))",
            "correct_answer": "\"The factorial of\", num, \"is\", factorial(num",
            "duration": 20
        },
        {
            "question_id": 5896,
            "material": "Introduction Python",
            "instruction": "Generate Python code to print the smallest number in a given list of numbers.",
            "question": "list_of_numbers = [24, 14, 67, 89, 34, 52]\nprint(___))",
            "correct_answer": "min(list_of_numbers",
            "duration": 20
        },
        {
            "question_id": 5910,
            "material": "Introduction Python",
            "instruction": "Create a basic function in Python to extract the first digit from a number.",
            "question": "def firstDigit(num):\n\treturn int(str(num)[0])\n\nnum = 2458\nprint(___)) # 2",
            "correct_answer": "firstDigit(num",
            "duration": 20
        },
        {
            "question_id": 5914,
            "material": "Introduction Python",
            "instruction": "Create a for-loop in Python to loop through the items in a list and print their elements.",
            "question": "for name in names:\n    print(___)",
            "correct_answer": "name",
            "duration": 20
        },
        {
            "question_id": 5923,
            "material": "Introduction Python",
            "instruction": "Create a program in Python to print the following pattern",
            "question": "def print_pattern(n):\n    for i in range(1, n+1):\n        for j in range(1, i+1):\n            print(___)\n        print(\"\")\n\nprint_pattern(5)",
            "correct_answer": "j, end=\"\"",
            "duration": 20
        },
        {
            "question_id": 5946,
            "material": "Introduction Python",
            "instruction": "Write a python program to print the Fibonacci series upto n terms.",
            "question": "def fibonacci_series(n):\n    if n==0:\n        return 0\n    elif n==1:\n        return 1\n    else: \n        return fibonacci_series(n-1) + fibonacci_series(n-2)\n\nfor i in range(6):\n    print(___), end=', ')",
            "correct_answer": "fibonacci_series(i",
            "duration": 20
        },
        {
            "question_id": 5958,
            "material": "Introduction Python",
            "instruction": "Compose a piece of code to print the length of a given string.",
            "question": "string = \"Python\"\nprint(___))",
            "correct_answer": "\"Length of the given string is:\", len(string",
            "duration": 20
        },
        {
            "question_id": 5974,
            "material": "Introduction Python",
            "instruction": "Write a function in Python to print the top n elements of an array.",
            "question": "def max_n_elements(arr, n):\n    res = []\n    for i in range(n):\n        max_val = max(arr)\n        res.append(max_val)\n        arr.remove(max_val)\n        \n    return res\n    \narr = [2, 3, 4, 5, 1] \ntop_n = 3\nprint(___))",
            "correct_answer": "max_n_elements(arr, top_n",
            "duration": 20
        },
        {
            "question_id": 5978,
            "material": "Introduction Python",
            "instruction": "Debug the following Python program to print the given output.",
            "question": "a = [3,4,6,2,1]\nfor x in a:\n print(___)\na.sort() \nfor x in a:\n print(x) \n\nOutput:\n1\n2\n3\n4\n6",
            "correct_answer": "x",
            "duration": 20
        },
        {
            "question_id": 5989,
            "material": "Introduction Python",
            "instruction": "Create a Python program to find and print all pairs of numbers from a given array of integers whose sum is equal to a given number.",
            "question": "array = [3, 4, 2, 8, 5, 6]\nsum = 10\n\ndef find_pair(array,sum):\n for i in range (len(array)-1):\n  for j in range (i+1, len(array)):\n   if array[i] + array[j] == sum:\n    print(___)\n\nfind_pair(array,sum)",
            "correct_answer": "\"Pair found:\",array[i], array[j]",
            "duration": 20
        },
        {
            "question_id": 6007,
            "material": "Introduction Python",
            "instruction": "Write a Python code snippet to print Hello multipe times as per a given number.",
            "question": "for i in range(number):\n    print(___)",
            "correct_answer": "\"Hello\"",
            "duration": 20
        },
        {
            "question_id": 6009,
            "material": "Introduction Python",
            "instruction": "Design an algorithm in Python to print out binary numbers between 1 and N.",
            "question": "def print_binary(n):\n if n == 0:\n  return\n \n print_binary(n-1)\n print(___))\n \nprint_binary(3)\n \n# Output: \n# 0b1\n# 0b10\n# 0b11",
            "correct_answer": "bin(n",
            "duration": 20
        },
        {
            "question_id": 6012,
            "material": "Introduction Python",
            "instruction": "Create a Python program to parse a list of strings and print the words with odd length.",
            "question": "list = ['abc', 'hello', 'world']\n\nfor word in list:\n    if (len(word) % 2 != 0):\n        print(___)",
            "correct_answer": "word",
            "duration": 20
        },
        {
            "question_id": 6021,
            "material": "Introduction Python",
            "instruction": "Generate code to print each element of a list of strings in Python.",
            "question": "for item in [\"apple\", \"banana\", \"cherry\"]:\n    print(___)",
            "correct_answer": "item",
            "duration": 20
        },
        {
            "question_id": 6062,
            "material": "Introduction Python",
            "instruction": "Create a Python program to read in 15 integers and print the sum of them.",
            "question": "def sum_nums(nums):\n    total = 0\n    for num in nums:\n        total += num\n    return total\n\nlst = [1, 5, 9, 0, 2, 4, 7, 8, 6, 10, 3, 11, 12, 13, 14]\ntotal = sum_nums(lst)\nprint(___)",
            "correct_answer": "total",
            "duration": 20
        },
        {
            "question_id": 6084,
            "material": "Introduction Python",
            "instruction": "Write a python statement to print out the elements of the given list.",
            "question": "print(___)",
            "correct_answer": "my_list",
            "duration": 20
        },
        {
            "question_id": 6085,
            "material": "Introduction Python",
            "instruction": "Modify the below Python code to print the type of a given input.",
            "question": "input_value = 4\n\nprint(___))",
            "correct_answer": "type(input_value",
            "duration": 20
        },
        {
            "question_id": 6094,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to read in an array of integers and print out the largest two integers.",
            "question": "array = [2, 10, 5, 8, 1]  \narray.sort()\n\nprint(___)\nprint(array[-1], array[-2])",
            "correct_answer": "\"The largest two integers are:\"",
            "duration": 20
        },
        {
            "question_id": 6116,
            "material": "Introduction Python",
            "instruction": "Build a program in Python to print out the first n prime numbers.",
            "question": "def n_primes(n):\n    count = 0\n    number = 2\n\n    while count < n:\n        is_prime = True\n\n        for i in range (2, number): \n            if number % i == 0:\n                is_prime = False\n        \n        if is_prime: \n            print(___)\n            count += 1\n\n        number += 1\n\n\nn_primes(10)",
            "correct_answer": "number, end=\" \"",
            "duration": 20
        },
        {
            "question_id": 6131,
            "material": "Introduction Python",
            "instruction": "Create a Python program to print out the output as shown.",
            "question": "list = [1, 2, 3, 4, 5]\nprint(___)\nfor i in list:\nprint(i, end=\" \")",
            "correct_answer": "\"The list is: \"",
            "duration": 20
        },
        {
            "question_id": 6143,
            "material": "Introduction Python",
            "instruction": "Create a basic web scraper in Python that takes a URL as input and returns the text content of that URL.",
            "question": "import requests\nfrom bs4 import BeautifulSoup\n\nurl = 'https://www.example.com'\nresponse = requests.get(url)\nsoup = BeautifulSoup(response.text, 'html.parser')\n\ntext = soup.get_text()\n\nprint(___)",
            "correct_answer": "text",
            "duration": 20
        },
        {
            "question_id": 6144,
            "material": "Introduction Python",
            "instruction": "Create a script in Python to print out the 5 most frequent words in a given input string.",
            "question": "from collections import Counter\n\ninput = \"Python is a great programming language\"\nwords = input.split()\n\ncounts = Counter(words)\n\nfor word, count in counts.most_common(5):\n    print(___)",
            "correct_answer": "word, count",
            "duration": 20
        },
        {
            "question_id": 6155,
            "material": "Introduction Python",
            "instruction": "Create a Python program to iterate through a dictionary and print out all the values.",
            "question": "my_dict = {\"a\":1, \"b\":2, \"c\":3, \"d\":4}\n\nfor key, value in my_dict.items():\n    print(___)",
            "correct_answer": "value",
            "duration": 20
        },
        {
            "question_id": 6184,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to print out the even numbers from a given list.",
            "question": "list = [1,2,3,4,5,6,7,8,9] \n\nfor num in list: \n    if num % 2 == 0: \n       print(___)",
            "correct_answer": "num, end = \" \"",
            "duration": 20
        },
        {
            "question_id": 6190,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the maximum number from a given list.",
            "question": "def max_num(nums):\n    max = nums[0]\n    for num in nums[1:]:\n        if num > max:\n            max = num\n    return max\n\nnums = [5, 4, 2, 7, 12]\nprint(___))",
            "correct_answer": "max_num(nums",
            "duration": 20
        },
        {
            "question_id": 6216,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the given list after removing even numbers from it.",
            "question": "list_odd = [] \nfor num in [3, 5, 7, 4, 8, 10]:\n    if num %2 != 0:\n        list_odd.append(num)\n        \nprint(___)",
            "correct_answer": "list_odd",
            "duration": 20
        },
        {
            "question_id": 6243,
            "material": "Introduction Python",
            "instruction": "Build a Python program to print out the 3 largest odd numbers in a given list.",
            "question": "list_of_nums = [4, 7, -1, 2, 8, 5]\n\nlargest_odd_numbers = []\n\nfor num in list_of_nums:\n    if num % 2 != 0 and len(largest_odd_numbers) < 3:\n        largest_odd_numbers.append(num)\n\nlargest_odd_numbers.sort()\nprint(___)",
            "correct_answer": "largest_odd_numbers",
            "duration": 20
        },
        {
            "question_id": 6267,
            "material": "Introduction Python",
            "instruction": "Create a Python script that parses a JSON string and complete the following tasks: (1) convert the string to an object, (2) sort the object by keys, and (3) print the object in a formatted way.",
            "question": "import json \n\n# Convert the string to an object \ndata = json.loads('{\"a\": 3, \"b\": 1, \"c\": 2}')\n\n# Sort the object by keys \nsorted_data = {k: data[k] for k in sorted(data.keys())}\n\n# Print the object in a formatted way \nprint(___))",
            "correct_answer": "json.dumps(sorted_data, indent=4",
            "duration": 20
        },
        {
            "question_id": 6311,
            "material": "Introduction Python",
            "instruction": "Create a basic Python program to split a given string in words and save them in an array.",
            "question": "string = \"This is a sentence.\"\nwords = string.split(\" \")\nprint(___)\n# Output: ['This', 'is', 'a', 'sentence.']",
            "correct_answer": "words",
            "duration": 20
        },
        {
            "question_id": 6325,
            "material": "Introduction Python",
            "instruction": "Using a for loop and if block, write a Python program to print numbers divisible by 5.",
            "question": "for num in range(1, 20): \n    if num % 5 == 0: \n        print(___)",
            "correct_answer": "num",
            "duration": 20
        },
        {
            "question_id": 6327,
            "material": "Introduction Python",
            "instruction": "Given a string \"Hello World\", write a Python program to generate an encrypted version of the string.",
            "question": "encrypted_string = ''\nfor c in 'Hello World':\n encrypted_string += chr(ord(c) + 3)\n\nprint(___) # Khoor Zruog",
            "correct_answer": "encrypted_string",
            "duration": 20
        },
        {
            "question_id": 6351,
            "material": "Introduction Python",
            "instruction": "Write a loop in Python to iterate through a list and print all elements that have an even length.",
            "question": "list_x = [\"apples\", \"oranges\", \"bananas\", \"pineapples\"]\nfor item in list_x:\n if(len(item) % 2 == 0):\n  print(___)\n#output: apples, oranges, pineapples",
            "correct_answer": "item",
            "duration": 20
        },
        {
            "question_id": 6364,
            "material": "Introduction Python",
            "instruction": "Write a Python function to print the first n rows of Pascal's triangle.",
            "question": "def pascal_triangle(rows): \n triangle = [[1]] \n for i in range(rows - 1): \n last_row = triangle[-1]\n new_row = [1] \n for j in range(len(last_row) - 1): \n new_row.append(last_row[j] + last_row[j+1]) \n new_row.append(1) \n triangle.append(new_row)\n \n for row in triangle: \n print(___)\n\npascal_triangle(5)",
            "correct_answer": "row",
            "duration": 20
        },
        {
            "question_id": 6372,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print all the numbers from the given list which are divisible by 7.",
            "question": "def divisible_by_seven(number_list):\n    for i in number_list:\n        if i % 7 == 0:\n            print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 6398,
            "material": "Introduction Python",
            "instruction": "Write a Python script to print all prime numbers between two numbers, a and b (where a<b).",
            "question": "for num in range(a, b+1): \n   if num > 1: \n       for i in range(2, num): \n           if (num % i) == 0: \n               break\n       else: \n           print(___)",
            "correct_answer": "num",
            "duration": 20
        },
        {
            "question_id": 6429,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the square root of a given number input from the user.",
            "question": "import math\n\nnum = float(input(\"Enter a number: \"))\n\n# checking if the number is negative\nif num < 0:\n    print(___)\nelse:\n    print(\"The square root of the given number is:\",math.sqrt(num))",
            "correct_answer": "\"The square root of the given number cannot be computed\"",
            "duration": 20
        },
        {
            "question_id": 6440,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the elements of a list from the last to the first.",
            "question": "_list = [1,2,3,4,5]\n\n# Iterate through the list in reverse order\nfor i in range(len(_list) - 1, -1, -1): \n    print(___) \n  \n# Output: \n# 5 \n# 4 \n# 3 \n# 2 \n# 1",
            "correct_answer": "_list[i]",
            "duration": 20
        },
        {
            "question_id": 6452,
            "material": "Introduction Python",
            "instruction": "Generate a correct Python program to print out the sequence of numbers in ascending order from a given list.",
            "question": "for i in sorted([10, 5, 2, 8, 12]):\n        print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 6471,
            "material": "Introduction Python",
            "instruction": "Design a Python script to print out the names and ages of people in a given list.",
            "question": "def print_names_and_ages(people):\n    for person in people:\n        print(___))",
            "correct_answer": "\"Name: {}\\nAge: {}\".format(person['name'], person['age']",
            "duration": 20
        },
        {
            "question_id": 6474,
            "material": "Introduction Python",
            "instruction": "Modify the following python code to take in an argument to carry out a specific operation and print it out.",
            "question": "def operation(op):\n    result = eval(op)\n    print(___)\n\noperation('2*2') # prints 4",
            "correct_answer": "result",
            "duration": 20
        },
        {
            "question_id": 6481,
            "material": "Introduction Python",
            "instruction": "Manipulate a python dictionary to print the duplicate keys in a key-value pair.",
            "question": "for key, value in dictionary.items():\n    if dictionary.count(key) > 1:\n        print(___)",
            "correct_answer": "key",
            "duration": 20
        },
        {
            "question_id": 6493,
            "material": "Introduction Python",
            "instruction": "Generate a Bash script that runs a Python program. The Python program should receive a string as input, print its size, and then sort the string in alphabetical order.",
            "question": "#!/bin/bash\n# Script to run Python program\n\ninput_string=\"Hello, world\"\n\npython <<END\n\ninput_string=\"$input_string\"\n\nprint(___)\nprint(\"Size of string:\", len(input_string))\nprint(\"Sorted string:\", ''.join(sorted(input_string)))\n\nEND",
            "correct_answer": "\"Input string:\", input_string",
            "duration": 20
        },
        {
            "question_id": 6554,
            "material": "Introduction Python",
            "instruction": "Create a Python program to print out the elements of a list in reverse order.",
            "question": "# Creating a new reversed list\nreversed_list = mylist[::-1]\n\n# Iterating through the list and printing each element\nfor num in reversed_list:\n    print(___)",
            "correct_answer": "num",
            "duration": 20
        },
        {
            "question_id": 6591,
            "material": "Introduction Python",
            "instruction": "Write a Python code to store and print the multiplication table of a given number.",
            "question": "# Function to print the multiplication table\ndef print_multiplication_table(num):\n    # Iterate over numbers from 1 to 10\n    for i in range(1, 11):\n        print(___))\n\nprint_multiplication_table(5)",
            "correct_answer": "'{0} x {1} = {2}'.format(num, i, num*i",
            "duration": 20
        },
        {
            "question_id": 6629,
            "material": "Introduction Python",
            "instruction": "Modify the following Python code to print the length of a given string.",
            "question": "string = \"Hello World!\"\n\ndef print_length(string):\n    print(___))",
            "correct_answer": "len(string",
            "duration": 20
        },
        {
            "question_id": 6637,
            "material": "Introduction Python",
            "instruction": "Write a Python program to process an array of strings. The program should print out the characters in each string in reverse order.",
            "question": "# Input array\narr = [\"Hello\", \"World\"]\n\n# Loop through each string\nfor s in arr:\n # Print the string in reverse order\n print(___)\n\n# Output\nolleH\ndlroW",
            "correct_answer": "s[::-1]",
            "duration": 20
        },
        {
            "question_id": 6654,
            "material": "Introduction Python",
            "instruction": "Write a Python program to remove the duplicates in a list and print the list in ascending order.",
            "question": "\"\"\"\nWrite a Python program to remove the duplicates in a list and print the list in ascending order\n\"\"\"\n\ndef remove_duplicates_ascending(l):\n    return sorted(list(set(l)))\n\nif __name__ == \"__main__\":\n    l = [10,7,9,12,11,7,9,10]\n    res = remove_duplicates_ascending(l)\n    print(___) # [7, 9, 10, 11, 12]",
            "correct_answer": "res",
            "duration": 20
        },
        {
            "question_id": 6660,
            "material": "Introduction Python",
            "instruction": "Edit the following Python program to print all the even numbers from 0 to 10.",
            "question": "for i in range(11):\n  if i % 2 == 0:\n    print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 6671,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print out the grade of a student based on the given marks",
            "question": "def get_grade(marks):\n    if marks >= 90:\n        grade = \"A+\"\n    elif marks >= 80 and marks < 90:\n        grade = \"A\"\n    elif marks >= 70 and marks < 80:\n        grade = \"B+\"\n    elif marks >= 60 and marks < 70:\n        grade = \"B\"\n    elif marks >= 50 and marks < 60:\n        grade = \"C+\"\n    else:\n        grade = \"F\"\n    \n    print(___)\n\nmarks = 60\nget_grade(marks)",
            "correct_answer": "\"Grade: %s\" %grade",
            "duration": 20
        },
        {
            "question_id": 6702,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the numbers of a specified list after removing even numbers from it.",
            "question": "def remove_even_numbers(data_list):\n    return [x for x in data_list if x%2 != 0]\n\nprint(___))",
            "correct_answer": "remove_even_numbers(data_list",
            "duration": 20
        },
        {
            "question_id": 6712,
            "material": "Introduction Python",
            "instruction": "Build a command-line tool in Python 3 that will print a table of Prime Numbers up to a specified number (argument).",
            "question": "#!/usr/bin/env python3\n\nimport sys\n\nmaximum = int(sys.argv[1])\n\nprint(___))\nprint('----------------------------')\n\nfor num in range(2, maximum+1):\n    prime = True\n    for i in range(2, num):\n        if num % i == 0:\n            prime = False\n            break\n\n    if prime:\n        print(num, end=' ')",
            "correct_answer": "'Prime numbers up to {}:'.format(maximum",
            "duration": 20
        },
        {
            "question_id": 6724,
            "material": "Introduction Python",
            "instruction": "You need to edit an existing Python program. The program to accept and print a sentence.",
            "question": "str1 = \"Hello World\"\n\nprint(___)",
            "correct_answer": "str1",
            "duration": 20
        },
        {
            "question_id": 6742,
            "material": "Introduction Python",
            "instruction": "Create a Python program to detect and print the number of vowels in a given string.",
            "question": "def number_of_vowels(s):\n    count = 0\n    for char in s:\n        if char in 'aeiouAEIOU':\n            count += 1\n    return count\n\ns = 'Hi everyone'\nprint(___))",
            "correct_answer": "'The number of vowels in the given string is :', number_of_vowels(s",
            "duration": 20
        },
        {
            "question_id": 6747,
            "material": "Introduction Python",
            "instruction": "Create a Python code snippet to print the number of elements in an array",
            "question": "arr = [1, 2, 3, 4]\n\nprint(___))",
            "correct_answer": "len(arr",
            "duration": 20
        },
        {
            "question_id": 6776,
            "material": "Introduction Python",
            "instruction": "Create a basic Python program to generate a string of unique random characters.",
            "question": "import random\nimport string\n\ndef generateRandomString(length):\n characters = string.ascii_lowercase + string.ascii_uppercase + string.digits\n\n return ''.join(random.choice(characters) for _ in range(length))\n\nprint(___))",
            "correct_answer": "generateRandomString(10",
            "duration": 20
        },
        {
            "question_id": 6779,
            "material": "Introduction Python",
            "instruction": "Implement a basic algorithm in Python to calculate the nth Fibonacci number.",
            "question": "def fibonacci(n):\n if n == 0:\n return 0\n elif n == 1:\n return 1\n else:\n return fibonacci(n - 1) + fibonacci(n - 2)\n \nprint(___)) // 8",
            "correct_answer": "fibonacci(6",
            "duration": 20
        },
        {
            "question_id": 6803,
            "material": "Introduction Python",
            "instruction": "Create a Python 2 program to print the following pattern.",
            "question": "for i in range(1, 11):\n    for j in range(1, i+1):\n        print(___)*i, end=\" \")\n    print()",
            "correct_answer": "i+(j-1",
            "duration": 20
        },
        {
            "question_id": 6804,
            "material": "Introduction Python",
            "instruction": "Edit the Python code to print the sum of two given numbers.",
            "question": "a = 1 \nb = 2\nsum = a + b \nprint(___) # 3",
            "correct_answer": "sum",
            "duration": 20
        },
        {
            "question_id": 6822,
            "material": "Introduction Python",
            "instruction": "Generate a Python code to print the symmetric differences between two sets.",
            "question": "# Define sets\nSet1 = {1, 3, 4, 8} \nSet2 = {2, 3, 5, 6}\n\n# Compute the symmetric difference\ndifference = Set1.symmetric_difference(Set2) \n  \n# Print the symmetric differences \nprint(___)",
            "correct_answer": "\"The symmetric differences between the two sets :\", difference",
            "duration": 20
        },
        {
            "question_id": 6823,
            "material": "Introduction Python",
            "instruction": "Create a basic web scraper using Python to retrieve the content of a web page.",
            "question": "import requests\nfrom bs4 import BeautifulSoup\n\nurl = \"https://www.example.com\"\n\npage = requests.get(url)\n\nsoup = BeautifulSoup(page.text, 'html.parser')\n\ncontent = soup.find_all('p')\n\nprint(___)",
            "correct_answer": "content",
            "duration": 20
        },
        {
            "question_id": 6824,
            "material": "Introduction Python",
            "instruction": "Write a Python code which will print out the number of words in a string.",
            "question": "def wordCount(str): \n    count = len(str.split()) \n    return count \n\nprint(___)) \n\n# Output: 2",
            "correct_answer": "wordCount(\"Example string\"",
            "duration": 20
        },
        {
            "question_id": 6856,
            "material": "Introduction Python",
            "instruction": "Create a Python program to print the numbers in descending order.",
            "question": "lst = [10, 3, 5, 8, 7]\n\nlst.sort(reverse=True)\n\nfor n in lst:\n    print(___)",
            "correct_answer": "n",
            "duration": 20
        },
        {
            "question_id": 6858,
            "material": "Introduction Python",
            "instruction": "Create a basic program in Python that takes in two numbers and calculates the product.",
            "question": "def product(a, b):\n \treturn a * b\n \nprint(___))",
            "correct_answer": "product(5, 10",
            "duration": 20
        },
        {
            "question_id": 6860,
            "material": "Introduction Python",
            "instruction": "Write a python program to repeatedly ask the user for a string and print the number of vowels in the string.",
            "question": "while True:\n    s = input(\"Enter a string: \")\n    count = 0\n    for i in s:\n        if(i=='a' or i=='e' or i=='i' or i=='o' or i=='u'):\n            count+=1\n    print(___)",
            "correct_answer": "\"The number of vowels in the string:\", count",
            "duration": 20
        },
        {
            "question_id": 6862,
            "material": "Introduction Python",
            "instruction": "Create a Python script to compare two sets of data and print the differences.",
            "question": "set1 = [1, 2, 3, 4, 5]\nset2 = [2, 4, 6, 8, 10]\n\ndifference = []\nfor i in set1:\n if i not in set2:\n difference.append(i)\n \nprint(___)",
            "correct_answer": "f\"The difference between set1 and set2 is: {difference}\"",
            "duration": 20
        },
        {
            "question_id": 6865,
            "material": "Introduction Python",
            "instruction": "Write a Python program to allow a user to input a sentence and print the words in the sentence in reverse order.",
            "question": "def reverse_words_in_sentence(sentence):\n    words_list = sentence.split()\n    words_list.reverse()\n    reversed_sentence = \" \".join(words_list)\n    return reversed_sentence\n\nsentence = \"This is my sentence.\"\nresult = reverse_words_in_sentence(sentence)\nprint(___)",
            "correct_answer": "result",
            "duration": 20
        },
        {
            "question_id": 6878,
            "material": "Introduction Python",
            "instruction": "Given a list of strings, write a python program to sort the list alphabetically and print it.",
            "question": "strings = [\"ada\", \"javascript\", \"c++\", \"python\"]\n\nstrings.sort()\n\nprint(___)\n# Output: ['ada', 'c++', 'javascript', 'python']",
            "correct_answer": "strings",
            "duration": 20
        },
        {
            "question_id": 6906,
            "material": "Introduction Python",
            "instruction": "Generate a Python script to iterate through a list and print each element.",
            "question": "for item in lst:\n  print(___)",
            "correct_answer": "item",
            "duration": 20
        },
        {
            "question_id": 6914,
            "material": "Introduction Python",
            "instruction": "Generate Python code to print out the number of times each character appears in a string.",
            "question": "from collections import Counter\n\nstring = 'mississippi'\nc = Counter(string)\nfor char, count in c.most_common():\n    print(___)",
            "correct_answer": "f\"{char}: {count}\"",
            "duration": 20
        },
        {
            "question_id": 6970,
            "material": "Introduction Python",
            "instruction": "Given a list of numbers, create a Python script to print all the elements greater than 50.",
            "question": "nums = [2, 60, 5, 4, 78, 32, 99]\n\nfor num in nums:\n    if num > 50:\n        print(___)",
            "correct_answer": "num",
            "duration": 20
        },
        {
            "question_id": 6981,
            "material": "Introduction Python",
            "instruction": "Edit this Python program to print a concatenated string of two given strings with a space between them?",
            "question": "string1 = \"Hello\"\nstring2 = \"World\"\n\n# Concatenate two strings\nconcatenated_string = string1 + \" \" + string2 \n\n# Print the result\nprint(___)",
            "correct_answer": "concatenated_string",
            "duration": 20
        },
        {
            "question_id": 7011,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print out all even numbers in a given range.",
            "question": "def print_even_numbers(start, end):\n    for i in range(start, end + 1):\n        if i % 2 == 0:\n            print(___)\n\nif __name__ == '__main__':\n    print_even_numbers(1, 10)\n\n# Output\n2\n4\n6\n8\n10",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 7015,
            "material": "Introduction Python",
            "instruction": "Write a code snippet in Python to print the last 3 characters of a given string",
            "question": "print(___)",
            "correct_answer": "string[-3:]",
            "duration": 20
        },
        {
            "question_id": 7038,
            "material": "Introduction Python",
            "instruction": "Create a basic Python program that includes a function to find the greatest common divisor (GCD) of two numbers.",
            "question": "def gcd(x, y): \n    while(y): \n        x, y = y, x % y \n  \n    return x \n  \n# Driver code\nnum1 = 21\nnum2 = 15\n  \nprint(___))",
            "correct_answer": "\"The GCD is\", gcd(num1, num2",
            "duration": 20
        },
        {
            "question_id": 7044,
            "material": "Introduction Python",
            "instruction": "Create a Python function to print every character in a given string.",
            "question": "# Python Function\ndef printChars(string): \n    # Iterate over the string \n    for i in range(len(string)):  \n        print(___) \n  \n# Test\nstring = \"Hello World!\"\nprintChars(string)",
            "correct_answer": "string[i]",
            "duration": 20
        },
        {
            "question_id": 7077,
            "material": "Introduction Python",
            "instruction": "Write a basic web scraper in Python using the requests and BeautifulSoup libraries to extract the titles of articles from a given URL.",
            "question": "import requests\nfrom bs4 import BeautifulSoup\n\nurl = 'https://en.wikipedia.org/wiki/Python_(programming_language)'\nr = requests.get(url)\nsoup = BeautifulSoup(r.content, 'html.parser')\n\narticles = soup.find_all('h1', class_='firstHeading')\nfor article in articles:\n print(___)",
            "correct_answer": "article.text",
            "duration": 20
        },
        {
            "question_id": 7137,
            "material": "Introduction Python",
            "instruction": "Create a basic Python script that executes a calculation of the total cost of a purchase (price * quantity).",
            "question": "#calculate the total\ntotal_cost = price * quantity\n\n#print the total\nprint(___) # Output: 30",
            "correct_answer": "total_cost",
            "duration": 20
        },
        {
            "question_id": 7139,
            "material": "Introduction Python",
            "instruction": "Create a program in Python to print the greatest of three numbers.",
            "question": "def get_max(x, y, z):\n    if (x > y) and (x > z):\n        maximum = x\n    elif (y > x) and (y > z):\n        maximum = y\n    else:\n        maximum = z\n\n    return maximum\n\nresult = get_max(2, 4, 3)\nprint(___)",
            "correct_answer": "result",
            "duration": 20
        },
        {
            "question_id": 7151,
            "material": "Introduction Python",
            "instruction": "Optimize a given Python code to print the factorial of a number.",
            "question": "def factorial(n): \n    factorial = 1\n  \n    for i in range(1, n+1): \n        factorial = factorial * i \n    print(___) \n  \nnumber = 5\nfactorial(number)",
            "correct_answer": "factorial",
            "duration": 20
        },
        {
            "question_id": 7155,
            "material": "Introduction Python",
            "instruction": "Write a Python program to extract all words from a sentence and print them.",
            "question": "sentence = \"The quick brown fox\"\nwords = sentence.split(\" \")\n\nfor word in words:\n print(___)\n\n# Output\n# The\n# quick\n# brown\n# fox",
            "correct_answer": "word",
            "duration": 20
        },
        {
            "question_id": 7178,
            "material": "Introduction Python",
            "instruction": "Write Python code to print the following at the end of the code.",
            "question": "for i in range(5):\n    for j in range(5):\n        print(___)\n    print()",
            "correct_answer": "\"*\", end=\" \"",
            "duration": 20
        },
        {
            "question_id": 7232,
            "material": "Introduction Python",
            "instruction": "Write a Python program to process a list of numbers and print out the maximum and minimum values.",
            "question": "numbers = [4, 19, -3, 27, -9, 5]\n\nmax_num = max(numbers)\nmin_num = min(numbers)\n\nprint(___))\nprint(\"The minimum number in the list is {}\".format(min_num))",
            "correct_answer": "\"The maximum number in the list is {}\".format(max_num",
            "duration": 20
        },
        {
            "question_id": 7289,
            "material": "Introduction Python",
            "instruction": "Design a Python program to print out all prime numbers in a range",
            "question": "def is_prime(n):\n    for i in range(2, n):\n        if n%i == 0:\n            return False\n    return True\n\nfor num in range(1, 10):\n    if is_prime(num):\n        print(___)",
            "correct_answer": "num",
            "duration": 20
        },
        {
            "question_id": 7319,
            "material": "Introduction Python",
            "instruction": "Create a Python3 program to process a list of strings and print each string in uppercase.",
            "question": "list_of_strings = ['this', 'is', 'a', 'list', 'of', 'strings']\n\nfor string in list_of_strings:\n    print(___))",
            "correct_answer": "string.upper(",
            "duration": 20
        },
        {
            "question_id": 7339,
            "material": "Introduction Python",
            "instruction": "Design a Python program to print all keywords in a given paragraph.",
            "question": "text = \"The best way to learn a programming language is to practice coding.\"\nwords = text.split()\n\nkeywords = [\"for\", \"if\", \"while\", \"in\", \"range\", \"def\", \"import\", \"from\", \"as\", \"return\"]\n\nfor word in words:\n    if word in keywords:\n        print(___)",
            "correct_answer": "word",
            "duration": 20
        },
        {
            "question_id": 7366,
            "material": "Introduction Python",
            "instruction": "Write a function in Python to traverse a multi-dimensional array and print each item in the array.",
            "question": "def traverse_array(arr): \n if isinstance(arr, list) or isinstance(arr, tuple): \n for item in arr:\n traverse_array(item)\n else:\n print(___)\n\narr = [[1,2,3], [4,5,6], [7,8,9]] \ntraverse_array(arr)",
            "correct_answer": "arr",
            "duration": 20
        },
        {
            "question_id": 7458,
            "material": "Introduction Python",
            "instruction": "Write a code snippet in Python to print Pascal\u2019s triangle for a given value of n.",
            "question": "def printPascalTriangle(n) : \n    for line in range(1, n + 1) : \n        C = 1 \n        for i in range(1, line + 1) : \n            print(___) \n            C = int(C * (line - i) / i); \n        print(\"\") \n\nn = 4\nprintPascalTriangle(n)",
            "correct_answer": "C, end = \"\"",
            "duration": 20
        },
        {
            "question_id": 7464,
            "material": "Introduction Python",
            "instruction": "Create a basic Python script that computes the sum of two variables and stores the result in a third variable.",
            "question": "# compute the sum of x and y\nresult = x + y\n\n# store the result in a third variable\nz = result\n\n#print the result\nprint(___) # Output: 13",
            "correct_answer": "z",
            "duration": 20
        },
        {
            "question_id": 7516,
            "material": "Introduction Python",
            "instruction": "Develop a script in Python to print out all the combinations of a given list of numbers.",
            "question": "import itertools\n\nlst = [1,2,3,4]\n\n# Get all possible combinations of the list\nresult = list(itertools.combinations(lst, 2))\n\n# Print the combinations\nfor combination in result:\n    print(___)",
            "correct_answer": "combination",
            "duration": 20
        },
        {
            "question_id": 7532,
            "material": "Introduction Python",
            "instruction": "Construct a for loop in Python to iterate over a given list and print the elements.",
            "question": "for i in my_list:\n    print(___)",
            "correct_answer": "i",
            "duration": 20
        },
        {
            "question_id": 7558,
            "material": "Introduction Python",
            "instruction": "Write a python program to print the following pattern.",
            "question": "def pattern(n):\n  # Outer loop \n    for i in range(0, n): \n      \n    # Inner loop to handle number of columns \n    # values changing according to outer loop \n      for j in range(0, i+1): \n        \n    # Printing stars \n        print(___) \n    \n    # Ending line after each row \n      print(\"\\r\") \n  \n# Driver Code \npattern(5)",
            "correct_answer": "\"* \",end=\"\"",
            "duration": 20
        }
    ]
}